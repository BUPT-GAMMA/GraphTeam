[
    {
        "index": 0,
        "question": "Given an undirected graph:\nNode <0> is connected to node <4>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 1,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <5>.\nNode <1> is connected to nodes <2>, <3>, <4>, <6>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <0>.\nNode <6> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <5>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 2,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <6>.\nNode <1> is connected to nodes <3>, <4>, <5>.\nNode <2> is connected to node <5>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to nodes <1>, <2>.\nNode <6> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <6>), (<1>, <3>), (<2>, <5>)]",
        "type": "bipartite"
    },
    {
        "index": 3,
        "question": "Given an undirected graph:\nNode <0> is connected to node <4>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 4,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 5,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>, <6>.\nNode <1> is connected to nodes <2>, <3>, <5>, <6>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <0>.\nNode <5> is connected to nodes <0>, <1>.\nNode <6> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 6,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>, <3>, <4>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0>.\nNodes set 2 contains: <1> <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <1>)]",
        "type": "bipartite"
    },
    {
        "index": 7,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>, <5>.\nNode <1> is connected to nodes <3>, <4>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 8,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>.\nNode <1> is connected to nodes <2>, <3>, <4>, <6>.\nNode <2> is connected to node <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <0>.\nNode <6> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 9,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 10,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>.\nNode <1> is connected to nodes <2>, <4>, <5>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <1>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 11,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 12,
        "question": "Given an undirected graph:\nNode <0> is connected to node <4>.\nNode <1> is connected to nodes <3>, <5>, <6>.\nNode <2> is connected to nodes <3>, <4>, <5>.\nNode <3> is connected to nodes <1>, <2>.\nNode <4> is connected to nodes <0>, <2>.\nNode <5> is connected to nodes <1>, <2>.\nNode <6> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <5>), (<2>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 13,
        "question": "Given an undirected graph:\nNode <0> is connected to node <3>.\nNode <1> is connected to nodes <2>, <3>, <4>, <5>.\nNode <2> is connected to node <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 14,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <5>.\nNode <1> is connected to nodes <2>, <3>, <4>, <5>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 15,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>, <5>.\nNode <1> is connected to nodes <2>, <3>, <6>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <0>.\nNode <6> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 16,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>.\nNode <1> is connected to nodes <2>, <3>, <5>, <6>.\nNode <2> is connected to node <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <1>.\nNode <6> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 17,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 18,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>, <3>, <4>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0>.\nNodes set 2 contains: <1> <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <1>)]",
        "type": "bipartite"
    },
    {
        "index": 19,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>, <5>.\nNode <1> is connected to nodes <3>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <0>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 20,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to node <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <4>)]",
        "type": "bipartite"
    },
    {
        "index": 21,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>, <5>.\nNode <1> is connected to nodes <3>, <5>, <6>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <0>.\nNode <5> is connected to nodes <0>, <1>.\nNode <6> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 22,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <3>, <4>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 23,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to node <2>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 24,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>, <5>.\nNode <1> is connected to nodes <3>, <5>, <6>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <0>.\nNode <5> is connected to nodes <0>, <1>.\nNode <6> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 25,
        "question": "Given an undirected graph:\nNode <0> is connected to node <2>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 26,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <5>, <6>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <0>.\nNode <6> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 27,
        "question": "Given an undirected graph:\nNode <0> is connected to node <4>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 28,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <5>.\nNode <1> is connected to nodes <3>, <4>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 29,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to node <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <4>)]",
        "type": "bipartite"
    },
    {
        "index": 30,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>.\nNode <1> is connected to nodes <2>, <3>, <4>, <5>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 31,
        "question": "Given an undirected graph:\nNode <0> is connected to node <3>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to node <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 32,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <3>, <4>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 33,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <5>.\nNode <1> is connected to nodes <3>, <5>, <6>.\nNode <2> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <0>, <1>, <2>.\nNode <4> is connected to nodes <0>, <2>.\nNode <5> is connected to nodes <0>, <1>.\nNode <6> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <5>), (<2>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 34,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>, <3>, <4>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0>.\nNodes set 2 contains: <1> <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <1>)]",
        "type": "bipartite"
    },
    {
        "index": 35,
        "question": "Given an undirected graph:\nNode <0> is connected to node <2>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 36,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <5>.\nNode <1> is connected to nodes <2>, <4>, <5>, <6>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <0>, <1>.\nNode <6> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 37,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <5>.\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to node <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 38,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <5>.\nNode <1> is connected to nodes <4>, <5>, <6>.\nNode <2> is connected to nodes <4>, <5>, <6>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>, <2>.\nNode <5> is connected to nodes <0>, <1>, <2>.\nNode <6> is connected to nodes <1>, <2>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <5>), (<2>, <4>)]",
        "type": "bipartite"
    },
    {
        "index": 39,
        "question": "Given an undirected graph:\nNode <0> is connected to node <4>.\nNode <1> is connected to nodes <4>, <5>.\nNode <2> is connected to nodes <3>, <5>, <6>.\nNode <3> is connected to node <2>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <1>, <2>.\nNode <6> is connected to node <2>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <5>), (<2>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 40,
        "question": "Given an undirected graph:\nNode <0> is connected to node <2>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 41,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>.\nNode <1> is connected to nodes <4>, <5>.\nNode <2> is connected to nodes <3>, <4>, <5>, <6>.\nNode <3> is connected to node <2>.\nNode <4> is connected to nodes <0>, <1>, <2>.\nNode <5> is connected to nodes <0>, <1>, <2>.\nNode <6> is connected to node <2>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <5>), (<1>, <4>), (<2>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 42,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 43,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>, <6>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to node <5>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <0>, <2>.\nNode <6> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <3>), (<2>, <5>)]",
        "type": "bipartite"
    },
    {
        "index": 44,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>, <6>.\nNode <1> is connected to node <4>.\nNode <2> is connected to nodes <3>, <5>.\nNode <3> is connected to node <2>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <0>, <2>.\nNode <6> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <5>), (<1>, <4>), (<2>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 45,
        "question": "Given an undirected graph:\nNode <0> is connected to node <5>.\nNode <1> is connected to nodes <2>, <3>, <4>, <5>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <5>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 46,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>.\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to node <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 47,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>, <5>.\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 48,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>, <5>.\nNode <1> is connected to nodes <2>, <3>, <4>, <5>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 49,
        "question": "Given an undirected graph:\nNode <0> is connected to node <5>.\nNode <1> is connected to nodes <5>, <6>.\nNode <2> is connected to nodes <3>, <4>, <6>.\nNode <3> is connected to node <2>.\nNode <4> is connected to node <2>.\nNode <5> is connected to nodes <0>, <1>.\nNode <6> is connected to nodes <1>, <2>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <5>), (<1>, <6>), (<2>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 50,
        "question": "Given an undirected graph:\nNode <0> is connected to node <2>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 51,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>.\nNode <1> is connected to nodes <2>, <4>, <5>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 52,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>, <5>.\nNode <1> is connected to nodes <3>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <0>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 53,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>, <5>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 54,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>, <5>, <6>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <0>.\nNode <6> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 55,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>, <5>.\nNode <1> is connected to nodes <2>, <3>, <5>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <0>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 56,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 57,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 58,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 59,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to nodes <4>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <4>)]",
        "type": "bipartite"
    },
    {
        "index": 60,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to node <3>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 61,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 62,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 63,
        "question": "Given an undirected graph:\nNode <0> is connected to node <3>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to node <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 64,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 65,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <6>.\nNode <1> is connected to nodes <5>, <6>.\nNode <2> is connected to nodes <3>, <4>, <5>.\nNode <3> is connected to nodes <0>, <2>.\nNode <4> is connected to node <2>.\nNode <5> is connected to nodes <1>, <2>.\nNode <6> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <6>), (<1>, <5>), (<2>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 66,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>, <6>.\nNode <1> is connected to nodes <3>, <6>.\nNode <2> is connected to nodes <4>, <6>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <2>.\nNode <5> is connected to node <0>.\nNode <6> is connected to nodes <0>, <1>, <2>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <5>), (<1>, <3>), (<2>, <4>)]",
        "type": "bipartite"
    },
    {
        "index": 67,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <5>.\nNode <1> is connected to nodes <2>, <4>, <5>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <1>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 68,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>, <5>, <6>.\nNode <1> is connected to nodes <3>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <0>.\nNode <5> is connected to nodes <0>, <1>.\nNode <6> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 69,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 70,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <2>, <3>, <5>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 71,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>, <3>, <4>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0>.\nNodes set 2 contains: <1> <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <1>)]",
        "type": "bipartite"
    },
    {
        "index": 72,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>, <3>, <4>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0>.\nNodes set 2 contains: <1> <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <1>)]",
        "type": "bipartite"
    },
    {
        "index": 73,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>, <5>.\nNode <1> is connected to nodes <4>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <4>)]",
        "type": "bipartite"
    },
    {
        "index": 74,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>, <5>.\nNode <1> is connected to nodes <3>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <0>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 75,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to nodes <3>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 76,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 77,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <6>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to nodes <3>, <4>, <5>.\nNode <3> is connected to nodes <0>, <1>, <2>.\nNode <4> is connected to nodes <1>, <2>.\nNode <5> is connected to node <2>.\nNode <6> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <6>), (<1>, <4>), (<2>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 78,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 79,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to nodes <2>, <4>, <5>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 80,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>, <5>, <6>.\nNode <1> is connected to node <6>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <0>.\nNode <6> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <6>)]",
        "type": "bipartite"
    },
    {
        "index": 81,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <6>.\nNode <1> is connected to nodes <3>, <4>, <5>, <6>.\nNode <2> is connected to nodes <5>, <6>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <1>, <2>.\nNode <6> is connected to nodes <0>, <1>, <2>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <3>), (<2>, <5>)]",
        "type": "bipartite"
    },
    {
        "index": 82,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>.\nNode <1> is connected to nodes <3>, <5>, <6>.\nNode <2> is connected to nodes <4>, <5>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <2>.\nNode <5> is connected to nodes <0>, <1>, <2>.\nNode <6> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <5>), (<1>, <3>), (<2>, <4>)]",
        "type": "bipartite"
    },
    {
        "index": 83,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 84,
        "question": "Given an undirected graph:\nNode <0> is connected to node <5>.\nNode <1> is connected to nodes <3>, <5>, <6>.\nNode <2> is connected to nodes <3>, <4>, <6>.\nNode <3> is connected to nodes <1>, <2>.\nNode <4> is connected to node <2>.\nNode <5> is connected to nodes <0>, <1>.\nNode <6> is connected to nodes <1>, <2>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <5>), (<1>, <6>), (<2>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 85,
        "question": "Given an undirected graph:\nNode <0> is connected to node <3>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to node <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 86,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>, <6>.\nNode <1> is connected to node <4>.\nNode <2> is connected to nodes <4>, <6>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <1>, <2>.\nNode <5> is connected to node <0>.\nNode <6> is connected to nodes <0>, <2>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <4>), (<2>, <6>)]",
        "type": "bipartite"
    },
    {
        "index": 87,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>, <5>.\nNode <1> is connected to node <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <5>)]",
        "type": "bipartite"
    },
    {
        "index": 88,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 89,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <6>.\nNode <1> is connected to nodes <3>, <4>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <1>.\nNode <6> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 90,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <5>.\nNode <1> is connected to nodes <2>, <5>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 91,
        "question": "Given an undirected graph:\nNode <0> is connected to node <4>.\nNode <1> is connected to nodes <5>, <6>.\nNode <2> is connected to nodes <3>, <4>, <5>, <6>.\nNode <3> is connected to node <2>.\nNode <4> is connected to nodes <0>, <2>.\nNode <5> is connected to nodes <1>, <2>.\nNode <6> is connected to nodes <1>, <2>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <5>), (<2>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 92,
        "question": "Given an undirected graph:\nNode <0> is connected to node <2>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 93,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <6>.\nNode <1> is connected to nodes <3>, <4>, <5>, <6>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <1>.\nNode <6> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 94,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>.\nNode <1> is connected to nodes <2>, <3>, <4>, <6>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <0>.\nNode <6> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 95,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <5>.\nNode <1> is connected to nodes <2>, <5>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 96,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>, <3>, <4>, <5>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0>.\nNodes set 2 contains: <1> <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <1>)]",
        "type": "bipartite"
    },
    {
        "index": 97,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 98,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 99,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to node <3>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 100,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>, <5>, <6>.\nNode <1> is connected to nodes <3>, <4>, <5>, <6>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <0>, <1>.\nNode <6> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 101,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>, <5>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 102,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>, <3>, <4>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0>.\nNodes set 2 contains: <1> <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <1>)]",
        "type": "bipartite"
    },
    {
        "index": 103,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 104,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>, <6>.\nNode <1> is connected to nodes <3>, <5>.\nNode <2> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <1>, <2>.\nNode <4> is connected to nodes <0>, <2>.\nNode <5> is connected to nodes <0>, <1>.\nNode <6> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <5>), (<2>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 105,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <6>.\nNode <1> is connected to nodes <4>, <5>, <6>.\nNode <2> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <0>, <2>.\nNode <4> is connected to nodes <0>, <1>, <2>.\nNode <5> is connected to node <1>.\nNode <6> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <5>), (<2>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 106,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <5>.\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 107,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <5>, <6>.\nNode <1> is connected to nodes <3>, <4>, <6>.\nNode <2> is connected to node <6>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <0>.\nNode <6> is connected to nodes <0>, <1>, <2>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <3>), (<2>, <6>)]",
        "type": "bipartite"
    },
    {
        "index": 108,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>, <6>.\nNode <1> is connected to nodes <3>, <4>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <1>.\nNode <6> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 109,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>, <5>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 110,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>, <5>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 111,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 112,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <5>.\nNode <1> is connected to nodes <2>, <4>, <5>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 113,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 114,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 115,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>.\nNode <1> is connected to nodes <3>, <4>, <5>, <6>.\nNode <2> is connected to node <4>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>, <2>.\nNode <5> is connected to nodes <0>, <1>.\nNode <6> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <5>), (<1>, <3>), (<2>, <4>)]",
        "type": "bipartite"
    },
    {
        "index": 116,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 117,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>.\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to node <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 118,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>.\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 119,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 120,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <5>.\nNode <1> is connected to nodes <2>, <4>, <5>, <6>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <0>, <1>.\nNode <6> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 121,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>.\nNode <1> is connected to node <6>.\nNode <2> is connected to nodes <4>, <5>, <6>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <2>.\nNode <5> is connected to nodes <0>, <2>.\nNode <6> is connected to nodes <1>, <2>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <6>), (<2>, <4>)]",
        "type": "bipartite"
    },
    {
        "index": 122,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>, <5>, <6>.\nNode <1> is connected to nodes <2>, <3>, <4>, <5>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <0>, <1>.\nNode <6> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 123,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>, <3>, <4>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0>.\nNodes set 2 contains: <1> <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <1>)]",
        "type": "bipartite"
    },
    {
        "index": 124,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 125,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <2>, <3>, <5>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 126,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 127,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to nodes <3>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 128,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <5>.\nNode <1> is connected to nodes <5>, <6>.\nNode <2> is connected to nodes <3>, <4>, <5>, <6>.\nNode <3> is connected to nodes <0>, <2>.\nNode <4> is connected to nodes <0>, <2>.\nNode <5> is connected to nodes <0>, <1>, <2>.\nNode <6> is connected to nodes <1>, <2>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <5>), (<2>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 129,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>, <6>.\nNode <1> is connected to nodes <3>, <5>, <6>.\nNode <2> is connected to nodes <3>, <4>, <6>.\nNode <3> is connected to nodes <0>, <1>, <2>.\nNode <4> is connected to node <2>.\nNode <5> is connected to nodes <0>, <1>.\nNode <6> is connected to nodes <0>, <1>, <2>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <6>), (<1>, <5>), (<2>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 130,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to node <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <4>)]",
        "type": "bipartite"
    },
    {
        "index": 131,
        "question": "Given an undirected graph:\nNode <0> is connected to node <4>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 132,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <5>, <6>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to nodes <5>, <6>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <0>, <2>.\nNode <6> is connected to nodes <0>, <2>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <3>), (<2>, <5>)]",
        "type": "bipartite"
    },
    {
        "index": 133,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>, <3>, <4>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0>.\nNodes set 2 contains: <1> <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <1>)]",
        "type": "bipartite"
    },
    {
        "index": 134,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>, <6>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <1>, <2>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <0>, <2>.\nNode <6> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <5>), (<1>, <4>), (<2>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 135,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>, <6>.\nNode <1> is connected to nodes <3>, <6>.\nNode <2> is connected to node <3>.\nNode <3> is connected to nodes <1>, <2>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <0>.\nNode <6> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <6>), (<2>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 136,
        "question": "Given an undirected graph:\nNode <0> is connected to node <3>.\nNode <1> is connected to nodes <2>, <3>, <4>, <5>.\nNode <2> is connected to node <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 137,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <5>.\nNode <1> is connected to nodes <3>, <4>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 138,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>.\nNode <1> is connected to nodes <5>, <6>.\nNode <2> is connected to nodes <3>, <4>, <5>, <6>.\nNode <3> is connected to node <2>.\nNode <4> is connected to nodes <0>, <2>.\nNode <5> is connected to nodes <0>, <1>, <2>.\nNode <6> is connected to nodes <1>, <2>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <5>), (<2>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 139,
        "question": "Given an undirected graph:\nNode <0> is connected to node <3>.\nNode <1> is connected to nodes <3>, <5>.\nNode <2> is connected to nodes <3>, <4>, <6>.\nNode <3> is connected to nodes <0>, <1>, <2>.\nNode <4> is connected to node <2>.\nNode <5> is connected to node <1>.\nNode <6> is connected to node <2>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <5>), (<2>, <4>)]",
        "type": "bipartite"
    },
    {
        "index": 140,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <6>.\nNode <1> is connected to nodes <2>, <3>, <4>, <5>, <6>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <1>.\nNode <6> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 141,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>, <5>.\nNode <1> is connected to node <3>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 142,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 143,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <5>, <6>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to nodes <3>, <4>, <6>.\nNode <3> is connected to nodes <0>, <1>, <2>.\nNode <4> is connected to nodes <0>, <1>, <2>.\nNode <5> is connected to node <0>.\nNode <6> is connected to nodes <0>, <2>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <5>), (<1>, <4>), (<2>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 144,
        "question": "Given an undirected graph:\nNode <0> is connected to node <6>.\nNode <1> is connected to nodes <3>, <4>, <5>, <6>.\nNode <2> is connected to node <6>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <1>.\nNode <6> is connected to nodes <0>, <1>, <2>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <6>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 145,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <5>.\nNode <1> is connected to nodes <2>, <4>, <5>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <1>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 146,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>, <5>.\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 147,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>.\nNode <1> is connected to nodes <2>, <4>, <5>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <1>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 148,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <2>, <4>, <5>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 149,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>, <6>.\nNode <1> is connected to node <5>.\nNode <2> is connected to nodes <3>, <5>.\nNode <3> is connected to node <2>.\nNode <4> is connected to node <0>.\nNode <5> is connected to nodes <0>, <1>, <2>.\nNode <6> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <5>), (<2>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 150,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 151,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>.\nNode <1> is connected to nodes <2>, <3>, <5>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <0>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 152,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to nodes <3>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 153,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>, <6>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to node <5>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to nodes <0>, <2>.\nNode <6> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <4>), (<2>, <5>)]",
        "type": "bipartite"
    },
    {
        "index": 154,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to node <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <4>)]",
        "type": "bipartite"
    },
    {
        "index": 155,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <5>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 156,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <6>.\nNode <1> is connected to nodes <3>, <4>, <5>.\nNode <2> is connected to nodes <4>, <5>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <1>, <2>.\nNode <5> is connected to nodes <1>, <2>.\nNode <6> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <6>), (<1>, <3>), (<2>, <4>)]",
        "type": "bipartite"
    },
    {
        "index": 157,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>, <5>.\nNode <1> is connected to nodes <3>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <0>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 158,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <6>.\nNode <1> is connected to nodes <2>, <3>, <4>, <5>, <6>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <1>.\nNode <6> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <6>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 159,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 160,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>, <6>.\nNode <1> is connected to nodes <2>, <4>, <5>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <1>.\nNode <5> is connected to nodes <0>, <1>.\nNode <6> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 161,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>.\nNode <1> is connected to nodes <2>, <4>, <5>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <1>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 162,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>.\nNode <1> is connected to nodes <2>, <3>, <5>.\nNode <2> is connected to node <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 163,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <5>.\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 164,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <3>, <4>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 165,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <5>.\nNode <1> is connected to nodes <4>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <1>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <4>)]",
        "type": "bipartite"
    },
    {
        "index": 166,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>, <5>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 167,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <5>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <5>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 168,
        "question": "Given an undirected graph:\nNode <0> is connected to node <5>.\nNode <1> is connected to nodes <4>, <5>, <6>.\nNode <2> is connected to nodes <3>, <4>.\nNode <3> is connected to node <2>.\nNode <4> is connected to nodes <1>, <2>.\nNode <5> is connected to nodes <0>, <1>.\nNode <6> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <5>), (<1>, <4>), (<2>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 169,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to node <3>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 170,
        "question": "Given an undirected graph:\nNode <0> is connected to node <2>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 171,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <2>, <3>, <5>, <6>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <1>.\nNode <6> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 172,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <3>, <4>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 173,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <5>.\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to node <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 174,
        "question": "Given an undirected graph:\nNode <0> is connected to node <6>.\nNode <1> is connected to nodes <4>, <5>, <6>.\nNode <2> is connected to nodes <3>, <6>.\nNode <3> is connected to node <2>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <1>.\nNode <6> is connected to nodes <0>, <1>, <2>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <6>), (<1>, <4>), (<2>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 175,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 176,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 177,
        "question": "Given an undirected graph:\nNode <0> is connected to node <5>.\nNode <1> is connected to nodes <2>, <3>, <4>, <5>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <5>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 178,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>, <6>.\nNode <1> is connected to nodes <3>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <1>.\nNode <6> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 179,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 180,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>, <5>.\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 181,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <2>, <3>, <4>, <5>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 182,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>, <5>.\nNode <1> is connected to node <2>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 183,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>, <5>.\nNode <1> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 184,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>, <5>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 185,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>, <6>.\nNode <1> is connected to nodes <3>, <5>, <6>.\nNode <2> is connected to node <4>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <2>.\nNode <5> is connected to nodes <0>, <1>.\nNode <6> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <5>), (<1>, <3>), (<2>, <4>)]",
        "type": "bipartite"
    },
    {
        "index": 186,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>.\nNode <1> is connected to nodes <2>, <4>, <5>, <6>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <1>.\nNode <5> is connected to nodes <0>, <1>.\nNode <6> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 187,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <5>.\nNode <1> is connected to nodes <3>, <4>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 188,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>, <5>.\nNode <1> is connected to nodes <3>, <4>, <6>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <0>.\nNode <6> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 189,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>, <3>, <4>, <5>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0>.\nNodes set 2 contains: <1> <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <1>)]",
        "type": "bipartite"
    },
    {
        "index": 190,
        "question": "Given an undirected graph:\nNode <0> is connected to node <5>.\nNode <1> is connected to nodes <2>, <3>, <4>, <5>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <5>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 191,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>, <5>.\nNode <1> is connected to nodes <2>, <3>, <4>, <6>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <0>.\nNode <6> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 192,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <6>.\nNode <1> is connected to nodes <2>, <3>, <4>, <5>.\nNode <2> is connected to node <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <1>.\nNode <6> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 193,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>, <6>.\nNode <1> is connected to nodes <2>, <4>, <6>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <0>.\nNode <6> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 194,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to nodes <3>, <4>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 195,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>, <3>, <4>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0>.\nNodes set 2 contains: <1> <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <1>)]",
        "type": "bipartite"
    },
    {
        "index": 196,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 197,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>, <5>.\nNode <1> is connected to node <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <5>)]",
        "type": "bipartite"
    },
    {
        "index": 198,
        "question": "Given an undirected graph:\nNode <0> is connected to node <5>.\nNode <1> is connected to nodes <3>, <4>, <6>.\nNode <2> is connected to nodes <4>, <5>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <1>, <2>.\nNode <5> is connected to nodes <0>, <2>.\nNode <6> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <5>), (<1>, <3>), (<2>, <4>)]",
        "type": "bipartite"
    },
    {
        "index": 199,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 200,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 201,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to node <3>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 202,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>, <3>, <4>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0>.\nNodes set 2 contains: <1> <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <1>)]",
        "type": "bipartite"
    },
    {
        "index": 203,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <5>, <6>.\nNode <1> is connected to nodes <3>, <4>, <5>, <6>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to nodes <0>, <1>.\nNode <6> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 204,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>.\nNode <1> is connected to nodes <3>, <5>, <6>.\nNode <2> is connected to nodes <4>, <6>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <2>.\nNode <5> is connected to nodes <0>, <1>.\nNode <6> is connected to nodes <1>, <2>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <5>), (<1>, <3>), (<2>, <4>)]",
        "type": "bipartite"
    },
    {
        "index": 205,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>, <6>.\nNode <1> is connected to nodes <4>, <6>.\nNode <2> is connected to node <4>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <1>, <2>.\nNode <5> is connected to node <0>.\nNode <6> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <6>), (<2>, <4>)]",
        "type": "bipartite"
    },
    {
        "index": 206,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <5>, <6>.\nNode <1> is connected to node <3>.\nNode <2> is connected to nodes <3>, <5>, <6>.\nNode <3> is connected to nodes <0>, <1>, <2>.\nNode <4> is connected to node <0>.\nNode <5> is connected to nodes <0>, <2>.\nNode <6> is connected to nodes <0>, <2>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <3>), (<2>, <5>)]",
        "type": "bipartite"
    },
    {
        "index": 207,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 208,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <5>.\nNode <1> is connected to nodes <2>, <3>, <4>, <5>, <6>.\nNode <2> is connected to node <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <0>, <1>.\nNode <6> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 209,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <5>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 210,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <6>.\nNode <1> is connected to nodes <2>, <3>, <5>.\nNode <2> is connected to node <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <1>.\nNode <6> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 211,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <5>.\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to node <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 212,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 213,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>, <3>, <4>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0>.\nNodes set 2 contains: <1> <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <1>)]",
        "type": "bipartite"
    },
    {
        "index": 214,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>.\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 215,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <5>, <6>.\nNode <1> is connected to nodes <5>, <6>.\nNode <2> is connected to nodes <4>, <5>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <2>.\nNode <5> is connected to nodes <0>, <1>, <2>.\nNode <6> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <5>), (<2>, <4>)]",
        "type": "bipartite"
    },
    {
        "index": 216,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 217,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 218,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 219,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>, <3>, <4>, <5>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0>.\nNodes set 2 contains: <1> <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <1>)]",
        "type": "bipartite"
    },
    {
        "index": 220,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <3>, <4>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 221,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>.\nNode <1> is connected to nodes <2>, <4>, <5>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 222,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>, <3>, <4>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0>.\nNodes set 2 contains: <1> <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <1>)]",
        "type": "bipartite"
    },
    {
        "index": 223,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to node <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 224,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>.\nNode <1> is connected to nodes <2>, <3>, <4>, <5>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 225,
        "question": "Given an undirected graph:\nNode <0> is connected to node <3>.\nNode <1> is connected to nodes <2>, <3>, <4>, <5>.\nNode <2> is connected to node <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 226,
        "question": "Given an undirected graph:\nNode <0> is connected to node <2>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 227,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <6>.\nNode <1> is connected to nodes <3>, <5>, <6>.\nNode <2> is connected to node <4>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <2>.\nNode <5> is connected to node <1>.\nNode <6> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <6>), (<1>, <3>), (<2>, <4>)]",
        "type": "bipartite"
    },
    {
        "index": 228,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <2>, <4>, <5>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 229,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>, <5>.\nNode <1> is connected to node <3>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 230,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <5>.\nNode <1> is connected to nodes <2>, <4>, <5>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 231,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to node <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <4>)]",
        "type": "bipartite"
    },
    {
        "index": 232,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <5>.\nNode <1> is connected to nodes <2>, <4>, <5>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 233,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to nodes <3>, <5>, <6>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <1>.\nNode <6> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 234,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>, <3>, <4>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0>.\nNodes set 2 contains: <1> <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <1>)]",
        "type": "bipartite"
    },
    {
        "index": 235,
        "question": "Given an undirected graph:\nNode <0> is connected to node <4>.\nNode <1> is connected to nodes <3>, <4>, <5>, <6>.\nNode <2> is connected to node <3>.\nNode <3> is connected to nodes <1>, <2>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <1>.\nNode <6> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <5>), (<2>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 236,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>, <5>.\nNode <1> is connected to node <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <5>)]",
        "type": "bipartite"
    },
    {
        "index": 237,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <6>.\nNode <1> is connected to nodes <2>, <3>, <4>, <5>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <1>.\nNode <6> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 238,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>, <5>, <6>.\nNode <1> is connected to nodes <3>, <4>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <0>, <1>.\nNode <6> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 239,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <5>.\nNode <1> is connected to nodes <2>, <4>, <5>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 240,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>.\nNode <1> is connected to nodes <2>, <3>, <4>, <6>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <0>.\nNode <6> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 241,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <6>.\nNode <1> is connected to nodes <4>, <6>.\nNode <2> is connected to nodes <3>, <4>, <6>.\nNode <3> is connected to node <2>.\nNode <4> is connected to nodes <1>, <2>.\nNode <5> is connected to node <0>.\nNode <6> is connected to nodes <0>, <1>, <2>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <5>), (<1>, <4>), (<2>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 242,
        "question": "Given an undirected graph:\nNode <0> is connected to node <4>.\nNode <1> is connected to nodes <2>, <3>, <4>, <5>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 243,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>, <3>, <4>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0>.\nNodes set 2 contains: <1> <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <1>)]",
        "type": "bipartite"
    },
    {
        "index": 244,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 245,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to nodes <2>, <4>, <5>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 246,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <6>.\nNode <1> is connected to nodes <3>, <5>.\nNode <2> is connected to node <6>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <1>.\nNode <6> is connected to nodes <0>, <2>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <3>), (<2>, <6>)]",
        "type": "bipartite"
    },
    {
        "index": 247,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>.\nNode <1> is connected to nodes <4>, <5>.\nNode <2> is connected to nodes <4>, <5>, <6>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>, <2>.\nNode <5> is connected to nodes <1>, <2>.\nNode <6> is connected to node <2>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <5>), (<2>, <4>)]",
        "type": "bipartite"
    },
    {
        "index": 248,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 249,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 250,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 251,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>, <5>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 252,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>, <6>.\nNode <1> is connected to node <5>.\nNode <2> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <0>, <2>.\nNode <4> is connected to node <2>.\nNode <5> is connected to nodes <0>, <1>.\nNode <6> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <6>), (<1>, <5>), (<2>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 253,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <5>.\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 254,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>, <5>.\nNode <1> is connected to nodes <4>, <6>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <0>.\nNode <6> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <4>)]",
        "type": "bipartite"
    },
    {
        "index": 255,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to node <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <4>)]",
        "type": "bipartite"
    },
    {
        "index": 256,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <6>.\nNode <1> is connected to nodes <3>, <4>, <5>.\nNode <2> is connected to node <5>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to nodes <1>, <2>.\nNode <6> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <6>), (<1>, <3>), (<2>, <5>)]",
        "type": "bipartite"
    },
    {
        "index": 257,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <6>.\nNode <1> is connected to nodes <4>, <6>.\nNode <2> is connected to nodes <3>, <5>, <6>.\nNode <3> is connected to node <2>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <2>.\nNode <6> is connected to nodes <0>, <1>, <2>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <6>), (<1>, <4>), (<2>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 258,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <3>, <4>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 259,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to node <3>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 260,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <3>, <4>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 261,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>, <3>, <4>, <5>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0>.\nNodes set 2 contains: <1> <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <1>)]",
        "type": "bipartite"
    },
    {
        "index": 262,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>.\nNode <1> is connected to nodes <4>, <6>.\nNode <2> is connected to nodes <3>, <4>, <6>.\nNode <3> is connected to node <2>.\nNode <4> is connected to nodes <0>, <1>, <2>.\nNode <5> is connected to node <0>.\nNode <6> is connected to nodes <1>, <2>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <5>), (<1>, <4>), (<2>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 263,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to node <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 264,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>, <3>, <4>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0>.\nNodes set 2 contains: <1> <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <1>)]",
        "type": "bipartite"
    },
    {
        "index": 265,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <5>.\nNode <1> is connected to nodes <3>, <4>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 266,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>.\nNode <1> is connected to nodes <2>, <4>, <5>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <1>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 267,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <2>, <4>, <5>, <6>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <1>.\nNode <6> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 268,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to node <3>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 269,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>.\nNode <1> is connected to nodes <4>, <6>.\nNode <2> is connected to nodes <4>, <5>, <6>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <1>, <2>.\nNode <5> is connected to nodes <0>, <2>.\nNode <6> is connected to nodes <1>, <2>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <6>), (<2>, <4>)]",
        "type": "bipartite"
    },
    {
        "index": 270,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <6>.\nNode <1> is connected to nodes <2>, <3>, <4>, <5>, <6>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to nodes <0>, <1>.\nNode <6> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <5>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 271,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>, <6>.\nNode <1> is connected to nodes <3>, <5>.\nNode <2> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <1>, <2>.\nNode <4> is connected to node <0>.\nNode <5> is connected to nodes <0>, <1>, <2>.\nNode <6> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <5>), (<2>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 272,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 273,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <5>.\nNode <1> is connected to nodes <3>, <5>, <6>.\nNode <2> is connected to node <4>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <0>, <2>.\nNode <5> is connected to nodes <0>, <1>.\nNode <6> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <5>), (<2>, <4>)]",
        "type": "bipartite"
    },
    {
        "index": 274,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>, <5>.\nNode <1> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 275,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>, <6>.\nNode <1> is connected to node <4>.\nNode <2> is connected to nodes <4>, <5>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <1>, <2>.\nNode <5> is connected to nodes <0>, <2>.\nNode <6> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <4>), (<2>, <5>)]",
        "type": "bipartite"
    },
    {
        "index": 276,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <3>, <4>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 277,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <5>, <6>.\nNode <1> is connected to nodes <2>, <4>, <6>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <0>.\nNode <6> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 278,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <5>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <5>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 279,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>, <5>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 280,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>, <5>.\nNode <1> is connected to nodes <2>, <3>, <4>, <5>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 281,
        "question": "Given an undirected graph:\nNode <0> is connected to node <3>.\nNode <1> is connected to nodes <4>, <5>, <6>.\nNode <2> is connected to nodes <3>, <5>, <6>.\nNode <3> is connected to nodes <0>, <2>.\nNode <4> is connected to node <1>.\nNode <5> is connected to nodes <1>, <2>.\nNode <6> is connected to nodes <1>, <2>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <4>), (<2>, <5>)]",
        "type": "bipartite"
    },
    {
        "index": 282,
        "question": "Given an undirected graph:\nNode <0> is connected to node <3>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to node <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 283,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 284,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>.\nNode <1> is connected to nodes <2>, <4>, <5>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <1>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 285,
        "question": "Given an undirected graph:\nNode <0> is connected to node <2>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 286,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to node <3>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 287,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <5>.\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 288,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <3>, <4>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 289,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>.\nNode <1> is connected to nodes <3>, <4>, <5>.\nNode <2> is connected to nodes <4>, <5>, <6>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <1>, <2>.\nNode <5> is connected to nodes <0>, <1>, <2>.\nNode <6> is connected to node <2>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <5>), (<1>, <3>), (<2>, <4>)]",
        "type": "bipartite"
    },
    {
        "index": 290,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>, <5>.\nNode <1> is connected to node <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <0>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <4>)]",
        "type": "bipartite"
    },
    {
        "index": 291,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <5>.\nNode <1> is connected to nodes <4>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <1>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <4>)]",
        "type": "bipartite"
    },
    {
        "index": 292,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 293,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <6>.\nNode <1> is connected to nodes <3>, <4>, <5>, <6>.\nNode <2> is connected to nodes <3>, <6>.\nNode <3> is connected to nodes <1>, <2>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <1>.\nNode <6> is connected to nodes <0>, <1>, <2>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1> <2>.\nNodes set 2 contains: <3> <4> <5> <6>.\nAnswer:\n",
        "answer": "[(<0>, <6>), (<1>, <4>), (<2>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 294,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to nodes <3>, <4>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 295,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>.\nNode <1> is connected to nodes <2>, <3>, <5>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <0>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <4>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 296,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <5>.\nNode <1> is connected to nodes <2>, <3>, <5>.\nNode <2> is connected to node <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <0>.\nNode <5> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4> <5>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 297,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <2>), (<1>, <3>)]",
        "type": "bipartite"
    },
    {
        "index": 298,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>.\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 299,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to node <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <0>, <1>.\nFind a maximum matching in the bipartite graph.\nNodes set 1 contains: <0> <1>.\nNodes set 2 contains: <2> <3> <4>.\nAnswer:\n",
        "answer": "[(<0>, <3>), (<1>, <2>)]",
        "type": "bipartite"
    },
    {
        "index": 0,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <4>, <6>, <1>.\nNode <2> is connected to nodes <3>, <4>, <0>, <1>, <5>.\nNode <4> is connected to nodes <3>, <2>, <6>, <0>, <1>, <5>.\nNode <6> is connected to nodes <3>, <4>, <0>, <1>, <5>.\nNode <1> is connected to nodes <3>, <2>, <4>, <6>, <0>, <5>.\nNode <0> is connected to nodes <2>, <4>, <6>, <1>.\nNode <5> is connected to nodes <2>, <4>, <6>, <1>.\nCalculate the number of common neighbors of node <4> and node <6>. \nAnswer:\n",
        "answer": "4",
        "type": "common_neighbor"
    },
    {
        "index": 1,
        "question": "Given an undirected graph:\nNode <1> is connected to node <3>.\nNode <3> is connected to nodes <1>, <2>, <4>, <5>.\nNode <2> is connected to node <3>.\nNode <4> is connected to nodes <3>, <0>.\nNode <5> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <4>, <5>.\nCalculate the number of common neighbors of node <2> and node <1>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 2,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <5>, <0>, <3>.\nNode <2> is connected to nodes <1>, <5>, <0>, <3>.\nNode <5> is connected to nodes <1>, <2>, <3>, <4>.\nNode <0> is connected to nodes <1>, <2>, <3>, <4>.\nNode <3> is connected to nodes <1>, <2>, <5>, <0>, <4>.\nNode <4> is connected to nodes <5>, <0>, <3>.\nCalculate the number of common neighbors of node <0> and node <3>. \nAnswer:\n",
        "answer": "3",
        "type": "common_neighbor"
    },
    {
        "index": 3,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <1>, <0>.\nNode <4> is connected to node <2>.\nNode <1> is connected to nodes <2>, <3>.\nNode <0> is connected to node <2>.\nNode <3> is connected to node <1>.\nCalculate the number of common neighbors of node <0> and node <4>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 4,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <3>, <4>, <1>.\nNode <4> is connected to nodes <2>, <1>.\nNode <5> is connected to nodes <4>, <2>.\nNode <2> is connected to node <1>.\nCalculate the number of common neighbors of node <1> and node <5>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 5,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <1>, <4>, <0>, <5>.\nNode <2> is connected to nodes <3>, <1>, <4>, <0>.\nNode <1> is connected to nodes <3>, <2>, <4>, <0>, <5>.\nNode <4> is connected to nodes <3>, <2>, <1>, <5>.\nNode <0> is connected to nodes <3>, <2>, <1>, <5>.\nNode <5> is connected to nodes <3>, <1>, <4>, <0>.\nCalculate the number of common neighbors of node <3> and node <5>. \nAnswer:\n",
        "answer": "3",
        "type": "common_neighbor"
    },
    {
        "index": 6,
        "question": "Given a directed graph:\nNode <1> is connected to node <4>.\nNode <4> is connected to nodes <3>, <2>, <0>.\nNode <2> is connected to nodes <4>, <3>, <1>.\nNode <3> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <3>, <1>, <2>.\nCalculate the number of common neighbors of node <2> and node <1>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 7,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <3>, <4>.\nNode <0> is connected to nodes <3>, <5>, <4>.\nNode <4> is connected to nodes <1>, <0>.\nNode <5> is connected to nodes <0>, <2>.\nNode <2> is connected to node <5>.\nCalculate the number of common neighbors of node <2> and node <0>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 8,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <2>, <0>, <3>.\nNode <2> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <4>, <2>.\nCalculate the number of common neighbors of node <0> and node <4>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 9,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <0>.\nNode <5> is connected to node <2>.\nNode <0> is connected to nodes <2>, <1>, <4>.\nNode <1> is connected to nodes <4>, <3>, <0>.\nNode <4> is connected to nodes <1>, <0>.\nNode <3> is connected to node <1>.\nCalculate the number of common neighbors of node <3> and node <0>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 10,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <2>, <1>.\nNode <3> is connected to nodes <2>, <0>.\nNode <2> is connected to node <4>.\nNode <1> is connected to nodes <3>, <2>.\nNode <4> is connected to nodes <0>, <2>, <1>.\nCalculate the number of common neighbors of node <3> and node <4>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 11,
        "question": "Given a directed graph:\nNode <5> is connected to node <3>.\nNode <3> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <1>, <0>, <2>, <5>, <3>.\nNode <0> is connected to nodes <2>, <4>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <0>.\nCalculate the number of common neighbors of node <0> and node <5>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 12,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <1>, <0>, <5>.\nNode <2> is connected to nodes <4>, <5>.\nNode <1> is connected to nodes <4>, <3>, <5>.\nNode <0> is connected to nodes <4>, <5>.\nNode <5> is connected to nodes <4>, <2>, <3>, <1>, <0>.\nNode <3> is connected to nodes <1>, <5>.\nCalculate the number of common neighbors of node <1> and node <0>. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 13,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <2>, <1>, <5>, <4>.\nNode <3> is connected to node <2>.\nNode <1> is connected to node <0>.\nNode <5> is connected to node <0>.\nNode <4> is connected to node <0>.\nCalculate the number of common neighbors of node <2> and node <0>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 14,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <1>, <4>.\nNode <0> is connected to nodes <2>, <3>, <1>.\nNode <3> is connected to node <4>.\nNode <1> is connected to node <2>.\nCalculate the number of common neighbors of node <5> and node <1>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 15,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <4>, <0>, <5>.\nNode <1> is connected to nodes <2>, <4>, <3>, <5>.\nNode <4> is connected to nodes <2>, <1>, <0>, <3>.\nNode <0> is connected to nodes <2>, <4>, <3>, <5>.\nNode <5> is connected to nodes <2>, <1>, <0>, <3>.\nNode <3> is connected to nodes <1>, <4>, <0>, <5>.\nCalculate the number of common neighbors of node <1> and node <3>. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 16,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <0>, <2>.\nNode <3> is connected to nodes <5>, <4>.\nNode <0> is connected to nodes <5>, <2>.\nNode <2> is connected to nodes <5>, <0>, <1>.\nNode <4> is connected to node <3>.\nNode <1> is connected to node <2>.\nCalculate the number of common neighbors of node <0> and node <5>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 17,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <5>, <3>, <4>.\nNode <2> is connected to nodes <0>, <1>, <5>, <3>, <4>.\nNode <5> is connected to nodes <0>, <2>, <1>, <3>.\nNode <3> is connected to nodes <0>, <2>, <5>, <4>.\nNode <4> is connected to nodes <0>, <2>, <1>, <3>.\nNode <1> is connected to nodes <2>, <5>, <4>.\nCalculate the number of common neighbors of node <4> and node <1>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 18,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <5>.\nNode <3> is connected to node <5>.\nNode <5> is connected to node <0>.\nNode <0> is connected to nodes <4>, <3>.\nNode <1> is connected to node <2>.\nNode <2> is connected to node <3>.\nCalculate the number of common neighbors of node <1> and node <0>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 19,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <0>, <5>.\nNode <0> is connected to nodes <4>, <2>, <5>, <3>, <1>.\nNode <5> is connected to node <0>.\nNode <3> is connected to node <4>.\nNode <4> is connected to nodes <2>, <3>, <1>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <4>.\nCalculate the number of common neighbors of node <4> and node <0>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "3",
        "type": "common_neighbor"
    },
    {
        "index": 20,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <2>, <1>, <3>.\nNode <0> is connected to node <2>.\nNode <1> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <4>, <1>.\nCalculate the number of common neighbors of node <3> and node <2>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 21,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <3>, <1>.\nNode <0> is connected to node <4>.\nNode <3> is connected to nodes <4>, <5>, <2>.\nNode <1> is connected to node <4>.\nNode <5> is connected to node <3>.\nNode <2> is connected to node <3>.\nCalculate the number of common neighbors of node <5> and node <4>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 22,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>, <3>, <1>, <2>.\nNode <4> is connected to nodes <0>, <5>, <3>, <1>, <2>.\nNode <5> is connected to nodes <0>, <4>, <3>, <2>.\nNode <3> is connected to nodes <0>, <4>, <5>, <1>.\nNode <1> is connected to nodes <0>, <4>, <3>, <2>.\nNode <2> is connected to nodes <0>, <4>, <5>, <1>.\nCalculate the number of common neighbors of node <0> and node <2>. \nAnswer:\n",
        "answer": "3",
        "type": "common_neighbor"
    },
    {
        "index": 23,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>, <2>, <4>, <1>.\nNode <3> is connected to node <0>.\nNode <5> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <1> is connected to node <0>.\nCalculate the number of common neighbors of node <3> and node <1>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 24,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <3>, <0>, <2>.\nNode <4> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <0> is connected to node <1>.\nNode <2> is connected to node <1>.\nCalculate the number of common neighbors of node <0> and node <2>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 25,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <6>, <3>.\nNode <2> is connected to nodes <6>, <5>.\nNode <3> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <3>, <5>.\nNode <4> is connected to node <5>.\nNode <5> is connected to nodes <4>, <2>, <0>.\nCalculate the number of common neighbors of node <3> and node <6>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 26,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <1>, <5>.\nNode <3> is connected to node <2>.\nNode <1> is connected to nodes <2>, <0>, <4>.\nNode <5> is connected to node <2>.\nNode <0> is connected to node <1>.\nNode <4> is connected to node <1>.\nCalculate the number of common neighbors of node <3> and node <4>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 27,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <3>, <6>, <2>, <4>.\nNode <1> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <0>, <1>, <2>.\nNode <6> is connected to nodes <0>, <5>.\nNode <2> is connected to nodes <0>, <3>, <5>, <4>.\nNode <4> is connected to nodes <0>, <2>.\nNode <5> is connected to nodes <6>, <2>.\nCalculate the number of common neighbors of node <6> and node <1>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 28,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <6>.\nNode <2> is connected to nodes <0>, <5>.\nNode <6> is connected to nodes <0>, <1>, <4>.\nNode <5> is connected to nodes <2>, <3>.\nNode <1> is connected to node <6>.\nNode <4> is connected to nodes <6>, <3>.\nNode <3> is connected to nodes <5>, <4>.\nCalculate the number of common neighbors of node <3> and node <0>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 29,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <4>, <2>, <6>, <1>.\nNode <0> is connected to nodes <5>, <3>, <2>, <6>, <1>.\nNode <4> is connected to nodes <5>, <2>, <6>, <1>.\nNode <2> is connected to nodes <5>, <3>, <0>, <4>, <1>.\nNode <6> is connected to nodes <5>, <3>, <0>, <4>, <1>.\nNode <1> is connected to nodes <5>, <0>, <4>, <2>, <6>.\nNode <3> is connected to nodes <0>, <2>, <6>.\nCalculate the number of common neighbors of node <5> and node <1>. \nAnswer:\n",
        "answer": "4",
        "type": "common_neighbor"
    },
    {
        "index": 30,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <4>.\nNode <3> is connected to node <2>.\nNode <4> is connected to nodes <2>, <5>, <0>, <1>.\nNode <5> is connected to node <4>.\nNode <0> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <4>, <0>.\nCalculate the number of common neighbors of node <4> and node <3>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 31,
        "question": "Given an undirected graph:\nNode <0> is connected to node <1>.\nNode <1> is connected to nodes <0>, <4>, <2>.\nNode <4> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <1>, <3>, <4>.\nNode <3> is connected to node <2>.\nCalculate the number of common neighbors of node <0> and node <2>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 32,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <5>, <2>, <0>, <3>.\nNode <4> is connected to nodes <1>, <6>.\nNode <5> is connected to nodes <1>, <0>, <2>, <6>.\nNode <2> is connected to nodes <1>, <5>.\nNode <0> is connected to nodes <1>, <5>.\nNode <3> is connected to nodes <1>, <6>.\nNode <6> is connected to nodes <4>, <5>, <3>.\nCalculate the number of common neighbors of node <1> and node <5>. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 33,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <1>, <4>, <3>.\nNode <0> is connected to node <2>.\nNode <1> is connected to node <2>.\nNode <4> is connected to node <2>.\nNode <3> is connected to node <2>.\nCalculate the number of common neighbors of node <2> and node <0>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 34,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <5>.\nNode <3> is connected to node <0>.\nNode <5> is connected to nodes <1>, <2>, <0>, <4>, <3>.\nNode <0> is connected to nodes <4>, <3>.\nNode <1> is connected to nodes <2>, <0>, <4>, <3>, <5>.\nNode <2> is connected to nodes <4>, <3>, <5>, <1>.\nCalculate the number of common neighbors of node <4> and node <1>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 35,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <3>.\nNode <1> is connected to node <4>.\nNode <3> is connected to nodes <4>, <6>, <5>, <2>, <0>.\nNode <6> is connected to node <3>.\nNode <5> is connected to node <3>.\nNode <2> is connected to node <3>.\nNode <0> is connected to node <3>.\nCalculate the number of common neighbors of node <4> and node <6>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 36,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <4>, <5>.\nNode <0> is connected to nodes <1>, <4>, <3>, <5>, <2>.\nNode <4> is connected to nodes <1>, <0>, <3>, <5>, <2>.\nNode <5> is connected to nodes <1>, <0>, <4>, <3>, <2>.\nNode <3> is connected to nodes <0>, <4>, <5>, <2>.\nNode <2> is connected to nodes <0>, <4>, <3>, <5>.\nCalculate the number of common neighbors of node <3> and node <4>. \nAnswer:\n",
        "answer": "3",
        "type": "common_neighbor"
    },
    {
        "index": 37,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <2>, <3>, <1>.\nNode <5> is connected to nodes <4>, <2>, <3>, <1>.\nNode <2> is connected to nodes <4>, <5>, <0>, <1>.\nNode <3> is connected to nodes <4>, <5>, <0>, <1>.\nNode <1> is connected to nodes <4>, <5>, <2>, <0>, <3>.\nNode <0> is connected to nodes <2>, <3>, <1>.\nCalculate the number of common neighbors of node <4> and node <2>. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 38,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <4>, <3>.\nNode <5> is connected to nodes <1>, <3>, <0>.\nNode <4> is connected to nodes <1>, <6>, <2>.\nNode <3> is connected to nodes <1>, <5>.\nNode <0> is connected to node <5>.\nNode <6> is connected to node <4>.\nNode <2> is connected to node <4>.\nCalculate the number of common neighbors of node <2> and node <4>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 39,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <1>, <3>, <4>, <5>.\nNode <2> is connected to nodes <0>, <4>, <5>.\nNode <1> is connected to nodes <0>, <3>, <4>, <5>.\nNode <3> is connected to nodes <0>, <1>, <4>, <5>.\nNode <4> is connected to nodes <0>, <2>, <1>, <3>, <5>.\nNode <5> is connected to nodes <0>, <2>, <1>, <3>, <4>.\nCalculate the number of common neighbors of node <3> and node <0>. \nAnswer:\n",
        "answer": "3",
        "type": "common_neighbor"
    },
    {
        "index": 40,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <2>, <1>, <0>.\nNode <3> is connected to nodes <4>, <5>, <2>, <0>.\nNode <2> is connected to nodes <4>, <5>, <3>, <1>, <0>.\nNode <1> is connected to nodes <4>, <2>.\nNode <0> is connected to nodes <4>, <5>, <3>, <2>.\nNode <5> is connected to nodes <3>, <2>, <0>.\nCalculate the number of common neighbors of node <2> and node <4>. \nAnswer:\n",
        "answer": "3",
        "type": "common_neighbor"
    },
    {
        "index": 41,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <3>, <0>.\nNode <4> is connected to nodes <3>, <2>.\nNode <0> is connected to nodes <5>, <2>.\nNode <2> is connected to nodes <0>, <4>, <1>.\nNode <1> is connected to node <2>.\nCalculate the number of common neighbors of node <1> and node <4>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 42,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <0>, <6>.\nNode <3> is connected to nodes <5>, <6>.\nNode <0> is connected to nodes <6>, <3>.\nNode <6> is connected to nodes <3>, <0>, <1>.\nNode <5> is connected to nodes <1>, <6>, <3>, <0>.\nNode <1> is connected to nodes <6>, <3>, <5>.\nNode <4> is connected to nodes <3>, <0>, <1>, <6>.\nCalculate the number of common neighbors of node <3> and node <4>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 43,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <2>, <3>.\nNode <0> is connected to node <1>.\nNode <2> is connected to nodes <1>, <4>, <5>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <2>.\nNode <5> is connected to node <2>.\nCalculate the number of common neighbors of node <4> and node <2>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 44,
        "question": "Given a directed graph:\nNode <4> is connected to node <1>.\nNode <1> is connected to nodes <0>, <6>, <5>, <3>.\nNode <6> is connected to node <2>.\nNode <2> is connected to node <3>.\nNode <5> is connected to nodes <2>, <3>, <0>, <4>, <6>.\nNode <3> is connected to nodes <5>, <2>.\nNode <0> is connected to nodes <6>, <5>.\nCalculate the number of common neighbors of node <2> and node <5>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 45,
        "question": "Given a directed graph:\nNode <1> is connected to node <0>.\nNode <0> is connected to nodes <1>, <3>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <4>, <1>.\nNode <4> is connected to node <2>.\nCalculate the number of common neighbors of node <3> and node <0>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 46,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <5>, <3>, <1>.\nNode <1> is connected to nodes <5>, <4>, <0>, <2>.\nNode <3> is connected to node <4>.\nNode <0> is connected to nodes <6>, <1>.\nNode <6> is connected to node <0>.\nNode <2> is connected to node <1>.\nCalculate the number of common neighbors of node <5> and node <3>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 47,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <4>, <1>.\nNode <0> is connected to nodes <3>, <2>, <4>.\nNode <4> is connected to nodes <3>, <0>.\nNode <1> is connected to node <3>.\nNode <2> is connected to node <0>.\nCalculate the number of common neighbors of node <0> and node <3>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 48,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <3>, <0>.\nNode <2> is connected to node <1>.\nNode <3> is connected to nodes <1>, <4>.\nNode <0> is connected to node <1>.\nNode <4> is connected to node <3>.\nCalculate the number of common neighbors of node <3> and node <0>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 49,
        "question": "Given a directed graph:\nNode <5> is connected to node <0>.\nNode <0> is connected to nodes <4>, <3>, <5>.\nNode <2> is connected to nodes <0>, <4>.\nNode <3> is connected to node <0>.\nNode <1> is connected to nodes <3>, <5>, <2>, <0>, <4>.\nCalculate the number of common neighbors of node <1> and node <3>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 50,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <1>, <4>, <2>.\nNode <1> is connected to nodes <6>, <4>, <0>, <3>, <5>.\nNode <4> is connected to nodes <6>, <1>, <5>, <2>.\nNode <2> is connected to nodes <6>, <4>, <0>, <3>.\nNode <0> is connected to nodes <1>, <3>, <2>.\nNode <3> is connected to nodes <1>, <0>, <5>, <2>.\nNode <5> is connected to nodes <1>, <4>, <3>.\nCalculate the number of common neighbors of node <4> and node <2>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 51,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <1>, <0>.\nNode <5> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <2>, <4>.\nNode <0> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <5>, <0>.\nNode <4> is connected to node <1>.\nCalculate the number of common neighbors of node <1> and node <0>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 52,
        "question": "Given an undirected graph:\nNode <0> is connected to node <3>.\nNode <3> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <3>, <1>, <2>.\nNode <1> is connected to nodes <4>, <5>.\nNode <2> is connected to nodes <4>, <5>.\nNode <5> is connected to nodes <2>, <1>.\nCalculate the number of common neighbors of node <3> and node <5>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 53,
        "question": "Given a directed graph:\nNode <3> is connected to node <4>.\nNode <4> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to nodes <1>, <0>, <4>.\nCalculate the number of common neighbors of node <1> and node <4>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 54,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <5>, <6>.\nNode <3> is connected to nodes <1>, <5>, <2>.\nNode <5> is connected to nodes <4>, <1>.\nNode <6> is connected to nodes <0>, <2>, <1>.\nNode <1> is connected to nodes <5>, <4>, <6>, <0>, <3>.\nNode <4> is connected to nodes <6>, <3>.\nNode <0> is connected to nodes <3>, <1>, <4>, <6>.\nCalculate the number of common neighbors of node <5> and node <6>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 55,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <0>, <4>.\nNode <1> is connected to node <0>.\nNode <0> is connected to nodes <5>, <2>, <1>.\nNode <4> is connected to nodes <5>, <1>, <3>.\nNode <5> is connected to nodes <2>, <1>, <3>.\nCalculate the number of common neighbors of node <2> and node <0>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 56,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1>, <0>, <2>.\nNode <1> is connected to nodes <5>, <4>, <2>, <6>.\nNode <0> is connected to nodes <5>, <3>, <2>, <6>.\nNode <2> is connected to nodes <5>, <1>, <0>, <3>, <6>.\nNode <4> is connected to nodes <1>, <3>, <6>.\nNode <6> is connected to nodes <1>, <0>, <4>, <2>.\nNode <3> is connected to nodes <0>, <4>, <2>.\nCalculate the number of common neighbors of node <3> and node <6>. \nAnswer:\n",
        "answer": "3",
        "type": "common_neighbor"
    },
    {
        "index": 57,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <2>, <3>, <4>, <0>.\nNode <3> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <3>, <0>.\nNode <4> is connected to nodes <0>, <1>, <2>, <3>.\nCalculate the number of common neighbors of node <2> and node <1>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 58,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <0>, <3>.\nNode <4> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <3>, <4>.\nCalculate the number of common neighbors of node <0> and node <4>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 59,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <4>, <2>, <3>.\nNode <0> is connected to nodes <5>, <1>, <4>, <3>, <6>.\nNode <4> is connected to nodes <5>, <0>, <1>, <2>, <6>.\nNode <2> is connected to nodes <5>, <4>, <6>.\nNode <3> is connected to nodes <5>, <0>, <6>.\nNode <1> is connected to nodes <0>, <4>, <6>.\nNode <6> is connected to nodes <0>, <1>, <4>, <2>, <3>.\nCalculate the number of common neighbors of node <2> and node <5>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 60,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <2>, <4>.\nNode <0> is connected to node <2>.\nCalculate the number of common neighbors of node <0> and node <1>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 61,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <2>, <0>, <1>, <3>.\nNode <3> is connected to nodes <2>, <4>.\nNode <0> is connected to node <4>.\nNode <1> is connected to node <4>.\nCalculate the number of common neighbors of node <2> and node <1>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 62,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <5>, <0>, <1>.\nNode <4> is connected to nodes <2>, <5>, <6>, <0>, <1>.\nNode <5> is connected to nodes <2>, <4>, <6>, <3>, <0>, <1>.\nNode <0> is connected to nodes <2>, <4>, <5>, <6>, <3>, <1>.\nNode <1> is connected to nodes <2>, <4>, <5>, <6>, <0>.\nNode <6> is connected to nodes <4>, <5>, <3>, <0>, <1>.\nNode <3> is connected to nodes <5>, <6>, <0>.\nCalculate the number of common neighbors of node <3> and node <5>. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 63,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <1>.\nNode <0> is connected to node <3>.\nNode <1> is connected to nodes <3>, <2>, <4>.\nNode <2> is connected to node <1>.\nNode <4> is connected to node <1>.\nCalculate the number of common neighbors of node <2> and node <4>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 64,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>, <4>, <5>, <3>.\nNode <1> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <0>, <1>, <6>, <4>.\nNode <4> is connected to nodes <0>, <2>.\nNode <5> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <0>, <6>, <5>.\nNode <6> is connected to nodes <3>, <2>.\nCalculate the number of common neighbors of node <1> and node <6>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 65,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <0>.\nNode <4> is connected to node <3>.\nNode <0> is connected to node <3>.\nNode <1> is connected to nodes <2>, <0>, <3>, <4>.\nNode <2> is connected to nodes <3>, <4>.\nCalculate the number of common neighbors of node <1> and node <4>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 66,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <4>, <1>, <5>, <0>.\nNode <3> is connected to nodes <2>, <1>, <5>, <0>.\nNode <4> is connected to nodes <2>, <1>, <5>, <0>.\nNode <1> is connected to nodes <2>, <3>, <4>, <0>.\nNode <5> is connected to nodes <2>, <3>, <4>, <0>.\nNode <0> is connected to nodes <2>, <3>, <4>, <1>, <5>.\nCalculate the number of common neighbors of node <5> and node <4>. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 67,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <1>, <0>, <3>, <2>, <4>.\nNode <4> is connected to nodes <1>, <5>, <0>, <3>, <2>.\nNode <0> is connected to nodes <5>, <3>, <2>, <4>.\nNode <3> is connected to nodes <5>, <0>, <2>, <4>.\nNode <2> is connected to nodes <5>, <0>, <3>, <4>.\nCalculate the number of common neighbors of node <2> and node <5>. \nAnswer:\n",
        "answer": "3",
        "type": "common_neighbor"
    },
    {
        "index": 68,
        "question": "Given a directed graph:\nNode <3> is connected to node <0>.\nNode <0> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <2>, <0>.\nNode <1> is connected to nodes <2>, <0>, <4>.\nCalculate the number of common neighbors of node <2> and node <1>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 69,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <1>, <5>, <4>.\nNode <3> is connected to nodes <0>, <1>, <5>.\nNode <1> is connected to nodes <0>, <3>, <5>, <4>.\nNode <5> is connected to nodes <0>, <3>, <1>, <4>, <2>.\nNode <4> is connected to nodes <0>, <1>, <5>, <2>.\nNode <2> is connected to nodes <5>, <4>.\nCalculate the number of common neighbors of node <5> and node <2>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 70,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <0>, <4>, <2>.\nNode <3> is connected to node <1>.\nNode <0> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <2> is connected to node <1>.\nCalculate the number of common neighbors of node <1> and node <0>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 71,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <2>.\nNode <3> is connected to nodes <0>, <5>, <1>, <4>, <2>.\nNode <4> is connected to nodes <0>, <5>, <1>, <3>, <2>.\nNode <2> is connected to nodes <0>, <5>, <3>, <4>.\nNode <5> is connected to nodes <1>, <3>, <4>, <2>.\nNode <1> is connected to nodes <5>, <3>, <4>.\nCalculate the number of common neighbors of node <2> and node <5>. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 72,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <1>, <0>, <3>.\nNode <4> is connected to node <2>.\nNode <1> is connected to node <2>.\nNode <0> is connected to node <2>.\nNode <3> is connected to node <2>.\nCalculate the number of common neighbors of node <1> and node <2>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 73,
        "question": "Given an undirected graph:\nNode <2> is connected to node <1>.\nNode <1> is connected to nodes <2>, <4>, <0>.\nNode <4> is connected to nodes <1>, <3>.\nNode <0> is connected to node <1>.\nNode <3> is connected to node <4>.\nCalculate the number of common neighbors of node <0> and node <4>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 74,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <2> is connected to node <4>.\nNode <3> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <2>, <5>, <3>, <0>.\nNode <5> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <1>, <3>.\nCalculate the number of common neighbors of node <4> and node <0>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 75,
        "question": "Given a directed graph:\nNode <1> is connected to node <3>.\nNode <3> is connected to nodes <2>, <1>, <4>, <0>.\nNode <4> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <1>, <0>, <3>.\nNode <0> is connected to nodes <2>, <4>.\nCalculate the number of common neighbors of node <3> and node <0>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 76,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <6>, <2>.\nNode <4> is connected to node <6>.\nNode <2> is connected to nodes <5>, <1>, <3>.\nNode <1> is connected to nodes <2>, <3>, <0>.\nNode <3> is connected to nodes <2>, <1>.\nNode <0> is connected to node <1>.\nCalculate the number of common neighbors of node <6> and node <2>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 77,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <5>, <2>, <0>, <3>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <1>, <5>, <0>.\nNode <1> is connected to nodes <5>, <2>, <3>, <4>.\nCalculate the number of common neighbors of node <3> and node <5>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 78,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <1>, <0>.\nNode <0> is connected to node <2>.\nNode <4> is connected to nodes <3>, <2>.\nCalculate the number of common neighbors of node <4> and node <2>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 79,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <1>, <3>.\nNode <4> is connected to nodes <1>, <3>, <0>.\nNode <3> is connected to nodes <2>, <4>, <5>.\nNode <5> is connected to node <3>.\nNode <0> is connected to node <4>.\nCalculate the number of common neighbors of node <5> and node <3>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 80,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <5>, <1>, <0>, <4>.\nNode <2> is connected to nodes <3>, <1>, <4>.\nNode <5> is connected to nodes <3>, <1>, <0>.\nNode <1> is connected to nodes <3>, <2>, <5>, <0>, <4>.\nNode <0> is connected to nodes <3>, <5>, <1>.\nNode <4> is connected to nodes <3>, <2>, <1>.\nCalculate the number of common neighbors of node <1> and node <3>. \nAnswer:\n",
        "answer": "4",
        "type": "common_neighbor"
    },
    {
        "index": 81,
        "question": "Given a directed graph:\nNode <6> is connected to node <0>.\nNode <0> is connected to node <2>.\nNode <2> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <5>, <6>, <2>.\nNode <3> is connected to nodes <4>, <5>, <1>.\nNode <5> is connected to nodes <1>, <2>, <3>.\nNode <1> is connected to nodes <0>, <6>, <2>, <3>, <4>.\nCalculate the number of common neighbors of node <1> and node <4>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 82,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <0>, <3>, <2>.\nNode <4> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <5>, <4>.\nNode <2> is connected to nodes <5>, <1>.\nNode <1> is connected to node <2>.\nCalculate the number of common neighbors of node <5> and node <1>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 83,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <3>, <2>, <4>.\nNode <0> is connected to nodes <1>, <3>, <4>.\nNode <3> is connected to nodes <1>, <0>, <4>, <5>.\nNode <2> is connected to nodes <1>, <4>, <5>.\nNode <4> is connected to nodes <1>, <0>, <3>, <2>, <5>.\nNode <5> is connected to nodes <3>, <2>, <4>.\nCalculate the number of common neighbors of node <0> and node <4>. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 84,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <0>, <4>.\nNode <3> is connected to node <1>.\nNode <0> is connected to nodes <1>, <5>, <2>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <0>.\nNode <2> is connected to node <0>.\nCalculate the number of common neighbors of node <4> and node <1>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 85,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <6>, <1>, <4>, <0>.\nNode <6> is connected to nodes <3>, <5>, <1>, <0>, <2>.\nNode <1> is connected to nodes <3>, <5>, <6>, <4>, <2>.\nNode <4> is connected to nodes <3>, <5>, <1>, <0>, <2>.\nNode <0> is connected to nodes <3>, <6>, <4>, <2>.\nNode <5> is connected to nodes <6>, <1>, <4>.\nNode <2> is connected to nodes <6>, <1>, <4>, <0>.\nCalculate the number of common neighbors of node <6> and node <2>. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 86,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <2>, <3>, <1>.\nNode <0> is connected to nodes <5>, <4>, <2>, <3>, <1>.\nNode <2> is connected to nodes <5>, <4>, <0>, <3>.\nNode <3> is connected to nodes <5>, <4>, <0>, <2>, <1>.\nNode <1> is connected to nodes <5>, <4>, <0>, <3>.\nNode <4> is connected to nodes <0>, <2>, <3>, <1>.\nCalculate the number of common neighbors of node <3> and node <0>. \nAnswer:\n",
        "answer": "4",
        "type": "common_neighbor"
    },
    {
        "index": 87,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <1>, <2>.\nNode <4> is connected to node <0>.\nNode <1> is connected to nodes <0>, <3>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <1>.\nCalculate the number of common neighbors of node <2> and node <1>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 88,
        "question": "Given an undirected graph:\nNode <0> is connected to node <5>.\nNode <5> is connected to nodes <0>, <6>, <2>, <3>.\nNode <6> is connected to node <5>.\nNode <2> is connected to nodes <5>, <1>, <3>.\nNode <3> is connected to nodes <5>, <2>.\nNode <1> is connected to nodes <2>, <4>.\nNode <4> is connected to node <1>.\nCalculate the number of common neighbors of node <2> and node <1>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 89,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <3>, <5>.\nNode <4> is connected to nodes <1>, <0>.\nNode <3> is connected to nodes <1>, <2>.\nNode <5> is connected to nodes <1>, <2>.\nNode <0> is connected to node <4>.\nNode <2> is connected to nodes <3>, <5>.\nCalculate the number of common neighbors of node <5> and node <4>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 90,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <0>, <3>, <2>.\nNode <3> is connected to nodes <4>, <2>, <0>.\nNode <0> is connected to nodes <2>, <1>.\nCalculate the number of common neighbors of node <3> and node <0>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 91,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <0>, <5>.\nNode <3> is connected to nodes <4>, <5>, <2>.\nNode <0> is connected to nodes <1>, <4>.\nNode <5> is connected to nodes <2>, <1>, <3>.\nNode <4> is connected to nodes <0>, <5>, <3>.\nNode <2> is connected to node <1>.\nCalculate the number of common neighbors of node <3> and node <4>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 92,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <6>.\nNode <0> is connected to nodes <2>, <6>, <5>, <4>.\nNode <6> is connected to nodes <5>, <4>, <0>.\nNode <2> is connected to nodes <5>, <1>.\nNode <5> is connected to nodes <4>, <0>, <1>, <2>, <3>.\nNode <1> is connected to nodes <6>, <5>, <4>, <0>.\nNode <3> is connected to nodes <6>, <0>, <2>.\nCalculate the number of common neighbors of node <6> and node <3>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 93,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <6>, <2>, <3>.\nNode <1> is connected to nodes <5>, <2>, <3>, <0>.\nNode <6> is connected to nodes <2>, <3>, <4>, <0>, <1>, <5>.\nNode <2> is connected to nodes <3>, <4>, <0>, <1>, <5>, <6>.\nNode <3> is connected to nodes <0>, <1>, <5>, <2>.\nNode <0> is connected to nodes <1>, <6>, <2>, <3>.\nNode <5> is connected to nodes <6>, <4>, <1>.\nCalculate the number of common neighbors of node <1> and node <5>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 94,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <1>.\nNode <2> is connected to node <5>.\nNode <1> is connected to nodes <5>, <6>, <3>.\nNode <0> is connected to nodes <4>, <6>.\nNode <4> is connected to nodes <0>, <3>.\nNode <6> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <4>, <1>.\nCalculate the number of common neighbors of node <1> and node <0>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 95,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <4>, <5>, <1>.\nNode <0> is connected to node <2>.\nNode <4> is connected to node <2>.\nNode <5> is connected to node <2>.\nNode <1> is connected to nodes <2>, <3>.\nNode <3> is connected to node <1>.\nCalculate the number of common neighbors of node <0> and node <1>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 96,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <4>, <0>, <3>.\nNode <4> is connected to node <5>.\nNode <0> is connected to nodes <2>, <4>.\nNode <3> is connected to nodes <0>, <1>.\nNode <2> is connected to nodes <5>, <4>, <1>.\nNode <1> is connected to nodes <2>, <0>.\nCalculate the number of common neighbors of node <0> and node <2>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 97,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <6>, <4>.\nNode <6> is connected to nodes <1>, <5>, <2>.\nNode <4> is connected to nodes <1>, <3>.\nNode <5> is connected to node <6>.\nNode <2> is connected to nodes <6>, <0>.\nNode <3> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <3>, <2>.\nCalculate the number of common neighbors of node <1> and node <2>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 98,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <2>, <3>.\nNode <4> is connected to node <2>.\nNode <2> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <1>, <5>.\nNode <5> is connected to nodes <3>, <2>.\nCalculate the number of common neighbors of node <1> and node <2>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 99,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <4>, <0>, <5>.\nNode <4> is connected to node <6>.\nNode <0> is connected to nodes <6>, <2>.\nNode <5> is connected to node <6>.\nNode <2> is connected to nodes <0>, <1>, <3>.\nNode <1> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <1>, <2>.\nCalculate the number of common neighbors of node <3> and node <2>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 100,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <0>, <4>, <5>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <2>, <6>.\nNode <5> is connected to node <2>.\nNode <6> is connected to node <4>.\nNode <1> is connected to node <3>.\nCalculate the number of common neighbors of node <3> and node <2>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 101,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <4>, <2>.\nNode <3> is connected to nodes <5>, <0>, <1>, <2>.\nNode <4> is connected to nodes <5>, <0>, <1>, <2>.\nNode <2> is connected to nodes <5>, <0>, <3>, <1>, <4>.\nNode <0> is connected to nodes <3>, <1>, <4>, <2>.\nNode <1> is connected to nodes <0>, <3>, <4>, <2>.\nCalculate the number of common neighbors of node <3> and node <2>. \nAnswer:\n",
        "answer": "3",
        "type": "common_neighbor"
    },
    {
        "index": 102,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <4>, <1>, <3>.\nNode <0> is connected to nodes <2>, <5>, <1>, <3>.\nNode <4> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <2>, <0>, <5>, <4>, <3>.\nNode <3> is connected to nodes <2>, <0>, <5>, <1>.\nNode <5> is connected to nodes <0>, <1>, <3>.\nCalculate the number of common neighbors of node <4> and node <0>. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 103,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <0>, <1>, <2>.\nNode <3> is connected to nodes <4>, <5>, <0>, <1>, <2>.\nNode <0> is connected to nodes <4>, <5>, <3>.\nNode <1> is connected to nodes <4>, <5>, <3>, <2>.\nNode <2> is connected to nodes <4>, <5>, <3>, <1>.\nNode <5> is connected to nodes <3>, <0>, <1>, <2>.\nCalculate the number of common neighbors of node <0> and node <1>. \nAnswer:\n",
        "answer": "3",
        "type": "common_neighbor"
    },
    {
        "index": 104,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <4>, <2>.\nNode <4> is connected to nodes <2>, <0>, <3>.\nNode <2> is connected to node <1>.\nNode <1> is connected to nodes <2>, <0>, <3>, <4>.\nCalculate the number of common neighbors of node <0> and node <4>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 105,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <3>, <1>.\nNode <4> is connected to nodes <2>, <0>.\nNode <3> is connected to nodes <2>, <0>.\nNode <1> is connected to node <2>.\nNode <0> is connected to nodes <4>, <3>.\nCalculate the number of common neighbors of node <3> and node <4>. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 106,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <6>, <1>.\nNode <3> is connected to nodes <0>, <1>, <5>.\nNode <6> is connected to node <0>.\nNode <1> is connected to nodes <0>, <3>.\nNode <5> is connected to nodes <3>, <4>, <2>.\nNode <4> is connected to node <5>.\nNode <2> is connected to node <5>.\nCalculate the number of common neighbors of node <1> and node <6>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 107,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <6>, <1>, <5>.\nNode <6> is connected to nodes <4>, <3>.\nNode <1> is connected to nodes <4>, <3>.\nNode <5> is connected to nodes <4>, <2>.\nNode <3> is connected to nodes <6>, <1>.\nNode <2> is connected to nodes <5>, <0>.\nNode <0> is connected to node <2>.\nCalculate the number of common neighbors of node <5> and node <2>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 108,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <1>.\nNode <5> is connected to node <2>.\nNode <1> is connected to nodes <2>, <3>, <4>, <0>.\nNode <3> is connected to nodes <6>, <1>.\nNode <6> is connected to node <3>.\nNode <4> is connected to node <1>.\nNode <0> is connected to node <1>.\nCalculate the number of common neighbors of node <1> and node <6>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 109,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <0>, <6>, <1>.\nNode <4> is connected to nodes <5>, <3>.\nNode <1> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <4>, <5>, <0>.\nNode <0> is connected to nodes <3>, <5>, <1>, <2>.\nNode <6> is connected to nodes <5>, <4>.\nCalculate the number of common neighbors of node <6> and node <1>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 110,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <2>, <1>.\nNode <4> is connected to nodes <0>, <2>, <1>, <3>, <5>.\nNode <2> is connected to nodes <0>, <4>, <3>, <5>.\nNode <1> is connected to nodes <0>, <4>, <3>.\nNode <3> is connected to nodes <4>, <2>, <1>, <5>.\nNode <5> is connected to nodes <4>, <2>, <3>.\nCalculate the number of common neighbors of node <2> and node <1>. \nAnswer:\n",
        "answer": "3",
        "type": "common_neighbor"
    },
    {
        "index": 111,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <1>, <4>.\nNode <2> is connected to nodes <1>, <0>.\nNode <4> is connected to nodes <3>, <5>.\nNode <5> is connected to nodes <4>, <6>, <0>.\nNode <6> is connected to node <5>.\nNode <0> is connected to nodes <5>, <2>.\nCalculate the number of common neighbors of node <6> and node <3>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 112,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <1>, <3>.\nNode <1> is connected to node <0>.\nNode <3> is connected to nodes <1>, <0>.\nNode <2> is connected to nodes <1>, <3>, <5>.\nNode <0> is connected to nodes <4>, <5>, <2>.\nNode <4> is connected to nodes <3>, <5>.\nCalculate the number of common neighbors of node <2> and node <3>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 113,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <3>, <4>, <2>.\nNode <3> is connected to nodes <6>, <1>, <0>.\nNode <4> is connected to node <6>.\nNode <2> is connected to node <6>.\nNode <1> is connected to nodes <3>, <5>.\nNode <0> is connected to node <3>.\nNode <5> is connected to node <1>.\nCalculate the number of common neighbors of node <6> and node <2>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 114,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <6>, <4>, <5>.\nNode <0> is connected to nodes <1>, <2>, <4>.\nNode <6> is connected to nodes <1>, <4>, <5>.\nNode <4> is connected to nodes <1>, <0>, <6>, <3>, <5>.\nNode <5> is connected to nodes <1>, <6>, <2>, <3>, <4>.\nNode <2> is connected to nodes <0>, <5>.\nNode <3> is connected to nodes <4>, <5>.\nCalculate the number of common neighbors of node <4> and node <5>. \nAnswer:\n",
        "answer": "3",
        "type": "common_neighbor"
    },
    {
        "index": 115,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <2>, <3>.\nNode <4> is connected to nodes <2>, <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <3>, <4>.\nCalculate the number of common neighbors of node <1> and node <2>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 116,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <3>, <1>.\nNode <4> is connected to nodes <0>, <2>, <3>.\nNode <3> is connected to nodes <0>, <4>.\nNode <1> is connected to node <0>.\nNode <2> is connected to nodes <4>, <5>.\nNode <5> is connected to node <2>.\nCalculate the number of common neighbors of node <0> and node <3>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 117,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <5>, <6>.\nNode <4> is connected to nodes <5>, <0>, <2>.\nNode <5> is connected to nodes <6>, <2>, <3>.\nNode <6> is connected to nodes <3>, <5>.\nNode <0> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <5>, <6>, <0>, <2>.\nNode <3> is connected to nodes <0>, <4>.\nCalculate the number of common neighbors of node <5> and node <0>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 118,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <0>, <2>.\nNode <5> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <4>, <1>, <5>.\nNode <1> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <1>, <6>.\nNode <6> is connected to node <3>.\nCalculate the number of common neighbors of node <4> and node <3>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 119,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <4>, <0>, <3>.\nNode <2> is connected to node <1>.\nNode <4> is connected to nodes <1>, <5>.\nNode <0> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <5> is connected to node <4>.\nCalculate the number of common neighbors of node <2> and node <0>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 120,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <4>, <0>, <1>.\nNode <3> is connected to node <4>.\nNode <0> is connected to node <2>.\nNode <1> is connected to node <2>.\nCalculate the number of common neighbors of node <3> and node <2>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 121,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <4>, <1>.\nNode <3> is connected to nodes <1>, <0>, <2>.\nNode <0> is connected to nodes <2>, <4>, <3>, <1>.\nNode <4> is connected to node <3>.\nCalculate the number of common neighbors of node <0> and node <3>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 122,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <6>, <3>, <4>, <2>.\nNode <6> is connected to nodes <0>, <1>, <3>, <4>, <5>.\nNode <3> is connected to nodes <0>, <1>, <6>, <4>, <5>.\nNode <4> is connected to nodes <0>, <1>, <6>, <3>, <2>.\nNode <2> is connected to nodes <0>, <1>, <4>, <5>.\nNode <1> is connected to nodes <6>, <3>, <4>, <2>.\nNode <5> is connected to nodes <6>, <3>, <2>.\nCalculate the number of common neighbors of node <5> and node <1>. \nAnswer:\n",
        "answer": "3",
        "type": "common_neighbor"
    },
    {
        "index": 123,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>, <4>.\nNode <1> is connected to nodes <0>, <3>.\nNode <2> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <3> is connected to node <1>.\nCalculate the number of common neighbors of node <2> and node <3>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 124,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <5>, <0>.\nNode <5> is connected to node <6>.\nNode <0> is connected to nodes <5>, <2>.\nNode <6> is connected to node <4>.\nNode <4> is connected to nodes <6>, <3>, <0>, <1>.\nNode <3> is connected to nodes <1>, <6>.\nCalculate the number of common neighbors of node <1> and node <4>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 125,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <2>, <3>.\nNode <5> is connected to nodes <0>, <4>, <3>.\nNode <2> is connected to nodes <0>, <1>, <4>.\nNode <3> is connected to nodes <0>, <1>, <5>, <4>.\nNode <1> is connected to nodes <2>, <3>.\nNode <4> is connected to nodes <5>, <2>, <3>.\nCalculate the number of common neighbors of node <4> and node <5>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 126,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <4>, <0>, <2>, <1>.\nNode <3> is connected to nodes <5>, <1>.\nNode <4> is connected to nodes <5>, <0>, <1>.\nNode <0> is connected to nodes <5>, <4>, <2>, <1>.\nNode <2> is connected to nodes <5>, <0>, <1>.\nNode <1> is connected to nodes <5>, <3>, <4>, <0>, <2>.\nCalculate the number of common neighbors of node <3> and node <1>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 127,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <3>, <1>, <2>, <4>.\nNode <5> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <4> is connected to node <0>.\nCalculate the number of common neighbors of node <1> and node <5>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 128,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <4>, <6>.\nNode <5> is connected to nodes <4>, <6>.\nNode <6> is connected to nodes <3>, <5>, <0>.\nNode <0> is connected to nodes <6>, <1>.\nNode <1> is connected to nodes <0>, <2>.\nNode <2> is connected to node <1>.\nCalculate the number of common neighbors of node <2> and node <0>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 129,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <2>, <1>, <0>.\nNode <4> is connected to node <3>.\nNode <2> is connected to node <3>.\nNode <1> is connected to node <3>.\nNode <0> is connected to node <3>.\nCalculate the number of common neighbors of node <0> and node <4>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 130,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2>, <1>, <3>, <6>.\nNode <2> is connected to nodes <1>, <0>, <6>, <4>, <5>.\nNode <1> is connected to nodes <0>, <5>, <2>.\nNode <3> is connected to nodes <6>, <5>.\nNode <6> is connected to nodes <5>, <2>, <1>, <0>.\nNode <0> is connected to nodes <2>, <1>.\nNode <4> is connected to nodes <5>, <2>, <3>.\nCalculate the number of common neighbors of node <3> and node <2>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 131,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <2>, <0>.\nNode <1> is connected to node <4>.\nNode <2> is connected to node <4>.\nNode <0> is connected to nodes <4>, <3>.\nNode <3> is connected to node <0>.\nCalculate the number of common neighbors of node <2> and node <0>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 132,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <6>, <3>, <4>.\nNode <6> is connected to node <1>.\nNode <3> is connected to nodes <5>, <0>, <6>.\nNode <4> is connected to nodes <2>, <3>, <5>, <0>.\nNode <5> is connected to nodes <0>, <4>, <2>, <1>.\nNode <0> is connected to nodes <4>, <2>, <1>, <6>, <3>, <5>.\nNode <2> is connected to nodes <3>, <0>.\nCalculate the number of common neighbors of node <2> and node <5>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 133,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <4>, <0>, <5>, <1>, <3>.\nNode <4> is connected to nodes <6>, <0>.\nNode <0> is connected to nodes <6>, <4>, <3>, <5>, <1>, <2>.\nNode <5> is connected to nodes <6>, <0>.\nNode <1> is connected to nodes <6>, <0>.\nNode <3> is connected to nodes <6>, <0>.\nNode <2> is connected to node <0>.\nCalculate the number of common neighbors of node <2> and node <6>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 134,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <2>, <0>, <3>, <1>.\nNode <4> is connected to node <5>.\nNode <2> is connected to node <5>.\nNode <0> is connected to node <5>.\nNode <3> is connected to node <5>.\nNode <1> is connected to node <5>.\nCalculate the number of common neighbors of node <3> and node <1>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 135,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <2>, <4>, <0>, <1>.\nNode <5> is connected to node <3>.\nNode <2> is connected to node <3>.\nNode <4> is connected to node <3>.\nNode <0> is connected to node <3>.\nNode <1> is connected to node <3>.\nCalculate the number of common neighbors of node <5> and node <3>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 136,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <5>, <3>.\nNode <0> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <1>, <0>, <4>, <5>.\nNode <4> is connected to node <5>.\nNode <2> is connected to nodes <1>, <5>, <3>.\nCalculate the number of common neighbors of node <3> and node <4>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 137,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <4>, <5>, <2>.\nNode <0> is connected to node <4>.\nNode <5> is connected to nodes <1>, <3>.\nNode <2> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <5>, <2>.\nCalculate the number of common neighbors of node <0> and node <3>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 138,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <0>, <1>, <4>, <2>.\nNode <5> is connected to nodes <3>, <0>, <4>, <2>.\nNode <0> is connected to nodes <3>, <5>, <1>, <4>.\nNode <1> is connected to nodes <3>, <0>, <4>, <2>.\nNode <4> is connected to nodes <3>, <5>, <0>, <1>.\nNode <2> is connected to nodes <3>, <5>, <1>.\nCalculate the number of common neighbors of node <1> and node <0>. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 139,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <2>, <4>.\nNode <5> is connected to nodes <1>, <2>, <3>, <0>.\nNode <2> is connected to nodes <1>, <5>, <3>, <4>, <0>.\nNode <4> is connected to nodes <1>, <2>.\nNode <3> is connected to nodes <5>, <2>, <0>.\nNode <0> is connected to nodes <5>, <2>, <3>.\nCalculate the number of common neighbors of node <2> and node <4>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 140,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <0>, <3>, <5>.\nNode <3> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <5>, <4>.\nNode <4> is connected to node <2>.\nCalculate the number of common neighbors of node <0> and node <1>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 141,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <1>, <4>, <3>.\nNode <2> is connected to nodes <1>, <4>, <5>.\nNode <4> is connected to nodes <0>, <2>.\nNode <3> is connected to node <0>.\nNode <5> is connected to node <2>.\nCalculate the number of common neighbors of node <4> and node <3>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 142,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <5>, <0>.\nNode <5> is connected to nodes <6>, <4>.\nNode <0> is connected to nodes <6>, <3>.\nNode <4> is connected to nodes <5>, <1>, <2>.\nNode <1> is connected to node <4>.\nNode <2> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <2>, <0>.\nCalculate the number of common neighbors of node <4> and node <2>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 143,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <4>, <3>, <1>.\nNode <0> is connected to node <2>.\nNode <4> is connected to node <2>.\nNode <3> is connected to node <2>.\nNode <1> is connected to node <2>.\nCalculate the number of common neighbors of node <3> and node <0>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 144,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <1>.\nNode <0> is connected to node <4>.\nNode <1> is connected to nodes <4>, <5>.\nNode <5> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <5>, <3>.\nNode <3> is connected to node <2>.\nCalculate the number of common neighbors of node <5> and node <1>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 145,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <0>, <3>, <1>, <4>, <2>.\nNode <4> is connected to nodes <0>, <3>, <5>, <2>.\nNode <3> is connected to nodes <1>, <5>, <4>.\nNode <1> is connected to nodes <3>, <5>, <2>.\nNode <2> is connected to nodes <1>, <5>, <4>.\nCalculate the number of common neighbors of node <1> and node <3>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 146,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <0>, <3>, <1>.\nNode <4> is connected to nodes <2>, <0>, <3>.\nNode <0> is connected to nodes <1>, <4>, <2>.\nCalculate the number of common neighbors of node <4> and node <2>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 147,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <2>, <5>, <0>, <4>, <6>.\nNode <3> is connected to nodes <1>, <2>, <5>, <0>, <4>, <6>.\nNode <2> is connected to nodes <1>, <3>, <5>.\nNode <5> is connected to nodes <1>, <3>, <2>, <0>, <6>.\nNode <0> is connected to nodes <1>, <3>, <5>.\nNode <4> is connected to nodes <1>, <3>.\nNode <6> is connected to nodes <1>, <3>, <5>.\nCalculate the number of common neighbors of node <0> and node <2>. \nAnswer:\n",
        "answer": "3",
        "type": "common_neighbor"
    },
    {
        "index": 148,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <0>.\nNode <3> is connected to node <4>.\nNode <0> is connected to nodes <4>, <1>, <2>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <0>.\nCalculate the number of common neighbors of node <1> and node <2>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 149,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <3>, <5>, <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <5>, <0>, <1>.\nNode <5> is connected to node <4>.\nCalculate the number of common neighbors of node <3> and node <0>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 150,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <1>, <3>, <2>, <0>.\nNode <5> is connected to nodes <4>, <1>, <0>.\nNode <1> is connected to nodes <4>, <5>, <3>, <2>, <0>.\nNode <3> is connected to nodes <4>, <1>, <2>, <0>.\nNode <2> is connected to nodes <4>, <1>, <3>.\nNode <0> is connected to nodes <4>, <5>, <1>, <3>.\nCalculate the number of common neighbors of node <5> and node <2>. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 151,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <6>, <0>, <3>.\nNode <2> is connected to nodes <4>, <5>.\nNode <6> is connected to nodes <4>, <5>, <0>.\nNode <0> is connected to nodes <4>, <6>, <1>, <3>.\nNode <3> is connected to nodes <4>, <0>.\nNode <5> is connected to nodes <2>, <6>, <1>.\nNode <1> is connected to nodes <5>, <0>.\nCalculate the number of common neighbors of node <3> and node <4>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 152,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <2>, <4>, <6>.\nNode <0> is connected to nodes <3>, <1>.\nNode <2> is connected to nodes <3>, <6>, <5>.\nNode <4> is connected to nodes <3>, <6>.\nNode <6> is connected to nodes <3>, <2>, <5>, <4>.\nNode <1> is connected to nodes <0>, <5>.\nNode <5> is connected to nodes <2>, <6>, <1>.\nCalculate the number of common neighbors of node <0> and node <2>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 153,
        "question": "Given an undirected graph:\nNode <5> is connected to node <0>.\nNode <0> is connected to nodes <5>, <4>, <2>, <3>.\nNode <4> is connected to node <0>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <0>, <6>, <1>.\nNode <6> is connected to node <3>.\nNode <1> is connected to nodes <3>, <2>.\nCalculate the number of common neighbors of node <2> and node <3>. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 154,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>, <3>.\nNode <1> is connected to nodes <0>, <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <1>.\nCalculate the number of common neighbors of node <1> and node <3>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 155,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <1>, <0>.\nNode <2> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <3>, <4>, <2>.\nNode <0> is connected to nodes <2>, <1>.\nNode <3> is connected to nodes <4>, <2>, <1>.\nCalculate the number of common neighbors of node <0> and node <3>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 156,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <5>, <6>, <1>.\nNode <2> is connected to nodes <3>, <0>, <6>.\nNode <5> is connected to nodes <3>, <6>.\nNode <6> is connected to nodes <3>, <2>, <5>, <4>, <0>.\nNode <1> is connected to nodes <3>, <4>.\nNode <0> is connected to nodes <2>, <6>.\nNode <4> is connected to nodes <1>, <6>.\nCalculate the number of common neighbors of node <6> and node <1>. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 157,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <0>, <1>.\nNode <2> is connected to nodes <0>, <5>.\nNode <1> is connected to nodes <3>, <6>, <4>.\nNode <6> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <6>, <1>.\nNode <5> is connected to node <2>.\nCalculate the number of common neighbors of node <5> and node <4>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 158,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <6>, <5>, <3>, <4>.\nNode <6> is connected to nodes <2>, <3>, <1>.\nNode <5> is connected to nodes <2>, <0>, <3>.\nNode <3> is connected to nodes <2>, <6>, <5>.\nNode <4> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <6>, <4>, <0>.\nNode <0> is connected to nodes <5>, <1>.\nCalculate the number of common neighbors of node <6> and node <5>. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 159,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <0>, <4>, <3>.\nNode <5> is connected to node <1>.\nNode <0> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <3> is connected to nodes <1>, <2>.\nNode <2> is connected to node <3>.\nCalculate the number of common neighbors of node <1> and node <2>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 160,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <2>, <4>.\nNode <3> is connected to nodes <5>, <1>.\nNode <2> is connected to node <5>.\nNode <4> is connected to nodes <5>, <0>.\nNode <1> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <1>, <4>.\nCalculate the number of common neighbors of node <4> and node <0>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 161,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <0>, <1>.\nNode <4> is connected to nodes <3>, <6>.\nNode <0> is connected to node <3>.\nNode <1> is connected to nodes <3>, <2>.\nNode <6> is connected to node <4>.\nNode <2> is connected to nodes <5>, <1>.\nNode <5> is connected to node <2>.\nCalculate the number of common neighbors of node <1> and node <0>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 162,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <0>, <2>, <3>, <1>.\nNode <5> is connected to node <4>.\nNode <0> is connected to node <4>.\nNode <2> is connected to node <4>.\nNode <3> is connected to node <4>.\nNode <1> is connected to node <4>.\nCalculate the number of common neighbors of node <5> and node <2>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 163,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>, <3>, <4>.\nNode <1> is connected to nodes <0>, <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nCalculate the number of common neighbors of node <1> and node <2>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 164,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <4>, <5>, <1>.\nNode <2> is connected to nodes <4>, <3>.\nNode <5> is connected to node <0>.\nNode <1> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <1>, <2>.\nCalculate the number of common neighbors of node <3> and node <2>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 165,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <3>, <2>, <1>.\nNode <5> is connected to nodes <4>, <3>, <0>, <2>, <1>.\nNode <3> is connected to nodes <4>, <5>, <0>, <2>, <1>.\nNode <2> is connected to nodes <4>, <5>, <3>, <0>, <1>.\nNode <1> is connected to nodes <4>, <5>, <3>, <2>.\nNode <0> is connected to nodes <5>, <3>, <2>.\nCalculate the number of common neighbors of node <5> and node <3>. \nAnswer:\n",
        "answer": "4",
        "type": "common_neighbor"
    },
    {
        "index": 166,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <6>, <3>, <0>.\nNode <6> is connected to nodes <5>, <1>.\nNode <3> is connected to nodes <5>, <4>, <2>.\nNode <0> is connected to nodes <5>, <4>.\nNode <1> is connected to node <6>.\nNode <4> is connected to nodes <0>, <3>.\nNode <2> is connected to node <3>.\nCalculate the number of common neighbors of node <2> and node <5>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 167,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <4>, <1>.\nNode <5> is connected to nodes <3>, <2>, <0>.\nNode <4> is connected to nodes <3>, <0>.\nNode <1> is connected to node <3>.\nNode <2> is connected to node <5>.\nNode <0> is connected to nodes <5>, <4>.\nCalculate the number of common neighbors of node <1> and node <5>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 168,
        "question": "Given a directed graph:\nNode <5> is connected to node <2>.\nNode <2> is connected to node <5>.\nNode <0> is connected to nodes <3>, <5>, <2>.\nNode <3> is connected to nodes <6>, <5>, <4>.\nNode <6> is connected to nodes <2>, <0>.\nNode <1> is connected to nodes <6>, <5>.\nCalculate the number of common neighbors of node <6> and node <2>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 169,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <3>, <0>, <1>.\nNode <5> is connected to nodes <3>, <2>.\nNode <0> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <4>, <0>.\nNode <2> is connected to node <5>.\nCalculate the number of common neighbors of node <2> and node <3>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 170,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <6>, <4>.\nNode <6> is connected to nodes <1>, <0>.\nNode <4> is connected to node <1>.\nNode <0> is connected to nodes <6>, <2>, <3>.\nNode <2> is connected to nodes <0>, <5>.\nNode <3> is connected to node <0>.\nNode <5> is connected to node <2>.\nCalculate the number of common neighbors of node <1> and node <0>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 171,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <5>, <0>, <3>, <1>.\nNode <2> is connected to nodes <5>, <0>, <4>.\nNode <1> is connected to nodes <5>, <0>.\nCalculate the number of common neighbors of node <3> and node <2>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 172,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <1>, <3>, <2>, <5>.\nNode <4> is connected to nodes <0>, <3>, <5>.\nNode <1> is connected to nodes <0>, <3>, <5>.\nNode <3> is connected to nodes <0>, <4>, <1>, <2>.\nNode <2> is connected to nodes <0>, <3>, <5>.\nNode <5> is connected to nodes <0>, <4>, <1>, <2>.\nCalculate the number of common neighbors of node <3> and node <0>. \nAnswer:\n",
        "answer": "3",
        "type": "common_neighbor"
    },
    {
        "index": 173,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <5>, <4>.\nNode <3> is connected to nodes <2>, <1>, <5>, <0>.\nNode <5> is connected to nodes <2>, <3>, <1>, <4>, <0>.\nNode <4> is connected to nodes <2>, <1>, <5>, <0>.\nNode <1> is connected to nodes <3>, <5>, <4>, <0>.\nNode <0> is connected to nodes <3>, <1>, <5>, <4>.\nCalculate the number of common neighbors of node <5> and node <2>. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 174,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <3>, <2>, <0>.\nNode <1> is connected to node <4>.\nNode <3> is connected to node <4>.\nNode <2> is connected to node <4>.\nNode <0> is connected to node <4>.\nCalculate the number of common neighbors of node <2> and node <4>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 175,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <4>, <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <1>, <5>, <2>.\nNode <0> is connected to node <1>.\nNode <5> is connected to node <4>.\nNode <2> is connected to node <4>.\nCalculate the number of common neighbors of node <1> and node <2>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 176,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <5>, <0>, <6>.\nNode <2> is connected to node <4>.\nNode <5> is connected to node <4>.\nNode <0> is connected to node <4>.\nNode <6> is connected to nodes <4>, <3>, <1>.\nNode <3> is connected to node <6>.\nNode <1> is connected to node <6>.\nCalculate the number of common neighbors of node <5> and node <0>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 177,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <1>, <4>, <5>, <6>.\nNode <3> is connected to node <0>.\nNode <1> is connected to node <0>.\nNode <4> is connected to nodes <0>, <2>.\nNode <5> is connected to node <0>.\nNode <6> is connected to node <0>.\nNode <2> is connected to node <4>.\nCalculate the number of common neighbors of node <3> and node <4>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 178,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <3>, <2>.\nNode <5> is connected to nodes <0>, <3>, <2>, <1>.\nNode <3> is connected to nodes <0>, <5>, <4>, <2>.\nNode <2> is connected to nodes <0>, <5>, <3>, <1>.\nNode <1> is connected to nodes <5>, <4>, <2>.\nNode <4> is connected to nodes <3>, <1>.\nCalculate the number of common neighbors of node <1> and node <3>. \nAnswer:\n",
        "answer": "3",
        "type": "common_neighbor"
    },
    {
        "index": 179,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <4>, <2>.\nNode <4> is connected to node <1>.\nNode <0> is connected to nodes <3>, <1>.\nCalculate the number of common neighbors of node <3> and node <0>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 180,
        "question": "Given an undirected graph:\nNode <0> is connected to node <1>.\nNode <1> is connected to nodes <0>, <4>, <5>.\nNode <4> is connected to nodes <1>, <6>.\nNode <5> is connected to nodes <1>, <6>.\nNode <6> is connected to nodes <4>, <3>, <5>.\nNode <2> is connected to node <3>.\nNode <3> is connected to nodes <2>, <6>.\nCalculate the number of common neighbors of node <5> and node <4>. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 181,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <2>, <5>.\nNode <0> is connected to nodes <4>, <3>, <1>.\nNode <2> is connected to node <4>.\nNode <5> is connected to node <4>.\nNode <3> is connected to node <0>.\nNode <1> is connected to node <0>.\nCalculate the number of common neighbors of node <5> and node <3>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 182,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <4>, <5>.\nNode <0> is connected to nodes <4>, <5>, <2>.\nNode <5> is connected to nodes <1>, <0>, <3>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <5>.\nCalculate the number of common neighbors of node <2> and node <5>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 183,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <5>, <3>, <4>.\nNode <5> is connected to nodes <3>, <6>, <1>.\nNode <3> is connected to nodes <1>, <5>, <2>.\nNode <4> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <0>, <5>, <2>, <6>.\nNode <0> is connected to nodes <5>, <2>, <1>.\nNode <2> is connected to nodes <3>, <4>, <0>, <5>.\nCalculate the number of common neighbors of node <1> and node <0>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 184,
        "question": "Given a directed graph:\nNode <1> is connected to node <4>.\nNode <4> is connected to nodes <0>, <1>.\nNode <0> is connected to node <4>.\nNode <2> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <4>, <2>, <0>.\nCalculate the number of common neighbors of node <0> and node <1>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 185,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <3>.\nNode <2> is connected to node <4>.\nNode <3> is connected to nodes <4>, <0>, <1>.\nNode <0> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <0>, <3>.\nCalculate the number of common neighbors of node <0> and node <3>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 186,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <3>, <1>.\nNode <0> is connected to node <2>.\nNode <3> is connected to node <2>.\nNode <1> is connected to nodes <2>, <4>.\nNode <4> is connected to node <1>.\nCalculate the number of common neighbors of node <4> and node <1>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 187,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <6>, <0>.\nNode <6> is connected to node <4>.\nNode <0> is connected to nodes <4>, <2>, <5>.\nNode <2> is connected to node <0>.\nNode <5> is connected to nodes <0>, <3>, <1>.\nNode <3> is connected to node <5>.\nNode <1> is connected to node <5>.\nCalculate the number of common neighbors of node <0> and node <1>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 188,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <2>, <3>.\nNode <4> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <1> is connected to node <3>.\nCalculate the number of common neighbors of node <0> and node <1>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 189,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <2>, <5>, <4>, <1>.\nNode <3> is connected to node <0>.\nNode <2> is connected to nodes <0>, <6>.\nNode <5> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <1> is connected to node <0>.\nNode <6> is connected to node <2>.\nCalculate the number of common neighbors of node <3> and node <5>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 190,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <1>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <0>, <4>, <3>.\nNode <4> is connected to node <1>.\nCalculate the number of common neighbors of node <4> and node <1>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 191,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <1>, <2>, <3>.\nNode <0> is connected to node <5>.\nNode <1> is connected to nodes <5>, <4>.\nNode <2> is connected to node <5>.\nNode <3> is connected to node <5>.\nNode <4> is connected to node <1>.\nCalculate the number of common neighbors of node <3> and node <1>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 192,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <0>, <3>, <5>, <4>.\nNode <0> is connected to nodes <6>, <3>, <5>, <4>.\nNode <3> is connected to nodes <6>, <0>, <2>, <5>, <4>, <1>.\nNode <5> is connected to nodes <6>, <0>, <3>, <2>, <4>, <1>.\nNode <4> is connected to nodes <6>, <0>, <3>, <2>, <5>, <1>.\nNode <2> is connected to nodes <3>, <5>, <4>, <1>.\nNode <1> is connected to nodes <3>, <2>, <5>, <4>.\nCalculate the number of common neighbors of node <2> and node <3>. \nAnswer:\n",
        "answer": "3",
        "type": "common_neighbor"
    },
    {
        "index": 193,
        "question": "Given an undirected graph:\nNode <1> is connected to node <2>.\nNode <2> is connected to nodes <1>, <4>, <0>.\nNode <4> is connected to node <2>.\nNode <0> is connected to nodes <2>, <3>.\nNode <3> is connected to node <0>.\nCalculate the number of common neighbors of node <2> and node <0>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 194,
        "question": "Given a directed graph:\nNode <4> is connected to node <2>.\nNode <2> is connected to nodes <4>, <1>, <0>.\nNode <3> is connected to nodes <1>, <0>, <4>.\nNode <1> is connected to nodes <0>, <4>, <3>.\nNode <0> is connected to nodes <2>, <4>, <3>.\nCalculate the number of common neighbors of node <0> and node <1>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 195,
        "question": "Given a directed graph:\nNode <4> is connected to node <3>.\nNode <3> is connected to nodes <4>, <2>.\nNode <1> is connected to nodes <0>, <2>, <5>.\nNode <0> is connected to nodes <3>, <4>, <1>.\nNode <2> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <0>, <2>.\nCalculate the number of common neighbors of node <3> and node <2>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 196,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <2>.\nNode <1> is connected to node <3>.\nNode <0> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <2>, <3>, <0>.\nCalculate the number of common neighbors of node <1> and node <4>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 197,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <4>, <1>, <3>, <2>.\nNode <0> is connected to nodes <5>, <4>, <1>, <3>, <2>.\nNode <4> is connected to nodes <5>, <0>, <3>.\nNode <1> is connected to nodes <5>, <0>, <3>, <2>.\nNode <3> is connected to nodes <5>, <0>, <4>, <1>, <2>.\nNode <2> is connected to nodes <5>, <0>, <1>, <3>.\nCalculate the number of common neighbors of node <0> and node <2>. \nAnswer:\n",
        "answer": "3",
        "type": "common_neighbor"
    },
    {
        "index": 198,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <0>, <5>, <1>.\nNode <0> is connected to node <5>.\nNode <5> is connected to nodes <2>, <0>, <3>.\nNode <1> is connected to nodes <2>, <4>, <0>, <3>.\nNode <2> is connected to nodes <4>, <0>, <1>.\nNode <4> is connected to nodes <0>, <3>, <5>, <1>, <2>.\nNode <3> is connected to nodes <2>, <4>, <0>.\nCalculate the number of common neighbors of node <2> and node <1>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 199,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <0>, <3>, <4>, <5>, <2>.\nNode <0> is connected to node <6>.\nNode <3> is connected to node <6>.\nNode <4> is connected to node <6>.\nNode <5> is connected to nodes <6>, <1>.\nNode <2> is connected to nodes <6>, <1>.\nNode <1> is connected to nodes <2>, <5>.\nCalculate the number of common neighbors of node <6> and node <4>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 200,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <6>, <1>, <0>.\nNode <0> is connected to nodes <6>, <4>, <3>, <5>.\nNode <1> is connected to node <4>.\nNode <3> is connected to node <0>.\nNode <5> is connected to nodes <0>, <2>.\nNode <2> is connected to node <5>.\nCalculate the number of common neighbors of node <5> and node <4>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 201,
        "question": "Given a directed graph:\nNode <0> is connected to node <2>.\nNode <2> is connected to nodes <1>, <4>, <0>.\nNode <1> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <1>, <0>, <2>.\nCalculate the number of common neighbors of node <4> and node <3>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 202,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <3>.\nNode <0> is connected to node <4>.\nNode <3> is connected to nodes <1>, <0>.\nNode <4> is connected to node <2>.\nNode <2> is connected to nodes <3>, <4>.\nCalculate the number of common neighbors of node <2> and node <0>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 203,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <4>, <5>.\nNode <1> is connected to nodes <4>, <0>, <2>.\nNode <5> is connected to node <3>.\nNode <0> is connected to node <1>.\nNode <2> is connected to node <1>.\nCalculate the number of common neighbors of node <3> and node <4>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 204,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <5>, <0>, <2>, <1>.\nNode <3> is connected to nodes <4>, <2>, <1>.\nNode <5> is connected to node <4>.\nNode <0> is connected to nodes <4>, <1>.\nNode <2> is connected to nodes <4>, <3>, <1>.\nNode <1> is connected to nodes <4>, <3>, <0>, <2>.\nCalculate the number of common neighbors of node <3> and node <2>. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 205,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <3>, <1>.\nNode <4> is connected to nodes <2>, <1>, <0>.\nNode <3> is connected to nodes <2>, <0>, <4>.\nNode <1> is connected to node <2>.\nNode <2> is connected to node <0>.\nCalculate the number of common neighbors of node <0> and node <4>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 206,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <3>, <2>.\nNode <3> is connected to node <5>.\nNode <1> is connected to nodes <0>, <5>, <2>.\nNode <5> is connected to nodes <2>, <1>.\nNode <4> is connected to node <0>.\nCalculate the number of common neighbors of node <5> and node <1>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 207,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <6>.\nNode <5> is connected to nodes <2>, <1>, <0>.\nNode <6> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <5>, <4>.\nNode <0> is connected to node <5>.\nNode <4> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <6>, <4>.\nCalculate the number of common neighbors of node <5> and node <4>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 208,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <2>, <6>.\nNode <3> is connected to nodes <4>, <5>, <1>, <0>.\nNode <2> is connected to nodes <4>, <1>.\nNode <6> is connected to nodes <4>, <1>.\nNode <5> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <3>, <5>, <6>, <0>, <2>.\nNode <0> is connected to nodes <3>, <1>.\nCalculate the number of common neighbors of node <3> and node <6>. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 209,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <2>, <3>, <0>.\nNode <0> is connected to nodes <1>, <4>.\nNode <4> is connected to node <0>.\nCalculate the number of common neighbors of node <2> and node <1>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 210,
        "question": "Given a directed graph:\nNode <3> is connected to node <0>.\nNode <0> is connected to nodes <4>, <1>, <2>.\nNode <4> is connected to nodes <1>, <3>, <0>.\nNode <1> is connected to nodes <3>, <2>.\nCalculate the number of common neighbors of node <3> and node <4>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 211,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <1>, <2>.\nNode <5> is connected to node <0>.\nNode <1> is connected to nodes <0>, <3>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <1>, <4>.\nNode <4> is connected to node <3>.\nCalculate the number of common neighbors of node <0> and node <2>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 212,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <1>, <2>, <5>, <4>.\nNode <2> is connected to nodes <1>, <0>, <4>.\nNode <5> is connected to nodes <0>, <3>, <4>.\nNode <4> is connected to nodes <0>, <2>, <3>, <5>.\nNode <3> is connected to nodes <5>, <4>.\nCalculate the number of common neighbors of node <1> and node <0>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 213,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <6>, <4>, <2>.\nNode <0> is connected to nodes <5>, <1>.\nNode <6> is connected to nodes <5>, <3>.\nNode <4> is connected to node <5>.\nNode <2> is connected to nodes <5>, <1>.\nNode <1> is connected to nodes <0>, <2>.\nNode <3> is connected to node <6>.\nCalculate the number of common neighbors of node <6> and node <3>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 214,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <4>, <1>.\nNode <0> is connected to nodes <2>, <3>.\nNode <4> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <2>, <4>.\nNode <3> is connected to node <0>.\nCalculate the number of common neighbors of node <0> and node <4>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 215,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <6>, <0>, <3>, <1>.\nNode <5> is connected to nodes <4>, <1>.\nNode <6> is connected to nodes <4>, <1>.\nNode <0> is connected to nodes <4>, <1>.\nNode <3> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <4>, <5>, <6>, <3>, <2>, <0>.\nNode <2> is connected to node <1>.\nCalculate the number of common neighbors of node <6> and node <2>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 216,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <6>, <1>, <3>, <5>.\nNode <6> is connected to nodes <3>, <5>, <2>.\nNode <1> is connected to nodes <5>, <4>, <2>, <6>, <0>.\nNode <3> is connected to nodes <5>, <4>, <2>, <6>.\nNode <5> is connected to nodes <4>, <1>, <3>.\nNode <2> is connected to nodes <0>, <1>, <4>.\nNode <0> is connected to nodes <1>, <2>, <6>.\nCalculate the number of common neighbors of node <5> and node <6>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 217,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <0>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <4> is connected to node <3>.\nNode <1> is connected to node <2>.\nCalculate the number of common neighbors of node <0> and node <1>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 218,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <2>, <3>, <0>, <5>.\nNode <1> is connected to nodes <4>, <2>, <5>.\nNode <2> is connected to nodes <4>, <1>, <3>, <0>, <5>.\nNode <3> is connected to nodes <4>, <2>, <0>, <5>.\nNode <0> is connected to nodes <4>, <2>, <3>, <5>.\nNode <5> is connected to nodes <4>, <1>, <2>, <3>, <0>.\nCalculate the number of common neighbors of node <1> and node <3>. \nAnswer:\n",
        "answer": "3",
        "type": "common_neighbor"
    },
    {
        "index": 219,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <2>, <4>, <5>, <3>, <6>.\nNode <4> is connected to nodes <5>, <0>, <6>, <1>, <2>.\nNode <6> is connected to nodes <1>, <4>, <0>, <3>.\nNode <0> is connected to nodes <2>, <4>, <5>.\nNode <2> is connected to node <5>.\nNode <5> is connected to nodes <0>, <3>, <6>, <4>.\nCalculate the number of common neighbors of node <1> and node <0>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "3",
        "type": "common_neighbor"
    },
    {
        "index": 220,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <4>, <5>, <1>.\nNode <2> is connected to nodes <3>, <0>.\nNode <4> is connected to node <3>.\nNode <5> is connected to node <3>.\nNode <1> is connected to node <3>.\nNode <0> is connected to node <2>.\nCalculate the number of common neighbors of node <2> and node <4>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 221,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <2>, <4>, <5>, <3>.\nNode <5> is connected to nodes <2>, <1>.\nNode <4> is connected to node <1>.\nNode <3> is connected to nodes <1>, <0>.\nNode <0> is connected to node <3>.\nCalculate the number of common neighbors of node <0> and node <5>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 222,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5>, <4>.\nNode <5> is connected to node <1>.\nNode <4> is connected to nodes <3>, <5>.\nNode <6> is connected to nodes <3>, <5>, <1>.\nNode <3> is connected to nodes <2>, <5>, <4>, <6>.\nNode <1> is connected to nodes <6>, <2>.\nNode <2> is connected to nodes <5>, <4>, <1>, <0>, <6>, <3>.\nCalculate the number of common neighbors of node <1> and node <2>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 223,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <1>, <3>.\nNode <0> is connected to nodes <4>, <3>.\nNode <1> is connected to nodes <4>, <2>.\nNode <3> is connected to nodes <4>, <0>.\nNode <2> is connected to node <1>.\nCalculate the number of common neighbors of node <0> and node <2>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 224,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <6>, <1>.\nNode <5> is connected to node <6>.\nNode <3> is connected to node <5>.\nNode <6> is connected to node <4>.\nNode <0> is connected to node <6>.\nNode <2> is connected to nodes <0>, <6>.\nCalculate the number of common neighbors of node <2> and node <4>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 225,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <1>, <0>, <3>.\nNode <4> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <4>, <2>.\nNode <5> is connected to node <4>.\nCalculate the number of common neighbors of node <1> and node <3>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 226,
        "question": "Given a directed graph:\nNode <1> is connected to node <4>.\nNode <4> is connected to nodes <2>, <0>, <3>.\nNode <2> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <4>, <1>, <2>.\nNode <0> is connected to nodes <3>, <4>, <1>.\nCalculate the number of common neighbors of node <2> and node <0>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 227,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <0>, <4>.\nNode <1> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <2>, <1>.\nNode <4> is connected to nodes <2>, <3>.\nNode <3> is connected to node <4>.\nCalculate the number of common neighbors of node <1> and node <4>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 228,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <6>, <2>.\nNode <6> is connected to nodes <3>, <1>.\nNode <2> is connected to node <3>.\nNode <1> is connected to nodes <6>, <5>, <4>.\nNode <5> is connected to node <1>.\nNode <4> is connected to nodes <1>, <0>.\nNode <0> is connected to node <4>.\nCalculate the number of common neighbors of node <2> and node <5>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 229,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <1>.\nNode <3> is connected to node <4>.\nNode <1> is connected to nodes <4>, <0>, <2>, <5>.\nNode <0> is connected to node <1>.\nNode <2> is connected to node <1>.\nNode <5> is connected to node <1>.\nCalculate the number of common neighbors of node <0> and node <2>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 230,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <3>, <4>, <0>, <2>, <5>.\nNode <3> is connected to nodes <6>, <0>, <1>, <2>, <5>.\nNode <4> is connected to nodes <6>, <2>, <5>.\nNode <0> is connected to nodes <6>, <3>, <1>, <2>.\nNode <2> is connected to nodes <6>, <3>, <4>, <0>, <1>, <5>.\nNode <5> is connected to nodes <6>, <3>, <4>, <1>, <2>.\nNode <1> is connected to nodes <3>, <0>, <2>, <5>.\nCalculate the number of common neighbors of node <1> and node <3>. \nAnswer:\n",
        "answer": "3",
        "type": "common_neighbor"
    },
    {
        "index": 231,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <4>.\nNode <0> is connected to node <1>.\nNode <4> is connected to nodes <3>, <2>, <0>.\nNode <1> is connected to node <0>.\nNode <3> is connected to node <0>.\nCalculate the number of common neighbors of node <2> and node <3>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 232,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <0>, <1>, <3>.\nNode <5> is connected to nodes <2>, <0>, <1>, <4>, <3>.\nNode <0> is connected to nodes <2>, <5>, <1>, <4>, <3>.\nNode <1> is connected to nodes <2>, <5>, <0>, <3>.\nNode <3> is connected to nodes <2>, <5>, <0>, <1>, <4>.\nNode <4> is connected to nodes <5>, <0>, <3>.\nCalculate the number of common neighbors of node <4> and node <5>. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 233,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <5>, <2>, <3>.\nNode <1> is connected to nodes <0>, <2>.\nNode <5> is connected to nodes <0>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <5>.\nCalculate the number of common neighbors of node <2> and node <1>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 234,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <4>, <2>.\nNode <0> is connected to nodes <4>, <1>.\nNode <2> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <0>, <2>.\nCalculate the number of common neighbors of node <0> and node <4>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 235,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <2>, <6>.\nNode <2> is connected to nodes <6>, <4>, <3>, <0>.\nNode <6> is connected to nodes <5>, <3>, <1>.\nNode <1> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <5>, <3>, <6>.\nNode <0> is connected to node <6>.\nCalculate the number of common neighbors of node <3> and node <5>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 236,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <2>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nNode <2> is connected to node <0>.\nNode <1> is connected to node <4>.\nCalculate the number of common neighbors of node <0> and node <1>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 237,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <3>, <1>.\nNode <0> is connected to node <2>.\nNode <3> is connected to nodes <2>, <4>.\nNode <1> is connected to node <2>.\nNode <4> is connected to node <3>.\nCalculate the number of common neighbors of node <3> and node <0>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 238,
        "question": "Given a directed graph:\nNode <1> is connected to node <5>.\nNode <5> is connected to node <6>.\nNode <6> is connected to node <2>.\nNode <2> is connected to node <0>.\nNode <4> is connected to nodes <3>, <5>, <0>.\nCalculate the number of common neighbors of node <6> and node <4>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 239,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <3>, <4>.\nNode <5> is connected to nodes <0>, <6>, <3>, <4>.\nNode <3> is connected to nodes <0>, <6>, <1>, <5>, <4>.\nNode <4> is connected to nodes <0>, <6>, <1>, <5>, <3>.\nNode <6> is connected to nodes <1>, <5>, <3>, <4>, <2>.\nNode <1> is connected to nodes <6>, <3>, <4>.\nNode <2> is connected to node <6>.\nCalculate the number of common neighbors of node <0> and node <4>. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 240,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <3>, <1>.\nNode <0> is connected to nodes <4>, <3>, <1>, <2>.\nNode <3> is connected to nodes <4>, <0>, <2>, <5>.\nNode <1> is connected to nodes <4>, <0>, <2>, <5>.\nNode <2> is connected to nodes <0>, <3>, <1>, <5>.\nNode <5> is connected to nodes <3>, <1>, <2>.\nCalculate the number of common neighbors of node <0> and node <4>. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 241,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <2>.\nNode <3> is connected to node <1>.\nNode <2> is connected to nodes <4>, <1>, <0>.\nNode <1> is connected to node <3>.\nNode <0> is connected to nodes <4>, <3>, <1>.\nCalculate the number of common neighbors of node <2> and node <0>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 242,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <6>, <0>.\nNode <6> is connected to node <2>.\nNode <0> is connected to nodes <2>, <3>, <5>.\nNode <3> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <3>, <4>, <5>.\nNode <5> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nCalculate the number of common neighbors of node <3> and node <4>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 243,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <2>, <0>, <5>, <4>, <3>.\nNode <5> is connected to nodes <2>, <1>, <0>.\nNode <0> is connected to nodes <1>, <5>, <4>, <3>.\nNode <4> is connected to nodes <1>, <0>.\nNode <3> is connected to nodes <1>, <0>.\nCalculate the number of common neighbors of node <3> and node <1>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 244,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <5>, <3>, <4>.\nNode <0> is connected to node <1>.\nNode <5> is connected to node <1>.\nNode <3> is connected to nodes <1>, <2>.\nNode <4> is connected to nodes <1>, <6>.\nNode <2> is connected to node <3>.\nNode <6> is connected to node <4>.\nCalculate the number of common neighbors of node <2> and node <1>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 245,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <3>.\nNode <4> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>, <5>.\nNode <1> is connected to nodes <3>, <2>.\nNode <5> is connected to node <3>.\nNode <2> is connected to node <1>.\nCalculate the number of common neighbors of node <1> and node <3>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 246,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <2>, <6>, <4>.\nNode <1> is connected to nodes <3>, <2>, <5>, <6>.\nNode <2> is connected to nodes <3>, <1>, <0>.\nNode <6> is connected to nodes <3>, <1>.\nNode <4> is connected to nodes <3>, <0>, <5>.\nNode <5> is connected to nodes <1>, <4>.\nNode <0> is connected to nodes <2>, <4>.\nCalculate the number of common neighbors of node <3> and node <6>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 247,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <6>, <0>, <4>.\nNode <6> is connected to nodes <5>, <1>.\nNode <0> is connected to nodes <3>, <5>, <4>, <1>, <6>.\nNode <4> is connected to nodes <2>, <6>, <3>.\nNode <5> is connected to nodes <4>, <1>, <2>, <6>, <0>, <3>.\nNode <1> is connected to node <0>.\nNode <3> is connected to nodes <5>, <2>, <6>, <0>.\nCalculate the number of common neighbors of node <0> and node <2>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 248,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <3>, <5>, <1>, <4>.\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <3> is connected to nodes <2>, <0>, <5>, <1>, <4>.\nNode <5> is connected to nodes <2>, <3>, <1>, <4>.\nNode <1> is connected to nodes <2>, <3>, <5>, <4>.\nNode <4> is connected to nodes <2>, <0>, <3>, <5>, <1>.\nCalculate the number of common neighbors of node <0> and node <3>. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 249,
        "question": "Given an undirected graph:\nNode <1> is connected to node <4>.\nNode <4> is connected to nodes <1>, <2>, <3>.\nNode <2> is connected to nodes <4>, <0>.\nNode <3> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <2>, <3>.\nCalculate the number of common neighbors of node <3> and node <4>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 250,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1>, <0>, <4>, <2>.\nNode <1> is connected to nodes <5>, <3>.\nNode <0> is connected to node <5>.\nNode <4> is connected to node <5>.\nNode <2> is connected to node <5>.\nNode <3> is connected to node <1>.\nCalculate the number of common neighbors of node <4> and node <1>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 251,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <6>, <5>, <3>.\nNode <2> is connected to nodes <6>, <4>, <0>, <3>, <1>.\nNode <6> is connected to nodes <5>, <3>, <2>.\nNode <5> is connected to nodes <0>, <6>, <4>.\nNode <3> is connected to nodes <2>, <4>.\nNode <4> is connected to node <1>.\nNode <0> is connected to nodes <3>, <6>, <5>.\nCalculate the number of common neighbors of node <6> and node <0>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 252,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <1>, <4>, <3>.\nNode <1> is connected to nodes <5>, <3>.\nNode <4> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <0>, <6>.\nNode <5> is connected to nodes <4>, <6>.\nNode <2> is connected to nodes <3>, <6>.\nNode <0> is connected to nodes <1>, <4>, <3>.\nCalculate the number of common neighbors of node <5> and node <3>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 253,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <4>.\nNode <0> is connected to node <2>.\nNode <4> is connected to nodes <2>, <1>, <3>.\nNode <1> is connected to node <4>.\nNode <3> is connected to node <4>.\nCalculate the number of common neighbors of node <0> and node <1>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 254,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <4>, <0>, <5>.\nNode <2> is connected to nodes <3>, <4>, <0>.\nNode <4> is connected to nodes <3>, <1>, <2>, <0>, <5>.\nNode <0> is connected to nodes <3>, <1>, <2>, <4>, <5>.\nNode <5> is connected to nodes <3>, <1>, <4>, <0>.\nNode <1> is connected to nodes <4>, <0>, <5>.\nCalculate the number of common neighbors of node <2> and node <1>. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 255,
        "question": "Given an undirected graph:\nNode <1> is connected to node <5>.\nNode <5> is connected to nodes <1>, <4>, <3>.\nNode <4> is connected to nodes <5>, <2>, <0>.\nNode <3> is connected to nodes <5>, <6>.\nNode <2> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <4>, <2>.\nNode <6> is connected to node <3>.\nCalculate the number of common neighbors of node <0> and node <2>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 256,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <2>, <4>, <1>.\nNode <3> is connected to node <5>.\nNode <2> is connected to node <5>.\nNode <4> is connected to node <5>.\nNode <1> is connected to nodes <5>, <0>.\nNode <0> is connected to node <1>.\nCalculate the number of common neighbors of node <5> and node <0>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 257,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <4>, <2>.\nNode <0> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <2> is connected to nodes <1>, <3>.\nNode <3> is connected to node <2>.\nCalculate the number of common neighbors of node <4> and node <2>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 258,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <0>, <2>.\nNode <4> is connected to node <1>.\nNode <0> is connected to nodes <1>, <3>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <0>.\nCalculate the number of common neighbors of node <2> and node <1>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 259,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <6>.\nNode <4> is connected to nodes <1>, <3>, <5>, <0>.\nNode <6> is connected to nodes <1>, <3>, <5>, <2>, <0>.\nNode <3> is connected to nodes <4>, <5>, <6>, <0>.\nNode <5> is connected to nodes <4>, <3>, <6>.\nNode <0> is connected to nodes <4>, <3>, <6>.\nNode <2> is connected to node <6>.\nCalculate the number of common neighbors of node <0> and node <2>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 260,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <4>.\nNode <5> is connected to node <3>.\nNode <4> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <4>, <6>, <1>, <2>.\nNode <6> is connected to node <0>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <0>.\nCalculate the number of common neighbors of node <1> and node <6>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 261,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>, <3>, <4>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nCalculate the number of common neighbors of node <1> and node <2>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 262,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <1>, <4>.\nNode <2> is connected to node <0>.\nNode <1> is connected to node <0>.\nNode <4> is connected to nodes <0>, <3>.\nNode <3> is connected to node <4>.\nCalculate the number of common neighbors of node <3> and node <0>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 263,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <4>, <0>, <5>.\nNode <1> is connected to nodes <2>, <3>.\nNode <4> is connected to node <2>.\nNode <0> is connected to node <2>.\nNode <5> is connected to node <2>.\nNode <3> is connected to node <1>.\nCalculate the number of common neighbors of node <0> and node <2>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 264,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <2>, <5>.\nNode <3> is connected to node <1>.\nNode <2> is connected to nodes <1>, <4>, <0>.\nNode <5> is connected to node <1>.\nNode <4> is connected to node <2>.\nNode <0> is connected to node <2>.\nCalculate the number of common neighbors of node <5> and node <2>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 265,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <3>, <0>, <2>, <4>.\nNode <5> is connected to node <2>.\nNode <2> is connected to nodes <5>, <1>.\nNode <4> is connected to node <1>.\nCalculate the number of common neighbors of node <3> and node <4>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 266,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <0>, <2>, <4>.\nNode <3> is connected to node <4>.\nNode <4> is connected to nodes <3>, <1>.\nCalculate the number of common neighbors of node <0> and node <1>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 267,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <2>, <0>.\nNode <3> is connected to nodes <6>, <5>, <0>.\nNode <0> is connected to node <4>.\nNode <6> is connected to nodes <3>, <1>.\nNode <5> is connected to nodes <4>, <3>, <2>, <6>.\nNode <1> is connected to node <4>.\nCalculate the number of common neighbors of node <5> and node <4>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 268,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <0>, <4>, <3>.\nNode <3> is connected to nodes <0>, <2>.\nNode <4> is connected to nodes <2>, <1>.\nNode <1> is connected to node <4>.\nCalculate the number of common neighbors of node <4> and node <2>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 269,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <4>, <0>, <1>.\nNode <2> is connected to node <3>.\nNode <4> is connected to node <3>.\nNode <0> is connected to node <3>.\nNode <1> is connected to node <3>.\nCalculate the number of common neighbors of node <4> and node <0>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 270,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <6>, <2>, <3>, <1>.\nNode <5> is connected to nodes <0>, <6>, <2>, <3>.\nNode <6> is connected to nodes <0>, <5>, <2>, <3>.\nNode <2> is connected to nodes <0>, <5>, <6>, <4>, <3>.\nNode <3> is connected to nodes <0>, <5>, <6>, <2>, <4>, <1>.\nNode <1> is connected to nodes <0>, <4>, <3>.\nNode <4> is connected to nodes <2>, <3>, <1>.\nCalculate the number of common neighbors of node <6> and node <2>. \nAnswer:\n",
        "answer": "3",
        "type": "common_neighbor"
    },
    {
        "index": 271,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <0>, <5>, <1>.\nNode <2> is connected to nodes <3>, <6>, <4>, <1>.\nNode <0> is connected to node <3>.\nNode <5> is connected to nodes <3>, <4>, <1>.\nNode <1> is connected to nodes <3>, <2>, <6>, <5>.\nNode <6> is connected to nodes <2>, <1>.\nNode <4> is connected to nodes <2>, <5>.\nCalculate the number of common neighbors of node <6> and node <3>. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 272,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <2>, <3>.\nNode <4> is connected to node <1>.\nNode <2> is connected to node <1>.\nNode <3> is connected to nodes <1>, <0>, <5>.\nNode <0> is connected to node <3>.\nNode <5> is connected to node <3>.\nCalculate the number of common neighbors of node <0> and node <5>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 273,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <6>, <4>.\nNode <6> is connected to nodes <5>, <4>, <2>.\nNode <4> is connected to nodes <5>, <6>, <1>.\nNode <2> is connected to node <6>.\nNode <3> is connected to node <0>.\nNode <0> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <0>, <4>.\nCalculate the number of common neighbors of node <0> and node <1>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 274,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <4>, <0>, <2>, <5>, <3>.\nNode <5> is connected to nodes <4>, <1>, <3>.\nNode <0> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <0>, <1>, <3>.\nNode <3> is connected to nodes <2>, <1>, <5>.\nCalculate the number of common neighbors of node <2> and node <1>. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 275,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1>, <3>, <0>, <2>, <4>.\nNode <1> is connected to nodes <5>, <3>, <0>, <2>, <4>.\nNode <3> is connected to nodes <5>, <1>, <2>, <4>.\nNode <0> is connected to nodes <5>, <1>, <2>.\nNode <2> is connected to nodes <5>, <1>, <3>, <0>.\nNode <4> is connected to nodes <5>, <1>, <3>.\nCalculate the number of common neighbors of node <2> and node <5>. \nAnswer:\n",
        "answer": "3",
        "type": "common_neighbor"
    },
    {
        "index": 276,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <0>, <5>.\nNode <1> is connected to nodes <4>, <2>, <0>, <5>.\nNode <0> is connected to nodes <4>, <3>, <1>, <2>.\nNode <5> is connected to nodes <4>, <3>, <1>, <2>.\nNode <3> is connected to nodes <2>, <0>, <5>.\nNode <2> is connected to nodes <3>, <1>, <0>, <5>.\nCalculate the number of common neighbors of node <5> and node <1>. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 277,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <0>, <3>, <2>.\nNode <5> is connected to nodes <4>, <3>, <1>.\nNode <0> is connected to nodes <4>, <3>, <2>, <1>.\nNode <3> is connected to nodes <4>, <5>, <0>, <2>, <1>.\nNode <2> is connected to nodes <4>, <0>, <3>, <1>.\nNode <1> is connected to nodes <5>, <0>, <3>, <2>.\nCalculate the number of common neighbors of node <4> and node <1>. \nAnswer:\n",
        "answer": "4",
        "type": "common_neighbor"
    },
    {
        "index": 278,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <3>, <0>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <0>, <4>, <2>.\nNode <0> is connected to nodes <4>, <3>.\nNode <5> is connected to nodes <4>, <2>, <1>.\nNode <4> is connected to nodes <0>, <5>.\nNode <6> is connected to nodes <1>, <5>, <4>, <2>.\nCalculate the number of common neighbors of node <4> and node <3>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 279,
        "question": "Given an undirected graph:\nNode <2> is connected to node <5>.\nNode <5> is connected to nodes <2>, <0>, <6>, <3>, <1>, <4>.\nNode <0> is connected to node <5>.\nNode <6> is connected to node <5>.\nNode <3> is connected to node <5>.\nNode <1> is connected to node <5>.\nNode <4> is connected to node <5>.\nCalculate the number of common neighbors of node <6> and node <0>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 280,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2>, <0>, <3>.\nNode <2> is connected to node <0>.\nNode <0> is connected to nodes <3>, <5>, <4>.\nNode <3> is connected to nodes <1>, <2>.\nNode <1> is connected to node <0>.\nCalculate the number of common neighbors of node <1> and node <5>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 281,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <4>, <1>.\nNode <3> is connected to node <2>.\nNode <4> is connected to nodes <2>, <0>.\nNode <1> is connected to node <2>.\nNode <0> is connected to node <4>.\nCalculate the number of common neighbors of node <1> and node <0>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 282,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <3>, <0>, <2>, <1>.\nNode <5> is connected to nodes <4>, <3>, <0>, <1>.\nNode <3> is connected to nodes <4>, <5>, <0>, <1>.\nNode <0> is connected to nodes <4>, <5>, <3>, <2>, <1>.\nNode <2> is connected to nodes <4>, <0>, <1>.\nNode <1> is connected to nodes <4>, <5>, <3>, <0>, <2>.\nCalculate the number of common neighbors of node <5> and node <4>. \nAnswer:\n",
        "answer": "3",
        "type": "common_neighbor"
    },
    {
        "index": 283,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <5>, <0>.\nNode <3> is connected to nodes <4>, <1>, <2>.\nNode <5> is connected to nodes <1>, <2>.\nNode <0> is connected to nodes <1>, <2>, <4>, <5>.\nNode <4> is connected to node <0>.\nNode <1> is connected to nodes <3>, <5>.\nCalculate the number of common neighbors of node <1> and node <2>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "2",
        "type": "common_neighbor"
    },
    {
        "index": 284,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <4>, <0>.\nNode <2> is connected to nodes <5>, <0>.\nNode <4> is connected to nodes <5>, <1>.\nNode <0> is connected to nodes <5>, <2>, <3>.\nNode <1> is connected to node <4>.\nNode <3> is connected to node <0>.\nCalculate the number of common neighbors of node <0> and node <3>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 285,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <0>, <3>.\nNode <2> is connected to nodes <0>, <4>, <1>.\nNode <0> is connected to nodes <4>, <2>.\nNode <3> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <1>, <2>, <0>.\nCalculate the number of common neighbors of node <2> and node <0>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 286,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <2>, <1>, <0>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <0> is connected to node <3>.\nNode <4> is connected to node <1>.\nCalculate the number of common neighbors of node <2> and node <4>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 287,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1>, <3>, <6>, <0>, <4>.\nNode <1> is connected to nodes <5>, <6>.\nNode <3> is connected to nodes <5>, <2>.\nNode <6> is connected to nodes <5>, <1>, <0>, <2>, <4>.\nNode <0> is connected to nodes <5>, <6>.\nNode <4> is connected to nodes <5>, <6>.\nNode <2> is connected to nodes <6>, <3>.\nCalculate the number of common neighbors of node <5> and node <1>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 288,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <1>, <3>.\nNode <0> is connected to node <5>.\nNode <1> is connected to nodes <5>, <2>, <4>.\nNode <3> is connected to node <5>.\nNode <2> is connected to node <1>.\nNode <4> is connected to node <1>.\nCalculate the number of common neighbors of node <5> and node <3>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 289,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <4>, <0>.\nNode <2> is connected to nodes <3>, <4>, <1>.\nNode <4> is connected to nodes <3>, <2>.\nNode <0> is connected to node <3>.\nNode <1> is connected to node <2>.\nCalculate the number of common neighbors of node <4> and node <3>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 290,
        "question": "Given an undirected graph:\nNode <3> is connected to node <5>.\nNode <5> is connected to nodes <3>, <4>, <1>.\nNode <4> is connected to node <5>.\nNode <1> is connected to nodes <5>, <2>, <0>.\nNode <2> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <2>, <1>.\nCalculate the number of common neighbors of node <1> and node <4>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 291,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <1>, <2>, <4>, <3>, <0>.\nNode <1> is connected to nodes <4>, <6>, <3>, <0>, <5>.\nNode <2> is connected to nodes <6>, <3>, <0>, <5>, <1>.\nNode <4> is connected to nodes <0>, <5>.\nNode <3> is connected to node <1>.\nNode <0> is connected to nodes <6>, <3>.\nNode <6> is connected to nodes <5>, <2>, <4>.\nCalculate the number of common neighbors of node <5> and node <2>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "3",
        "type": "common_neighbor"
    },
    {
        "index": 292,
        "question": "Given a directed graph:\nNode <4> is connected to node <2>.\nNode <2> is connected to nodes <1>, <4>, <0>.\nNode <0> is connected to nodes <3>, <2>, <1>.\nNode <3> is connected to node <2>.\nNode <1> is connected to node <4>.\nCalculate the number of common neighbors of node <3> and node <4>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 293,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <3>, <2>.\nNode <4> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <2> is connected to nodes <0>, <1>.\nNode <1> is connected to node <2>.\nCalculate the number of common neighbors of node <1> and node <2>. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 294,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <3>, <0>.\nNode <1> is connected to nodes <3>, <2>.\nNode <0> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <1>, <0>.\nCalculate the number of common neighbors of node <3> and node <2>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 295,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <1>, <5>, <6>, <4>.\nNode <2> is connected to nodes <1>, <3>.\nNode <5> is connected to node <0>.\nNode <6> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <3> is connected to node <2>.\nCalculate the number of common neighbors of node <1> and node <5>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 296,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <1>, <4>, <2>.\nNode <4> is connected to nodes <3>, <0>.\nNode <1> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>, <4>.\nCalculate the number of common neighbors of node <4> and node <3>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 297,
        "question": "Given a directed graph:\nNode <1> is connected to node <0>.\nNode <0> is connected to nodes <5>, <2>.\nNode <5> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <3>, <4>, <5>.\nNode <4> is connected to nodes <5>, <2>, <0>.\nNode <3> is connected to nodes <5>, <2>.\nCalculate the number of common neighbors of node <2> and node <0>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 298,
        "question": "Given a directed graph:\nNode <3> is connected to node <0>.\nNode <0> is connected to node <1>.\nNode <2> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <5>, <0>, <3>, <2>.\nNode <5> is connected to nodes <3>, <1>, <4>.\nCalculate the number of common neighbors of node <5> and node <1>. In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "0",
        "type": "common_neighbor"
    },
    {
        "index": 299,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <0>, <4>, <1>.\nNode <3> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <2>, <3>.\nNode <1> is connected to node <2>.\nCalculate the number of common neighbors of node <1> and node <0>. \nAnswer:\n",
        "answer": "1",
        "type": "common_neighbor"
    },
    {
        "index": 0,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <5>, <3>, <2>, <0>.\nNode <5> is connected to nodes <3>, <0>, <1>.\nNode <2> is connected to nodes <1>, <5>.\nNode <0> is connected to node <3>.\nNode <1> is connected to node <4>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<5>, <1>, <2>, <4>]",
        "type": "connected_component"
    },
    {
        "index": 1,
        "question": "Given a directed graph:\nNode <3> is connected to node <0>.\nNode <2> is connected to nodes <4>, <3>.\nNode <4> is connected to node <2>.\nNode <1> is connected to nodes <3>, <0>.\nNode <5> is connected to nodes <2>, <0>, <1>, <4>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<2>, <4>]",
        "type": "connected_component"
    },
    {
        "index": 2,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <4>, <0>.\nNode <3> is connected to nodes <1>, <0>.\nNode <4> is connected to nodes <3>, <1>.\nNode <0> is connected to node <3>.\nNode <1> is connected to node <3>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<4>]",
        "type": "connected_component"
    },
    {
        "index": 3,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <5>, <4>.\nNode <5> is connected to node <2>.\nNode <4> is connected to node <1>.\nNode <1> is connected to nodes <4>, <6>.\nNode <0> is connected to nodes <5>, <4>.\nNode <2> is connected to nodes <6>, <0>.\nNode <3> is connected to nodes <6>, <1>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<2>, <5>, <6>, <1>, <4>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 4,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <1>, <0>.\nNode <4> is connected to node <3>.\nNode <1> is connected to nodes <2>, <4>, <0>, <3>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<2>]",
        "type": "connected_component"
    },
    {
        "index": 5,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <4>, <0>.\nNode <2> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <1>, <5>.\nNode <0> is connected to nodes <1>, <2>, <5>, <4>.\nNode <3> is connected to nodes <1>, <2>, <4>, <0>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<4>, <0>, <1>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 6,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <1>, <3>, <4>.\nNode <0> is connected to node <2>.\nNode <1> is connected to node <2>.\nNode <3> is connected to node <2>.\nNode <4> is connected to node <2>.\nFind the connected component containing node <0>. \nAnswer:\n",
        "answer": "[<0>, <2>, <4>, <3>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 7,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <6>, <1>.\nNode <3> is connected to nodes <6>, <1>, <4>.\nNode <1> is connected to nodes <4>, <5>, <0>.\nNode <2> is connected to nodes <0>, <1>, <3>.\nNode <0> is connected to nodes <1>, <4>, <3>, <6>.\nNode <5> is connected to nodes <4>, <2>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<2>, <5>, <4>, <3>, <0>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 8,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <5>, <2>.\nNode <0> is connected to node <2>.\nNode <5> is connected to nodes <2>, <1>.\nNode <2> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <6> is connected to nodes <3>, <4>.\nNode <3> is connected to node <1>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<0>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 9,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <6>, <4>.\nNode <3> is connected to nodes <5>, <0>.\nNode <6> is connected to node <0>.\nNode <4> is connected to nodes <2>, <1>.\nNode <5> is connected to nodes <2>, <4>.\nNode <0> is connected to nodes <2>, <3>, <6>, <1>, <4>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<1>]",
        "type": "connected_component"
    },
    {
        "index": 10,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <0>, <1>.\nNode <0> is connected to node <3>.\nNode <1> is connected to nodes <6>, <2>.\nNode <3> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <3>, <1>, <6>, <0>.\nNode <4> is connected to node <6>.\nNode <5> is connected to nodes <0>, <1>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<4>, <6>, <1>, <2>, <3>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 11,
        "question": "Given a directed graph:\nNode <1> is connected to node <0>.\nNode <0> is connected to nodes <5>, <1>.\nNode <5> is connected to nodes <1>, <0>, <4>, <2>.\nNode <4> is connected to nodes <2>, <5>, <3>.\nNode <2> is connected to nodes <5>, <1>, <4>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<4>, <5>, <0>, <1>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 12,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <5>, <3>, <2>.\nNode <1> is connected to nodes <5>, <3>.\nNode <5> is connected to nodes <2>, <0>.\nNode <4> is connected to nodes <3>, <1>, <0>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<2>]",
        "type": "connected_component"
    },
    {
        "index": 13,
        "question": "Given a directed graph:\nNode <2> is connected to node <5>.\nNode <5> is connected to nodes <1>, <2>, <3>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <5>, <1>, <3>.\nFind the strongly connected component containing node <5>. \nAnswer:\n",
        "answer": "[<2>, <5>]",
        "type": "connected_component"
    },
    {
        "index": 14,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <0>, <4>.\nNode <3> is connected to nodes <6>, <4>.\nNode <0> is connected to node <3>.\nNode <4> is connected to nodes <1>, <3>, <6>, <0>.\nNode <6> is connected to nodes <0>, <2>.\nNode <2> is connected to node <3>.\nNode <5> is connected to node <0>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<2>, <6>, <1>, <4>, <3>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 15,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <0>, <4>, <1>.\nNode <2> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <3>, <0>, <2>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<4>, <3>, <1>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 16,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <4>, <3>, <0>.\nNode <2> is connected to nodes <4>, <0>.\nNode <3> is connected to node <1>.\nNode <0> is connected to nodes <1>, <2>.\nFind the connected component containing node <0>. \nAnswer:\n",
        "answer": "[<0>, <2>, <4>, <1>, <3>]",
        "type": "connected_component"
    },
    {
        "index": 17,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <6>.\nNode <0> is connected to nodes <5>, <2>, <3>, <4>.\nNode <6> is connected to node <0>.\nNode <1> is connected to nodes <5>, <3>, <4>.\nNode <5> is connected to nodes <4>, <1>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<2>]",
        "type": "connected_component"
    },
    {
        "index": 18,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <4>.\nNode <0> is connected to node <4>.\nNode <1> is connected to nodes <2>, <4>, <3>.\nNode <2> is connected to nodes <4>, <3>, <1>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<0>]",
        "type": "connected_component"
    },
    {
        "index": 19,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <3>, <1>, <2>, <0>.\nNode <3> is connected to nodes <1>, <0>, <4>, <5>.\nNode <2> is connected to nodes <5>, <3>, <1>.\nNode <0> is connected to nodes <5>, <2>.\nNode <4> is connected to nodes <3>, <2>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<5>, <4>, <3>, <2>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 20,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <4>, <2>.\nNode <1> is connected to nodes <4>, <2>, <0>.\nNode <3> is connected to nodes <2>, <0>, <1>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<2>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 21,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <6>, <3>.\nNode <6> is connected to nodes <1>, <2>.\nNode <3> is connected to nodes <1>, <0>.\nNode <2> is connected to node <3>.\nNode <1> is connected to nodes <6>, <3>, <5>.\nNode <0> is connected to node <1>.\nNode <5> is connected to nodes <6>, <0>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<4>]",
        "type": "connected_component"
    },
    {
        "index": 22,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <3>, <2>.\nNode <0> is connected to nodes <2>, <1>.\nNode <3> is connected to node <1>.\nNode <2> is connected to nodes <1>, <5>.\nNode <1> is connected to node <0>.\nNode <5> is connected to node <3>.\nFind the strongly connected component containing node <5>. \nAnswer:\n",
        "answer": "[<2>, <0>, <1>, <3>, <5>]",
        "type": "connected_component"
    },
    {
        "index": 23,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <3>, <6>, <1>, <0>.\nNode <1> is connected to nodes <4>, <5>, <6>.\nNode <2> is connected to node <6>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<0>]",
        "type": "connected_component"
    },
    {
        "index": 24,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <2>, <4>.\nNode <3> is connected to node <4>.\nNode <2> is connected to node <0>.\nNode <1> is connected to node <4>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<3>, <4>, <0>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 25,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <0>, <3>.\nNode <0> is connected to nodes <1>, <5>.\nNode <3> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <4>, <0>.\nNode <5> is connected to nodes <4>, <3>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<2>]",
        "type": "connected_component"
    },
    {
        "index": 26,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <5>, <3>, <1>.\nNode <3> is connected to nodes <6>, <2>, <5>.\nNode <6> is connected to node <3>.\nNode <2> is connected to nodes <1>, <5>, <6>.\nNode <4> is connected to nodes <5>, <2>, <1>, <0>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<6>, <3>, <0>, <5>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 27,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <4>, <3>, <6>, <1>.\nNode <1> is connected to nodes <5>, <2>, <3>, <6>.\nNode <4> is connected to nodes <6>, <5>, <0>.\nNode <3> is connected to nodes <1>, <0>, <4>.\nNode <6> is connected to nodes <1>, <2>.\nNode <0> is connected to nodes <4>, <6>, <1>, <5>, <2>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<5>, <6>, <3>, <2>, <1>, <0>, <4>]",
        "type": "connected_component"
    },
    {
        "index": 28,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <5>, <3>.\nNode <1> is connected to node <3>.\nNode <3> is connected to node <2>.\nNode <0> is connected to nodes <4>, <5>, <3>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<1>, <5>, <2>, <3>, <4>]",
        "type": "connected_component"
    },
    {
        "index": 29,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <5>.\nNode <2> is connected to node <0>.\nNode <5> is connected to nodes <1>, <3>.\nNode <4> is connected to nodes <3>, <1>.\nNode <0> is connected to nodes <5>, <1>, <4>, <2>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<5>, <4>, <0>, <2>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 30,
        "question": "Given a directed graph:\nNode <2> is connected to node <0>.\nNode <0> is connected to nodes <4>, <2>.\nNode <1> is connected to nodes <3>, <4>, <2>.\nNode <3> is connected to nodes <5>, <2>.\nNode <4> is connected to node <2>.\nNode <5> is connected to nodes <4>, <2>, <1>, <0>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<4>, <2>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 31,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <0>, <1>, <4>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <2>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<3>]",
        "type": "connected_component"
    },
    {
        "index": 32,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <4>, <3>.\nNode <4> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <0>, <1>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<0>]",
        "type": "connected_component"
    },
    {
        "index": 33,
        "question": "Given a directed graph:\nNode <3> is connected to node <0>.\nNode <0> is connected to nodes <5>, <1>.\nNode <5> is connected to nodes <1>, <0>, <4>.\nNode <4> is connected to nodes <3>, <1>, <0>.\nNode <2> is connected to nodes <1>, <0>, <4>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<4>, <5>, <0>, <3>]",
        "type": "connected_component"
    },
    {
        "index": 34,
        "question": "Given a directed graph:\nNode <3> is connected to node <0>.\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to node <4>.\nNode <4> is connected to node <3>.\nNode <5> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <3>, <1>, <0>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<3>, <4>, <1>, <2>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 35,
        "question": "Given a directed graph:\nNode <4> is connected to node <6>.\nNode <6> is connected to node <3>.\nNode <5> is connected to node <2>.\nNode <2> is connected to nodes <6>, <5>, <1>, <0>.\nNode <1> is connected to nodes <0>, <6>, <4>.\nNode <3> is connected to nodes <4>, <5>, <1>, <0>, <2>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<5>, <2>, <1>, <3>, <6>, <4>]",
        "type": "connected_component"
    },
    {
        "index": 36,
        "question": "Given a directed graph:\nNode <4> is connected to node <0>.\nNode <0> is connected to nodes <1>, <3>.\nNode <2> is connected to nodes <3>, <0>, <1>.\nNode <3> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <2>, <3>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<3>, <1>, <0>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 37,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <2>, <4>, <5>.\nNode <0> is connected to nodes <3>, <1>, <2>, <4>, <5>.\nNode <2> is connected to nodes <3>, <1>, <0>, <4>.\nNode <4> is connected to nodes <3>, <1>, <0>, <2>, <5>.\nNode <5> is connected to nodes <3>, <1>, <0>, <4>.\nNode <1> is connected to nodes <0>, <2>, <4>, <5>.\nFind the connected component containing node <1>. \nAnswer:\n",
        "answer": "[<1>, <5>, <4>, <3>, <2>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 38,
        "question": "Given a directed graph:\nNode <0> is connected to node <2>.\nNode <2> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <0>, <1>, <2>.\nNode <4> is connected to node <3>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<4>]",
        "type": "connected_component"
    },
    {
        "index": 39,
        "question": "Given a directed graph:\nNode <2> is connected to node <4>.\nNode <4> is connected to nodes <0>, <3>.\nNode <5> is connected to nodes <1>, <3>, <4>.\nNode <1> is connected to nodes <0>, <3>, <4>, <5>.\nNode <3> is connected to node <1>.\nNode <0> is connected to node <3>.\nFind the strongly connected component containing node <5>. \nAnswer:\n",
        "answer": "[<4>, <3>, <0>, <1>, <5>]",
        "type": "connected_component"
    },
    {
        "index": 40,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <1>, <3>, <4>.\nNode <1> is connected to nodes <2>, <0>.\nNode <0> is connected to node <1>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<4>, <2>, <0>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 41,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <1>, <2>.\nNode <1> is connected to nodes <2>, <3>, <4>, <0>.\nNode <2> is connected to node <1>.\nNode <0> is connected to nodes <2>, <3>, <4>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<2>, <0>, <1>, <3>]",
        "type": "connected_component"
    },
    {
        "index": 42,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <0>, <1>.\nNode <2> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <1>, <4>.\nNode <3> is connected to node <4>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<4>, <0>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 43,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <5>, <4>, <3>, <0>.\nNode <5> is connected to nodes <3>, <1>.\nNode <4> is connected to nodes <3>, <2>, <5>.\nNode <3> is connected to nodes <0>, <2>, <5>, <4>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<5>, <4>, <3>, <2>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 44,
        "question": "Given a directed graph:\nNode <1> is connected to node <6>.\nNode <6> is connected to nodes <0>, <3>, <2>.\nNode <3> is connected to nodes <2>, <5>, <1>, <4>.\nNode <2> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <3>, <6>.\nNode <5> is connected to nodes <1>, <4>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<5>, <4>, <2>, <6>, <1>, <3>]",
        "type": "connected_component"
    },
    {
        "index": 45,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <0>.\nNode <3> is connected to node <5>.\nNode <0> is connected to nodes <5>, <4>, <3>.\nNode <5> is connected to nodes <2>, <1>, <0>.\nNode <2> is connected to nodes <6>, <3>, <0>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<1>]",
        "type": "connected_component"
    },
    {
        "index": 46,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <5>, <3>.\nNode <5> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <1>, <0>, <3>, <4>.\nNode <1> is connected to node <3>.\nNode <0> is connected to nodes <4>, <2>, <1>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<5>, <4>, <0>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 47,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <5>, <2>.\nNode <3> is connected to nodes <5>, <0>.\nNode <2> is connected to nodes <1>, <4>.\nNode <0> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <0>, <2>.\nFind the connected component containing node <2>. \nAnswer:\n",
        "answer": "[<2>, <4>, <0>, <3>, <5>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 48,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <5>, <3>, <1>.\nNode <5> is connected to nodes <3>, <4>, <1>, <2>, <0>.\nNode <3> is connected to nodes <2>, <5>.\nNode <1> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <1>, <2>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<5>, <4>, <1>, <2>, <3>]",
        "type": "connected_component"
    },
    {
        "index": 49,
        "question": "Given a directed graph:\nNode <3> is connected to node <4>.\nNode <4> is connected to node <1>.\nNode <2> is connected to node <1>.\nNode <1> is connected to node <4>.\nNode <0> is connected to nodes <4>, <3>, <2>.\nNode <5> is connected to nodes <1>, <0>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<3>]",
        "type": "connected_component"
    },
    {
        "index": 50,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <3>, <1>.\nNode <0> is connected to node <2>.\nNode <3> is connected to nodes <2>, <4>, <0>.\nNode <2> is connected to node <4>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<1>]",
        "type": "connected_component"
    },
    {
        "index": 51,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <3>, <0>.\nNode <4> is connected to node <1>.\nNode <3> is connected to nodes <2>, <5>.\nNode <0> is connected to nodes <2>, <5>, <1>.\nNode <2> is connected to nodes <5>, <1>, <3>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<4>, <2>, <3>, <1>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 52,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <5>, <3>.\nNode <0> is connected to node <3>.\nNode <5> is connected to node <1>.\nNode <2> is connected to nodes <1>, <3>, <5>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<5>, <4>, <1>, <0>, <3>]",
        "type": "connected_component"
    },
    {
        "index": 53,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <3>, <2>.\nNode <3> is connected to nodes <4>, <5>.\nNode <2> is connected to node <0>.\nNode <4> is connected to nodes <5>, <0>, <3>, <2>.\nNode <5> is connected to nodes <0>, <2>.\nFind the strongly connected component containing node <5>. \nAnswer:\n",
        "answer": "[<5>]",
        "type": "connected_component"
    },
    {
        "index": 54,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <1>, <4>.\nNode <0> is connected to nodes <1>, <2>.\nNode <4> is connected to node <1>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<3>]",
        "type": "connected_component"
    },
    {
        "index": 55,
        "question": "Given a directed graph:\nNode <3> is connected to node <2>.\nNode <2> is connected to node <0>.\nNode <0> is connected to nodes <2>, <3>.\nNode <4> is connected to nodes <3>, <0>.\nNode <1> is connected to nodes <2>, <3>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<3>, <2>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 56,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <3>, <0>.\nNode <1> is connected to nodes <2>, <0>.\nNode <3> is connected to nodes <0>, <4>.\nNode <2> is connected to nodes <0>, <4>, <1>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<2>, <1>, <4>, <3>]",
        "type": "connected_component"
    },
    {
        "index": 57,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <6>, <0>.\nNode <4> is connected to nodes <6>, <3>.\nNode <0> is connected to nodes <5>, <3>, <2>.\nNode <3> is connected to nodes <4>, <0>.\nNode <2> is connected to nodes <0>, <1>.\nNode <1> is connected to node <2>.\nFind the connected component containing node <4>. \nAnswer:\n",
        "answer": "[<4>, <6>, <5>, <0>, <3>, <2>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 58,
        "question": "Given a directed graph:\nNode <0> is connected to node <3>.\nNode <3> is connected to nodes <6>, <1>.\nNode <2> is connected to node <1>.\nNode <6> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <1>, <2>, <3>.\nNode <5> is connected to nodes <1>, <2>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<6>, <3>, <4>]",
        "type": "connected_component"
    },
    {
        "index": 59,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <3>, <5>.\nNode <4> is connected to nodes <5>, <6>.\nNode <3> is connected to nodes <5>, <0>, <2>.\nNode <5> is connected to nodes <2>, <3>.\nNode <6> is connected to nodes <4>, <1>, <0>.\nNode <2> is connected to nodes <4>, <3>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<1>, <6>, <4>, <5>, <3>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 60,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <5>, <2>.\nNode <5> is connected to nodes <4>, <3>.\nNode <4> is connected to node <1>.\nNode <1> is connected to nodes <2>, <3>, <5>.\nNode <0> is connected to nodes <2>, <3>.\nFind the strongly connected component containing node <5>. \nAnswer:\n",
        "answer": "[<1>, <4>, <3>, <5>]",
        "type": "connected_component"
    },
    {
        "index": 61,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <2>, <4>, <3>.\nNode <2> is connected to node <0>.\nNode <4> is connected to nodes <1>, <0>, <2>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<4>, <3>, <2>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 62,
        "question": "Given a directed graph:\nNode <2> is connected to node <1>.\nNode <1> is connected to nodes <3>, <0>, <4>, <2>.\nNode <3> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <4>, <2>, <1>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<2>, <1>, <0>, <3>]",
        "type": "connected_component"
    },
    {
        "index": 63,
        "question": "Given a directed graph:\nNode <4> is connected to node <0>.\nNode <0> is connected to node <1>.\nNode <2> is connected to nodes <5>, <1>, <0>, <3>.\nNode <1> is connected to nodes <0>, <3>, <4>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<3>]",
        "type": "connected_component"
    },
    {
        "index": 64,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <6>, <0>, <5>, <4>, <2>.\nNode <6> is connected to node <4>.\nNode <5> is connected to nodes <3>, <6>, <0>.\nNode <4> is connected to nodes <3>, <5>.\nNode <2> is connected to node <6>.\nNode <3> is connected to node <6>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<5>, <6>, <3>, <4>]",
        "type": "connected_component"
    },
    {
        "index": 65,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <2>, <5>, <3>.\nNode <2> is connected to node <1>.\nNode <5> is connected to node <3>.\nNode <3> is connected to node <1>.\nNode <1> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <3>, <2>.\nNode <4> is connected to nodes <1>, <6>, <2>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<4>]",
        "type": "connected_component"
    },
    {
        "index": 66,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <6>, <0>, <3>, <2>.\nNode <6> is connected to nodes <1>, <3>.\nNode <0> is connected to nodes <1>, <3>, <4>.\nNode <3> is connected to nodes <1>, <6>, <4>, <0>, <5>, <2>.\nNode <2> is connected to nodes <1>, <3>.\nNode <4> is connected to nodes <3>, <0>.\nNode <5> is connected to node <3>.\nFind the connected component containing node <0>. \nAnswer:\n",
        "answer": "[<0>, <4>, <3>, <6>, <1>, <2>, <5>]",
        "type": "connected_component"
    },
    {
        "index": 67,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <3>, <0>, <4>.\nNode <5> is connected to node <2>.\nNode <0> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <5>, <3>, <0>.\nNode <1> is connected to node <5>.\nFind the strongly connected component containing node <5>. \nAnswer:\n",
        "answer": "[<3>, <4>, <0>, <2>, <5>]",
        "type": "connected_component"
    },
    {
        "index": 68,
        "question": "Given a directed graph:\nNode <4> is connected to node <1>.\nNode <1> is connected to nodes <0>, <3>, <4>.\nNode <0> is connected to node <1>.\nNode <2> is connected to nodes <4>, <1>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<4>, <0>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 69,
        "question": "Given a directed graph:\nNode <4> is connected to node <0>.\nNode <0> is connected to nodes <1>, <4>.\nNode <3> is connected to node <1>.\nNode <1> is connected to nodes <5>, <2>.\nNode <5> is connected to nodes <4>, <1>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<2>]",
        "type": "connected_component"
    },
    {
        "index": 70,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <5>, <4>, <1>, <0>.\nNode <5> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <0>, <3>.\nNode <4> is connected to nodes <1>, <3>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<2>]",
        "type": "connected_component"
    },
    {
        "index": 71,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <2>, <0>.\nNode <3> is connected to nodes <1>, <2>, <4>.\nNode <0> is connected to nodes <5>, <4>, <6>.\nNode <6> is connected to nodes <3>, <1>, <2>.\nNode <1> is connected to nodes <5>, <6>.\nNode <5> is connected to nodes <4>, <6>, <3>, <1>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<6>, <5>, <1>, <3>, <4>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 72,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1>, <3>, <4>.\nNode <1> is connected to nodes <3>, <4>, <0>.\nNode <3> is connected to nodes <2>, <4>, <1>.\nNode <2> is connected to nodes <0>, <1>, <3>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<2>, <3>, <0>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 73,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <4>, <0>.\nNode <3> is connected to node <5>.\nNode <0> is connected to node <2>.\nNode <2> is connected to node <1>.\nFind the strongly connected component containing node <5>. \nAnswer:\n",
        "answer": "[<5>]",
        "type": "connected_component"
    },
    {
        "index": 74,
        "question": "Given a directed graph:\nNode <0> is connected to node <1>.\nNode <2> is connected to nodes <1>, <3>, <0>.\nNode <3> is connected to nodes <0>, <2>, <4>.\nNode <4> is connected to nodes <3>, <0>, <2>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<4>, <2>, <3>]",
        "type": "connected_component"
    },
    {
        "index": 75,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <1>, <5>.\nNode <3> is connected to nodes <2>, <5>, <4>.\nNode <1> is connected to node <3>.\nNode <2> is connected to nodes <1>, <5>.\nNode <0> is connected to nodes <5>, <4>, <1>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<4>, <5>, <1>, <2>, <3>]",
        "type": "connected_component"
    },
    {
        "index": 76,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <2>, <0>, <4>, <1>.\nNode <4> is connected to node <2>.\nNode <2> is connected to nodes <4>, <3>.\nNode <0> is connected to nodes <4>, <2>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<1>, <0>, <3>, <2>, <4>]",
        "type": "connected_component"
    },
    {
        "index": 77,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <4>, <5>.\nNode <5> is connected to node <4>.\nNode <1> is connected to node <3>.\nNode <2> is connected to node <0>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<3>]",
        "type": "connected_component"
    },
    {
        "index": 78,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <4>, <3>, <1>.\nNode <4> is connected to nodes <3>, <1>, <0>.\nNode <2> is connected to node <4>.\nNode <3> is connected to node <0>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<4>, <1>, <0>, <3>]",
        "type": "connected_component"
    },
    {
        "index": 79,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <3>, <0>.\nNode <2> is connected to node <1>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<2>]",
        "type": "connected_component"
    },
    {
        "index": 80,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <3>, <4>.\nNode <1> is connected to node <0>.\nNode <0> is connected to nodes <3>, <4>, <2>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<1>, <4>, <2>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 81,
        "question": "Given a directed graph:\nNode <5> is connected to node <1>.\nNode <1> is connected to nodes <5>, <0>, <2>.\nNode <0> is connected to node <1>.\nNode <2> is connected to nodes <5>, <0>.\nNode <4> is connected to nodes <1>, <3>.\nNode <3> is connected to node <4>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<4>, <3>]",
        "type": "connected_component"
    },
    {
        "index": 82,
        "question": "Given a directed graph:\nNode <2> is connected to node <1>.\nNode <1> is connected to nodes <4>, <6>.\nNode <0> is connected to nodes <4>, <6>, <1>.\nNode <4> is connected to node <1>.\nNode <6> is connected to nodes <1>, <2>, <4>, <5>.\nNode <3> is connected to nodes <4>, <5>, <1>.\nNode <5> is connected to nodes <2>, <3>, <4>.\nFind the strongly connected component containing node <6>. \nAnswer:\n",
        "answer": "[<3>, <5>, <2>, <4>, <1>, <6>]",
        "type": "connected_component"
    },
    {
        "index": 83,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <6>, <5>, <4>.\nNode <6> is connected to nodes <4>, <2>.\nNode <5> is connected to node <3>.\nNode <4> is connected to nodes <2>, <5>, <0>.\nNode <3> is connected to nodes <5>, <0>.\nNode <0> is connected to nodes <4>, <6>.\nNode <1> is connected to nodes <3>, <5>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<6>, <3>, <5>, <2>, <4>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 84,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <2>, <3>.\nNode <4> is connected to nodes <0>, <1>, <2>.\nNode <5> is connected to node <0>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<3>]",
        "type": "connected_component"
    },
    {
        "index": 85,
        "question": "Given a directed graph:\nNode <1> is connected to node <4>.\nNode <4> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <0>, <4>, <1>.\nNode <3> is connected to nodes <0>, <4>, <1>, <2>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<3>]",
        "type": "connected_component"
    },
    {
        "index": 86,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <6>, <5>, <1>.\nNode <6> is connected to nodes <4>, <0>, <3>, <5>, <1>.\nNode <5> is connected to nodes <4>, <6>, <0>, <2>.\nNode <1> is connected to nodes <4>, <6>, <0>, <3>, <2>.\nNode <0> is connected to nodes <6>, <3>, <5>, <2>, <1>.\nNode <3> is connected to nodes <6>, <0>, <2>, <1>.\nNode <2> is connected to nodes <0>, <3>, <5>, <1>.\nFind the connected component containing node <0>. \nAnswer:\n",
        "answer": "[<0>, <6>, <5>, <4>, <1>, <3>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 87,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <2> is connected to node <1>.\nNode <4> is connected to nodes <1>, <2>.\nNode <3> is connected to nodes <4>, <0>.\nNode <1> is connected to nodes <2>, <4>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<3>]",
        "type": "connected_component"
    },
    {
        "index": 88,
        "question": "Given a directed graph:\nNode <4> is connected to node <1>.\nNode <5> is connected to node <2>.\nNode <2> is connected to node <4>.\nNode <0> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <2>, <0>, <1>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<2>]",
        "type": "connected_component"
    },
    {
        "index": 89,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5>, <3>, <4>.\nNode <3> is connected to nodes <0>, <2>.\nNode <4> is connected to nodes <0>, <1>.\nNode <2> is connected to nodes <1>, <3>, <0>.\nNode <1> is connected to nodes <4>, <0>, <5>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<1>, <2>, <3>, <0>, <4>]",
        "type": "connected_component"
    },
    {
        "index": 90,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2>, <4>, <0>.\nNode <2> is connected to node <0>.\nNode <4> is connected to nodes <5>, <2>, <1>, <3>.\nNode <1> is connected to nodes <3>, <4>, <0>.\nNode <3> is connected to nodes <4>, <0>, <5>, <1>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<2>]",
        "type": "connected_component"
    },
    {
        "index": 91,
        "question": "Given a directed graph:\nNode <4> is connected to node <1>.\nNode <1> is connected to node <4>.\nNode <0> is connected to nodes <2>, <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <4>, <0>, <1>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<2>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 92,
        "question": "Given a directed graph:\nNode <3> is connected to node <1>.\nNode <0> is connected to nodes <6>, <4>.\nNode <6> is connected to nodes <1>, <0>.\nNode <4> is connected to nodes <1>, <2>, <6>.\nNode <5> is connected to node <0>.\nFind the strongly connected component containing node <5>. \nAnswer:\n",
        "answer": "[<5>]",
        "type": "connected_component"
    },
    {
        "index": 93,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <1>, <2>, <3>, <6>.\nNode <0> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <3>, <5>, <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <6>, <0>, <2>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<2>, <4>, <5>, <0>, <3>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 94,
        "question": "Given a directed graph:\nNode <4> is connected to node <5>.\nNode <5> is connected to nodes <0>, <4>.\nNode <1> is connected to nodes <2>, <4>.\nNode <0> is connected to node <2>.\nNode <3> is connected to node <0>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<1>]",
        "type": "connected_component"
    },
    {
        "index": 95,
        "question": "Given a directed graph:\nNode <0> is connected to node <2>.\nNode <2> is connected to node <4>.\nNode <3> is connected to nodes <1>, <4>.\nNode <1> is connected to node <2>.\nNode <4> is connected to nodes <0>, <2>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<1>]",
        "type": "connected_component"
    },
    {
        "index": 96,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <3>.\nNode <5> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <1>, <5>, <0>, <2>.\nNode <0> is connected to nodes <3>, <4>.\nNode <2> is connected to node <3>.\nNode <4> is connected to node <0>.\nFind the connected component containing node <1>. \nAnswer:\n",
        "answer": "[<1>, <5>, <3>, <2>, <0>, <4>]",
        "type": "connected_component"
    },
    {
        "index": 97,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <1>.\nNode <2> is connected to node <4>.\nNode <1> is connected to node <4>.\nNode <4> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <1>, <2>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<2>, <1>, <0>, <4>]",
        "type": "connected_component"
    },
    {
        "index": 98,
        "question": "Given a directed graph:\nNode <4> is connected to node <5>.\nNode <0> is connected to nodes <3>, <1>.\nNode <2> is connected to node <4>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<4>]",
        "type": "connected_component"
    },
    {
        "index": 99,
        "question": "Given a directed graph:\nNode <1> is connected to node <0>.\nNode <0> is connected to node <1>.\nNode <3> is connected to nodes <5>, <1>.\nNode <5> is connected to node <1>.\nNode <4> is connected to nodes <0>, <2>, <5>, <1>, <3>.\nNode <2> is connected to nodes <1>, <3>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<2>]",
        "type": "connected_component"
    },
    {
        "index": 100,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <2>, <6>.\nNode <2> is connected to nodes <5>, <1>, <4>.\nNode <5> is connected to nodes <1>, <3>.\nNode <1> is connected to node <5>.\nNode <3> is connected to nodes <6>, <5>, <4>, <2>.\nNode <0> is connected to nodes <2>, <5>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<6>, <3>, <5>, <1>, <2>, <4>]",
        "type": "connected_component"
    },
    {
        "index": 101,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <4>, <1>.\nNode <0> is connected to nodes <1>, <3>.\nNode <4> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <1>, <3>, <0>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<4>, <3>, <0>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 102,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <4>, <6>.\nNode <3> is connected to nodes <5>, <4>, <1>.\nNode <6> is connected to nodes <1>, <3>, <4>.\nNode <5> is connected to nodes <4>, <2>, <1>.\nNode <0> is connected to nodes <1>, <5>, <2>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<2>]",
        "type": "connected_component"
    },
    {
        "index": 103,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <5>, <2>.\nNode <5> is connected to nodes <2>, <6>.\nNode <2> is connected to nodes <4>, <3>, <5>, <0>.\nNode <1> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <5>, <2>, <6>, <4>, <1>.\nNode <0> is connected to nodes <4>, <5>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<6>, <5>, <0>, <2>, <3>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 104,
        "question": "Given a directed graph:\nNode <2> is connected to node <4>.\nNode <4> is connected to nodes <3>, <1>.\nNode <5> is connected to nodes <0>, <1>, <4>, <2>.\nNode <0> is connected to nodes <1>, <4>, <2>.\nNode <1> is connected to node <4>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<1>, <4>]",
        "type": "connected_component"
    },
    {
        "index": 105,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <4>, <5>.\nNode <5> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <5>, <3>.\nNode <2> is connected to nodes <0>, <3>, <6>, <1>, <4>.\nNode <0> is connected to nodes <3>, <5>.\nFind the strongly connected component containing node <5>. \nAnswer:\n",
        "answer": "[<6>, <1>, <0>, <2>, <5>]",
        "type": "connected_component"
    },
    {
        "index": 106,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <0>, <3>.\nNode <1> is connected to nodes <0>, <3>, <2>.\nNode <3> is connected to nodes <4>, <1>.\nNode <2> is connected to node <1>.\nFind the connected component containing node <0>. \nAnswer:\n",
        "answer": "[<0>, <4>, <3>, <1>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 107,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <1>, <4>.\nNode <2> is connected to node <3>.\nNode <1> is connected to nodes <0>, <5>, <4>, <2>.\nNode <4> is connected to node <5>.\nNode <0> is connected to node <4>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<2>, <1>, <3>]",
        "type": "connected_component"
    },
    {
        "index": 108,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <0>, <5>, <3>.\nNode <0> is connected to node <5>.\nNode <5> is connected to node <0>.\nNode <3> is connected to node <5>.\nNode <2> is connected to node <4>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<3>]",
        "type": "connected_component"
    },
    {
        "index": 109,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <1>, <5>.\nNode <2> is connected to nodes <5>, <4>, <0>.\nNode <0> is connected to nodes <1>, <4>.\nNode <3> is connected to nodes <5>, <4>, <0>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<0>, <3>, <5>, <4>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 110,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to node <4>.\nNode <3> is connected to node <2>.\nNode <4> is connected to node <1>.\nNode <1> is connected to node <3>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<4>, <2>, <3>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 111,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <1>.\nNode <3> is connected to node <1>.\nNode <1> is connected to nodes <0>, <3>, <4>.\nNode <2> is connected to nodes <1>, <0>, <3>.\nNode <4> is connected to nodes <1>, <0>, <3>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<4>, <3>, <0>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 112,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <4>, <5>.\nNode <3> is connected to node <2>.\nNode <5> is connected to nodes <3>, <0>.\nNode <2> is connected to node <0>.\nNode <0> is connected to nodes <3>, <4>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<1>]",
        "type": "connected_component"
    },
    {
        "index": 113,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <1>, <3>.\nNode <4> is connected to nodes <0>, <1>.\nNode <2> is connected to node <4>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<4>]",
        "type": "connected_component"
    },
    {
        "index": 114,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <5>, <4>.\nNode <0> is connected to nodes <3>, <4>, <1>.\nNode <5> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <5>, <4>, <2>.\nNode <2> is connected to nodes <3>, <5>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<5>, <2>, <3>]",
        "type": "connected_component"
    },
    {
        "index": 115,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <4>, <0>.\nNode <2> is connected to nodes <0>, <3>, <1>.\nNode <4> is connected to node <5>.\nNode <0> is connected to nodes <5>, <4>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<0>]",
        "type": "connected_component"
    },
    {
        "index": 116,
        "question": "Given an undirected graph:\nNode <6> is connected to node <0>.\nNode <0> is connected to nodes <6>, <3>.\nNode <3> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <3>, <2>, <1>.\nNode <2> is connected to nodes <4>, <5>, <1>.\nNode <1> is connected to nodes <4>, <2>.\nNode <5> is connected to node <2>.\nFind the connected component containing node <4>. \nAnswer:\n",
        "answer": "[<4>, <3>, <0>, <6>, <2>, <5>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 117,
        "question": "Given a directed graph:\nNode <2> is connected to node <4>.\nNode <4> is connected to node <1>.\nNode <3> is connected to nodes <1>, <4>, <2>.\nNode <1> is connected to node <4>.\nNode <0> is connected to nodes <2>, <3>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<4>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 118,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <1>.\nNode <4> is connected to node <2>.\nNode <1> is connected to node <4>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <2>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<1>, <2>, <4>]",
        "type": "connected_component"
    },
    {
        "index": 119,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <2>, <0>, <4>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <1>.\nNode <0> is connected to nodes <4>, <1>, <2>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<2>, <0>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 120,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <0>, <3>.\nNode <0> is connected to nodes <3>, <4>.\nNode <3> is connected to node <0>.\nNode <1> is connected to nodes <4>, <3>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<3>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 121,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <5>, <1>.\nNode <5> is connected to nodes <0>, <4>.\nNode <2> is connected to node <1>.\nNode <4> is connected to nodes <5>, <0>, <3>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<4>, <5>, <3>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 122,
        "question": "Given a directed graph:\nNode <0> is connected to node <4>.\nNode <4> is connected to nodes <3>, <2>.\nNode <1> is connected to node <0>.\nNode <3> is connected to nodes <0>, <4>.\nNode <2> is connected to node <4>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<3>, <2>, <4>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 123,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <3>, <1>.\nNode <0> is connected to nodes <3>, <2>.\nNode <1> is connected to nodes <2>, <0>, <3>.\nNode <4> is connected to nodes <2>, <0>, <5>, <3>, <1>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<3>, <2>, <0>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 124,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <0>, <1>.\nNode <0> is connected to node <2>.\nNode <1> is connected to nodes <3>, <4>, <0>.\nNode <4> is connected to nodes <1>, <3>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<4>, <1>, <0>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 125,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <1>, <5>.\nNode <1> is connected to node <4>.\nNode <0> is connected to nodes <1>, <5>.\nNode <4> is connected to nodes <1>, <5>, <0>.\nNode <2> is connected to nodes <1>, <5>, <3>, <0>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<3>, <5>, <4>, <1>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 126,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <2>, <5>, <0>.\nNode <4> is connected to nodes <2>, <1>, <5>.\nNode <5> is connected to nodes <3>, <4>.\nNode <0> is connected to node <3>.\nNode <1> is connected to node <4>.\nFind the connected component containing node <5>. \nAnswer:\n",
        "answer": "[<5>, <4>, <2>, <3>, <0>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 127,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <6>, <5>, <3>.\nNode <6> is connected to node <2>.\nNode <5> is connected to nodes <2>, <4>.\nNode <3> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <4>, <6>, <3>, <2>.\nNode <4> is connected to nodes <6>, <3>, <0>.\nNode <1> is connected to nodes <2>, <0>, <6>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<5>, <6>, <4>, <0>, <3>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 128,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <0>.\nNode <4> is connected to node <2>.\nNode <1> is connected to nodes <4>, <2>, <0>, <3>.\nNode <2> is connected to node <1>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<0>]",
        "type": "connected_component"
    },
    {
        "index": 129,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <1>, <3>.\nNode <0> is connected to node <1>.\nNode <1> is connected to nodes <3>, <0>.\nNode <4> is connected to nodes <1>, <3>, <2>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<3>, <0>, <1>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 130,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <5>, <3>, <2>.\nNode <5> is connected to nodes <3>, <1>.\nNode <3> is connected to node <0>.\nNode <2> is connected to nodes <0>, <1>.\nNode <4> is connected to node <2>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<0>]",
        "type": "connected_component"
    },
    {
        "index": 131,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <1>, <5>.\nNode <1> is connected to node <5>.\nNode <5> is connected to node <0>.\nNode <0> is connected to nodes <1>, <5>, <2>.\nFind the strongly connected component containing node <5>. \nAnswer:\n",
        "answer": "[<1>, <0>, <5>]",
        "type": "connected_component"
    },
    {
        "index": 132,
        "question": "Given a directed graph:\nNode <3> is connected to node <5>.\nNode <5> is connected to nodes <0>, <3>.\nNode <2> is connected to nodes <5>, <0>.\nNode <0> is connected to nodes <3>, <2>, <4>.\nNode <4> is connected to node <5>.\nNode <1> is connected to nodes <3>, <5>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<4>, <3>, <5>, <2>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 133,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <2>.\nNode <3> is connected to node <1>.\nNode <2> is connected to node <4>.\nNode <5> is connected to nodes <3>, <0>, <4>.\nNode <0> is connected to nodes <4>, <5>, <1>.\nNode <1> is connected to node <5>.\nNode <6> is connected to node <0>.\nFind the strongly connected component containing node <5>. \nAnswer:\n",
        "answer": "[<3>, <2>, <4>, <1>, <0>, <5>]",
        "type": "connected_component"
    },
    {
        "index": 134,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <3>, <5>, <0>.\nNode <3> is connected to node <0>.\nNode <0> is connected to node <2>.\nNode <4> is connected to nodes <5>, <0>, <1>, <6>.\nNode <1> is connected to node <5>.\nFind the strongly connected component containing node <6>. \nAnswer:\n",
        "answer": "[<6>]",
        "type": "connected_component"
    },
    {
        "index": 135,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <5>, <4>.\nNode <0> is connected to nodes <4>, <2>.\nNode <3> is connected to nodes <0>, <4>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<3>]",
        "type": "connected_component"
    },
    {
        "index": 136,
        "question": "Given a directed graph:\nNode <1> is connected to node <2>.\nNode <0> is connected to nodes <2>, <3>, <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <3>, <1>, <0>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<1>]",
        "type": "connected_component"
    },
    {
        "index": 137,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <4>, <2>, <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <2> is connected to node <1>.\nNode <0> is connected to node <1>.\nFind the connected component containing node <2>. \nAnswer:\n",
        "answer": "[<2>, <1>, <4>, <3>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 138,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <6>.\nNode <2> is connected to nodes <0>, <3>, <1>, <4>.\nNode <6> is connected to nodes <2>, <3>.\nNode <4> is connected to nodes <2>, <3>.\nNode <3> is connected to node <1>.\nNode <0> is connected to nodes <1>, <4>.\nNode <5> is connected to node <4>.\nFind the strongly connected component containing node <5>. \nAnswer:\n",
        "answer": "[<5>]",
        "type": "connected_component"
    },
    {
        "index": 139,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <0>, <1>, <4>.\nNode <1> is connected to node <2>.\nNode <0> is connected to node <3>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<2>, <1>, <3>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 140,
        "question": "Given a directed graph:\nNode <4> is connected to node <3>.\nNode <1> is connected to nodes <3>, <4>.\nNode <0> is connected to nodes <2>, <4>, <1>.\nNode <2> is connected to nodes <3>, <4>, <1>, <0>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<2>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 141,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <3>, <0>, <4>.\nNode <3> is connected to node <0>.\nNode <0> is connected to nodes <2>, <4>, <5>.\nNode <4> is connected to nodes <5>, <3>, <0>, <2>.\nNode <1> is connected to nodes <2>, <4>, <5>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<2>]",
        "type": "connected_component"
    },
    {
        "index": 142,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <4>.\nNode <0> is connected to node <4>.\nNode <4> is connected to nodes <3>, <2>, <0>.\nNode <2> is connected to nodes <0>, <4>.\nNode <5> is connected to nodes <1>, <0>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<1>]",
        "type": "connected_component"
    },
    {
        "index": 143,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <5>, <1>, <4>, <2>.\nNode <5> is connected to nodes <1>, <3>.\nNode <4> is connected to node <3>.\nNode <0> is connected to nodes <5>, <1>.\nNode <2> is connected to nodes <3>, <5>, <1>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<0>]",
        "type": "connected_component"
    },
    {
        "index": 144,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <4>.\nNode <1> is connected to node <4>.\nNode <4> is connected to nodes <2>, <1>.\nNode <3> is connected to node <1>.\nNode <0> is connected to node <4>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<4>, <1>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 145,
        "question": "Given a directed graph:\nNode <1> is connected to node <4>.\nNode <4> is connected to node <1>.\nNode <2> is connected to nodes <4>, <6>, <0>.\nNode <6> is connected to nodes <3>, <1>, <5>, <4>.\nNode <0> is connected to nodes <2>, <5>, <4>, <3>.\nNode <5> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <0>, <2>, <4>, <6>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<5>, <6>, <2>, <0>, <3>]",
        "type": "connected_component"
    },
    {
        "index": 146,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <5>, <2>.\nNode <5> is connected to nodes <2>, <0>, <1>.\nNode <2> is connected to nodes <0>, <5>.\nNode <0> is connected to node <5>.\nNode <1> is connected to nodes <5>, <4>, <0>.\nNode <4> is connected to node <5>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<4>, <1>, <5>, <0>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 147,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <6>, <3>, <4>, <0>.\nNode <6> is connected to node <4>.\nNode <3> is connected to node <6>.\nNode <4> is connected to node <1>.\nNode <0> is connected to node <3>.\nNode <2> is connected to nodes <3>, <0>.\nNode <5> is connected to node <0>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<2>]",
        "type": "connected_component"
    },
    {
        "index": 148,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <2>.\nNode <5> is connected to nodes <0>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <5>, <3>.\nNode <1> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <1>, <4>.\nFind the connected component containing node <2>. \nAnswer:\n",
        "answer": "[<2>, <1>, <3>, <4>, <5>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 149,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <2>, <1>.\nNode <0> is connected to nodes <2>, <1>, <3>.\nNode <2> is connected to node <1>.\nNode <4> is connected to nodes <1>, <3>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<2>, <3>, <1>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 150,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <0>, <1>, <3>.\nNode <3> is connected to node <2>.\nNode <0> is connected to node <1>.\nNode <4> is connected to node <3>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<0>]",
        "type": "connected_component"
    },
    {
        "index": 151,
        "question": "Given a directed graph:\nNode <3> is connected to node <1>.\nNode <1> is connected to node <0>.\nNode <0> is connected to node <3>.\nNode <2> is connected to node <3>.\nNode <4> is connected to node <0>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<3>, <0>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 152,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <5>, <0>.\nNode <5> is connected to node <4>.\nNode <0> is connected to nodes <6>, <4>.\nNode <4> is connected to nodes <1>, <6>.\nNode <1> is connected to nodes <3>, <4>, <5>, <2>.\nFind the strongly connected component containing node <6>. \nAnswer:\n",
        "answer": "[<5>, <1>, <4>, <0>, <3>, <6>]",
        "type": "connected_component"
    },
    {
        "index": 153,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <2>, <5>.\nNode <1> is connected to nodes <0>, <5>.\nNode <3> is connected to nodes <0>, <5>, <1>.\nNode <5> is connected to nodes <4>, <0>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<2>, <4>, <5>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 154,
        "question": "Given a directed graph:\nNode <3> is connected to node <1>.\nNode <1> is connected to node <2>.\nNode <2> is connected to nodes <3>, <1>.\nNode <0> is connected to nodes <4>, <3>.\nNode <4> is connected to node <2>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<4>]",
        "type": "connected_component"
    },
    {
        "index": 155,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <4>, <2>, <1>, <3>.\nNode <4> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <3>, <5>, <0>.\nNode <3> is connected to nodes <4>, <0>, <1>.\nNode <0> is connected to nodes <3>, <2>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<4>, <5>, <1>, <3>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 156,
        "question": "Given a directed graph:\nNode <2> is connected to node <5>.\nNode <5> is connected to nodes <1>, <4>, <2>.\nNode <6> is connected to nodes <5>, <0>, <2>.\nNode <0> is connected to nodes <1>, <2>.\nNode <1> is connected to node <6>.\nNode <4> is connected to node <0>.\nNode <3> is connected to node <4>.\nFind the strongly connected component containing node <5>. \nAnswer:\n",
        "answer": "[<4>, <2>, <0>, <6>, <1>, <5>]",
        "type": "connected_component"
    },
    {
        "index": 157,
        "question": "Given a directed graph:\nNode <1> is connected to node <5>.\nNode <5> is connected to nodes <3>, <2>, <6>.\nNode <4> is connected to nodes <3>, <6>.\nNode <3> is connected to nodes <6>, <5>, <0>, <4>.\nNode <6> is connected to nodes <5>, <0>, <1>.\nNode <2> is connected to nodes <6>, <0>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<1>, <6>, <2>, <5>, <3>, <4>]",
        "type": "connected_component"
    },
    {
        "index": 158,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <1>, <6>.\nNode <3> is connected to nodes <4>, <2>, <0>, <6>.\nNode <1> is connected to nodes <4>, <0>, <2>.\nNode <6> is connected to nodes <4>, <3>, <5>.\nNode <2> is connected to nodes <3>, <1>.\nNode <0> is connected to nodes <3>, <5>, <1>.\nNode <5> is connected to nodes <0>, <6>.\nFind the connected component containing node <4>. \nAnswer:\n",
        "answer": "[<4>, <6>, <5>, <0>, <3>, <2>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 159,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5>, <1>, <0>.\nNode <5> is connected to node <1>.\nNode <0> is connected to nodes <3>, <5>, <6>, <1>.\nNode <6> is connected to nodes <0>, <5>.\nNode <4> is connected to nodes <0>, <5>.\nNode <3> is connected to node <0>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<4>]",
        "type": "connected_component"
    },
    {
        "index": 160,
        "question": "Given a directed graph:\nNode <1> is connected to node <6>.\nNode <6> is connected to node <1>.\nNode <3> is connected to nodes <4>, <5>, <6>.\nNode <4> is connected to nodes <5>, <0>, <3>.\nNode <5> is connected to nodes <0>, <6>, <3>, <4>.\nNode <0> is connected to nodes <1>, <4>.\nNode <2> is connected to node <3>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<2>]",
        "type": "connected_component"
    },
    {
        "index": 161,
        "question": "Given a directed graph:\nNode <3> is connected to node <4>.\nNode <4> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <2>, <4>, <1>.\nNode <2> is connected to nodes <4>, <0>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<3>]",
        "type": "connected_component"
    },
    {
        "index": 162,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <6>.\nNode <3> is connected to nodes <0>, <2>.\nNode <6> is connected to node <4>.\nNode <0> is connected to nodes <1>, <2>.\nNode <4> is connected to nodes <0>, <6>, <1>, <3>.\nNode <1> is connected to nodes <3>, <4>, <0>, <6>.\nNode <5> is connected to nodes <2>, <3>, <0>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<6>, <4>, <1>, <0>, <3>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 163,
        "question": "Given a directed graph:\nNode <4> is connected to node <2>.\nNode <1> is connected to nodes <3>, <0>, <4>.\nNode <3> is connected to node <4>.\nNode <0> is connected to node <3>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<0>]",
        "type": "connected_component"
    },
    {
        "index": 164,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <6>, <4>.\nNode <6> is connected to nodes <5>, <4>.\nNode <4> is connected to nodes <2>, <5>.\nNode <5> is connected to nodes <4>, <2>, <0>, <3>.\nNode <3> is connected to nodes <5>, <0>, <6>.\nNode <2> is connected to node <5>.\nNode <1> is connected to nodes <2>, <4>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<6>, <5>, <2>, <4>, <0>, <3>]",
        "type": "connected_component"
    },
    {
        "index": 165,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <4>, <2>, <0>.\nNode <3> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <4>, <2>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<3>, <4>, <0>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 166,
        "question": "Given a directed graph:\nNode <2> is connected to node <5>.\nNode <5> is connected to nodes <0>, <1>, <4>, <3>.\nNode <1> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <3>, <5>, <2>.\nNode <0> is connected to nodes <1>, <4>.\nFind the strongly connected component containing node <5>. \nAnswer:\n",
        "answer": "[<2>, <4>, <1>, <0>, <5>]",
        "type": "connected_component"
    },
    {
        "index": 167,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>, <3>, <1>.\nNode <4> is connected to nodes <0>, <2>, <5>, <3>, <1>.\nNode <5> is connected to nodes <0>, <2>, <4>, <3>, <1>.\nNode <3> is connected to nodes <0>, <2>, <4>, <5>.\nNode <1> is connected to nodes <0>, <4>, <5>.\nNode <2> is connected to nodes <4>, <5>, <3>.\nFind the connected component containing node <3>. \nAnswer:\n",
        "answer": "[<3>, <5>, <4>, <2>, <1>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 168,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <2>, <1>, <5>.\nNode <2> is connected to node <4>.\nNode <4> is connected to nodes <5>, <2>, <1>.\nNode <5> is connected to node <2>.\nNode <0> is connected to nodes <2>, <1>, <5>, <3>.\nFind the strongly connected component containing node <5>. \nAnswer:\n",
        "answer": "[<3>, <1>, <4>, <2>, <5>]",
        "type": "connected_component"
    },
    {
        "index": 169,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <0>, <5>, <6>.\nNode <3> is connected to nodes <0>, <2>, <4>.\nNode <0> is connected to nodes <5>, <2>, <3>.\nNode <5> is connected to nodes <2>, <3>.\nNode <6> is connected to nodes <4>, <0>, <5>, <2>.\nNode <2> is connected to nodes <6>, <3>.\nNode <4> is connected to nodes <0>, <5>.\nFind the strongly connected component containing node <6>. \nAnswer:\n",
        "answer": "[<5>, <4>, <3>, <2>, <0>, <6>]",
        "type": "connected_component"
    },
    {
        "index": 170,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <6>, <5>, <3>.\nNode <6> is connected to nodes <1>, <0>, <2>.\nNode <5> is connected to nodes <3>, <1>, <0>.\nNode <3> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <0>, <3>, <6>.\nNode <0> is connected to nodes <5>, <6>.\nNode <4> is connected to nodes <3>, <2>, <1>, <0>.\nFind the strongly connected component containing node <5>. \nAnswer:\n",
        "answer": "[<2>, <3>, <1>, <6>, <0>, <5>]",
        "type": "connected_component"
    },
    {
        "index": 171,
        "question": "Given a directed graph:\nNode <1> is connected to node <5>.\nNode <5> is connected to nodes <2>, <4>.\nNode <0> is connected to nodes <5>, <1>.\nNode <2> is connected to nodes <4>, <5>, <1>.\nNode <4> is connected to nodes <5>, <1>, <2>.\nNode <3> is connected to node <1>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<4>, <5>, <1>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 172,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <5>.\nNode <4> is connected to node <5>.\nNode <5> is connected to node <6>.\nNode <6> is connected to node <1>.\nNode <1> is connected to nodes <5>, <2>, <3>.\nNode <0> is connected to nodes <1>, <2>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<1>, <6>, <5>, <4>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 173,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <5>.\nNode <0> is connected to nodes <1>, <5>.\nNode <5> is connected to nodes <1>, <0>.\nNode <3> is connected to node <2>.\nNode <2> is connected to nodes <3>, <4>, <6>.\nNode <4> is connected to nodes <2>, <6>.\nNode <6> is connected to nodes <2>, <4>.\nFind the connected component containing node <4>. \nAnswer:\n",
        "answer": "[<4>, <6>, <2>, <3>]",
        "type": "connected_component"
    },
    {
        "index": 174,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <6>, <4>.\nNode <6> is connected to node <1>.\nNode <4> is connected to node <5>.\nNode <2> is connected to node <3>.\nNode <3> is connected to node <4>.\nNode <1> is connected to node <4>.\nNode <5> is connected to nodes <6>, <4>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<3>]",
        "type": "connected_component"
    },
    {
        "index": 175,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <4>, <2>.\nNode <3> is connected to nodes <0>, <1>, <2>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<1>, <4>, <0>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 176,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <0>, <4>, <2>, <3>.\nNode <4> is connected to nodes <2>, <0>.\nNode <3> is connected to nodes <1>, <0>, <2>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<4>, <1>, <0>, <3>]",
        "type": "connected_component"
    },
    {
        "index": 177,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>, <1>, <3>.\nNode <2> is connected to nodes <0>, <5>, <4>, <1>, <3>.\nNode <4> is connected to nodes <0>, <5>, <2>, <3>.\nNode <1> is connected to nodes <0>, <2>, <3>.\nNode <3> is connected to nodes <0>, <2>, <4>, <1>.\nNode <5> is connected to nodes <2>, <4>.\nFind the connected component containing node <0>. \nAnswer:\n",
        "answer": "[<0>, <4>, <5>, <2>, <3>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 178,
        "question": "Given a directed graph:\nNode <0> is connected to node <2>.\nNode <2> is connected to nodes <1>, <0>, <3>.\nNode <4> is connected to nodes <2>, <1>.\nNode <1> is connected to node <4>.\nNode <5> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <2>, <1>, <0>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<3>, <4>, <1>, <2>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 179,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <1>, <6>, <3>.\nNode <0> is connected to nodes <1>, <6>, <3>.\nNode <6> is connected to node <4>.\nNode <3> is connected to node <4>.\nNode <2> is connected to nodes <3>, <1>.\nNode <5> is connected to nodes <3>, <4>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<1>]",
        "type": "connected_component"
    },
    {
        "index": 180,
        "question": "Given a directed graph:\nNode <3> is connected to node <5>.\nNode <5> is connected to node <3>.\nNode <0> is connected to node <1>.\nNode <2> is connected to nodes <4>, <3>, <0>.\nNode <4> is connected to nodes <5>, <1>, <3>, <0>, <2>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<1>]",
        "type": "connected_component"
    },
    {
        "index": 181,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2>, <4>, <0>, <6>.\nNode <2> is connected to nodes <4>, <0>.\nNode <4> is connected to node <0>.\nNode <0> is connected to nodes <1>, <6>, <5>.\nNode <6> is connected to nodes <2>, <4>.\nNode <3> is connected to nodes <4>, <0>, <2>.\nNode <1> is connected to nodes <6>, <5>, <4>, <0>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<6>, <2>, <5>, <1>, <0>, <4>]",
        "type": "connected_component"
    },
    {
        "index": 182,
        "question": "Given a directed graph:\nNode <2> is connected to node <0>.\nNode <0> is connected to node <1>.\nNode <1> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <1>, <2>, <0>.\nNode <3> is connected to nodes <1>, <2>, <0>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<4>, <0>, <2>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 183,
        "question": "Given a directed graph:\nNode <3> is connected to node <0>.\nNode <0> is connected to nodes <4>, <2>.\nNode <1> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <2>, <0>, <3>.\nNode <2> is connected to nodes <0>, <3>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<3>, <4>, <0>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 184,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <4>, <3>.\nNode <2> is connected to nodes <0>, <4>, <3>.\nNode <4> is connected to nodes <1>, <2>, <0>.\nNode <0> is connected to nodes <4>, <3>, <1>, <2>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<4>, <2>, <1>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 185,
        "question": "Given a directed graph:\nNode <0> is connected to node <1>.\nNode <1> is connected to node <0>.\nNode <3> is connected to nodes <4>, <2>, <0>.\nNode <4> is connected to nodes <1>, <0>.\nNode <2> is connected to nodes <1>, <3>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<1>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 186,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <1>, <2>.\nNode <1> is connected to node <0>.\nNode <0> is connected to nodes <4>, <5>, <1>, <2>, <3>.\nNode <4> is connected to node <6>.\nNode <5> is connected to nodes <1>, <2>, <6>.\nNode <3> is connected to nodes <6>, <5>, <2>.\nFind the strongly connected component containing node <5>. \nAnswer:\n",
        "answer": "[<4>, <6>, <3>, <0>, <1>, <5>]",
        "type": "connected_component"
    },
    {
        "index": 187,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <6>, <0>, <1>, <3>, <4>.\nNode <6> is connected to nodes <2>, <5>.\nNode <0> is connected to nodes <2>, <5>.\nNode <1> is connected to nodes <2>, <5>, <3>.\nNode <3> is connected to nodes <2>, <1>.\nNode <4> is connected to nodes <2>, <5>.\nNode <5> is connected to nodes <6>, <1>, <0>, <4>.\nFind the connected component containing node <5>. \nAnswer:\n",
        "answer": "[<5>, <6>, <2>, <4>, <3>, <1>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 188,
        "question": "Given a directed graph:\nNode <0> is connected to node <5>.\nNode <5> is connected to nodes <0>, <4>, <1>.\nNode <3> is connected to node <4>.\nNode <2> is connected to nodes <0>, <4>, <3>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<1>]",
        "type": "connected_component"
    },
    {
        "index": 189,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <4>, <3>, <0>.\nNode <4> is connected to node <0>.\nNode <3> is connected to nodes <5>, <2>.\nNode <1> is connected to nodes <5>, <3>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<5>, <3>]",
        "type": "connected_component"
    },
    {
        "index": 190,
        "question": "Given a directed graph:\nNode <5> is connected to node <1>.\nNode <1> is connected to nodes <2>, <4>, <6>.\nNode <3> is connected to nodes <6>, <2>, <0>.\nNode <6> is connected to node <1>.\nNode <4> is connected to nodes <2>, <0>, <5>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<2>]",
        "type": "connected_component"
    },
    {
        "index": 191,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <3>, <1>, <4>.\nNode <3> is connected to nodes <0>, <2>.\nNode <1> is connected to node <3>.\nNode <4> is connected to nodes <0>, <3>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<4>, <0>, <3>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 192,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <4>, <0>.\nNode <1> is connected to nodes <0>, <3>, <4>.\nNode <4> is connected to node <3>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<1>, <0>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 193,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <2>, <0>.\nNode <3> is connected to nodes <1>, <0>, <4>.\nNode <1> is connected to nodes <0>, <4>.\nFind the strongly connected component containing node <5>. \nAnswer:\n",
        "answer": "[<2>, <4>, <1>, <3>, <5>]",
        "type": "connected_component"
    },
    {
        "index": 194,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to nodes <3>, <0>, <4>.\nNode <3> is connected to nodes <4>, <1>, <2>.\nNode <0> is connected to nodes <4>, <1>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<4>]",
        "type": "connected_component"
    },
    {
        "index": 195,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <4>, <1>.\nNode <0> is connected to node <1>.\nNode <4> is connected to node <3>.\nNode <1> is connected to nodes <2>, <0>.\nNode <3> is connected to nodes <4>, <1>, <0>.\nNode <5> is connected to nodes <0>, <1>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<3>, <4>, <1>, <0>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 196,
        "question": "Given a directed graph:\nNode <0> is connected to node <3>.\nNode <3> is connected to nodes <2>, <0>, <1>.\nNode <1> is connected to nodes <2>, <4>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<4>]",
        "type": "connected_component"
    },
    {
        "index": 197,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <2>, <0>, <6>, <1>.\nNode <4> is connected to nodes <5>, <3>.\nNode <2> is connected to nodes <5>, <0>.\nNode <0> is connected to nodes <5>, <3>, <6>, <2>.\nNode <6> is connected to nodes <5>, <0>, <1>.\nNode <1> is connected to nodes <5>, <6>.\nNode <3> is connected to nodes <4>, <0>.\nFind the connected component containing node <1>. \nAnswer:\n",
        "answer": "[<1>, <6>, <5>, <4>, <3>, <0>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 198,
        "question": "Given a directed graph:\nNode <0> is connected to node <2>.\nNode <2> is connected to nodes <1>, <5>.\nNode <3> is connected to nodes <1>, <5>, <4>.\nNode <1> is connected to node <2>.\nNode <5> is connected to node <4>.\nFind the strongly connected component containing node <5>. \nAnswer:\n",
        "answer": "[<5>]",
        "type": "connected_component"
    },
    {
        "index": 199,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <1>, <4>.\nNode <4> is connected to nodes <2>, <0>, <3>, <1>.\nNode <2> is connected to nodes <0>, <3>, <1>, <4>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<2>, <0>, <4>]",
        "type": "connected_component"
    },
    {
        "index": 200,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <5>, <3>.\nNode <3> is connected to nodes <0>, <5>.\nNode <2> is connected to node <3>.\nNode <5> is connected to node <3>.\nNode <0> is connected to node <5>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<2>]",
        "type": "connected_component"
    },
    {
        "index": 201,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <6>, <1>, <5>.\nNode <6> is connected to node <0>.\nNode <1> is connected to nodes <2>, <6>.\nNode <5> is connected to nodes <1>, <0>.\nNode <0> is connected to node <2>.\nNode <2> is connected to node <5>.\nNode <4> is connected to nodes <3>, <1>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<4>]",
        "type": "connected_component"
    },
    {
        "index": 202,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <0>, <3>, <1>.\nNode <3> is connected to node <6>.\nNode <5> is connected to nodes <2>, <6>.\nNode <2> is connected to nodes <3>, <6>, <5>, <4>.\nNode <6> is connected to nodes <1>, <0>.\nNode <0> is connected to node <3>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<4>, <1>, <6>, <3>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 203,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <6>.\nNode <4> is connected to nodes <6>, <0>, <3>.\nNode <6> is connected to nodes <4>, <2>.\nNode <0> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <2>, <6>, <0>.\nNode <5> is connected to node <4>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<6>, <3>, <4>, <2>, <1>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 204,
        "question": "Given a directed graph:\nNode <4> is connected to node <2>.\nNode <2> is connected to node <1>.\nNode <0> is connected to nodes <2>, <4>.\nNode <3> is connected to nodes <1>, <4>.\nNode <5> is connected to node <1>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<4>]",
        "type": "connected_component"
    },
    {
        "index": 205,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <2>, <4>.\nNode <4> is connected to node <2>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<0>]",
        "type": "connected_component"
    },
    {
        "index": 206,
        "question": "Given a directed graph:\nNode <0> is connected to node <1>.\nNode <1> is connected to nodes <5>, <3>, <4>, <0>.\nNode <5> is connected to nodes <3>, <2>.\nNode <4> is connected to nodes <0>, <3>.\nNode <2> is connected to node <3>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<4>, <1>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 207,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <0>, <1>, <3>.\nNode <5> is connected to node <2>.\nNode <0> is connected to node <2>.\nNode <1> is connected to nodes <2>, <4>.\nNode <3> is connected to node <2>.\nNode <4> is connected to node <1>.\nFind the connected component containing node <0>. \nAnswer:\n",
        "answer": "[<0>, <2>, <5>, <3>, <1>, <4>]",
        "type": "connected_component"
    },
    {
        "index": 208,
        "question": "Given a directed graph:\nNode <1> is connected to node <3>.\nNode <3> is connected to node <1>.\nNode <2> is connected to nodes <0>, <5>.\nNode <0> is connected to nodes <2>, <6>.\nNode <5> is connected to nodes <3>, <2>.\nNode <6> is connected to nodes <0>, <5>, <4>, <2>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<3>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 209,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <3>, <4>.\nNode <0> is connected to node <3>.\nNode <2> is connected to node <6>.\nNode <5> is connected to nodes <6>, <3>, <2>.\nNode <1> is connected to node <2>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<0>]",
        "type": "connected_component"
    },
    {
        "index": 210,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <5>, <3>, <0>.\nNode <5> is connected to node <0>.\nNode <3> is connected to nodes <0>, <4>, <5>.\nNode <2> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <4>, <2>.\nFind the strongly connected component containing node <5>. \nAnswer:\n",
        "answer": "[<5>]",
        "type": "connected_component"
    },
    {
        "index": 211,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <3>, <2>.\nNode <1> is connected to nodes <3>, <2>, <4>.\nNode <0> is connected to nodes <2>, <4>, <1>, <3>.\nNode <2> is connected to node <3>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<4>, <3>, <2>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 212,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <6>, <1>.\nNode <6> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <2>, <6>, <4>.\nNode <4> is connected to node <1>.\nNode <0> is connected to nodes <5>, <3>.\nNode <5> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <0>, <5>.\nFind the connected component containing node <2>. \nAnswer:\n",
        "answer": "[<2>, <6>, <1>, <4>]",
        "type": "connected_component"
    },
    {
        "index": 213,
        "question": "Given a directed graph:\nNode <5> is connected to node <1>.\nNode <1> is connected to nodes <4>, <0>.\nNode <4> is connected to node <5>.\nNode <3> is connected to nodes <1>, <2>, <5>.\nNode <2> is connected to nodes <5>, <4>, <0>, <1>.\nNode <0> is connected to node <4>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<3>]",
        "type": "connected_component"
    },
    {
        "index": 214,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <3>, <5>, <1>.\nNode <3> is connected to node <2>.\nNode <5> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <4>, <0>, <1>, <6>, <3>.\nNode <4> is connected to node <2>.\nNode <0> is connected to nodes <5>, <1>, <2>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<5>, <6>, <4>, <3>, <2>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 215,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <3>, <2>.\nNode <0> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <2>, <1>, <0>.\nNode <2> is connected to node <3>.\nNode <4> is connected to nodes <1>, <3>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<4>]",
        "type": "connected_component"
    },
    {
        "index": 216,
        "question": "Given a directed graph:\nNode <1> is connected to node <5>.\nNode <5> is connected to nodes <1>, <3>.\nNode <4> is connected to nodes <5>, <1>.\nNode <3> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <5>, <1>, <4>, <3>.\nNode <0> is connected to nodes <2>, <1>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<4>, <3>, <5>, <1>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 217,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <2>, <0>.\nNode <3> is connected to node <1>.\nNode <2> is connected to nodes <1>, <4>.\nNode <0> is connected to node <1>.\nNode <4> is connected to node <2>.\nFind the connected component containing node <4>. \nAnswer:\n",
        "answer": "[<4>, <2>, <1>, <3>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 218,
        "question": "Given a directed graph:\nNode <4> is connected to node <2>.\nNode <2> is connected to nodes <3>, <1>.\nNode <3> is connected to node <1>.\nNode <1> is connected to nodes <2>, <3>.\nNode <0> is connected to node <3>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<0>]",
        "type": "connected_component"
    },
    {
        "index": 219,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <5>, <3>.\nNode <5> is connected to nodes <1>, <6>.\nNode <2> is connected to nodes <4>, <0>, <3>.\nNode <4> is connected to nodes <1>, <5>.\nNode <0> is connected to node <1>.\nNode <1> is connected to nodes <2>, <4>, <0>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<6>, <5>, <4>, <2>, <0>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 220,
        "question": "Given a directed graph:\nNode <5> is connected to node <4>.\nNode <4> is connected to nodes <5>, <6>, <1>.\nNode <0> is connected to node <5>.\nNode <6> is connected to nodes <3>, <5>, <0>.\nNode <3> is connected to node <6>.\nNode <2> is connected to node <1>.\nFind the strongly connected component containing node <6>. \nAnswer:\n",
        "answer": "[<3>, <4>, <5>, <0>, <6>]",
        "type": "connected_component"
    },
    {
        "index": 221,
        "question": "Given a directed graph:\nNode <3> is connected to node <1>.\nNode <1> is connected to nodes <4>, <3>, <0>.\nNode <0> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <3>, <1>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<4>]",
        "type": "connected_component"
    },
    {
        "index": 222,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <5>, <2>.\nNode <5> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <5>, <3>, <1>.\nNode <0> is connected to node <4>.\nNode <1> is connected to nodes <2>, <5>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<0>, <5>, <1>, <2>, <4>]",
        "type": "connected_component"
    },
    {
        "index": 223,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <1>, <3>.\nNode <4> is connected to nodes <2>, <0>.\nNode <1> is connected to nodes <3>, <0>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<2>, <3>, <1>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 224,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <2>, <0>.\nNode <1> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <0>, <1>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<3>, <1>, <5>, <2>, <4>]",
        "type": "connected_component"
    },
    {
        "index": 225,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <5>, <2>.\nNode <0> is connected to node <3>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <2>, <5>.\nNode <4> is connected to node <0>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<2>, <3>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 226,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <5>, <3>.\nNode <1> is connected to nodes <3>, <0>, <4>, <5>.\nNode <5> is connected to nodes <3>, <0>.\nNode <2> is connected to node <5>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<0>]",
        "type": "connected_component"
    },
    {
        "index": 227,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <2>, <0>.\nNode <1> is connected to node <4>.\nNode <2> is connected to nodes <4>, <3>.\nNode <0> is connected to node <4>.\nNode <3> is connected to node <2>.\nFind the connected component containing node <3>. \nAnswer:\n",
        "answer": "[<3>, <2>, <4>, <1>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 228,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <4>, <3>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<2>]",
        "type": "connected_component"
    },
    {
        "index": 229,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <0>, <3>.\nNode <0> is connected to node <2>.\nNode <3> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <5>, <0>.\nNode <4> is connected to nodes <5>, <1>, <0>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<1>, <5>, <2>, <0>, <3>]",
        "type": "connected_component"
    },
    {
        "index": 230,
        "question": "Given a directed graph:\nNode <0> is connected to node <2>.\nNode <3> is connected to nodes <4>, <5>, <2>.\nNode <4> is connected to nodes <5>, <1>, <3>.\nNode <5> is connected to nodes <1>, <3>.\nNode <1> is connected to node <5>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<0>]",
        "type": "connected_component"
    },
    {
        "index": 231,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2>, <0>, <4>, <1>.\nNode <0> is connected to nodes <4>, <3>, <5>.\nNode <4> is connected to node <1>.\nNode <3> is connected to nodes <1>, <2>, <0>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<1>]",
        "type": "connected_component"
    },
    {
        "index": 232,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <2>, <0>, <4>.\nNode <0> is connected to nodes <5>, <2>.\nNode <2> is connected to nodes <0>, <1>.\nNode <5> is connected to node <1>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<4>]",
        "type": "connected_component"
    },
    {
        "index": 233,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <0>, <5>.\nNode <1> is connected to nodes <6>, <5>.\nNode <0> is connected to nodes <6>, <4>.\nNode <5> is connected to nodes <0>, <6>.\nNode <6> is connected to nodes <2>, <1>.\nNode <4> is connected to nodes <0>, <5>.\nNode <3> is connected to nodes <5>, <4>, <2>, <0>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<3>]",
        "type": "connected_component"
    },
    {
        "index": 234,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <6>.\nNode <2> is connected to nodes <3>, <0>, <5>.\nNode <6> is connected to node <5>.\nNode <5> is connected to nodes <2>, <0>, <1>.\nNode <0> is connected to node <5>.\nNode <3> is connected to node <5>.\nNode <4> is connected to nodes <3>, <0>, <1>, <5>, <2>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<6>, <2>, <1>, <0>, <5>, <3>]",
        "type": "connected_component"
    },
    {
        "index": 235,
        "question": "Given a directed graph:\nNode <0> is connected to node <2>.\nNode <6> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <0>, <5>.\nNode <4> is connected to nodes <3>, <1>, <0>.\nNode <3> is connected to nodes <1>, <6>, <5>.\nNode <5> is connected to node <0>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<3>]",
        "type": "connected_component"
    },
    {
        "index": 236,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <1>, <4>.\nNode <3> is connected to nodes <6>, <2>.\nNode <6> is connected to nodes <3>, <5>.\nNode <2> is connected to nodes <3>, <5>.\nNode <5> is connected to nodes <6>, <2>.\nFind the connected component containing node <4>. \nAnswer:\n",
        "answer": "[<4>, <1>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 237,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <0>.\nNode <1> is connected to node <4>.\nNode <0> is connected to nodes <4>, <3>, <2>.\nNode <3> is connected to node <0>.\nNode <2> is connected to node <0>.\nFind the connected component containing node <1>. \nAnswer:\n",
        "answer": "[<1>, <4>, <0>, <3>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 238,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <5>.\nNode <0> is connected to node <3>.\nNode <3> is connected to nodes <4>, <0>.\nNode <4> is connected to node <1>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<2>]",
        "type": "connected_component"
    },
    {
        "index": 239,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <2>, <4>.\nNode <0> is connected to node <2>.\nNode <2> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <2>, <3>, <0>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<1>, <2>, <0>, <3>]",
        "type": "connected_component"
    },
    {
        "index": 240,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <2>, <1>.\nNode <3> is connected to nodes <1>, <0>.\nNode <2> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <5>, <2>, <3>.\nNode <5> is connected to nodes <1>, <0>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<5>, <0>, <3>, <2>, <4>]",
        "type": "connected_component"
    },
    {
        "index": 241,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <4>, <1>.\nNode <4> is connected to nodes <1>, <3>, <5>.\nNode <1> is connected to nodes <5>, <2>, <4>.\nNode <5> is connected to nodes <2>, <3>, <0>.\nNode <2> is connected to nodes <1>, <3>, <5>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<5>, <3>, <2>, <1>, <4>]",
        "type": "connected_component"
    },
    {
        "index": 242,
        "question": "Given a directed graph:\nNode <4> is connected to node <0>.\nNode <0> is connected to nodes <4>, <1>.\nNode <3> is connected to node <0>.\nNode <5> is connected to nodes <1>, <0>.\nNode <6> is connected to nodes <3>, <1>, <0>, <5>.\nNode <2> is connected to nodes <1>, <6>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<1>]",
        "type": "connected_component"
    },
    {
        "index": 243,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2>, <3>, <0>.\nNode <2> is connected to nodes <0>, <5>.\nNode <3> is connected to nodes <0>, <4>.\nNode <0> is connected to node <1>.\nNode <1> is connected to node <0>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<0>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 244,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <4>.\nNode <2> is connected to node <0>.\nNode <4> is connected to nodes <1>, <5>.\nNode <5> is connected to nodes <4>, <1>, <0>, <3>.\nNode <1> is connected to nodes <3>, <4>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<5>, <1>, <4>, <3>]",
        "type": "connected_component"
    },
    {
        "index": 245,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <5>, <1>.\nNode <3> is connected to nodes <1>, <4>.\nNode <5> is connected to node <3>.\nNode <1> is connected to nodes <0>, <3>, <5>.\nNode <0> is connected to node <3>.\nNode <2> is connected to nodes <3>, <5>.\nFind the strongly connected component containing node <5>. \nAnswer:\n",
        "answer": "[<4>, <0>, <1>, <3>, <5>]",
        "type": "connected_component"
    },
    {
        "index": 246,
        "question": "Given a directed graph:\nNode <4> is connected to node <3>.\nNode <3> is connected to node <6>.\nNode <6> is connected to node <1>.\nNode <1> is connected to nodes <3>, <6>.\nNode <0> is connected to node <1>.\nNode <5> is connected to nodes <3>, <4>, <2>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<4>]",
        "type": "connected_component"
    },
    {
        "index": 247,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <0>, <4>.\nNode <5> is connected to nodes <1>, <3>.\nNode <0> is connected to nodes <1>, <3>.\nNode <4> is connected to nodes <1>, <2>.\nNode <3> is connected to nodes <5>, <0>.\nNode <2> is connected to node <4>.\nFind the connected component containing node <1>. \nAnswer:\n",
        "answer": "[<1>, <5>, <3>, <0>, <4>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 248,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <4>, <3>.\nNode <1> is connected to node <4>.\nNode <2> is connected to nodes <0>, <4>, <1>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<4>]",
        "type": "connected_component"
    },
    {
        "index": 249,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <1>, <2>.\nNode <0> is connected to nodes <5>, <3>.\nNode <2> is connected to node <1>.\nNode <5> is connected to nodes <1>, <3>, <4>.\nNode <3> is connected to node <2>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<1>]",
        "type": "connected_component"
    },
    {
        "index": 250,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <2>, <3>.\nNode <5> is connected to nodes <1>, <2>, <3>, <4>.\nNode <2> is connected to nodes <3>, <0>, <5>.\nNode <0> is connected to nodes <4>, <5>, <6>.\nNode <6> is connected to nodes <2>, <0>, <4>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<6>, <1>, <5>, <4>, <0>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 251,
        "question": "Given a directed graph:\nNode <0> is connected to node <2>.\nNode <2> is connected to nodes <4>, <1>, <0>.\nNode <5> is connected to nodes <2>, <4>.\nNode <4> is connected to node <2>.\nNode <3> is connected to nodes <4>, <1>, <5>.\nFind the strongly connected component containing node <5>. \nAnswer:\n",
        "answer": "[<5>]",
        "type": "connected_component"
    },
    {
        "index": 252,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <3>, <1>, <0>.\nNode <1> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <1>, <0>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<4>, <0>, <3>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 253,
        "question": "Given a directed graph:\nNode <2> is connected to node <3>.\nNode <3> is connected to node <0>.\nNode <0> is connected to nodes <1>, <4>.\nNode <1> is connected to node <0>.\nNode <4> is connected to node <1>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<4>, <1>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 254,
        "question": "Given a directed graph:\nNode <2> is connected to node <4>.\nNode <4> is connected to nodes <5>, <3>.\nNode <5> is connected to nodes <0>, <3>, <4>.\nNode <0> is connected to nodes <4>, <2>, <5>, <1>.\nNode <3> is connected to nodes <4>, <2>, <5>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<0>, <5>, <3>, <4>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 255,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2>, <1>, <0>, <3>.\nNode <2> is connected to node <1>.\nNode <1> is connected to node <6>.\nNode <0> is connected to node <2>.\nNode <3> is connected to nodes <2>, <1>, <0>.\nNode <6> is connected to nodes <2>, <1>.\nNode <4> is connected to node <6>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<6>, <1>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 256,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <2>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <2>, <4>.\nNode <0> is connected to nodes <2>, <4>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<3>]",
        "type": "connected_component"
    },
    {
        "index": 257,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <1>, <3>, <2>.\nNode <2> is connected to nodes <0>, <4>.\nNode <4> is connected to node <2>.\nFind the connected component containing node <3>. \nAnswer:\n",
        "answer": "[<3>, <1>, <0>, <2>, <4>]",
        "type": "connected_component"
    },
    {
        "index": 258,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <2>, <0>.\nNode <3> is connected to node <1>.\nNode <2> is connected to nodes <4>, <0>, <1>.\nNode <4> is connected to node <0>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<3>, <2>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 259,
        "question": "Given a directed graph:\nNode <3> is connected to node <2>.\nNode <2> is connected to nodes <0>, <4>.\nNode <1> is connected to nodes <0>, <4>.\nNode <0> is connected to node <4>.\nNode <4> is connected to nodes <2>, <3>, <0>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<3>, <4>, <0>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 260,
        "question": "Given a directed graph:\nNode <4> is connected to node <1>.\nNode <1> is connected to nodes <4>, <2>.\nNode <3> is connected to nodes <2>, <1>, <4>.\nNode <2> is connected to node <0>.\nNode <0> is connected to nodes <1>, <4>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<0>, <2>, <1>, <4>]",
        "type": "connected_component"
    },
    {
        "index": 261,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <5>, <0>.\nNode <5> is connected to nodes <3>, <4>, <2>.\nNode <0> is connected to nodes <2>, <5>.\nNode <4> is connected to nodes <2>, <0>.\nNode <1> is connected to node <3>.\nFind the strongly connected component containing node <5>. \nAnswer:\n",
        "answer": "[<4>, <0>, <3>, <5>]",
        "type": "connected_component"
    },
    {
        "index": 262,
        "question": "Given a directed graph:\nNode <4> is connected to node <3>.\nNode <3> is connected to nodes <4>, <1>, <2>, <0>.\nNode <1> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <3>, <1>, <2>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<1>, <0>, <3>, <4>]",
        "type": "connected_component"
    },
    {
        "index": 263,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <4>.\nNode <1> is connected to node <0>.\nNode <4> is connected to node <3>.\nNode <3> is connected to nodes <0>, <1>, <4>, <2>.\nNode <0> is connected to node <1>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<3>, <4>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 264,
        "question": "Given a directed graph:\nNode <4> is connected to node <0>.\nNode <0> is connected to node <1>.\nNode <1> is connected to nodes <3>, <2>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <1>.\nNode <5> is connected to nodes <3>, <2>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<3>, <0>, <2>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 265,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <6>, <2>.\nNode <3> is connected to nodes <6>, <2>.\nNode <6> is connected to nodes <0>, <1>, <3>.\nNode <2> is connected to nodes <4>, <1>, <3>.\nNode <5> is connected to node <1>.\nNode <1> is connected to node <5>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<0>]",
        "type": "connected_component"
    },
    {
        "index": 266,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <0>.\nNode <2> is connected to node <3>.\nNode <0> is connected to node <2>.\nNode <4> is connected to node <3>.\nNode <1> is connected to nodes <2>, <0>, <4>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<2>, <0>, <3>]",
        "type": "connected_component"
    },
    {
        "index": 267,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <6>, <1>.\nNode <3> is connected to nodes <2>, <0>, <1>, <5>.\nNode <6> is connected to nodes <2>, <0>, <4>.\nNode <1> is connected to nodes <2>, <3>, <4>, <5>.\nNode <0> is connected to nodes <3>, <6>.\nNode <5> is connected to nodes <3>, <1>.\nNode <4> is connected to nodes <6>, <1>.\nFind the connected component containing node <4>. \nAnswer:\n",
        "answer": "[<4>, <6>, <2>, <3>, <5>, <1>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 268,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <2>, <4>.\nNode <3> is connected to node <1>.\nNode <2> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <1>, <2>.\nNode <1> is connected to node <3>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<1>, <3>]",
        "type": "connected_component"
    },
    {
        "index": 269,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <2>, <0>.\nNode <1> is connected to node <5>.\nNode <2> is connected to nodes <0>, <5>.\nNode <0> is connected to nodes <5>, <1>, <2>.\nNode <5> is connected to nodes <1>, <0>.\nNode <4> is connected to nodes <3>, <5>, <1>.\nFind the strongly connected component containing node <5>. \nAnswer:\n",
        "answer": "[<2>, <1>, <0>, <5>]",
        "type": "connected_component"
    },
    {
        "index": 270,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <5>, <4>.\nNode <0> is connected to nodes <5>, <2>.\nNode <4> is connected to nodes <2>, <0>.\nNode <2> is connected to node <3>.\nNode <3> is connected to nodes <2>, <0>, <5>.\nFind the strongly connected component containing node <5>. \nAnswer:\n",
        "answer": "[<5>]",
        "type": "connected_component"
    },
    {
        "index": 271,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <2>, <0>.\nNode <0> is connected to node <3>.\nNode <3> is connected to nodes <1>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <6> is connected to nodes <1>, <2>, <4>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<4>, <2>, <1>, <3>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 272,
        "question": "Given a directed graph:\nNode <2> is connected to node <5>.\nNode <5> is connected to nodes <3>, <2>.\nNode <4> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <0>, <5>.\nNode <3> is connected to nodes <4>, <0>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<2>, <5>, <1>, <4>, <3>]",
        "type": "connected_component"
    },
    {
        "index": 273,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <3>, <1>, <4>.\nNode <3> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <2>, <0>.\nNode <4> is connected to nodes <5>, <0>, <6>, <3>, <1>.\nNode <2> is connected to nodes <5>, <0>, <6>, <1>.\nNode <0> is connected to node <2>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<4>, <3>, <6>, <1>, <0>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 274,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <4>, <0>.\nNode <2> is connected to nodes <3>, <1>, <0>.\nNode <4> is connected to nodes <0>, <3>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<2>]",
        "type": "connected_component"
    },
    {
        "index": 275,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <0>, <2>.\nNode <4> is connected to node <2>.\nNode <0> is connected to nodes <1>, <4>.\nNode <2> is connected to node <3>.\nNode <3> is connected to node <4>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<0>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 276,
        "question": "Given a directed graph:\nNode <1> is connected to node <2>.\nNode <2> is connected to node <1>.\nNode <0> is connected to nodes <3>, <2>, <1>.\nNode <3> is connected to nodes <4>, <5>.\nNode <5> is connected to nodes <4>, <1>, <0>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<2>, <1>]",
        "type": "connected_component"
    },
    {
        "index": 277,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <3>, <0>, <5>.\nNode <3> is connected to nodes <5>, <1>.\nNode <0> is connected to nodes <2>, <3>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<4>]",
        "type": "connected_component"
    },
    {
        "index": 278,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <1>, <5>.\nNode <4> is connected to nodes <2>, <5>.\nNode <1> is connected to node <2>.\nNode <5> is connected to nodes <2>, <4>, <3>.\nNode <3> is connected to nodes <0>, <5>.\nNode <0> is connected to node <3>.\nFind the connected component containing node <5>. \nAnswer:\n",
        "answer": "[<5>, <4>, <2>, <1>, <3>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 279,
        "question": "Given a directed graph:\nNode <4> is connected to node <5>.\nNode <5> is connected to nodes <4>, <2>, <3>, <0>.\nNode <2> is connected to nodes <3>, <0>, <5>.\nNode <3> is connected to nodes <5>, <2>.\nNode <0> is connected to nodes <4>, <3>.\nNode <1> is connected to node <0>.\nFind the strongly connected component containing node <5>. \nAnswer:\n",
        "answer": "[<4>, <2>, <3>, <0>, <5>]",
        "type": "connected_component"
    },
    {
        "index": 280,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <6>, <2>.\nNode <6> is connected to nodes <5>, <3>.\nNode <2> is connected to node <0>.\nNode <5> is connected to nodes <4>, <0>, <2>.\nNode <3> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <0>, <2>, <3>.\nFind the strongly connected component containing node <5>. \nAnswer:\n",
        "answer": "[<1>, <3>, <6>, <4>, <5>]",
        "type": "connected_component"
    },
    {
        "index": 281,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5>, <1>.\nNode <5> is connected to nodes <0>, <3>, <6>.\nNode <1> is connected to nodes <2>, <5>.\nNode <4> is connected to nodes <5>, <3>, <2>.\nNode <3> is connected to nodes <1>, <6>, <5>.\nNode <0> is connected to node <1>.\nNode <6> is connected to node <5>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<6>, <3>, <0>, <5>, <1>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 282,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <3>, <1>.\nNode <2> is connected to node <3>.\nNode <3> is connected to node <4>.\nNode <1> is connected to node <3>.\nNode <0> is connected to nodes <2>, <3>, <4>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<2>, <1>, <4>, <3>]",
        "type": "connected_component"
    },
    {
        "index": 283,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <4>, <0>.\nNode <4> is connected to node <2>.\nNode <0> is connected to nodes <5>, <6>, <1>.\nNode <1> is connected to node <5>.\nNode <5> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <5>, <1>, <4>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<4>, <3>, <5>, <1>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 284,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <3>, <1>, <2>.\nNode <2> is connected to nodes <0>, <3>, <1>, <4>.\nNode <3> is connected to nodes <1>, <4>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<4>, <3>, <2>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 285,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <1>, <5>.\nNode <4> is connected to nodes <1>, <5>, <3>.\nNode <1> is connected to nodes <3>, <2>, <0>.\nNode <5> is connected to node <1>.\nNode <0> is connected to nodes <4>, <1>, <5>.\nNode <3> is connected to nodes <2>, <4>, <5>.\nNode <6> is connected to nodes <3>, <2>, <4>.\nFind the strongly connected component containing node <4>. \nAnswer:\n",
        "answer": "[<3>, <2>, <5>, <0>, <1>, <4>]",
        "type": "connected_component"
    },
    {
        "index": 286,
        "question": "Given a directed graph:\nNode <0> is connected to node <4>.\nNode <4> is connected to nodes <0>, <2>, <3>.\nNode <2> is connected to node <0>.\nNode <1> is connected to nodes <3>, <0>.\nNode <3> is connected to node <0>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<2>, <4>, <0>, <3>]",
        "type": "connected_component"
    },
    {
        "index": 287,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <4>, <5>, <1>.\nNode <2> is connected to node <0>.\nNode <4> is connected to nodes <5>, <3>, <1>.\nNode <5> is connected to nodes <3>, <0>, <4>.\nFind the strongly connected component containing node <5>. \nAnswer:\n",
        "answer": "[<2>, <3>, <4>, <0>, <5>]",
        "type": "connected_component"
    },
    {
        "index": 288,
        "question": "Given an undirected graph:\nNode <5> is connected to node <3>.\nNode <3> is connected to nodes <5>, <2>, <1>.\nNode <2> is connected to nodes <3>, <4>.\nNode <1> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <2>, <0>, <1>.\nNode <0> is connected to node <4>.\nFind the connected component containing node <2>. \nAnswer:\n",
        "answer": "[<2>, <4>, <1>, <3>, <5>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 289,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <4>, <2>, <3>.\nNode <2> is connected to node <0>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<2>, <0>, <1>, <3>]",
        "type": "connected_component"
    },
    {
        "index": 290,
        "question": "Given a directed graph:\nNode <0> is connected to node <4>.\nNode <4> is connected to nodes <5>, <3>, <2>.\nNode <3> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <0>, <3>.\nNode <5> is connected to nodes <0>, <3>, <2>, <4>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<5>, <3>, <4>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 291,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <5>, <3>.\nNode <4> is connected to node <5>.\nNode <5> is connected to nodes <3>, <0>, <4>.\nNode <3> is connected to nodes <0>, <4>, <5>.\nNode <1> is connected to nodes <5>, <3>.\nNode <2> is connected to nodes <0>, <4>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<5>, <4>, <3>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 292,
        "question": "Given a directed graph:\nNode <5> is connected to node <2>.\nNode <0> is connected to nodes <3>, <5>.\nNode <3> is connected to node <5>.\nNode <1> is connected to nodes <4>, <5>, <2>.\nNode <4> is connected to nodes <0>, <1>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<0>]",
        "type": "connected_component"
    },
    {
        "index": 293,
        "question": "Given a directed graph:\nNode <2> is connected to node <4>.\nNode <4> is connected to node <2>.\nNode <1> is connected to nodes <3>, <4>, <2>.\nNode <3> is connected to node <1>.\nNode <0> is connected to nodes <4>, <5>, <1>.\nNode <5> is connected to nodes <0>, <3>.\nFind the strongly connected component containing node <5>. \nAnswer:\n",
        "answer": "[<0>, <5>]",
        "type": "connected_component"
    },
    {
        "index": 294,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <2>, <3>.\nNode <5> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <4>, <3>.\nFind the strongly connected component containing node <1>. \nAnswer:\n",
        "answer": "[<1>]",
        "type": "connected_component"
    },
    {
        "index": 295,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <5>, <1>.\nNode <5> is connected to nodes <1>, <0>, <4>.\nNode <1> is connected to nodes <0>, <4>, <3>.\nNode <4> is connected to nodes <3>, <1>, <2>.\nNode <3> is connected to node <0>.\nFind the strongly connected component containing node <0>. \nAnswer:\n",
        "answer": "[<5>, <4>, <3>, <1>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 296,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <4>, <3>.\nNode <2> is connected to nodes <0>, <4>, <3>.\nNode <0> is connected to nodes <4>, <3>, <2>.\nFind the strongly connected component containing node <2>. \nAnswer:\n",
        "answer": "[<0>, <2>]",
        "type": "connected_component"
    },
    {
        "index": 297,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <1>, <2>, <3>.\nNode <4> is connected to nodes <5>, <2>, <3>, <0>.\nNode <1> is connected to nodes <5>, <2>, <3>.\nNode <2> is connected to nodes <5>, <4>, <1>, <3>.\nNode <3> is connected to nodes <5>, <4>, <1>, <2>, <0>.\nNode <0> is connected to nodes <4>, <3>.\nFind the connected component containing node <5>. \nAnswer:\n",
        "answer": "[<5>, <4>, <3>, <2>, <1>, <0>]",
        "type": "connected_component"
    },
    {
        "index": 298,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <5>, <4>.\nNode <3> is connected to nodes <5>, <1>, <4>.\nNode <4> is connected to nodes <2>, <3>, <5>, <1>.\nNode <1> is connected to nodes <2>, <0>, <5>.\nNode <0> is connected to node <5>.\nFind the strongly connected component containing node <5>. \nAnswer:\n",
        "answer": "[<5>]",
        "type": "connected_component"
    },
    {
        "index": 299,
        "question": "Given a directed graph:\nNode <4> is connected to node <5>.\nNode <5> is connected to nodes <4>, <1>, <0>.\nNode <1> is connected to nodes <0>, <5>.\nNode <2> is connected to nodes <4>, <1>, <5>.\nNode <3> is connected to node <4>.\nFind the strongly connected component containing node <3>. \nAnswer:\n",
        "answer": "[<3>]",
        "type": "connected_component"
    },
    {
        "index": 0,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <3>, <1>, <6>.\nNode <2> is connected to nodes <5>, <4>, <1>.\nNode <3> is connected to nodes <5>, <4>, <6>.\nNode <1> is connected to nodes <5>, <2>.\nNode <6> is connected to nodes <5>, <3>, <0>.\nNode <4> is connected to nodes <2>, <0>, <3>.\nNode <0> is connected to nodes <4>, <6>.\nIs there a path between node <0> and node <5>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 1,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <0>.\nNode <0> is connected to node <3>.\nNode <4> is connected to nodes <1>, <2>.\nNode <3> is connected to nodes <0>, <2>.\nIs there a directed path from node <1> to node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 2,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <0>, <4>, <1>.\nNode <4> is connected to node <2>.\nNode <0> is connected to nodes <6>, <4>, <3>.\nNode <2> is connected to node <5>.\nNode <5> is connected to node <4>.\nNode <6> is connected to nodes <3>, <2>.\nIs there a directed path from node <0> to node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 3,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <0>, <1>, <4>.\nNode <3> is connected to node <2>.\nNode <0> is connected to node <4>.\nIs there a directed path from node <4> to node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 4,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1>, <2>, <0>, <3>.\nNode <1> is connected to nodes <5>, <2>, <4>, <3>.\nNode <2> is connected to nodes <5>, <1>, <4>.\nNode <0> is connected to nodes <5>, <4>.\nNode <3> is connected to nodes <5>, <1>.\nNode <4> is connected to nodes <1>, <2>, <0>.\nIs there a path between node <2> and node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 5,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <3>, <5>.\nNode <5> is connected to nodes <1>, <0>, <2>, <3>.\nIs there a directed path from node <1> to node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 6,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <1>, <2>.\nNode <3> is connected to nodes <1>, <0>.\nNode <2> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <2>, <3>.\nIs there a path between node <1> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 7,
        "question": "Given a directed graph:\nNode <5> is connected to node <2>.\nNode <2> is connected to node <1>.\nNode <4> is connected to nodes <2>, <5>.\nNode <3> is connected to nodes <1>, <4>.\nNode <1> is connected to node <4>.\nNode <0> is connected to nodes <4>, <3>, <1>.\nIs there a directed path from node <5> to node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 8,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <3>, <5>, <1>, <0>.\nNode <4> is connected to nodes <2>, <3>, <5>, <1>, <0>.\nNode <3> is connected to nodes <2>, <4>, <5>, <1>.\nNode <5> is connected to nodes <2>, <4>, <3>, <1>.\nNode <1> is connected to nodes <2>, <4>, <3>, <5>.\nNode <0> is connected to nodes <2>, <4>.\nIs there a path between node <4> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 9,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <3>.\nNode <4> is connected to node <3>.\nNode <3> is connected to nodes <2>, <1>, <4>.\nNode <0> is connected to node <1>.\nNode <5> is connected to nodes <1>, <4>, <3>.\nIs there a directed path from node <2> to node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 10,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <3>.\nNode <1> is connected to node <2>.\nNode <3> is connected to nodes <2>, <4>, <0>, <5>.\nNode <0> is connected to nodes <1>, <5>, <3>.\nNode <5> is connected to nodes <2>, <1>.\nIs there a directed path from node <2> to node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 11,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <1>, <3>, <5>, <4>.\nNode <0> is connected to nodes <2>, <3>, <5>.\nNode <1> is connected to nodes <2>, <6>, <4>.\nNode <3> is connected to nodes <2>, <0>, <6>.\nNode <5> is connected to nodes <2>, <0>.\nNode <4> is connected to nodes <2>, <1>.\nNode <6> is connected to nodes <1>, <3>.\nIs there a path between node <0> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 12,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <3>, <0>.\nNode <2> is connected to nodes <5>, <1>, <4>, <0>.\nNode <3> is connected to nodes <5>, <1>, <4>, <0>.\nNode <0> is connected to nodes <5>, <2>, <3>.\nNode <1> is connected to nodes <4>, <2>, <3>.\nNode <4> is connected to nodes <1>, <2>, <3>.\nIs there a path between node <1> and node <5>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 13,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <0>, <3>.\nNode <4> is connected to nodes <2>, <3>, <5>.\nIs there a directed path from node <0> to node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 14,
        "question": "Given a directed graph:\nNode <4> is connected to node <2>.\nNode <2> is connected to nodes <4>, <3>, <0>.\nNode <3> is connected to node <4>.\nNode <0> is connected to nodes <5>, <1>, <3>.\nNode <5> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <3>, <0>, <2>.\nIs there a directed path from node <2> to node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 15,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <1>, <5>, <2>.\nNode <1> is connected to node <3>.\nNode <5> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <4>, <3>.\nNode <4> is connected to node <3>.\nIs there a directed path from node <4> to node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 16,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <6>, <3>, <0>.\nNode <6> is connected to nodes <3>, <4>, <2>, <1>.\nNode <3> is connected to nodes <4>, <0>, <2>.\nNode <0> is connected to nodes <1>, <6>, <4>.\nNode <4> is connected to nodes <0>, <5>, <2>, <6>, <3>.\nIs there a directed path from node <2> to node <6>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 17,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <4>, <1>.\nNode <2> is connected to nodes <0>, <4>, <3>.\nNode <1> is connected to nodes <3>, <4>.\nNode <5> is connected to nodes <0>, <4>.\nIs there a directed path from node <4> to node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 18,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <4>, <3>, <2>.\nNode <4> is connected to nodes <3>, <2>, <0>.\nIs there a directed path from node <1> to node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 19,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <5>, <4>, <2>.\nNode <3> is connected to node <5>.\nNode <1> is connected to nodes <0>, <5>, <2>.\nNode <5> is connected to node <3>.\nNode <4> is connected to nodes <0>, <3>, <5>.\nIs there a directed path from node <5> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 20,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <5>, <2>, <4>.\nNode <5> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <4>, <3>, <1>, <5>.\nNode <4> is connected to node <5>.\nNode <1> is connected to nodes <0>, <2>, <3>.\nNode <0> is connected to node <4>.\nIs there a directed path from node <3> to node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 21,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <1>, <3>, <4>.\nNode <2> is connected to nodes <0>, <3>, <4>.\nNode <1> is connected to node <4>.\nIs there a directed path from node <4> to node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 22,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <0>, <4>.\nNode <2> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <2>, <4>.\nNode <0> is connected to nodes <1>, <5>.\nNode <5> is connected to nodes <4>, <3>.\nIs there a directed path from node <3> to node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 23,
        "question": "Given a directed graph:\nNode <1> is connected to node <6>.\nNode <6> is connected to nodes <5>, <3>.\nNode <5> is connected to nodes <4>, <6>.\nNode <4> is connected to node <0>.\nNode <3> is connected to node <2>.\nNode <2> is connected to nodes <3>, <0>.\nIs there a directed path from node <2> to node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 24,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to node <1>.\nNode <4> is connected to nodes <1>, <3>, <0>.\nNode <3> is connected to nodes <5>, <4>.\nNode <5> is connected to node <3>.\nNode <0> is connected to node <4>.\nIs there a path between node <3> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 25,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <0>, <3>.\nNode <3> is connected to node <1>.\nNode <0> is connected to nodes <5>, <2>, <1>.\nIs there a directed path from node <2> to node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 26,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <2>, <0>.\nNode <4> is connected to node <3>.\nNode <2> is connected to nodes <3>, <1>.\nNode <0> is connected to node <3>.\nNode <1> is connected to node <2>.\nIs there a path between node <3> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 27,
        "question": "Given a directed graph:\nNode <3> is connected to node <0>.\nNode <1> is connected to nodes <0>, <3>.\nNode <6> is connected to nodes <4>, <2>.\nNode <4> is connected to node <1>.\nNode <2> is connected to node <6>.\nNode <5> is connected to nodes <0>, <1>.\nIs there a directed path from node <0> to node <6>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 28,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <4>, <5>, <2>.\nNode <0> is connected to nodes <1>, <4>, <5>, <2>, <3>.\nNode <4> is connected to nodes <1>, <0>, <5>, <2>, <3>.\nNode <5> is connected to nodes <1>, <0>, <4>, <2>, <3>.\nNode <2> is connected to nodes <1>, <0>, <4>, <5>.\nNode <3> is connected to nodes <0>, <4>, <5>.\nIs there a path between node <4> and node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 29,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <4>.\nNode <2> is connected to node <3>.\nNode <4> is connected to nodes <3>, <2>.\nNode <0> is connected to node <3>.\nNode <1> is connected to nodes <3>, <0>.\nIs there a directed path from node <3> to node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 30,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <1>, <4>, <2>.\nNode <4> is connected to nodes <1>, <3>.\nNode <2> is connected to nodes <3>, <0>.\nNode <0> is connected to node <2>.\nIs there a path between node <1> and node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 31,
        "question": "Given a directed graph:\nNode <5> is connected to node <2>.\nNode <2> is connected to nodes <5>, <4>.\nNode <4> is connected to nodes <3>, <2>.\nNode <3> is connected to node <0>.\nNode <0> is connected to nodes <4>, <3>.\nNode <1> is connected to nodes <5>, <4>, <3>, <0>.\nIs there a directed path from node <0> to node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 32,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <0>, <5>, <2>.\nNode <3> is connected to nodes <6>, <5>, <1>.\nNode <0> is connected to nodes <5>, <1>, <3>, <4>, <6>.\nNode <2> is connected to nodes <1>, <4>, <0>.\nNode <6> is connected to node <2>.\nNode <4> is connected to nodes <6>, <0>, <5>, <1>, <3>.\nIs there a directed path from node <2> to node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 33,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <5>, <3>.\nNode <0> is connected to node <6>.\nNode <5> is connected to nodes <6>, <0>.\nNode <3> is connected to nodes <1>, <6>, <0>.\nNode <6> is connected to nodes <0>, <5>.\nNode <4> is connected to nodes <3>, <6>.\nNode <1> is connected to node <2>.\nIs there a directed path from node <6> to node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 34,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <1>, <4>, <0>.\nNode <3> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <2>, <3>, <5>, <4>.\nNode <4> is connected to nodes <2>, <1>, <5>, <0>, <6>.\nNode <0> is connected to nodes <2>, <4>.\nNode <5> is connected to nodes <1>, <4>.\nNode <6> is connected to node <4>.\nIs there a path between node <3> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 35,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <0>.\nNode <1> is connected to node <0>.\nNode <2> is connected to nodes <0>, <3>, <1>.\nNode <3> is connected to nodes <4>, <0>.\nIs there a directed path from node <0> to node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 36,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <1>, <0>.\nNode <2> is connected to nodes <5>, <4>, <1>, <0>.\nNode <1> is connected to nodes <5>, <3>, <4>, <2>, <0>.\nNode <0> is connected to nodes <5>, <3>, <4>, <2>, <1>.\nNode <3> is connected to nodes <4>, <1>, <0>.\nNode <4> is connected to nodes <3>, <2>, <1>, <0>.\nIs there a path between node <4> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 37,
        "question": "Given a directed graph:\nNode <6> is connected to node <1>.\nNode <1> is connected to nodes <0>, <2>, <6>, <4>.\nNode <4> is connected to nodes <1>, <5>, <0>.\nNode <5> is connected to node <3>.\nNode <2> is connected to nodes <3>, <6>, <4>, <1>, <5>, <0>.\nNode <3> is connected to node <5>.\nIs there a directed path from node <3> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 38,
        "question": "Given an undirected graph:\nNode <0> is connected to node <4>.\nNode <4> is connected to nodes <0>, <3>, <2>, <1>.\nNode <3> is connected to node <4>.\nNode <2> is connected to node <4>.\nNode <1> is connected to node <4>.\nIs there a path between node <2> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 39,
        "question": "Given a directed graph:\nNode <3> is connected to node <1>.\nNode <1> is connected to nodes <0>, <4>.\nNode <2> is connected to node <0>.\nNode <0> is connected to node <2>.\nNode <4> is connected to node <2>.\nIs there a directed path from node <1> to node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 40,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <4>, <2>, <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <2> is connected to node <1>.\nNode <0> is connected to node <1>.\nIs there a path between node <2> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 41,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5>, <6>.\nNode <6> is connected to node <0>.\nNode <1> is connected to nodes <3>, <5>, <4>, <0>.\nNode <3> is connected to nodes <4>, <6>, <1>.\nNode <2> is connected to nodes <3>, <4>.\nIs there a directed path from node <0> to node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 42,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <3>.\nNode <5> is connected to nodes <2>, <0>.\nNode <3> is connected to node <2>.\nNode <0> is connected to nodes <5>, <4>, <1>.\nNode <4> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <4>, <0>.\nIs there a path between node <4> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 43,
        "question": "Given a directed graph:\nNode <2> is connected to node <1>.\nNode <1> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <1>, <2>.\nNode <5> is connected to nodes <2>, <1>.\nNode <4> is connected to nodes <3>, <5>.\nNode <0> is connected to nodes <5>, <4>.\nIs there a directed path from node <2> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 44,
        "question": "Given an undirected graph:\nNode <4> is connected to node <0>.\nNode <0> is connected to nodes <4>, <1>, <2>, <3>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nIs there a path between node <2> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 45,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <5>, <2>.\nNode <4> is connected to nodes <2>, <0>.\nNode <0> is connected to node <5>.\nNode <5> is connected to node <3>.\nNode <1> is connected to nodes <0>, <5>.\nIs there a directed path from node <4> to node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 46,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <2>, <0>.\nNode <4> is connected to node <3>.\nNode <2> is connected to node <3>.\nNode <0> is connected to nodes <3>, <1>.\nNode <1> is connected to node <0>.\nIs there a path between node <0> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 47,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <3>, <2>, <1>.\nNode <3> is connected to node <0>.\nNode <2> is connected to node <1>.\nNode <1> is connected to node <2>.\nNode <0> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <2>, <1>.\nIs there a directed path from node <1> to node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 48,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <2>.\nNode <0> is connected to node <4>.\nNode <2> is connected to nodes <4>, <3>, <1>.\nNode <3> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <3>, <2>.\nIs there a path between node <3> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 49,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5>, <2>.\nNode <2> is connected to node <3>.\nNode <1> is connected to nodes <5>, <3>.\nNode <3> is connected to nodes <2>, <1>, <5>.\nNode <4> is connected to nodes <5>, <3>, <2>, <0>.\nIs there a directed path from node <5> to node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 50,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <1>, <2>, <5>.\nNode <4> is connected to nodes <3>, <1>, <5>.\nNode <1> is connected to nodes <3>, <4>, <0>, <5>.\nNode <2> is connected to nodes <3>, <0>, <5>.\nNode <5> is connected to nodes <3>, <4>, <0>, <1>, <2>.\nNode <0> is connected to nodes <1>, <2>, <5>.\nIs there a path between node <4> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 51,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <5>.\nNode <0> is connected to node <3>.\nNode <3> is connected to nodes <1>, <2>, <4>.\nNode <2> is connected to node <0>.\nIs there a directed path from node <5> to node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 52,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <4>, <5>, <0>.\nNode <1> is connected to node <2>.\nNode <4> is connected to node <2>.\nNode <5> is connected to nodes <2>, <6>.\nNode <0> is connected to nodes <2>, <3>.\nNode <6> is connected to node <5>.\nNode <3> is connected to node <0>.\nIs there a path between node <3> and node <6>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 53,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <2>, <4>, <6>, <3>.\nNode <0> is connected to node <5>.\nNode <2> is connected to nodes <4>, <5>, <6>, <3>, <1>, <0>.\nNode <4> is connected to node <0>.\nNode <3> is connected to nodes <2>, <6>.\nNode <5> is connected to nodes <6>, <4>.\nIs there a directed path from node <5> to node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 54,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <3>, <2>, <4>, <0>.\nNode <5> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <2> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <0> is connected to node <1>.\nIs there a path between node <0> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 55,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <5>.\nNode <5> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <4>, <5>, <2>.\nIs there a directed path from node <2> to node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 56,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <5>, <0>, <4>.\nNode <3> is connected to nodes <1>, <2>, <5>, <0>, <4>.\nNode <5> is connected to nodes <1>, <2>, <3>, <0>, <4>.\nNode <0> is connected to nodes <1>, <3>, <5>, <4>.\nNode <4> is connected to nodes <1>, <2>, <3>, <5>, <0>.\nNode <2> is connected to nodes <3>, <5>, <4>.\nIs there a path between node <0> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 57,
        "question": "Given a directed graph:\nNode <0> is connected to node <3>.\nNode <3> is connected to node <2>.\nNode <6> is connected to node <1>.\nNode <2> is connected to nodes <3>, <0>, <1>.\nNode <5> is connected to node <2>.\nNode <4> is connected to nodes <0>, <5>.\nIs there a directed path from node <0> to node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 58,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <6>, <5>, <4>, <3>.\nNode <6> is connected to nodes <5>, <0>.\nNode <5> is connected to nodes <1>, <3>, <6>.\nNode <4> is connected to nodes <3>, <2>, <6>.\nNode <3> is connected to nodes <2>, <0>, <6>, <5>, <1>, <4>.\nNode <1> is connected to node <0>.\nNode <2> is connected to nodes <0>, <6>, <5>, <1>.\nIs there a directed path from node <5> to node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 59,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <2>.\nNode <1> is connected to node <2>.\nNode <2> is connected to node <1>.\nNode <0> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <5>, <2>.\nNode <5> is connected to node <4>.\nIs there a directed path from node <5> to node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 60,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <2>.\nNode <5> is connected to nodes <3>, <1>.\nNode <2> is connected to nodes <3>, <0>.\nNode <1> is connected to node <5>.\nNode <0> is connected to nodes <2>, <4>.\nNode <4> is connected to node <0>.\nIs there a path between node <2> and node <5>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 61,
        "question": "Given a directed graph:\nNode <4> is connected to node <3>.\nNode <3> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <3>, <5>.\nNode <5> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <1>, <3>.\nNode <2> is connected to nodes <5>, <1>, <3>.\nIs there a directed path from node <1> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 62,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <1>.\nNode <5> is connected to nodes <0>, <3>, <6>.\nNode <1> is connected to node <0>.\nNode <3> is connected to nodes <5>, <6>.\nNode <6> is connected to nodes <5>, <2>, <3>.\nNode <4> is connected to node <2>.\nNode <2> is connected to nodes <4>, <6>.\nIs there a path between node <4> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 63,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <2> is connected to node <4>.\nNode <3> is connected to nodes <1>, <4>.\nNode <5> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <3>, <2>.\nNode <4> is connected to nodes <3>, <2>.\nIs there a directed path from node <0> to node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 64,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <1>, <3>.\nNode <2> is connected to nodes <1>, <3>, <4>.\nNode <3> is connected to nodes <0>, <2>.\nNode <4> is connected to node <2>.\nIs there a path between node <4> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 65,
        "question": "Given a directed graph:\nNode <4> is connected to node <0>.\nNode <0> is connected to nodes <4>, <2>, <5>, <1>.\nNode <2> is connected to node <0>.\nNode <5> is connected to node <2>.\nNode <1> is connected to nodes <4>, <3>, <2>.\nIs there a directed path from node <3> to node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 66,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <6>, <4>.\nNode <5> is connected to nodes <6>, <3>.\nNode <4> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <4>, <1>.\nNode <3> is connected to nodes <5>, <1>.\nNode <1> is connected to nodes <3>, <0>.\nIs there a path between node <1> and node <5>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 67,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <5>, <2>, <3>.\nNode <0> is connected to node <2>.\nNode <5> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <0>, <5>.\nNode <4> is connected to nodes <0>, <5>.\nIs there a directed path from node <2> to node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 68,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <0>, <3>.\nNode <1> is connected to node <4>.\nNode <0> is connected to nodes <5>, <1>.\nNode <3> is connected to nodes <1>, <0>, <5>.\nNode <5> is connected to node <0>.\nIs there a directed path from node <4> to node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 69,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <6>, <5>, <1>.\nNode <0> is connected to nodes <4>, <2>, <3>.\nNode <6> is connected to nodes <4>, <2>, <3>, <5>, <1>.\nNode <5> is connected to nodes <4>, <6>, <1>.\nNode <1> is connected to nodes <4>, <2>, <6>, <5>.\nNode <2> is connected to nodes <0>, <6>, <3>, <1>.\nNode <3> is connected to nodes <0>, <2>, <6>.\nIs there a path between node <1> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 70,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <2>, <5>.\nNode <3> is connected to nodes <0>, <1>.\nNode <2> is connected to node <0>.\nNode <5> is connected to nodes <0>, <4>.\nNode <1> is connected to node <3>.\nNode <4> is connected to node <5>.\nIs there a path between node <4> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 71,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <2>, <4>.\nNode <0> is connected to node <1>.\nNode <2> is connected to nodes <1>, <4>.\nNode <1> is connected to node <0>.\nIs there a directed path from node <4> to node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 72,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <1>, <3>, <2>.\nNode <4> is connected to node <0>.\nNode <1> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <2> is connected to node <0>.\nIs there a path between node <3> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 73,
        "question": "Given a directed graph:\nNode <0> is connected to node <3>.\nNode <1> is connected to node <2>.\nNode <2> is connected to node <1>.\nNode <4> is connected to node <3>.\nIs there a directed path from node <2> to node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 74,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <2>, <1>.\nNode <0> is connected to nodes <4>, <5>, <3>.\nNode <2> is connected to node <4>.\nNode <1> is connected to node <4>.\nNode <5> is connected to node <0>.\nNode <3> is connected to node <0>.\nIs there a path between node <0> and node <5>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 75,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <1>.\nNode <0> is connected to node <2>.\nNode <1> is connected to node <2>.\nNode <2> is connected to node <1>.\nNode <4> is connected to nodes <1>, <0>.\nIs there a directed path from node <0> to node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 76,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5>, <2>, <4>.\nNode <5> is connected to nodes <4>, <0>.\nNode <2> is connected to nodes <4>, <0>, <3>, <5>.\nNode <4> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <5>, <1>, <2>, <4>, <0>.\nNode <1> is connected to nodes <2>, <0>.\nIs there a directed path from node <2> to node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 77,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <6>, <2>.\nNode <1> is connected to nodes <3>, <6>, <2>, <0>, <5>.\nNode <6> is connected to nodes <2>, <0>, <1>.\nNode <2> is connected to nodes <0>, <5>, <1>, <3>.\nNode <5> is connected to nodes <1>, <6>, <2>, <0>.\nNode <4> is connected to nodes <3>, <6>, <2>, <0>, <1>.\nIs there a directed path from node <2> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 78,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <6>, <3>.\nNode <6> is connected to nodes <3>, <2>, <4>, <1>.\nNode <3> is connected to nodes <5>, <6>.\nNode <2> is connected to node <4>.\nNode <4> is connected to nodes <5>, <6>, <0>.\nNode <5> is connected to nodes <1>, <6>.\nNode <0> is connected to nodes <2>, <4>, <1>, <6>, <3>.\nIs there a directed path from node <5> to node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 79,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <5>, <2>.\nNode <3> is connected to nodes <0>, <6>, <5>.\nNode <5> is connected to nodes <0>, <1>, <6>, <4>.\nNode <2> is connected to nodes <0>, <5>.\nNode <4> is connected to nodes <5>, <0>, <1>, <6>.\nIs there a directed path from node <6> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 80,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <0>, <3>, <2>.\nNode <5> is connected to nodes <4>, <1>.\nNode <0> is connected to node <4>.\nNode <3> is connected to node <4>.\nNode <2> is connected to node <4>.\nNode <1> is connected to node <5>.\nIs there a path between node <1> and node <5>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 81,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <1>, <4>.\nNode <0> is connected to nodes <1>, <4>, <3>, <2>.\nNode <4> is connected to nodes <3>, <0>, <1>.\nNode <3> is connected to nodes <0>, <4>.\nIs there a directed path from node <1> to node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 82,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <3>, <5>.\nNode <2> is connected to nodes <3>, <0>.\nNode <5> is connected to nodes <4>, <6>.\nNode <6> is connected to nodes <5>, <0>.\nNode <0> is connected to nodes <6>, <2>, <1>.\nNode <1> is connected to node <0>.\nIs there a path between node <6> and node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 83,
        "question": "Given a directed graph:\nNode <4> is connected to node <1>.\nNode <1> is connected to nodes <3>, <0>, <4>.\nNode <3> is connected to node <4>.\nNode <0> is connected to nodes <4>, <1>.\nNode <2> is connected to nodes <4>, <1>, <0>.\nIs there a directed path from node <4> to node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 84,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <6>.\nNode <2> is connected to nodes <3>, <4>.\nNode <6> is connected to nodes <1>, <4>, <2>.\nNode <3> is connected to nodes <5>, <0>.\nNode <1> is connected to nodes <3>, <2>.\nNode <0> is connected to nodes <3>, <5>, <4>.\nNode <5> is connected to nodes <6>, <1>, <3>.\nIs there a directed path from node <6> to node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 85,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <3>, <1>.\nNode <4> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <3>, <1>, <2>.\nIs there a directed path from node <1> to node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 86,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <1>.\nNode <2> is connected to node <4>.\nNode <1> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <1>, <3>.\nNode <3> is connected to node <0>.\nIs there a path between node <2> and node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 87,
        "question": "Given a directed graph:\nNode <3> is connected to node <4>.\nNode <2> is connected to nodes <0>, <4>, <1>.\nNode <0> is connected to nodes <4>, <1>, <3>, <2>.\nIs there a directed path from node <3> to node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 88,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <1>.\nNode <3> is connected to node <0>.\nNode <1> is connected to nodes <0>, <2>, <4>.\nNode <2> is connected to nodes <1>, <5>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <2>.\nIs there a path between node <0> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 89,
        "question": "Given a directed graph:\nNode <2> is connected to node <1>.\nNode <1> is connected to node <4>.\nNode <4> is connected to node <1>.\nNode <3> is connected to node <0>.\nNode <0> is connected to nodes <4>, <1>, <3>.\nIs there a directed path from node <2> to node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 90,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <0>, <2>.\nNode <3> is connected to nodes <0>, <4>.\nNode <2> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <3>, <2>.\nIs there a path between node <0> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 91,
        "question": "Given a directed graph:\nNode <2> is connected to node <3>.\nNode <3> is connected to node <2>.\nNode <1> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <3>, <1>.\nNode <0> is connected to nodes <2>, <3>.\nIs there a directed path from node <2> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 92,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <4>, <0>.\nNode <2> is connected to nodes <3>, <1>, <0>.\nNode <4> is connected to nodes <3>, <1>, <0>, <5>.\nNode <0> is connected to nodes <3>, <2>, <1>, <4>, <5>.\nNode <1> is connected to nodes <2>, <4>, <0>, <5>.\nNode <5> is connected to nodes <1>, <4>, <0>.\nIs there a path between node <4> and node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 93,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <2>, <4>, <3>.\nNode <3> is connected to nodes <1>, <5>, <0>.\nNode <0> is connected to node <4>.\nNode <2> is connected to node <1>.\nIs there a directed path from node <5> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 94,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <2>, <3>.\nNode <4> is connected to nodes <2>, <1>, <6>.\nNode <3> is connected to nodes <5>, <0>.\nNode <1> is connected to node <4>.\nNode <6> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <6>, <3>.\nIs there a path between node <0> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 95,
        "question": "Given a directed graph:\nNode <1> is connected to node <0>.\nNode <5> is connected to node <1>.\nNode <4> is connected to nodes <2>, <1>, <5>, <0>.\nNode <2> is connected to nodes <5>, <0>.\nNode <3> is connected to node <2>.\nIs there a directed path from node <0> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 96,
        "question": "Given an undirected graph:\nNode <5> is connected to node <2>.\nNode <2> is connected to nodes <5>, <3>.\nNode <3> is connected to nodes <2>, <0>.\nNode <1> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <1>, <4>, <3>.\nIs there a path between node <2> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 97,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2>, <4>, <3>, <1>.\nNode <4> is connected to nodes <0>, <1>, <2>.\nNode <3> is connected to node <2>.\nNode <0> is connected to nodes <2>, <4>.\nIs there a directed path from node <2> to node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 98,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <0>, <6>.\nNode <1> is connected to nodes <0>, <5>.\nNode <6> is connected to nodes <4>, <5>.\nNode <2> is connected to node <3>.\nNode <3> is connected to nodes <2>, <5>.\nNode <5> is connected to nodes <3>, <6>, <1>.\nIs there a path between node <0> and node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 99,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <0>, <3>.\nNode <1> is connected to nodes <2>, <4>.\nNode <0> is connected to node <4>.\nNode <3> is connected to node <2>.\nIs there a directed path from node <2> to node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 100,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <2>, <1>.\nNode <4> is connected to nodes <5>, <0>.\nNode <2> is connected to node <5>.\nNode <1> is connected to nodes <5>, <3>.\nNode <0> is connected to node <4>.\nNode <3> is connected to node <1>.\nIs there a path between node <2> and node <5>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 101,
        "question": "Given a directed graph:\nNode <5> is connected to node <3>.\nNode <3> is connected to node <4>.\nNode <2> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <3>, <0>.\nNode <4> is connected to nodes <3>, <5>.\nIs there a directed path from node <3> to node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 102,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <0>, <4>.\nNode <0> is connected to nodes <3>, <2>.\nNode <4> is connected to node <2>.\nNode <5> is connected to node <0>.\nNode <1> is connected to nodes <4>, <5>.\nIs there a directed path from node <2> to node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 103,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <4>, <2>.\nNode <5> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <3>, <5>, <1>.\nNode <1> is connected to nodes <2>, <0>.\nNode <0> is connected to node <1>.\nIs there a path between node <5> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 104,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <5>, <1>.\nNode <0> is connected to nodes <2>, <3>.\nNode <5> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <2>, <0>, <5>.\nNode <3> is connected to node <0>.\nNode <2> is connected to nodes <4>, <3>.\nIs there a directed path from node <3> to node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 105,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <6>, <1>, <2>, <0>.\nNode <3> is connected to nodes <6>, <1>, <2>, <0>, <4>.\nNode <6> is connected to nodes <1>, <0>, <5>, <4>, <3>.\nNode <1> is connected to nodes <2>, <0>, <4>, <3>.\nNode <2> is connected to nodes <0>, <5>, <4>.\nNode <0> is connected to nodes <5>, <3>, <1>.\nIs there a directed path from node <5> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 106,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <5>, <4>, <3>, <2>.\nNode <1> is connected to node <0>.\nNode <5> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <2> is connected to node <0>.\nIs there a path between node <5> and node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 107,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <1>, <0>, <4>.\nNode <3> is connected to node <4>.\nNode <1> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <2>, <1>.\nIs there a directed path from node <4> to node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 108,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <3>.\nNode <1> is connected to node <0>.\nNode <3> is connected to nodes <0>, <2>, <4>.\nNode <2> is connected to node <3>.\nNode <4> is connected to node <3>.\nIs there a path between node <0> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 109,
        "question": "Given a directed graph:\nNode <1> is connected to node <5>.\nNode <5> is connected to node <2>.\nNode <4> is connected to nodes <2>, <3>.\nNode <2> is connected to node <3>.\nNode <3> is connected to nodes <0>, <2>.\nIs there a directed path from node <0> to node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 110,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <0>, <1>.\nNode <2> is connected to node <4>.\nNode <0> is connected to node <4>.\nNode <1> is connected to nodes <4>, <5>, <3>.\nNode <5> is connected to node <1>.\nNode <3> is connected to node <1>.\nIs there a path between node <0> and node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 111,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1>, <5>, <3>.\nNode <1> is connected to node <3>.\nNode <5> is connected to node <2>.\nNode <3> is connected to node <5>.\nNode <2> is connected to nodes <3>, <1>.\nNode <4> is connected to nodes <5>, <0>, <2>.\nNode <6> is connected to nodes <0>, <4>.\nIs there a directed path from node <2> to node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 112,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <0>, <2>, <3>.\nNode <5> is connected to node <1>.\nNode <0> is connected to nodes <1>, <4>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <0>.\nIs there a path between node <2> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 113,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <6>, <0>, <3>.\nNode <6> is connected to nodes <5>, <1>.\nNode <3> is connected to nodes <5>, <0>.\nNode <1> is connected to node <5>.\nNode <2> is connected to nodes <4>, <6>, <0>.\nNode <4> is connected to node <1>.\nIs there a directed path from node <3> to node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 114,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <0>, <1>.\nNode <2> is connected to nodes <0>, <4>.\nNode <1> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <2>, <1>, <5>.\nNode <5> is connected to node <4>.\nIs there a path between node <4> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 115,
        "question": "Given a directed graph:\nNode <3> is connected to node <2>.\nNode <2> is connected to node <3>.\nNode <1> is connected to nodes <5>, <3>.\nNode <5> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <2>, <3>.\nNode <0> is connected to nodes <4>, <2>, <1>.\nIs there a directed path from node <3> to node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 116,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <5>, <3>.\nNode <2> is connected to nodes <0>, <4>.\nNode <5> is connected to node <0>.\nNode <3> is connected to nodes <0>, <6>, <4>.\nNode <4> is connected to nodes <2>, <3>.\nNode <1> is connected to node <6>.\nNode <6> is connected to nodes <1>, <3>.\nIs there a path between node <0> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 117,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <5>, <4>.\nNode <0> is connected to nodes <2>, <1>.\nNode <5> is connected to nodes <1>, <0>.\nNode <4> is connected to nodes <1>, <0>, <2>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <4>.\nIs there a directed path from node <5> to node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 118,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <3>, <5>.\nNode <0> is connected to nodes <5>, <1>.\nNode <3> is connected to node <5>.\nNode <5> is connected to node <1>.\nNode <1> is connected to nodes <3>, <5>.\nNode <2> is connected to nodes <3>, <5>.\nIs there a directed path from node <0> to node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 119,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <4>, <0>.\nNode <3> is connected to nodes <4>, <1>.\nNode <0> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <0>, <3>.\nIs there a path between node <4> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 120,
        "question": "Given a directed graph:\nNode <0> is connected to node <4>.\nNode <4> is connected to node <5>.\nNode <5> is connected to nodes <4>, <1>.\nNode <1> is connected to node <3>.\nNode <3> is connected to nodes <2>, <0>, <4>, <1>.\nNode <2> is connected to node <4>.\nIs there a directed path from node <5> to node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 121,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2>, <1>, <0>.\nNode <2> is connected to node <4>.\nNode <1> is connected to nodes <3>, <2>.\nNode <0> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <4>, <1>.\nIs there a directed path from node <2> to node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 122,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <6>, <3>, <0>, <5>, <1>.\nNode <6> is connected to nodes <4>, <0>, <5>, <1>.\nNode <3> is connected to nodes <4>, <0>, <2>, <1>.\nNode <0> is connected to nodes <4>, <6>, <3>, <2>, <5>.\nNode <5> is connected to nodes <4>, <6>, <0>.\nNode <1> is connected to nodes <4>, <6>, <3>, <2>.\nNode <2> is connected to nodes <3>, <0>, <1>.\nIs there a path between node <0> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 123,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <0>, <1>, <3>.\nNode <1> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <5>, <2>, <1>.\nNode <5> is connected to node <4>.\nIs there a directed path from node <4> to node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 124,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <0>, <5>, <1>.\nNode <3> is connected to nodes <2>, <4>.\nNode <0> is connected to node <2>.\nNode <5> is connected to node <2>.\nNode <1> is connected to node <2>.\nNode <4> is connected to node <3>.\nIs there a path between node <3> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 125,
        "question": "Given a directed graph:\nNode <5> is connected to node <1>.\nNode <1> is connected to node <5>.\nNode <0> is connected to nodes <4>, <1>.\nNode <4> is connected to node <6>.\nNode <2> is connected to node <5>.\nNode <3> is connected to node <1>.\nIs there a directed path from node <4> to node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 126,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <6>.\nNode <0> is connected to nodes <2>, <4>.\nNode <6> is connected to nodes <2>, <5>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <3>, <6>.\nNode <3> is connected to nodes <5>, <1>.\nNode <1> is connected to nodes <3>, <4>.\nIs there a path between node <0> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 127,
        "question": "Given a directed graph:\nNode <4> is connected to node <5>.\nNode <5> is connected to nodes <4>, <1>, <2>, <3>.\nNode <1> is connected to nodes <2>, <3>, <5>, <4>.\nNode <2> is connected to node <5>.\nNode <3> is connected to nodes <5>, <2>.\nNode <0> is connected to nodes <5>, <3>.\nIs there a directed path from node <3> to node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 128,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <2>, <4>.\nNode <3> is connected to node <1>.\nNode <2> is connected to nodes <1>, <4>, <0>.\nNode <4> is connected to nodes <1>, <2>.\nNode <0> is connected to node <2>.\nIs there a path between node <4> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 129,
        "question": "Given a directed graph:\nNode <3> is connected to node <0>.\nNode <2> is connected to nodes <5>, <3>.\nNode <1> is connected to nodes <5>, <2>.\nNode <4> is connected to nodes <0>, <5>, <3>, <2>.\nIs there a directed path from node <0> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 130,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <2>, <1>.\nNode <3> is connected to node <0>.\nNode <2> is connected to nodes <0>, <4>.\nNode <1> is connected to nodes <0>, <5>.\nNode <4> is connected to node <2>.\nNode <5> is connected to node <1>.\nIs there a path between node <4> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 131,
        "question": "Given a directed graph:\nNode <4> is connected to node <3>.\nNode <3> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <0>, <4>.\nNode <2> is connected to nodes <1>, <0>, <3>.\nNode <0> is connected to node <3>.\nIs there a directed path from node <3> to node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 132,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>, <1>, <2>, <3>.\nNode <4> is connected to nodes <0>, <5>, <1>, <3>.\nNode <5> is connected to nodes <0>, <4>, <1>, <2>.\nNode <1> is connected to nodes <0>, <4>, <5>, <2>, <3>.\nNode <2> is connected to nodes <0>, <5>, <1>, <3>.\nNode <3> is connected to nodes <0>, <4>, <1>, <2>.\nIs there a path between node <3> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 133,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <1>.\nNode <2> is connected to node <4>.\nNode <1> is connected to node <2>.\nNode <4> is connected to node <3>.\nNode <0> is connected to node <1>.\nIs there a directed path from node <4> to node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 134,
        "question": "Given an undirected graph:\nNode <0> is connected to node <1>.\nNode <1> is connected to nodes <0>, <2>, <4>.\nNode <2> is connected to nodes <1>, <5>, <3>.\nNode <4> is connected to node <1>.\nNode <5> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <2>, <5>.\nIs there a path between node <3> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 135,
        "question": "Given a directed graph:\nNode <3> is connected to node <1>.\nNode <1> is connected to nodes <3>, <0>.\nNode <2> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <1>, <5>.\nNode <4> is connected to nodes <1>, <2>, <5>.\nNode <5> is connected to node <3>.\nIs there a directed path from node <1> to node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 136,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <1>.\nNode <5> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <2>, <3>.\nNode <4> is connected to nodes <5>, <0>.\nNode <3> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <4>, <3>.\nIs there a path between node <1> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 137,
        "question": "Given a directed graph:\nNode <2> is connected to node <3>.\nNode <3> is connected to nodes <1>, <2>, <0>.\nNode <4> is connected to nodes <1>, <0>.\nIs there a directed path from node <2> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 138,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <2>, <0>.\nNode <1> is connected to nodes <4>, <3>.\nNode <2> is connected to node <4>.\nNode <0> is connected to node <4>.\nNode <3> is connected to node <1>.\nIs there a path between node <2> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 139,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <0>, <6>.\nNode <3> is connected to nodes <0>, <6>, <2>.\nNode <0> is connected to nodes <2>, <3>.\nNode <6> is connected to node <3>.\nNode <2> is connected to nodes <1>, <3>, <5>, <6>.\nNode <5> is connected to node <2>.\nNode <4> is connected to node <3>.\nIs there a directed path from node <0> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 140,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <2>, <6>, <3>.\nNode <5> is connected to nodes <4>, <2>, <6>, <0>, <1>.\nNode <2> is connected to nodes <4>, <5>, <6>, <3>, <0>.\nNode <6> is connected to nodes <4>, <5>, <2>, <3>, <0>, <1>.\nNode <3> is connected to nodes <4>, <2>, <6>, <0>, <1>.\nNode <0> is connected to nodes <5>, <2>, <6>, <3>, <1>.\nNode <1> is connected to nodes <5>, <6>, <3>, <0>.\nIs there a path between node <1> and node <6>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 141,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1>, <2>.\nNode <1> is connected to node <0>.\nNode <2> is connected to nodes <3>, <0>, <1>.\nNode <4> is connected to node <0>.\nNode <3> is connected to nodes <1>, <2>.\nIs there a directed path from node <1> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 142,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <5>, <0>, <3>.\nNode <2> is connected to node <4>.\nNode <5> is connected to node <3>.\nNode <0> is connected to nodes <4>, <1>.\nNode <3> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <1>, <2>, <5>.\nIs there a directed path from node <3> to node <5>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 143,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <0>.\nNode <2> is connected to node <3>.\nNode <0> is connected to node <2>.\nNode <1> is connected to node <4>.\nIs there a directed path from node <0> to node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 144,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <2>, <4>, <5>, <3>.\nNode <6> is connected to node <1>.\nNode <1> is connected to nodes <6>, <3>.\nNode <3> is connected to nodes <1>, <0>.\nNode <5> is connected to node <0>.\nIs there a path between node <1> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 145,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <5>, <6>.\nNode <2> is connected to nodes <5>, <3>, <1>.\nNode <5> is connected to nodes <4>, <1>, <2>, <0>.\nNode <1> is connected to node <0>.\nNode <3> is connected to nodes <6>, <0>.\nIs there a directed path from node <1> to node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 146,
        "question": "Given an undirected graph:\nNode <4> is connected to node <0>.\nNode <0> is connected to nodes <4>, <1>, <3>.\nNode <1> is connected to node <0>.\nNode <3> is connected to nodes <0>, <2>.\nNode <2> is connected to node <3>.\nIs there a path between node <4> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 147,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <0>, <1>, <3>.\nNode <0> is connected to nodes <1>, <3>, <2>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <1>.\nIs there a directed path from node <4> to node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 148,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <2>, <3>, <4>, <1>.\nNode <4> is connected to nodes <2>, <0>.\nNode <3> is connected to node <0>.\nNode <1> is connected to node <0>.\nIs there a path between node <3> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 149,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <4>, <1>.\nNode <3> is connected to nodes <4>, <2>.\nNode <4> is connected to node <2>.\nNode <1> is connected to node <2>.\nNode <0> is connected to node <4>.\nIs there a directed path from node <2> to node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 150,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <3>.\nNode <0> is connected to node <2>.\nNode <3> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <1>, <3>.\nNode <1> is connected to node <4>.\nIs there a path between node <4> and node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 151,
        "question": "Given a directed graph:\nNode <1> is connected to node <3>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <3>, <2>, <1>.\nNode <2> is connected to nodes <4>, <3>.\nNode <0> is connected to node <5>.\nNode <5> is connected to nodes <2>, <1>, <4>.\nIs there a directed path from node <4> to node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 152,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <5>.\nNode <1> is connected to node <2>.\nNode <5> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <0>, <5>, <3>.\nNode <0> is connected to node <4>.\nNode <3> is connected to node <4>.\nIs there a path between node <4> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 153,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <6>, <1>, <5>.\nNode <6> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <5>, <3>, <0>.\nNode <5> is connected to nodes <4>, <2>, <1>.\nNode <3> is connected to nodes <2>, <0>, <4>.\nNode <0> is connected to nodes <4>, <2>.\nIs there a directed path from node <2> to node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 154,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <0>, <4>, <3>.\nNode <1> is connected to node <2>.\nNode <0> is connected to node <2>.\nNode <4> is connected to nodes <2>, <5>.\nNode <3> is connected to node <2>.\nNode <5> is connected to node <4>.\nIs there a path between node <3> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 155,
        "question": "Given a directed graph:\nNode <1> is connected to node <4>.\nNode <0> is connected to nodes <5>, <2>, <3>.\nNode <2> is connected to nodes <1>, <5>.\nNode <3> is connected to nodes <0>, <5>, <2>.\nNode <6> is connected to nodes <4>, <0>, <5>.\nIs there a directed path from node <1> to node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 156,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <3>, <2>.\nNode <0> is connected to nodes <1>, <4>, <6>.\nNode <3> is connected to nodes <1>, <5>, <2>.\nNode <2> is connected to nodes <1>, <3>.\nNode <4> is connected to node <0>.\nNode <6> is connected to node <0>.\nNode <5> is connected to node <3>.\nIs there a path between node <5> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 157,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <6>, <1>, <0>.\nNode <6> is connected to nodes <4>, <0>, <5>.\nNode <1> is connected to nodes <0>, <2>, <6>.\nNode <0> is connected to nodes <5>, <2>, <6>, <3>.\nNode <2> is connected to node <5>.\nNode <4> is connected to node <2>.\nIs there a directed path from node <3> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 158,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <1>, <5>, <2>, <3>.\nNode <0> is connected to node <4>.\nNode <1> is connected to node <4>.\nNode <5> is connected to node <4>.\nNode <2> is connected to node <4>.\nNode <3> is connected to node <4>.\nIs there a path between node <0> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 159,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <4>, <0>.\nNode <0> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <2> is connected to nodes <4>, <3>.\nIs there a directed path from node <0> to node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 160,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <2>, <1>.\nNode <0> is connected to nodes <2>, <3>, <1>, <4>.\nNode <2> is connected to nodes <1>, <0>.\nNode <3> is connected to node <1>.\nIs there a directed path from node <2> to node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 161,
        "question": "Given a directed graph:\nNode <0> is connected to node <3>.\nNode <4> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <1>, <0>.\nNode <1> is connected to node <4>.\nNode <5> is connected to nodes <0>, <4>.\nIs there a directed path from node <3> to node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 162,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <0>, <5>, <1>.\nNode <3> is connected to node <0>.\nNode <5> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <2>, <4>, <5>.\nNode <4> is connected to node <1>.\nIs there a path between node <3> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 163,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1>, <5>, <2>, <4>.\nNode <1> is connected to nodes <5>, <3>, <4>.\nNode <5> is connected to nodes <3>, <4>.\nNode <2> is connected to nodes <3>, <0>, <1>, <5>.\nIs there a directed path from node <3> to node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 164,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <0>, <4>.\nNode <1> is connected to nodes <2>, <4>, <3>.\nNode <0> is connected to node <2>.\nNode <4> is connected to nodes <2>, <1>.\nNode <3> is connected to node <1>.\nIs there a path between node <0> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 165,
        "question": "Given a directed graph:\nNode <2> is connected to node <3>.\nNode <3> is connected to node <2>.\nNode <0> is connected to nodes <4>, <5>, <3>.\nNode <4> is connected to node <3>.\nNode <5> is connected to node <3>.\nNode <1> is connected to nodes <4>, <5>.\nIs there a directed path from node <4> to node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 166,
        "question": "Given a directed graph:\nNode <1> is connected to node <4>.\nNode <4> is connected to nodes <1>, <5>, <0>.\nNode <5> is connected to node <2>.\nNode <2> is connected to nodes <3>, <1>, <5>.\nNode <3> is connected to node <4>.\nNode <0> is connected to nodes <5>, <2>.\nIs there a directed path from node <3> to node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 167,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <2>, <1>.\nNode <2> is connected to node <3>.\nNode <1> is connected to nodes <0>, <2>.\nIs there a directed path from node <4> to node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 168,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <2>, <4>.\nNode <5> is connected to nodes <0>, <1>, <2>, <4>.\nNode <2> is connected to nodes <0>, <1>, <5>, <4>, <3>.\nNode <4> is connected to nodes <0>, <1>, <5>, <2>, <3>.\nNode <1> is connected to nodes <5>, <2>, <4>, <3>.\nNode <3> is connected to nodes <1>, <2>, <4>.\nIs there a path between node <0> and node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 169,
        "question": "Given a directed graph:\nNode <3> is connected to node <4>.\nNode <4> is connected to node <3>.\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <3>, <4>.\nNode <0> is connected to node <1>.\nIs there a directed path from node <1> to node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 170,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <6>, <5>, <4>, <2>.\nNode <1> is connected to nodes <0>, <6>.\nNode <6> is connected to nodes <0>, <1>, <3>, <4>, <2>.\nNode <5> is connected to node <0>.\nNode <4> is connected to nodes <0>, <6>.\nNode <2> is connected to nodes <0>, <6>, <3>.\nNode <3> is connected to nodes <6>, <2>.\nIs there a path between node <2> and node <5>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 171,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <3>, <5>.\nNode <3> is connected to node <1>.\nNode <5> is connected to nodes <2>, <0>, <3>.\nNode <4> is connected to nodes <3>, <1>.\nNode <2> is connected to nodes <0>, <3>.\nIs there a directed path from node <5> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 172,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <2>, <1>, <5>, <0>.\nNode <3> is connected to node <4>.\nNode <2> is connected to node <4>.\nNode <1> is connected to node <4>.\nNode <5> is connected to node <4>.\nNode <0> is connected to node <4>.\nIs there a path between node <3> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 173,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1>, <2>, <4>, <3>.\nNode <4> is connected to nodes <3>, <0>, <1>.\nNode <5> is connected to nodes <4>, <3>.\nIs there a directed path from node <0> to node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 174,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <3>, <1>, <0>, <5>.\nNode <4> is connected to nodes <2>, <5>.\nNode <3> is connected to nodes <2>, <1>, <5>.\nNode <1> is connected to nodes <2>, <3>, <0>, <5>.\nNode <0> is connected to nodes <2>, <1>, <5>.\nNode <5> is connected to nodes <2>, <4>, <3>, <1>, <0>.\nIs there a path between node <2> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 175,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <2>, <4>, <0>.\nNode <2> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>, <2>, <5>.\nNode <5> is connected to node <0>.\nIs there a directed path from node <2> to node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 176,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <4>.\nNode <0> is connected to node <3>.\nNode <4> is connected to nodes <3>, <2>, <1>.\nNode <2> is connected to node <4>.\nNode <1> is connected to node <4>.\nIs there a path between node <4> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 177,
        "question": "Given a directed graph:\nNode <0> is connected to node <4>.\nNode <4> is connected to nodes <1>, <2>, <3>.\nNode <2> is connected to nodes <3>, <1>.\nIs there a directed path from node <1> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 178,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <0>, <1>.\nNode <3> is connected to node <2>.\nNode <0> is connected to node <2>.\nNode <1> is connected to nodes <2>, <4>.\nNode <4> is connected to node <1>.\nIs there a path between node <3> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 179,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <4>.\nNode <0> is connected to node <3>.\nNode <4> is connected to node <0>.\nNode <3> is connected to node <5>.\nNode <2> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <4>, <2>.\nIs there a directed path from node <5> to node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 180,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <4>, <1>, <2>.\nNode <4> is connected to nodes <6>, <0>, <5>.\nNode <1> is connected to nodes <6>, <3>.\nNode <2> is connected to node <6>.\nNode <0> is connected to node <4>.\nNode <5> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <5>, <1>.\nIs there a path between node <2> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 181,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <2>, <0>.\nNode <1> is connected to nodes <0>, <4>, <3>.\nNode <2> is connected to nodes <0>, <4>, <3>.\nNode <0> is connected to nodes <4>, <3>, <1>.\nIs there a directed path from node <4> to node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 182,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <4>, <0>, <5>.\nNode <1> is connected to nodes <3>, <4>, <5>.\nNode <4> is connected to nodes <3>, <1>, <6>, <0>.\nNode <0> is connected to nodes <3>, <6>, <2>, <4>.\nNode <5> is connected to nodes <3>, <1>, <6>, <2>.\nNode <6> is connected to nodes <4>, <0>, <5>.\nNode <2> is connected to nodes <0>, <5>.\nIs there a path between node <1> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 183,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <2>, <1>.\nNode <4> is connected to node <3>.\nNode <2> is connected to node <3>.\nNode <1> is connected to nodes <4>, <2>, <3>.\nNode <3> is connected to nodes <1>, <4>.\nIs there a directed path from node <3> to node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 184,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <0>, <3>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <2>, <0>.\nNode <4> is connected to node <2>.\nIs there a directed path from node <4> to node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 185,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <5>, <3>, <1>.\nNode <4> is connected to nodes <3>, <1>, <6>, <0>.\nNode <5> is connected to nodes <3>, <1>, <6>, <4>.\nNode <3> is connected to nodes <1>, <6>, <0>, <5>.\nNode <1> is connected to nodes <6>, <0>, <4>, <5>.\nNode <2> is connected to nodes <1>, <6>.\nIs there a directed path from node <0> to node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 186,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <2>, <4>.\nNode <0> is connected to node <4>.\nNode <2> is connected to nodes <3>, <1>.\nNode <4> is connected to node <0>.\nNode <1> is connected to nodes <2>, <4>, <0>.\nIs there a directed path from node <2> to node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 187,
        "question": "Given an undirected graph:\nNode <5> is connected to node <0>.\nNode <0> is connected to nodes <5>, <6>, <3>.\nNode <6> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <0>, <6>.\nNode <4> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <4>, <1>.\nIs there a path between node <4> and node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 188,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <1>, <2>, <5>, <4>.\nNode <0> is connected to node <3>.\nNode <1> is connected to node <3>.\nNode <2> is connected to node <3>.\nNode <5> is connected to node <3>.\nNode <4> is connected to node <3>.\nIs there a path between node <0> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 189,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <4>.\nNode <3> is connected to node <4>.\nNode <4> is connected to nodes <0>, <3>.\nNode <2> is connected to node <3>.\nNode <1> is connected to nodes <3>, <4>.\nIs there a directed path from node <3> to node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 190,
        "question": "Given an undirected graph:\nNode <1> is connected to node <0>.\nNode <0> is connected to nodes <1>, <4>, <3>, <2>.\nNode <4> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <2> is connected to node <0>.\nIs there a path between node <3> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 191,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <3>, <2>, <0>.\nNode <5> is connected to nodes <3>, <2>, <4>.\nNode <3> is connected to node <2>.\nNode <2> is connected to nodes <0>, <4>, <3>.\nNode <1> is connected to nodes <5>, <2>.\nIs there a directed path from node <5> to node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 192,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <5>, <0>, <1>.\nNode <2> is connected to nodes <4>, <3>, <0>, <1>.\nNode <5> is connected to nodes <4>, <3>, <0>, <1>.\nNode <0> is connected to nodes <4>, <3>, <2>, <5>, <1>.\nNode <1> is connected to nodes <4>, <2>, <5>, <0>.\nNode <3> is connected to nodes <2>, <5>, <0>.\nIs there a path between node <3> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 193,
        "question": "Given a directed graph:\nNode <0> is connected to node <3>.\nNode <2> is connected to nodes <3>, <4>.\nNode <4> is connected to node <2>.\nNode <1> is connected to node <0>.\nIs there a directed path from node <1> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 194,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <0>, <2>.\nNode <1> is connected to node <4>.\nNode <0> is connected to nodes <2>, <3>.\nNode <2> is connected to node <1>.\nNode <4> is connected to nodes <1>, <0>.\nIs there a directed path from node <0> to node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 195,
        "question": "Given a directed graph:\nNode <5> is connected to node <2>.\nNode <2> is connected to nodes <3>, <5>, <4>.\nNode <4> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <4>, <1>.\nNode <3> is connected to node <5>.\nIs there a directed path from node <0> to node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 196,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <6>, <1>.\nNode <5> is connected to nodes <2>, <3>, <1>, <4>.\nNode <6> is connected to nodes <2>, <1>, <0>.\nNode <1> is connected to nodes <2>, <5>, <6>, <4>.\nNode <3> is connected to node <5>.\nNode <4> is connected to nodes <5>, <1>, <0>.\nNode <0> is connected to nodes <6>, <4>.\nIs there a path between node <5> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 197,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <6>, <3>, <2>.\nNode <6> is connected to nodes <5>, <3>, <1>, <4>.\nNode <3> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <1>, <4>, <6>.\nNode <4> is connected to node <5>.\nNode <0> is connected to nodes <4>, <6>.\nIs there a directed path from node <4> to node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 198,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <0>, <3>.\nNode <4> is connected to nodes <5>, <0>.\nNode <0> is connected to nodes <3>, <1>.\nNode <3> is connected to node <5>.\nNode <5> is connected to nodes <3>, <2>, <4>, <1>.\nNode <1> is connected to nodes <5>, <2>.\nIs there a directed path from node <0> to node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 199,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <5>, <1>.\nNode <5> is connected to node <1>.\nNode <1> is connected to nodes <0>, <3>.\nNode <4> is connected to node <1>.\nNode <6> is connected to nodes <5>, <0>, <3>, <4>.\nNode <0> is connected to node <3>.\nNode <2> is connected to nodes <1>, <3>, <4>, <6>.\nIs there a directed path from node <4> to node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 200,
        "question": "Given an undirected graph:\nNode <4> is connected to node <2>.\nNode <2> is connected to nodes <4>, <1>, <0>.\nNode <1> is connected to node <2>.\nNode <0> is connected to nodes <2>, <3>.\nNode <3> is connected to node <0>.\nIs there a path between node <3> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 201,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <4>, <2>, <1>.\nNode <4> is connected to node <3>.\nNode <2> is connected to node <4>.\nNode <1> is connected to node <3>.\nNode <3> is connected to node <1>.\nNode <0> is connected to node <2>.\nIs there a directed path from node <4> to node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 202,
        "question": "Given an undirected graph:\nNode <3> is connected to node <0>.\nNode <0> is connected to nodes <3>, <1>, <5>, <4>.\nNode <1> is connected to node <0>.\nNode <5> is connected to node <0>.\nNode <4> is connected to nodes <0>, <2>.\nNode <2> is connected to node <4>.\nIs there a path between node <2> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 203,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <0>, <6>.\nNode <1> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <4>, <1>.\nNode <6> is connected to node <4>.\nNode <2> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <2>, <5>.\nNode <5> is connected to nodes <2>, <3>.\nIs there a path between node <6> and node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 204,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <6>, <3>.\nNode <5> is connected to nodes <1>, <0>.\nNode <6> is connected to nodes <1>, <4>.\nNode <3> is connected to nodes <1>, <2>.\nNode <0> is connected to node <5>.\nNode <4> is connected to nodes <2>, <6>.\nNode <2> is connected to nodes <4>, <3>.\nIs there a path between node <2> and node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 205,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <1>.\nNode <2> is connected to node <1>.\nNode <1> is connected to nodes <0>, <2>.\nNode <4> is connected to nodes <1>, <5>, <2>.\nNode <5> is connected to nodes <4>, <1>.\nNode <0> is connected to node <2>.\nIs there a directed path from node <1> to node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 206,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <1>, <5>.\nNode <0> is connected to nodes <3>, <4>.\nNode <5> is connected to nodes <4>, <0>, <3>, <2>.\nNode <3> is connected to nodes <2>, <4>, <1>.\nNode <6> is connected to node <5>.\nIs there a directed path from node <0> to node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 207,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <4>, <3>.\nNode <5> is connected to nodes <0>, <1>, <4>.\nNode <0> is connected to nodes <1>, <4>, <3>.\nNode <3> is connected to node <4>.\nIs there a directed path from node <4> to node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 208,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <4>, <0>, <2>.\nNode <4> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <2>, <4>.\nNode <2> is connected to node <3>.\nNode <3> is connected to nodes <1>, <5>.\nIs there a directed path from node <0> to node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 209,
        "question": "Given a directed graph:\nNode <3> is connected to node <1>.\nNode <1> is connected to nodes <2>, <4>, <3>.\nNode <2> is connected to node <3>.\nNode <0> is connected to nodes <4>, <2>.\nIs there a directed path from node <3> to node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 210,
        "question": "Given an undirected graph:\nNode <3> is connected to node <0>.\nNode <0> is connected to nodes <3>, <5>, <1>.\nNode <5> is connected to nodes <0>, <4>.\nNode <1> is connected to nodes <0>, <2>, <4>.\nNode <2> is connected to node <1>.\nNode <4> is connected to nodes <1>, <5>.\nIs there a path between node <1> and node <5>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 211,
        "question": "Given a directed graph:\nNode <0> is connected to node <1>.\nNode <1> is connected to node <0>.\nNode <3> is connected to nodes <1>, <4>.\nNode <4> is connected to node <1>.\nNode <2> is connected to nodes <1>, <4>, <3>.\nIs there a directed path from node <0> to node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 212,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <4>, <5>.\nNode <2> is connected to nodes <3>, <1>.\nNode <4> is connected to nodes <3>, <0>.\nNode <5> is connected to node <3>.\nNode <1> is connected to node <2>.\nNode <0> is connected to node <4>.\nIs there a path between node <5> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 213,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <0>, <5>.\nNode <3> is connected to nodes <1>, <0>, <5>.\nNode <0> is connected to nodes <5>, <3>, <4>.\nNode <5> is connected to node <0>.\nNode <1> is connected to nodes <0>, <5>, <3>.\nNode <4> is connected to nodes <0>, <3>, <1>.\nIs there a directed path from node <4> to node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 214,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <5>, <6>, <3>, <2>.\nNode <0> is connected to nodes <4>, <5>, <6>, <1>.\nNode <5> is connected to nodes <4>, <0>, <3>, <2>, <1>.\nNode <6> is connected to nodes <4>, <0>, <3>, <2>.\nNode <3> is connected to nodes <4>, <5>, <6>, <1>.\nNode <2> is connected to nodes <4>, <5>, <6>.\nNode <1> is connected to nodes <0>, <5>, <3>.\nIs there a path between node <4> and node <5>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 215,
        "question": "Given a directed graph:\nNode <2> is connected to node <5>.\nNode <1> is connected to node <0>.\nNode <0> is connected to node <4>.\nNode <4> is connected to node <1>.\nNode <3> is connected to nodes <5>, <4>.\nIs there a directed path from node <1> to node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 216,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <1>, <0>, <6>.\nNode <5> is connected to nodes <2>, <4>, <1>, <3>, <6>.\nNode <1> is connected to nodes <2>, <5>, <3>, <0>.\nNode <0> is connected to nodes <2>, <1>, <3>, <6>.\nNode <6> is connected to nodes <2>, <4>, <5>, <3>, <0>.\nNode <4> is connected to nodes <5>, <3>, <6>.\nNode <3> is connected to nodes <4>, <5>, <1>, <0>, <6>.\nIs there a path between node <6> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 217,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <1>, <2>.\nNode <1> is connected to node <2>.\nNode <2> is connected to nodes <5>, <1>.\nNode <0> is connected to nodes <2>, <3>, <5>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <1>, <2>.\nIs there a directed path from node <5> to node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 218,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <1>.\nNode <3> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <0>, <3>, <2>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <4>.\nIs there a path between node <0> and node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 219,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <4>, <3>, <0>.\nNode <2> is connected to nodes <3>, <1>.\nIs there a directed path from node <3> to node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 220,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <1>, <4>.\nNode <0> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <2>, <0>.\nNode <4> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <4>, <5>.\nNode <5> is connected to node <3>.\nIs there a path between node <3> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 221,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <2>, <1>.\nNode <3> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <4>, <3>.\nNode <1> is connected to node <4>.\nNode <0> is connected to nodes <1>, <3>.\nIs there a directed path from node <3> to node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 222,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <1>, <0>, <3>.\nNode <1> is connected to node <3>.\nNode <0> is connected to nodes <3>, <4>, <6>, <1>.\nNode <3> is connected to node <6>.\nNode <2> is connected to nodes <6>, <1>.\nNode <6> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <6>, <0>, <3>.\nIs there a directed path from node <3> to node <6>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 223,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <3>, <1>.\nNode <2> is connected to nodes <1>, <4>.\nNode <3> is connected to node <1>.\nNode <0> is connected to nodes <1>, <2>.\nIs there a directed path from node <4> to node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 224,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>, <5>.\nNode <2> is connected to nodes <0>, <3>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <0>, <1>.\nNode <3> is connected to node <2>.\nNode <1> is connected to nodes <4>, <5>.\nIs there a path between node <5> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 225,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <2>, <3>, <6>, <5>.\nNode <4> is connected to node <3>.\nNode <2> is connected to nodes <3>, <4>.\nNode <6> is connected to node <5>.\nNode <5> is connected to nodes <1>, <4>.\nNode <0> is connected to nodes <3>, <6>, <5>, <2>.\nIs there a directed path from node <3> to node <6>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 226,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <5>, <3>, <4>.\nNode <4> is connected to node <2>.\nNode <0> is connected to nodes <2>, <3>.\nNode <5> is connected to nodes <4>, <0>, <2>.\nIs there a directed path from node <2> to node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 227,
        "question": "Given a directed graph:\nNode <3> is connected to node <6>.\nNode <6> is connected to nodes <1>, <0>, <5>, <4>, <3>.\nNode <2> is connected to node <6>.\nNode <1> is connected to node <3>.\nNode <5> is connected to node <6>.\nIs there a directed path from node <3> to node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 228,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <2>.\nNode <3> is connected to node <0>.\nNode <2> is connected to nodes <0>, <4>, <1>, <6>, <5>.\nNode <4> is connected to node <2>.\nNode <1> is connected to node <2>.\nNode <6> is connected to node <2>.\nNode <5> is connected to node <2>.\nIs there a path between node <1> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 229,
        "question": "Given a directed graph:\nNode <3> is connected to node <2>.\nNode <2> is connected to node <1>.\nNode <5> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <0>, <3>, <5>.\nNode <4> is connected to nodes <2>, <0>, <5>.\nNode <0> is connected to nodes <3>, <5>.\nIs there a directed path from node <0> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 230,
        "question": "Given a directed graph:\nNode <3> is connected to node <1>.\nNode <1> is connected to nodes <0>, <2>, <4>.\nNode <0> is connected to nodes <2>, <4>, <3>.\nNode <2> is connected to nodes <3>, <0>.\nNode <4> is connected to nodes <3>, <1>, <0>, <2>.\nIs there a directed path from node <4> to node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 231,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <0>, <6>.\nNode <6> is connected to node <5>.\nNode <3> is connected to node <4>.\nIs there a directed path from node <2> to node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 232,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <4>, <1>, <0>.\nNode <5> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <2>, <5>, <1>, <3>, <6>.\nNode <1> is connected to nodes <2>, <4>, <0>.\nNode <0> is connected to nodes <2>, <1>.\nNode <3> is connected to nodes <4>, <6>.\nNode <6> is connected to nodes <4>, <3>.\nIs there a path between node <3> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 233,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <6>.\nNode <2> is connected to nodes <1>, <4>.\nNode <6> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <2>, <6>.\nNode <5> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <5>, <0>.\nNode <0> is connected to nodes <5>, <3>.\nIs there a path between node <0> and node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 234,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <5>, <4>, <1>.\nNode <0> is connected to node <3>.\nNode <5> is connected to nodes <3>, <2>.\nNode <4> is connected to node <3>.\nNode <1> is connected to node <3>.\nNode <2> is connected to node <5>.\nIs there a path between node <0> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 235,
        "question": "Given a directed graph:\nNode <4> is connected to node <0>.\nNode <0> is connected to node <1>.\nNode <1> is connected to node <4>.\nNode <5> is connected to nodes <1>, <3>, <2>.\nNode <3> is connected to nodes <2>, <0>.\nIs there a directed path from node <4> to node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 236,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <6>, <5>, <1>, <3>.\nNode <5> is connected to nodes <1>, <3>, <2>, <0>.\nNode <4> is connected to nodes <5>, <1>.\nNode <3> is connected to nodes <5>, <1>, <4>.\nNode <6> is connected to node <3>.\nNode <0> is connected to nodes <5>, <1>, <2>, <6>.\nIs there a directed path from node <6> to node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 237,
        "question": "Given a directed graph:\nNode <3> is connected to node <2>.\nNode <2> is connected to nodes <1>, <0>.\nNode <6> is connected to node <0>.\nNode <0> is connected to nodes <2>, <3>, <5>.\nNode <5> is connected to node <4>.\nNode <4> is connected to nodes <1>, <2>, <3>.\nNode <1> is connected to nodes <0>, <2>.\nIs there a directed path from node <3> to node <6>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 238,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <6>, <5>, <4>.\nNode <6> is connected to nodes <5>, <2>, <3>, <0>.\nNode <5> is connected to nodes <2>, <1>, <6>.\nNode <4> is connected to nodes <2>, <3>, <0>, <6>, <5>.\nNode <2> is connected to nodes <1>, <3>, <6>.\nNode <3> is connected to nodes <0>, <2>, <1>.\nNode <1> is connected to nodes <3>, <4>, <2>.\nIs there a directed path from node <0> to node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 239,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <2>.\nNode <2> is connected to node <3>.\nNode <0> is connected to nodes <1>, <2>, <4>.\nNode <1> is connected to nodes <4>, <0>.\nNode <5> is connected to node <2>.\nIs there a directed path from node <5> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 240,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <0>, <2>.\nNode <3> is connected to nodes <0>, <4>.\nNode <2> is connected to node <1>.\nNode <4> is connected to node <3>.\nIs there a path between node <3> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 241,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <0>, <1>.\nNode <2> is connected to nodes <3>, <0>.\nNode <0> is connected to node <3>.\nNode <4> is connected to nodes <0>, <1>.\nIs there a directed path from node <2> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 242,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>, <5>, <3>.\nNode <1> is connected to nodes <0>, <4>, <2>, <3>, <6>.\nNode <2> is connected to nodes <0>, <4>, <1>, <5>, <3>, <6>.\nNode <5> is connected to nodes <0>, <4>, <2>.\nNode <3> is connected to nodes <0>, <4>, <1>, <2>.\nNode <4> is connected to nodes <1>, <2>, <5>, <3>, <6>.\nNode <6> is connected to nodes <4>, <1>, <2>.\nIs there a path between node <0> and node <5>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 243,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <4>.\nNode <4> is connected to node <5>.\nNode <0> is connected to nodes <4>, <1>.\nNode <2> is connected to node <1>.\nIs there a directed path from node <0> to node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 244,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <2>, <1>, <4>.\nNode <0> is connected to nodes <3>, <5>.\nNode <2> is connected to nodes <3>, <4>.\nNode <1> is connected to nodes <3>, <5>, <6>, <4>.\nNode <4> is connected to nodes <3>, <2>, <1>, <6>.\nNode <5> is connected to nodes <0>, <1>.\nNode <6> is connected to nodes <1>, <4>.\nIs there a path between node <0> and node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 245,
        "question": "Given a directed graph:\nNode <2> is connected to node <4>.\nNode <4> is connected to nodes <1>, <0>.\nNode <3> is connected to node <0>.\nNode <0> is connected to node <1>.\nIs there a directed path from node <2> to node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 246,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <5>, <0>, <3>.\nNode <1> is connected to node <4>.\nNode <5> is connected to node <4>.\nNode <0> is connected to nodes <4>, <2>.\nNode <3> is connected to nodes <4>, <6>.\nNode <2> is connected to node <0>.\nNode <6> is connected to node <3>.\nIs there a path between node <2> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 247,
        "question": "Given a directed graph:\nNode <4> is connected to node <2>.\nNode <3> is connected to node <2>.\nNode <0> is connected to nodes <4>, <3>.\nNode <1> is connected to node <2>.\nIs there a directed path from node <1> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 248,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <0>, <2>, <3>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <1>, <4>.\nNode <4> is connected to node <3>.\nIs there a path between node <2> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 249,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <1>.\nNode <1> is connected to node <0>.\nNode <5> is connected to nodes <0>, <3>, <1>.\nNode <0> is connected to node <4>.\nNode <3> is connected to nodes <2>, <5>, <4>.\nIs there a directed path from node <4> to node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 250,
        "question": "Given a directed graph:\nNode <2> is connected to node <0>.\nNode <1> is connected to node <3>.\nNode <3> is connected to nodes <5>, <0>.\nNode <4> is connected to node <5>.\nIs there a directed path from node <0> to node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 251,
        "question": "Given a directed graph:\nNode <5> is connected to node <0>.\nNode <0> is connected to nodes <2>, <4>, <3>.\nNode <1> is connected to nodes <0>, <2>, <5>.\nNode <2> is connected to node <3>.\nNode <4> is connected to nodes <3>, <1>.\nIs there a directed path from node <0> to node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 252,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <4>, <3>, <1>, <2>, <5>.\nNode <4> is connected to nodes <6>, <3>, <1>, <0>.\nNode <3> is connected to nodes <6>, <4>, <1>, <2>, <5>.\nNode <1> is connected to nodes <6>, <4>, <3>, <2>, <5>.\nNode <2> is connected to nodes <6>, <3>, <1>, <0>.\nNode <5> is connected to nodes <6>, <3>, <1>.\nNode <0> is connected to nodes <4>, <2>.\nIs there a path between node <3> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 253,
        "question": "Given a directed graph:\nNode <4> is connected to node <2>.\nNode <2> is connected to nodes <0>, <5>.\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <5> is connected to node <4>.\nNode <1> is connected to node <3>.\nIs there a directed path from node <4> to node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 254,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <5>, <3>, <2>.\nNode <5> is connected to nodes <3>, <1>.\nNode <2> is connected to nodes <0>, <4>, <3>.\nNode <0> is connected to node <5>.\nNode <4> is connected to nodes <3>, <2>, <0>.\nIs there a directed path from node <5> to node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 255,
        "question": "Given a directed graph:\nNode <4> is connected to node <1>.\nNode <1> is connected to node <4>.\nNode <0> is connected to nodes <6>, <2>, <4>.\nNode <6> is connected to node <4>.\nNode <2> is connected to node <3>.\nNode <5> is connected to node <0>.\nIs there a directed path from node <3> to node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 256,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <5>, <0>, <2>.\nNode <4> is connected to nodes <5>, <1>, <0>, <2>, <3>.\nNode <5> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <2>, <3>, <4>, <1>.\nNode <2> is connected to nodes <6>, <1>, <0>.\nNode <1> is connected to nodes <2>, <6>, <5>.\nNode <6> is connected to nodes <4>, <5>, <2>.\nIs there a directed path from node <5> to node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 257,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <6>, <2>.\nNode <4> is connected to node <5>.\nNode <6> is connected to nodes <5>, <2>.\nNode <2> is connected to nodes <5>, <6>.\nNode <0> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <0>, <3>.\nIs there a path between node <2> and node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 258,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <5>.\nNode <0> is connected to nodes <3>, <1>.\nNode <5> is connected to nodes <3>, <2>.\nNode <1> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <4>, <5>.\nIs there a path between node <2> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 259,
        "question": "Given a directed graph:\nNode <1> is connected to node <2>.\nNode <3> is connected to nodes <0>, <5>, <6>, <2>.\nNode <0> is connected to node <1>.\nNode <5> is connected to node <0>.\nNode <6> is connected to node <0>.\nNode <4> is connected to nodes <5>, <6>, <3>, <0>.\nIs there a directed path from node <1> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 260,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <0>, <1>.\nNode <4> is connected to nodes <2>, <3>, <1>.\nNode <0> is connected to nodes <2>, <5>, <3>, <1>.\nNode <1> is connected to nodes <2>, <4>, <0>, <5>.\nNode <3> is connected to nodes <4>, <0>, <5>.\nNode <5> is connected to nodes <0>, <3>, <1>.\nIs there a path between node <2> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 261,
        "question": "Given a directed graph:\nNode <4> is connected to node <2>.\nNode <2> is connected to nodes <0>, <4>, <1>.\nNode <3> is connected to node <1>.\nNode <0> is connected to nodes <4>, <3>, <2>.\nIs there a directed path from node <1> to node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 262,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <2>.\nNode <3> is connected to node <0>.\nNode <2> is connected to nodes <0>, <1>, <4>.\nNode <1> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <1>, <2>.\nIs there a path between node <2> and node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 263,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <2>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <4>, <6>.\nNode <4> is connected to node <6>.\nNode <6> is connected to node <1>.\nNode <1> is connected to node <4>.\nIs there a directed path from node <2> to node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 264,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <1>, <2>, <4>.\nNode <2> is connected to nodes <1>, <3>.\nNode <4> is connected to nodes <3>, <0>.\nNode <0> is connected to node <4>.\nIs there a path between node <1> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 265,
        "question": "Given a directed graph:\nNode <3> is connected to node <0>.\nNode <0> is connected to nodes <6>, <3>, <4>.\nNode <6> is connected to node <0>.\nNode <5> is connected to nodes <6>, <1>, <2>.\nNode <1> is connected to nodes <2>, <3>, <5>.\nNode <2> is connected to node <1>.\nIs there a directed path from node <0> to node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 266,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <6>.\nNode <5> is connected to nodes <2>, <0>, <1>, <3>, <4>.\nNode <6> is connected to nodes <2>, <3>, <4>.\nNode <0> is connected to nodes <5>, <3>.\nNode <1> is connected to nodes <5>, <4>.\nNode <3> is connected to nodes <5>, <0>, <6>.\nNode <4> is connected to nodes <5>, <1>, <6>.\nIs there a path between node <3> and node <6>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 267,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <1>, <3>.\nNode <4> is connected to nodes <2>, <3>, <0>.\nNode <1> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <0>, <5>.\nNode <5> is connected to nodes <4>, <1>.\nIs there a directed path from node <2> to node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 268,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <3>, <5>.\nNode <2> is connected to nodes <3>, <1>, <6>.\nNode <3> is connected to node <0>.\nNode <5> is connected to nodes <6>, <2>.\nNode <1> is connected to nodes <2>, <0>.\nNode <6> is connected to nodes <0>, <1>.\nIs there a directed path from node <0> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 269,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <2>, <4>.\nNode <1> is connected to nodes <3>, <5>.\nNode <2> is connected to node <3>.\nNode <4> is connected to nodes <3>, <5>, <0>.\nNode <5> is connected to nodes <1>, <4>.\nNode <0> is connected to node <4>.\nIs there a path between node <3> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 270,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <3>, <4>, <1>, <2>.\nNode <3> is connected to node <6>.\nNode <4> is connected to nodes <2>, <3>, <5>.\nNode <1> is connected to nodes <0>, <4>.\nNode <2> is connected to nodes <0>, <4>, <1>.\nNode <5> is connected to nodes <2>, <6>.\nNode <0> is connected to nodes <2>, <5>.\nIs there a directed path from node <4> to node <6>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 271,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <5>, <0>.\nNode <5> is connected to node <1>.\nNode <0> is connected to node <5>.\nNode <1> is connected to nodes <3>, <4>.\nNode <3> is connected to node <2>.\nIs there a directed path from node <3> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 272,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <1>, <2>, <5>.\nNode <4> is connected to nodes <1>, <2>, <5>, <0>.\nNode <2> is connected to nodes <5>, <3>, <1>.\nNode <5> is connected to node <2>.\nNode <0> is connected to nodes <2>, <3>.\nIs there a directed path from node <4> to node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 273,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <0>, <4>.\nNode <3> is connected to node <2>.\nNode <4> is connected to nodes <2>, <0>.\nNode <1> is connected to nodes <0>, <2>.\nIs there a directed path from node <4> to node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 274,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <6>.\nNode <3> is connected to node <0>.\nNode <6> is connected to nodes <0>, <5>, <1>, <2>, <4>.\nNode <5> is connected to node <6>.\nNode <1> is connected to node <6>.\nNode <2> is connected to node <6>.\nNode <4> is connected to node <6>.\nIs there a path between node <0> and node <6>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 275,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <1>, <6>.\nNode <0> is connected to node <5>.\nNode <1> is connected to node <2>.\nNode <3> is connected to node <6>.\nNode <2> is connected to node <0>.\nNode <4> is connected to nodes <5>, <3>.\nIs there a directed path from node <6> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 276,
        "question": "Given a directed graph:\nNode <2> is connected to node <4>.\nNode <4> is connected to nodes <2>, <0>, <3>, <1>.\nNode <0> is connected to node <1>.\nNode <1> is connected to node <0>.\nNode <3> is connected to nodes <1>, <4>, <2>.\nIs there a directed path from node <4> to node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 277,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <3>, <2>.\nNode <4> is connected to nodes <3>, <0>.\nNode <3> is connected to node <2>.\nNode <2> is connected to nodes <1>, <4>, <3>.\nNode <0> is connected to node <5>.\nIs there a directed path from node <5> to node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 278,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <1>, <0>, <3>.\nNode <4> is connected to node <1>.\nNode <0> is connected to nodes <5>, <6>.\nNode <3> is connected to nodes <5>, <2>, <6>.\nNode <2> is connected to node <3>.\nNode <6> is connected to nodes <3>, <0>.\nIs there a path between node <1> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 279,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <6>, <2>.\nNode <3> is connected to nodes <6>, <4>, <1>, <0>.\nNode <6> is connected to node <1>.\nNode <2> is connected to nodes <1>, <0>.\nNode <5> is connected to nodes <3>, <4>.\nNode <1> is connected to nodes <6>, <2>.\nNode <0> is connected to nodes <2>, <1>.\nIs there a directed path from node <1> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 280,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <0>, <1>, <3>.\nNode <4> is connected to nodes <1>, <2>.\nNode <0> is connected to nodes <1>, <2>, <4>.\nNode <1> is connected to node <0>.\nNode <3> is connected to node <2>.\nIs there a directed path from node <3> to node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 281,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <4>.\nNode <4> is connected to node <0>.\nNode <1> is connected to nodes <0>, <4>, <2>.\nNode <3> is connected to node <0>.\nIs there a directed path from node <2> to node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 282,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <2>, <1>.\nNode <3> is connected to nodes <5>, <1>, <4>.\nNode <2> is connected to nodes <5>, <1>.\nNode <4> is connected to node <0>.\nIs there a directed path from node <4> to node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 283,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <6>, <3>.\nNode <0> is connected to nodes <1>, <4>.\nNode <6> is connected to node <2>.\nNode <1> is connected to node <6>.\nNode <4> is connected to nodes <3>, <5>.\nNode <2> is connected to nodes <3>, <0>.\nIs there a directed path from node <3> to node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 284,
        "question": "Given an undirected graph:\nNode <0> is connected to node <2>.\nNode <2> is connected to nodes <0>, <5>.\nNode <5> is connected to nodes <2>, <3>, <1>.\nNode <3> is connected to nodes <5>, <1>, <6>.\nNode <1> is connected to nodes <5>, <3>.\nNode <6> is connected to nodes <3>, <4>.\nNode <4> is connected to node <6>.\nIs there a path between node <0> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 285,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <5>, <3>.\nNode <5> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <1>, <2>, <5>.\nNode <4> is connected to node <3>.\nIs there a directed path from node <0> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 286,
        "question": "Given an undirected graph:\nNode <3> is connected to node <2>.\nNode <2> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <2>, <6>.\nNode <5> is connected to node <6>.\nNode <6> is connected to nodes <5>, <4>, <0>, <1>.\nNode <4> is connected to nodes <6>, <1>.\nNode <1> is connected to nodes <6>, <4>.\nIs there a path between node <6> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 287,
        "question": "Given a directed graph:\nNode <1> is connected to node <3>.\nNode <2> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <3>, <1>.\nNode <0> is connected to nodes <2>, <4>.\nIs there a directed path from node <3> to node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 288,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <6>, <1>.\nNode <6> is connected to node <4>.\nNode <1> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <3>, <2>, <5>, <1>.\nNode <3> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <5> is connected to node <0>.\nIs there a path between node <6> and node <5>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 289,
        "question": "Given a directed graph:\nNode <1> is connected to node <0>.\nNode <0> is connected to node <1>.\nNode <4> is connected to node <0>.\nNode <3> is connected to node <2>.\nNode <2> is connected to nodes <1>, <4>.\nIs there a directed path from node <1> to node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 290,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <4>, <3>.\nNode <0> is connected to nodes <4>, <2>.\nNode <3> is connected to node <1>.\nNode <2> is connected to node <0>.\nIs there a path between node <4> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 291,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <5>, <0>, <3>.\nNode <5> is connected to nodes <6>, <0>.\nNode <0> is connected to nodes <6>, <5>.\nNode <3> is connected to node <6>.\nNode <1> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <1>, <4>.\nIs there a path between node <2> and node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 292,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <5>, <1>.\nNode <4> is connected to nodes <2>, <3>, <6>, <0>, <5>, <1>.\nNode <5> is connected to nodes <2>, <3>, <6>, <4>, <1>.\nNode <1> is connected to nodes <2>, <3>, <6>, <0>, <4>, <5>.\nNode <3> is connected to nodes <6>, <0>, <4>, <5>, <1>.\nNode <6> is connected to nodes <3>, <4>, <5>, <1>.\nNode <0> is connected to nodes <3>, <4>, <1>.\nIs there a path between node <5> and node <6>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 293,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <5>, <2>, <0>, <4>.\nNode <2> is connected to nodes <4>, <1>.\nNode <0> is connected to node <3>.\nNode <4> is connected to nodes <1>, <3>.\nNode <3> is connected to node <4>.\nIs there a directed path from node <5> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 294,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <0>, <3>.\nNode <1> is connected to nodes <2>, <4>.\nNode <3> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <3>, <1>.\nIs there a path between node <1> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 295,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <1>.\nNode <4> is connected to node <3>.\nNode <2> is connected to node <3>.\nNode <0> is connected to nodes <1>, <2>, <4>.\nIs there a directed path from node <1> to node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 296,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>, <3>.\nNode <2> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nNode <3> is connected to node <0>.\nNode <1> is connected to node <4>.\nIs there a path between node <0> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 297,
        "question": "Given a directed graph:\nNode <0> is connected to node <4>.\nNode <4> is connected to nodes <3>, <1>, <5>.\nNode <3> is connected to nodes <2>, <5>.\nNode <1> is connected to node <5>.\nNode <2> is connected to nodes <4>, <3>.\nIs there a directed path from node <5> to node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 298,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <4>, <1>, <3>.\nNode <4> is connected to nodes <6>, <0>, <5>, <1>, <3>.\nNode <1> is connected to nodes <6>, <2>, <4>, <0>, <5>, <3>.\nNode <3> is connected to nodes <6>, <2>, <4>, <0>, <1>.\nNode <2> is connected to nodes <0>, <1>, <3>.\nNode <0> is connected to nodes <2>, <4>, <5>, <1>, <3>.\nNode <5> is connected to nodes <4>, <0>, <1>.\nIs there a path between node <5> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "connectivity"
    },
    {
        "index": 299,
        "question": "Given a directed graph:\nNode <1> is connected to node <0>.\nNode <0> is connected to node <1>.\nNode <3> is connected to node <2>.\nNode <2> is connected to node <3>.\nNode <5> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <1>, <0>.\nIs there a directed path from node <2> to node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "connectivity"
    },
    {
        "index": 0,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <0>, <1>, <4>.\nNode <3> is connected to nodes <2>, <0>, <5>, <4>.\nNode <0> is connected to nodes <2>, <3>, <5>, <1>, <4>.\nNode <1> is connected to nodes <2>, <0>, <5>, <4>.\nNode <4> is connected to nodes <2>, <3>, <0>, <5>, <1>.\nNode <5> is connected to nodes <3>, <0>, <1>, <4>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "5",
        "type": "degree"
    },
    {
        "index": 1,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <1>, <3>, <2>.\nNode <4> is connected to node <0>.\nNode <1> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <2> is connected to node <0>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 2,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <5>, <3>.\nNode <1> is connected to nodes <2>, <5>, <3>, <0>.\nNode <5> is connected to nodes <2>, <1>, <3>, <4>, <0>.\nNode <3> is connected to nodes <2>, <1>, <5>, <4>, <0>.\nNode <0> is connected to nodes <1>, <5>, <3>, <4>.\nNode <4> is connected to nodes <5>, <3>, <0>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "4",
        "type": "degree"
    },
    {
        "index": 3,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <3>, <4>.\nNode <0> is connected to nodes <3>, <2>, <4>.\nNode <4> is connected to nodes <1>, <0>.\nNode <2> is connected to node <0>.\nWhat is the degree of node <2>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 4,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <5>, <4>, <6>.\nNode <1> is connected to nodes <0>, <3>, <2>, <5>, <4>.\nNode <5> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <0>, <1>, <2>, <3>.\nNode <6> is connected to node <0>.\nNode <3> is connected to nodes <1>, <4>.\nNode <2> is connected to nodes <1>, <4>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "4",
        "type": "degree"
    },
    {
        "index": 5,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <2>, <5>.\nNode <3> is connected to nodes <0>, <4>, <2>, <1>, <5>.\nNode <2> is connected to nodes <0>, <3>, <4>, <1>, <5>.\nNode <5> is connected to nodes <0>, <3>, <4>, <2>, <1>.\nNode <4> is connected to nodes <3>, <2>, <1>, <5>.\nNode <1> is connected to nodes <3>, <4>, <2>, <5>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "5",
        "type": "degree"
    },
    {
        "index": 6,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <5>, <0>.\nNode <5> is connected to node <3>.\nNode <0> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <4>, <3>, <5>.\nNode <4> is connected to node <1>.\nNode <1> is connected to nodes <3>, <5>, <4>.\nWhat is the out-degree of node <4>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 7,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <0>, <5>.\nNode <2> is connected to nodes <1>, <3>.\nNode <0> is connected to nodes <1>, <5>.\nNode <5> is connected to nodes <1>, <0>.\nNode <3> is connected to nodes <2>, <4>.\nNode <4> is connected to node <3>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 8,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <1>.\nNode <2> is connected to node <3>.\nNode <1> is connected to nodes <3>, <4>, <0>.\nNode <4> is connected to node <1>.\nNode <0> is connected to node <1>.\nWhat is the degree of node <2>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 9,
        "question": "Given a directed graph:\nNode <0> is connected to node <1>.\nNode <1> is connected to nodes <3>, <5>.\nNode <3> is connected to node <2>.\nNode <5> is connected to nodes <1>, <2>, <3>.\nNode <4> is connected to nodes <5>, <0>.\nNode <2> is connected to nodes <3>, <4>.\nWhat is the out-degree of node <0>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 10,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <2>, <4>.\nNode <5> is connected to nodes <1>, <0>, <3>, <6>, <4>.\nNode <2> is connected to nodes <1>, <0>, <6>, <4>.\nNode <4> is connected to nodes <1>, <5>, <3>, <6>, <2>.\nNode <0> is connected to nodes <5>, <3>, <6>, <2>.\nNode <3> is connected to nodes <5>, <0>, <6>, <4>.\nNode <6> is connected to nodes <5>, <0>, <3>, <2>, <4>.\nWhat is the degree of node <5>?\nAnswer:\n",
        "answer": "5",
        "type": "degree"
    },
    {
        "index": 11,
        "question": "Given a directed graph:\nNode <4> is connected to node <3>.\nNode <3> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <2>, <4>, <3>.\nNode <1> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <1>, <4>, <3>, <0>.\nWhat is the out-degree of node <0>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 12,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <4>, <5>, <1>.\nNode <0> is connected to node <3>.\nNode <4> is connected to nodes <2>, <1>.\nNode <5> is connected to nodes <3>, <0>.\nNode <1> is connected to node <2>.\nNode <2> is connected to nodes <3>, <4>.\nWhat is the out-degree of node <0>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 13,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <6>, <5>, <2>, <4>.\nNode <6> is connected to node <0>.\nNode <5> is connected to nodes <0>, <1>.\nNode <2> is connected to node <0>.\nNode <4> is connected to nodes <0>, <3>.\nNode <1> is connected to node <5>.\nNode <3> is connected to node <4>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 14,
        "question": "Given a directed graph:\nNode <2> is connected to node <4>.\nNode <4> is connected to nodes <1>, <3>.\nNode <1> is connected to node <3>.\nNode <3> is connected to node <0>.\nNode <0> is connected to nodes <5>, <4>, <6>, <2>.\nNode <5> is connected to node <1>.\nNode <6> is connected to node <3>.\nWhat is the out-degree of node <0>?\nAnswer:\n",
        "answer": "4",
        "type": "degree"
    },
    {
        "index": 15,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1>, <4>, <3>.\nNode <1> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <2>, <0>, <1>, <4>.\nNode <2> is connected to nodes <0>, <1>, <4>.\nWhat is the out-degree of node <3>?\nAnswer:\n",
        "answer": "4",
        "type": "degree"
    },
    {
        "index": 16,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <3>, <5>, <2>, <0>, <1>.\nNode <1> is connected to nodes <3>, <4>, <5>, <2>, <0>.\nNode <5> is connected to nodes <4>, <2>, <0>, <1>.\nNode <2> is connected to nodes <4>, <5>, <0>, <1>.\nNode <0> is connected to nodes <4>, <5>, <2>, <1>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 17,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <3>, <1>, <6>, <0>.\nNode <5> is connected to node <3>.\nNode <1> is connected to nodes <2>, <4>.\nNode <6> is connected to node <2>.\nNode <0> is connected to node <2>.\nNode <4> is connected to node <1>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 18,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5>, <3>, <2>, <4>, <6>.\nNode <5> is connected to nodes <2>, <4>, <6>.\nNode <3> is connected to nodes <4>, <0>.\nNode <2> is connected to nodes <6>, <0>, <5>.\nNode <4> is connected to nodes <5>, <2>.\nNode <6> is connected to nodes <0>, <3>, <4>, <1>.\nNode <1> is connected to nodes <6>, <5>, <3>, <2>.\nWhat is the out-degree of node <5>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 19,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <2>, <1>.\nNode <5> is connected to nodes <3>, <4>.\nNode <2> is connected to nodes <3>, <0>.\nNode <1> is connected to node <3>.\nNode <4> is connected to node <5>.\nNode <0> is connected to node <2>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 20,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <1>, <5>, <6>.\nNode <4> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <2>, <4>.\nNode <5> is connected to nodes <2>, <3>.\nNode <6> is connected to node <2>.\nNode <3> is connected to nodes <5>, <0>.\nNode <0> is connected to node <3>.\nWhat is the degree of node <2>?\nAnswer:\n",
        "answer": "4",
        "type": "degree"
    },
    {
        "index": 21,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <4>, <2>, <5>.\nNode <0> is connected to nodes <3>, <1>, <4>, <5>.\nNode <4> is connected to nodes <3>, <0>, <2>, <5>.\nNode <2> is connected to nodes <3>, <1>, <4>, <5>.\nNode <5> is connected to nodes <3>, <0>, <1>, <4>, <2>.\nNode <1> is connected to nodes <0>, <2>, <5>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 22,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <3>.\nNode <4> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>, <2>.\nNode <1> is connected to node <3>.\nNode <2> is connected to node <3>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 23,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <1>, <2>, <4>.\nNode <3> is connected to nodes <5>, <0>, <1>, <2>, <4>.\nNode <1> is connected to nodes <5>, <3>, <2>, <4>.\nNode <2> is connected to nodes <5>, <3>, <0>, <1>, <4>.\nNode <4> is connected to nodes <5>, <3>, <0>, <1>, <2>.\nNode <0> is connected to nodes <3>, <2>, <4>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 24,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <5>, <0>, <2>.\nNode <5> is connected to nodes <0>, <2>, <1>, <3>.\nNode <0> is connected to nodes <4>, <2>, <5>.\nNode <2> is connected to nodes <3>, <5>, <0>, <4>.\nNode <1> is connected to nodes <3>, <2>.\nNode <4> is connected to nodes <1>, <5>, <0>.\nWhat is the out-degree of node <1>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 25,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <2>.\nNode <4> is connected to node <3>.\nNode <2> is connected to nodes <3>, <0>, <1>.\nNode <0> is connected to node <2>.\nNode <1> is connected to node <2>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 26,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <0>, <2>, <3>.\nNode <1> is connected to node <4>.\nNode <0> is connected to node <4>.\nNode <2> is connected to node <4>.\nNode <3> is connected to node <4>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 27,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <4>, <1>, <2>.\nNode <0> is connected to nodes <3>, <2>.\nNode <4> is connected to nodes <3>, <0>.\nNode <1> is connected to node <2>.\nNode <3> is connected to nodes <0>, <1>.\nWhat is the out-degree of node <3>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 28,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <0>, <3>.\nNode <5> is connected to nodes <4>, <1>, <0>, <3>, <2>.\nNode <0> is connected to nodes <4>, <5>, <3>, <2>.\nNode <3> is connected to nodes <4>, <1>, <5>, <0>, <2>.\nNode <1> is connected to nodes <5>, <3>, <2>.\nNode <2> is connected to nodes <1>, <5>, <0>, <3>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 29,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <0>, <5>.\nNode <1> is connected to nodes <4>, <2>.\nNode <5> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <5>, <1>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 30,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <6>, <0>, <4>.\nNode <6> is connected to node <2>.\nNode <0> is connected to node <2>.\nNode <4> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <1>, <5>, <4>.\nNode <1> is connected to node <3>.\nNode <5> is connected to node <3>.\nWhat is the degree of node <2>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 31,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <5>, <2>, <4>.\nNode <0> is connected to node <5>.\nNode <5> is connected to nodes <2>, <4>.\nNode <2> is connected to node <0>.\nNode <4> is connected to nodes <1>, <3>.\nWhat is the out-degree of node <3>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 32,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <4>, <1>.\nNode <0> is connected to nodes <5>, <6>.\nNode <4> is connected to nodes <5>, <6>.\nNode <1> is connected to nodes <5>, <2>.\nNode <6> is connected to nodes <0>, <4>.\nNode <2> is connected to nodes <1>, <3>.\nNode <3> is connected to node <2>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 33,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <3>.\nNode <5> is connected to nodes <1>, <4>.\nNode <3> is connected to nodes <1>, <2>.\nNode <4> is connected to nodes <5>, <0>.\nNode <0> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <0>, <3>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 34,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>.\nNode <4> is connected to node <0>.\nNode <5> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <1>, <2>.\nNode <2> is connected to node <3>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 35,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to node <1>.\nNode <4> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <4>, <0>.\nNode <0> is connected to node <3>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 36,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <3>, <0>, <5>, <4>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <0> is connected to node <1>.\nNode <5> is connected to node <1>.\nNode <4> is connected to node <1>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 37,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <5>, <4>.\nNode <3> is connected to node <1>.\nNode <5> is connected to node <1>.\nNode <4> is connected to nodes <1>, <2>, <0>.\nNode <2> is connected to node <4>.\nNode <0> is connected to node <4>.\nWhat is the degree of node <5>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 38,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <2>, <0>.\nNode <4> is connected to node <3>.\nNode <0> is connected to node <1>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 39,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <0>.\nNode <1> is connected to node <3>.\nNode <2> is connected to nodes <1>, <4>.\nNode <3> is connected to nodes <1>, <0>, <4>.\nWhat is the out-degree of node <0>?\nAnswer:\n",
        "answer": "0",
        "type": "degree"
    },
    {
        "index": 40,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <0>, <1>, <4>, <3>.\nNode <1> is connected to nodes <3>, <2>.\nNode <3> is connected to node <2>.\nNode <0> is connected to nodes <1>, <4>, <3>, <2>.\nWhat is the out-degree of node <2>?\nAnswer:\n",
        "answer": "4",
        "type": "degree"
    },
    {
        "index": 41,
        "question": "Given a directed graph:\nNode <3> is connected to node <1>.\nNode <1> is connected to nodes <0>, <3>.\nNode <2> is connected to node <3>.\nNode <0> is connected to nodes <2>, <1>, <4>.\nNode <4> is connected to node <1>.\nWhat is the out-degree of node <1>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 42,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <3>, <1>, <4>.\nNode <0> is connected to node <2>.\nNode <3> is connected to node <2>.\nNode <1> is connected to node <2>.\nNode <4> is connected to node <2>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 43,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <2>, <3>, <5>, <0>, <6>.\nNode <1> is connected to nodes <4>, <2>, <3>, <5>, <6>.\nNode <2> is connected to nodes <4>, <1>, <3>, <5>, <0>.\nNode <3> is connected to nodes <4>, <1>, <2>, <5>, <0>, <6>.\nNode <5> is connected to nodes <4>, <1>, <2>, <3>.\nNode <0> is connected to nodes <4>, <2>, <3>, <6>.\nNode <6> is connected to nodes <4>, <1>, <3>, <0>.\nWhat is the degree of node <2>?\nAnswer:\n",
        "answer": "5",
        "type": "degree"
    },
    {
        "index": 44,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <0>, <2>, <4>.\nNode <5> is connected to nodes <3>, <0>, <1>.\nNode <0> is connected to nodes <3>, <6>, <5>, <2>, <1>, <4>.\nNode <2> is connected to nodes <3>, <6>, <0>, <1>.\nNode <4> is connected to nodes <3>, <0>.\nNode <6> is connected to nodes <0>, <2>.\nNode <1> is connected to nodes <5>, <0>, <2>.\nWhat is the degree of node <5>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 45,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <5>, <1>.\nNode <2> is connected to nodes <5>, <0>.\nNode <1> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <3>, <2>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 46,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <1>.\nNode <5> is connected to nodes <4>, <3>.\nNode <1> is connected to nodes <4>, <0>.\nNode <3> is connected to nodes <5>, <0>.\nNode <0> is connected to nodes <1>, <3>, <6>.\nNode <6> is connected to nodes <0>, <2>.\nNode <2> is connected to node <6>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 47,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <5>, <6>, <3>.\nNode <2> is connected to nodes <4>, <6>, <1>, <3>.\nNode <5> is connected to nodes <4>, <6>, <1>, <3>.\nNode <6> is connected to nodes <4>, <2>, <5>, <1>, <3>, <0>.\nNode <3> is connected to nodes <4>, <2>, <5>, <6>, <1>.\nNode <1> is connected to nodes <2>, <5>, <6>, <3>.\nNode <0> is connected to node <6>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "4",
        "type": "degree"
    },
    {
        "index": 48,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <3>, <1>.\nNode <4> is connected to nodes <3>, <0>.\nNode <1> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <1>, <4>.\nWhat is the degree of node <2>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 49,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <3>, <0>.\nNode <1> is connected to nodes <4>, <2>.\nNode <0> is connected to nodes <2>, <1>, <4>.\nNode <4> is connected to nodes <0>, <2>, <1>.\nWhat is the out-degree of node <0>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 50,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <4>, <3>, <2>.\nNode <1> is connected to node <2>.\nNode <3> is connected to nodes <2>, <1>.\nNode <2> is connected to node <0>.\nWhat is the out-degree of node <3>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 51,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <1>, <2>, <5>.\nNode <4> is connected to nodes <0>, <3>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <5> is connected to node <0>.\nNode <3> is connected to node <4>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 52,
        "question": "Given an undirected graph:\nNode <5> is connected to node <1>.\nNode <1> is connected to nodes <5>, <6>.\nNode <6> is connected to nodes <1>, <0>, <4>.\nNode <3> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <3>, <4>.\nNode <0> is connected to nodes <3>, <6>.\nNode <4> is connected to nodes <2>, <6>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 53,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <4>, <0>, <1>, <6>.\nNode <5> is connected to nodes <3>, <2>.\nNode <4> is connected to node <3>.\nNode <0> is connected to node <3>.\nNode <1> is connected to node <3>.\nNode <6> is connected to node <3>.\nNode <2> is connected to node <5>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 54,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <1>, <0>.\nNode <5> is connected to nodes <2>, <0>, <6>.\nNode <1> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <2>, <5>, <1>, <4>, <3>.\nNode <6> is connected to nodes <5>, <3>.\nNode <4> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <0>, <6>, <4>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "5",
        "type": "degree"
    },
    {
        "index": 55,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <6>, <1>, <2>.\nNode <6> is connected to node <5>.\nNode <1> is connected to nodes <2>, <6>, <0>.\nNode <2> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <6>, <0>, <5>, <4>.\nNode <0> is connected to nodes <4>, <3>, <6>.\nNode <5> is connected to nodes <1>, <6>.\nWhat is the out-degree of node <6>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 56,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <6>, <3>.\nNode <6> is connected to nodes <1>, <4>, <2>, <5>.\nNode <3> is connected to nodes <1>, <0>.\nNode <4> is connected to node <6>.\nNode <2> is connected to node <6>.\nNode <5> is connected to node <6>.\nNode <0> is connected to node <3>.\nWhat is the degree of node <6>?\nAnswer:\n",
        "answer": "4",
        "type": "degree"
    },
    {
        "index": 57,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <0>.\nNode <4> is connected to node <1>.\nNode <0> is connected to nodes <1>, <2>, <3>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 58,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <2>, <4>.\nNode <5> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <4> is connected to nodes <0>, <6>, <1>, <3>.\nNode <6> is connected to node <4>.\nNode <1> is connected to node <4>.\nNode <3> is connected to node <4>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 59,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1>, <2>, <6>.\nNode <1> is connected to nodes <5>, <3>.\nNode <2> is connected to nodes <5>, <0>.\nNode <6> is connected to node <5>.\nNode <3> is connected to nodes <1>, <4>.\nNode <0> is connected to node <2>.\nNode <4> is connected to node <3>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 60,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <0>, <6>, <4>.\nNode <5> is connected to nodes <1>, <3>.\nNode <0> is connected to nodes <1>, <6>.\nNode <6> is connected to nodes <1>, <0>.\nNode <4> is connected to nodes <1>, <2>.\nNode <3> is connected to node <5>.\nNode <2> is connected to node <4>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 61,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <2>, <3>, <0>, <1>.\nNode <2> is connected to node <6>.\nNode <3> is connected to nodes <6>, <5>.\nNode <0> is connected to nodes <6>, <4>.\nNode <1> is connected to node <6>.\nNode <5> is connected to node <3>.\nNode <4> is connected to node <0>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 62,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <0>, <3>, <1>.\nNode <2> is connected to node <4>.\nNode <0> is connected to node <4>.\nNode <3> is connected to node <4>.\nNode <1> is connected to node <4>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 63,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <3>, <4>.\nNode <0> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <2>, <0>.\nNode <4> is connected to nodes <2>, <1>.\nNode <1> is connected to node <4>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 64,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <2>, <3>.\nNode <2> is connected to node <6>.\nNode <3> is connected to nodes <6>, <5>.\nNode <5> is connected to nodes <1>, <4>, <3>, <0>.\nNode <1> is connected to node <5>.\nNode <4> is connected to node <5>.\nNode <0> is connected to node <5>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 65,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <4>.\nNode <1> is connected to node <3>.\nNode <4> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <5>, <0>.\nNode <5> is connected to node <2>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 66,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>, <1>, <4>.\nNode <3> is connected to nodes <0>, <5>, <1>, <4>.\nNode <5> is connected to nodes <0>, <2>, <3>, <1>, <4>.\nNode <1> is connected to nodes <0>, <2>, <3>, <5>, <4>.\nNode <4> is connected to nodes <0>, <2>, <3>, <5>, <1>.\nNode <2> is connected to nodes <5>, <1>, <4>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "4",
        "type": "degree"
    },
    {
        "index": 67,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <2>.\nNode <3> is connected to node <1>.\nNode <2> is connected to nodes <1>, <5>, <4>, <0>.\nNode <5> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <2>, <5>.\nNode <0> is connected to nodes <2>, <6>.\nNode <6> is connected to node <0>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 68,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <3>, <1>, <0>, <2>.\nNode <5> is connected to nodes <4>, <3>, <0>.\nNode <3> is connected to nodes <4>, <5>, <1>, <0>, <2>.\nNode <1> is connected to nodes <4>, <3>, <0>, <2>.\nNode <0> is connected to nodes <4>, <5>, <3>, <1>, <2>.\nNode <2> is connected to nodes <4>, <3>, <1>, <0>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "5",
        "type": "degree"
    },
    {
        "index": 69,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5>, <1>.\nNode <5> is connected to node <2>.\nNode <1> is connected to nodes <4>, <2>.\nNode <4> is connected to node <1>.\nNode <2> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <2>, <1>, <0>, <5>.\nWhat is the out-degree of node <2>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 70,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <3>, <5>.\nNode <3> is connected to nodes <0>, <1>, <2>.\nNode <5> is connected to nodes <0>, <2>.\nNode <4> is connected to nodes <3>, <5>, <1>.\nNode <0> is connected to nodes <1>, <2>.\nWhat is the out-degree of node <4>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 71,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <5>, <2>, <6>.\nNode <3> is connected to nodes <1>, <0>.\nNode <5> is connected to nodes <1>, <6>.\nNode <2> is connected to nodes <1>, <6>.\nNode <6> is connected to nodes <1>, <5>, <2>, <0>, <4>.\nNode <0> is connected to nodes <3>, <6>, <4>.\nNode <4> is connected to nodes <6>, <0>.\nWhat is the degree of node <2>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 72,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <2>, <0>.\nNode <3> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <1>, <3>, <4>.\nNode <0> is connected to node <1>.\nNode <4> is connected to node <2>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 73,
        "question": "Given an undirected graph:\nNode <0> is connected to node <2>.\nNode <2> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <2>, <3>.\nNode <5> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <5>, <6>, <4>.\nNode <1> is connected to nodes <5>, <6>.\nNode <6> is connected to nodes <3>, <1>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 74,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <6>, <5>.\nNode <6> is connected to nodes <5>, <3>, <4>.\nNode <5> is connected to nodes <3>, <0>, <2>, <1>.\nNode <2> is connected to nodes <1>, <6>, <5>, <3>, <4>.\nNode <1> is connected to nodes <0>, <2>.\nNode <3> is connected to node <5>.\nNode <0> is connected to nodes <4>, <2>.\nWhat is the out-degree of node <0>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 75,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <4>, <2>, <1>.\nNode <3> is connected to node <5>.\nNode <4> is connected to nodes <5>, <0>.\nNode <2> is connected to node <3>.\nNode <1> is connected to nodes <0>, <2>.\nNode <5> is connected to nodes <1>, <3>.\nWhat is the out-degree of node <0>?\nAnswer:\n",
        "answer": "4",
        "type": "degree"
    },
    {
        "index": 76,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <4>, <5>.\nNode <1> is connected to node <3>.\nNode <4> is connected to nodes <3>, <0>.\nNode <5> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <4>, <5>, <2>.\nNode <2> is connected to node <0>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 77,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <2>, <0>.\nNode <4> is connected to node <3>.\nNode <2> is connected to node <3>.\nNode <0> is connected to nodes <3>, <1>.\nNode <1> is connected to node <0>.\nWhat is the degree of node <2>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 78,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <1>, <6>.\nNode <4> is connected to nodes <1>, <6>.\nNode <6> is connected to nodes <0>, <2>, <4>.\nNode <2> is connected to nodes <6>, <5>.\nNode <5> is connected to nodes <2>, <3>.\nNode <3> is connected to node <5>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 79,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <2>, <3>, <0>.\nNode <1> is connected to node <4>.\nNode <2> is connected to node <4>.\nNode <3> is connected to node <4>.\nNode <0> is connected to node <4>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 80,
        "question": "Given an undirected graph:\nNode <2> is connected to node <4>.\nNode <4> is connected to nodes <2>, <0>, <1>, <5>.\nNode <0> is connected to node <4>.\nNode <1> is connected to nodes <4>, <3>.\nNode <5> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <1>, <5>.\nWhat is the degree of node <2>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 81,
        "question": "Given a directed graph:\nNode <0> is connected to node <2>.\nNode <2> is connected to nodes <4>, <0>, <1>.\nNode <3> is connected to nodes <6>, <5>, <2>.\nNode <5> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <5>, <2>.\nNode <4> is connected to nodes <3>, <1>, <6>, <2>.\nWhat is the out-degree of node <4>?\nAnswer:\n",
        "answer": "4",
        "type": "degree"
    },
    {
        "index": 82,
        "question": "Given an undirected graph:\nNode <5> is connected to node <4>.\nNode <4> is connected to nodes <5>, <6>.\nNode <6> is connected to nodes <4>, <3>, <1>, <2>.\nNode <3> is connected to nodes <0>, <6>.\nNode <0> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <0>, <6>.\nNode <2> is connected to node <6>.\nWhat is the degree of node <6>?\nAnswer:\n",
        "answer": "4",
        "type": "degree"
    },
    {
        "index": 83,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <2>, <6>, <5>, <0>.\nNode <1> is connected to node <3>.\nNode <2> is connected to node <3>.\nNode <6> is connected to nodes <3>, <4>.\nNode <5> is connected to node <3>.\nNode <0> is connected to node <3>.\nNode <4> is connected to node <6>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 84,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <0>, <3>.\nNode <4> is connected to nodes <1>, <3>, <2>.\nNode <0> is connected to node <1>.\nNode <3> is connected to nodes <1>, <4>.\nNode <2> is connected to node <4>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 85,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <6>, <1>, <4>, <5>.\nNode <6> is connected to nodes <1>, <5>, <2>, <0>.\nNode <1> is connected to nodes <4>, <5>, <2>, <3>, <0>, <6>.\nNode <4> is connected to nodes <3>, <0>.\nNode <5> is connected to nodes <2>, <3>, <0>, <1>.\nNode <0> is connected to nodes <6>, <4>, <5>, <3>.\nNode <2> is connected to node <5>.\nWhat is the out-degree of node <0>?\nAnswer:\n",
        "answer": "4",
        "type": "degree"
    },
    {
        "index": 86,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <1>, <5>.\nNode <4> is connected to node <2>.\nNode <1> is connected to nodes <2>, <3>.\nNode <5> is connected to nodes <2>, <0>.\nNode <3> is connected to node <1>.\nNode <0> is connected to node <5>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 87,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <4>, <1>, <3>.\nNode <2> is connected to nodes <5>, <0>, <1>, <3>.\nNode <4> is connected to nodes <5>, <0>, <1>, <3>.\nNode <1> is connected to nodes <5>, <2>, <4>, <0>, <3>.\nNode <3> is connected to nodes <5>, <2>, <4>, <0>, <1>.\nNode <0> is connected to nodes <2>, <4>, <1>, <3>.\nWhat is the degree of node <2>?\nAnswer:\n",
        "answer": "4",
        "type": "degree"
    },
    {
        "index": 88,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <0>, <2>.\nNode <3> is connected to nodes <1>, <0>, <4>.\nNode <0> is connected to nodes <1>, <3>.\nNode <2> is connected to node <1>.\nNode <4> is connected to node <3>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 89,
        "question": "Given a directed graph:\nNode <2> is connected to node <3>.\nNode <3> is connected to node <2>.\nNode <1> is connected to nodes <3>, <4>, <2>.\nNode <4> is connected to nodes <0>, <1>, <5>, <3>.\nNode <5> is connected to nodes <3>, <0>, <2>, <1>.\nNode <0> is connected to nodes <2>, <1>, <3>, <4>.\nWhat is the out-degree of node <1>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 90,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <3>, <4>, <1>.\nNode <1> is connected to nodes <3>, <0>, <2>.\nNode <4> is connected to node <0>.\nNode <2> is connected to node <1>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 91,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <2>, <3>.\nNode <4> is connected to nodes <2>, <0>.\nNode <3> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <4>, <3>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 92,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <2>.\nNode <4> is connected to node <1>.\nNode <2> is connected to nodes <1>, <3>, <0>.\nNode <3> is connected to node <2>.\nNode <0> is connected to node <2>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 93,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <5>, <3>.\nNode <5> is connected to node <6>.\nNode <3> is connected to nodes <6>, <2>, <0>, <4>, <1>.\nNode <2> is connected to node <3>.\nNode <0> is connected to node <3>.\nNode <4> is connected to node <3>.\nNode <1> is connected to node <3>.\nWhat is the degree of node <6>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 94,
        "question": "Given a directed graph:\nNode <1> is connected to node <5>.\nNode <5> is connected to nodes <0>, <1>, <4>.\nNode <2> is connected to nodes <3>, <0>, <1>.\nNode <3> is connected to nodes <5>, <1>.\nNode <0> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <0>, <1>.\nNode <6> is connected to nodes <3>, <5>, <4>.\nWhat is the out-degree of node <5>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 95,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <3>, <1>, <5>.\nNode <0> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <6>, <2>, <4>, <3>.\nNode <5> is connected to nodes <6>, <2>, <3>, <1>.\nNode <4> is connected to nodes <1>, <5>, <6>, <2>, <0>.\nWhat is the out-degree of node <1>?\nAnswer:\n",
        "answer": "4",
        "type": "degree"
    },
    {
        "index": 96,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <0>, <4>, <3>.\nNode <2> is connected to node <0>.\nNode <4> is connected to node <1>.\nNode <3> is connected to node <1>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 97,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <3>, <5>.\nNode <2> is connected to nodes <1>, <0>.\nNode <3> is connected to nodes <1>, <0>.\nNode <5> is connected to node <1>.\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <4> is connected to node <0>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 98,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <1>, <3>, <2>.\nNode <4> is connected to node <0>.\nNode <1> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <2> is connected to node <0>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 99,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <4>, <6>, <1>, <2>.\nNode <5> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <0>, <5>, <6>, <2>.\nNode <6> is connected to nodes <0>, <4>, <3>, <1>, <2>.\nNode <1> is connected to nodes <0>, <6>, <3>, <2>.\nNode <2> is connected to nodes <0>, <4>, <6>, <3>, <1>.\nNode <3> is connected to nodes <6>, <1>, <2>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "4",
        "type": "degree"
    },
    {
        "index": 100,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <5>, <0>.\nNode <1> is connected to node <3>.\nNode <5> is connected to nodes <3>, <4>.\nNode <0> is connected to node <3>.\nNode <4> is connected to nodes <5>, <2>.\nNode <2> is connected to node <4>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 101,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <3>, <2>, <4>.\nNode <5> is connected to nodes <0>, <3>, <4>, <1>.\nNode <3> is connected to nodes <0>, <5>, <2>, <4>, <1>.\nNode <2> is connected to nodes <0>, <3>, <4>, <1>.\nNode <4> is connected to nodes <0>, <5>, <3>, <2>.\nNode <1> is connected to nodes <5>, <3>, <2>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 102,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5>, <3>, <4>.\nNode <5> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <4>, <2>, <5>.\nNode <2> is connected to node <0>.\nNode <1> is connected to nodes <4>, <2>, <5>.\nWhat is the out-degree of node <0>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 103,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <5>, <3>.\nNode <3> is connected to nodes <2>, <6>, <1>, <0>.\nNode <5> is connected to nodes <2>, <4>, <0>.\nNode <1> is connected to nodes <5>, <3>, <2>.\nNode <2> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <5>, <2>.\nWhat is the out-degree of node <1>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 104,
        "question": "Given an undirected graph:\nNode <5> is connected to node <4>.\nNode <4> is connected to nodes <5>, <2>, <6>, <1>.\nNode <2> is connected to nodes <4>, <3>.\nNode <6> is connected to nodes <4>, <3>.\nNode <1> is connected to nodes <4>, <0>.\nNode <3> is connected to nodes <2>, <6>.\nNode <0> is connected to node <1>.\nWhat is the degree of node <5>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 105,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1>, <2>, <0>.\nNode <1> is connected to nodes <5>, <6>.\nNode <2> is connected to nodes <5>, <4>.\nNode <0> is connected to nodes <5>, <6>, <4>.\nNode <6> is connected to nodes <1>, <3>, <0>, <4>.\nNode <3> is connected to nodes <6>, <4>.\nNode <4> is connected to nodes <6>, <3>, <0>, <2>.\nWhat is the degree of node <2>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 106,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <5>, <1>.\nNode <3> is connected to nodes <5>, <0>.\nNode <1> is connected to nodes <2>, <4>.\nNode <0> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <1>, <0>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 107,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <6>.\nNode <1> is connected to nodes <0>, <2>, <4>.\nNode <6> is connected to nodes <0>, <4>.\nNode <2> is connected to nodes <1>, <5>.\nNode <4> is connected to nodes <1>, <6>.\nNode <3> is connected to node <5>.\nNode <5> is connected to nodes <3>, <2>.\nWhat is the degree of node <6>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 108,
        "question": "Given a directed graph:\nNode <6> is connected to node <1>.\nNode <1> is connected to nodes <0>, <2>, <3>, <6>.\nNode <0> is connected to nodes <2>, <5>, <3>, <1>.\nNode <2> is connected to node <3>.\nNode <3> is connected to nodes <4>, <2>.\nNode <5> is connected to nodes <3>, <1>.\nNode <4> is connected to node <2>.\nWhat is the out-degree of node <1>?\nAnswer:\n",
        "answer": "4",
        "type": "degree"
    },
    {
        "index": 109,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <2>, <4>, <6>.\nNode <3> is connected to nodes <1>, <5>, <6>.\nNode <2> is connected to nodes <1>, <4>, <0>.\nNode <4> is connected to nodes <1>, <5>, <2>.\nNode <6> is connected to nodes <1>, <3>, <5>, <0>.\nNode <5> is connected to nodes <3>, <4>, <6>, <0>.\nNode <0> is connected to nodes <5>, <2>, <6>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "4",
        "type": "degree"
    },
    {
        "index": 110,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <0>, <4>, <1>.\nNode <2> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <2>, <3>.\nNode <5> is connected to node <2>.\nWhat is the degree of node <5>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 111,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <3>, <1>.\nNode <4> is connected to node <3>.\nNode <1> is connected to nodes <0>, <2>.\nNode <2> is connected to node <1>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 112,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <5>, <3>, <0>.\nNode <5> is connected to nodes <6>, <0>.\nNode <3> is connected to nodes <2>, <1>, <6>.\nNode <0> is connected to nodes <4>, <2>.\nNode <6> is connected to nodes <3>, <0>, <4>, <1>, <5>.\nNode <4> is connected to nodes <1>, <5>, <2>, <0>.\nNode <2> is connected to nodes <1>, <5>, <6>.\nWhat is the out-degree of node <2>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 113,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <2>, <4>.\nNode <0> is connected to node <1>.\nNode <2> is connected to nodes <1>, <5>, <3>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <2>.\nNode <3> is connected to node <2>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 114,
        "question": "Given an undirected graph:\nNode <2> is connected to node <1>.\nNode <1> is connected to nodes <2>, <3>, <4>, <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <0> is connected to node <1>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 115,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1>, <4>, <2>.\nNode <1> is connected to nodes <3>, <0>.\nNode <2> is connected to nodes <0>, <3>, <4>.\nNode <3> is connected to node <4>.\nWhat is the out-degree of node <1>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 116,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <3>, <2>.\nNode <0> is connected to nodes <3>, <1>.\nNode <2> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <2>, <0>.\nWhat is the degree of node <2>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 117,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>, <4>.\nNode <1> is connected to node <0>.\nNode <2> is connected to nodes <0>, <4>, <3>.\nNode <4> is connected to nodes <0>, <2>.\nNode <3> is connected to node <2>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 118,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <3>.\nNode <0> is connected to node <1>.\nNode <3> is connected to nodes <1>, <2>, <4>.\nNode <2> is connected to node <3>.\nNode <4> is connected to node <3>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 119,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <3>, <5>, <4>.\nNode <0> is connected to node <2>.\nNode <3> is connected to nodes <2>, <1>, <6>.\nNode <5> is connected to node <2>.\nNode <4> is connected to node <2>.\nNode <1> is connected to node <3>.\nNode <6> is connected to node <3>.\nWhat is the degree of node <5>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 120,
        "question": "Given a directed graph:\nNode <1> is connected to node <2>.\nNode <2> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <2>, <1>.\nNode <4> is connected to nodes <3>, <1>.\nNode <3> is connected to node <0>.\nWhat is the out-degree of node <4>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 121,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <0>, <4>.\nNode <1> is connected to nodes <2>, <3>.\nNode <0> is connected to node <2>.\nNode <4> is connected to node <2>.\nNode <3> is connected to node <1>.\nWhat is the degree of node <2>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 122,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <0>, <4>, <6>, <5>.\nNode <2> is connected to nodes <3>, <5>.\nNode <0> is connected to nodes <3>, <5>.\nNode <4> is connected to nodes <3>, <6>.\nNode <6> is connected to nodes <3>, <4>, <1>.\nNode <5> is connected to nodes <3>, <2>, <0>, <1>.\nNode <1> is connected to nodes <6>, <5>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 123,
        "question": "Given an undirected graph:\nNode <0> is connected to node <1>.\nNode <1> is connected to nodes <0>, <3>, <4>.\nNode <3> is connected to nodes <1>, <2>, <4>.\nNode <4> is connected to nodes <1>, <3>.\nNode <2> is connected to node <3>.\nWhat is the degree of node <2>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 124,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <6>, <0>.\nNode <3> is connected to nodes <6>, <5>.\nNode <0> is connected to nodes <1>, <5>, <2>.\nNode <5> is connected to nodes <0>, <3>, <4>.\nNode <2> is connected to node <0>.\nNode <4> is connected to node <5>.\nWhat is the degree of node <5>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 125,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <3>, <5>, <6>.\nNode <1> is connected to nodes <3>, <4>.\nNode <5> is connected to nodes <2>, <6>.\nNode <6> is connected to nodes <2>, <5>.\nNode <4> is connected to nodes <1>, <0>.\nNode <0> is connected to node <4>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 126,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <1>, <4>, <3>, <0>.\nNode <5> is connected to nodes <2>, <1>, <3>.\nNode <1> is connected to nodes <2>, <5>, <4>.\nNode <4> is connected to nodes <2>, <1>, <3>, <0>.\nNode <3> is connected to nodes <2>, <5>, <4>.\nNode <0> is connected to nodes <2>, <4>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 127,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <6>, <2>, <5>.\nNode <6> is connected to nodes <3>, <4>, <0>, <1>.\nNode <2> is connected to node <3>.\nNode <5> is connected to node <3>.\nNode <4> is connected to node <6>.\nNode <0> is connected to node <6>.\nNode <1> is connected to node <6>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 128,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <3>, <1>, <2>.\nNode <3> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <2>, <3>, <1>.\nNode <2> is connected to nodes <1>, <4>.\nWhat is the out-degree of node <3>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 129,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <0>, <4>.\nNode <1> is connected to nodes <3>, <2>.\nNode <0> is connected to node <3>.\nNode <4> is connected to node <3>.\nNode <2> is connected to node <1>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 130,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <6>, <4>.\nNode <6> is connected to nodes <2>, <1>.\nNode <4> is connected to nodes <2>, <0>, <5>.\nNode <1> is connected to nodes <6>, <3>.\nNode <0> is connected to node <4>.\nNode <5> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <1>, <5>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 131,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <0>, <4>.\nNode <3> is connected to nodes <0>, <4>, <2>.\nNode <4> is connected to nodes <1>, <3>.\nNode <2> is connected to node <3>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 132,
        "question": "Given a directed graph:\nNode <6> is connected to node <4>.\nNode <4> is connected to node <3>.\nNode <2> is connected to nodes <4>, <6>.\nNode <3> is connected to nodes <1>, <6>.\nNode <1> is connected to nodes <5>, <0>, <4>.\nNode <5> is connected to nodes <2>, <1>.\nNode <0> is connected to nodes <1>, <5>.\nWhat is the out-degree of node <0>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 133,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <5>, <2>.\nNode <1> is connected to nodes <0>, <3>, <5>, <4>, <2>.\nNode <5> is connected to nodes <0>, <1>, <3>, <4>, <2>.\nNode <2> is connected to nodes <0>, <1>, <3>, <5>, <4>.\nNode <3> is connected to nodes <1>, <5>, <4>, <2>.\nNode <4> is connected to nodes <1>, <3>, <5>, <2>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "4",
        "type": "degree"
    },
    {
        "index": 134,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <3>, <0>, <5>.\nNode <4> is connected to node <2>.\nNode <3> is connected to node <2>.\nNode <0> is connected to nodes <2>, <1>.\nNode <5> is connected to nodes <2>, <6>.\nNode <1> is connected to node <0>.\nNode <6> is connected to node <5>.\nWhat is the degree of node <2>?\nAnswer:\n",
        "answer": "4",
        "type": "degree"
    },
    {
        "index": 135,
        "question": "Given an undirected graph:\nNode <5> is connected to node <3>.\nNode <3> is connected to nodes <5>, <4>, <0>.\nNode <4> is connected to nodes <3>, <2>.\nNode <0> is connected to nodes <3>, <1>.\nNode <2> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <2>, <0>.\nWhat is the degree of node <2>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 136,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <1>, <3>.\nNode <4> is connected to node <0>.\nNode <1> is connected to node <0>.\nNode <3> is connected to nodes <0>, <2>.\nNode <2> is connected to node <3>.\nWhat is the degree of node <2>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 137,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <6>, <5>, <0>, <4>.\nNode <6> is connected to node <2>.\nNode <5> is connected to nodes <2>, <1>, <3>.\nNode <0> is connected to node <2>.\nNode <4> is connected to node <2>.\nNode <1> is connected to node <5>.\nNode <3> is connected to node <5>.\nWhat is the degree of node <5>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 138,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <6>, <1>, <5>.\nNode <0> is connected to nodes <4>, <6>, <1>, <3>, <5>.\nNode <6> is connected to nodes <4>, <2>, <0>, <5>.\nNode <1> is connected to nodes <4>, <2>, <0>, <3>.\nNode <5> is connected to nodes <4>, <2>, <0>, <6>, <3>.\nNode <2> is connected to nodes <6>, <1>, <3>, <5>.\nNode <3> is connected to nodes <2>, <0>, <1>, <5>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "4",
        "type": "degree"
    },
    {
        "index": 139,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <0>, <1>, <4>.\nNode <5> is connected to node <2>.\nNode <0> is connected to node <2>.\nNode <1> is connected to node <2>.\nNode <4> is connected to nodes <2>, <3>.\nNode <3> is connected to node <4>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 140,
        "question": "Given a directed graph:\nNode <5> is connected to node <3>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <3>, <2>.\nNode <0> is connected to node <4>.\nWhat is the out-degree of node <3>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 141,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <0>.\nNode <2> is connected to node <3>.\nNode <0> is connected to nodes <1>, <3>, <2>.\nNode <3> is connected to nodes <2>, <1>.\nNode <4> is connected to nodes <2>, <1>.\nWhat is the out-degree of node <0>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 142,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <4>, <1>, <0>.\nNode <2> is connected to node <3>.\nNode <4> is connected to node <3>.\nNode <1> is connected to node <3>.\nNode <0> is connected to node <3>.\nWhat is the degree of node <2>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 143,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <6>, <2>, <1>, <0>.\nNode <3> is connected to nodes <4>, <6>, <2>, <5>.\nNode <6> is connected to nodes <4>, <3>, <2>, <0>.\nNode <2> is connected to nodes <4>, <3>, <6>, <1>, <0>.\nNode <1> is connected to nodes <4>, <2>, <0>, <5>.\nNode <0> is connected to nodes <4>, <6>, <2>, <1>, <5>.\nNode <5> is connected to nodes <3>, <1>, <0>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "5",
        "type": "degree"
    },
    {
        "index": 144,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <1>, <4>.\nNode <1> is connected to nodes <0>, <3>.\nNode <4> is connected to nodes <3>, <2>.\nNode <0> is connected to nodes <3>, <4>.\nWhat is the out-degree of node <2>?\nAnswer:\n",
        "answer": "0",
        "type": "degree"
    },
    {
        "index": 145,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <5>, <1>, <6>.\nNode <2> is connected to nodes <0>, <3>.\nNode <5> is connected to node <4>.\nNode <1> is connected to nodes <6>, <3>, <5>.\nNode <6> is connected to nodes <3>, <1>.\nNode <0> is connected to nodes <1>, <4>.\nWhat is the out-degree of node <3>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 146,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <2>, <4>, <1>.\nNode <4> is connected to nodes <3>, <0>, <2>.\nNode <3> is connected to node <2>.\nWhat is the out-degree of node <4>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 147,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <0>, <1>.\nNode <3> is connected to nodes <2>, <5>.\nNode <0> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <2>, <5>.\nNode <5> is connected to nodes <3>, <1>.\nNode <4> is connected to node <0>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 148,
        "question": "Given an undirected graph:\nNode <0> is connected to node <2>.\nNode <2> is connected to nodes <0>, <3>, <1>.\nNode <3> is connected to nodes <2>, <5>.\nNode <1> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <1>, <5>.\nNode <5> is connected to nodes <4>, <3>.\nWhat is the degree of node <2>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 149,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <3>, <0>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <3> is connected to nodes <2>, <1>.\nNode <0> is connected to node <2>.\nNode <4> is connected to node <1>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 150,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <4>, <1>.\nNode <3> is connected to nodes <4>, <0>.\nNode <1> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <3>, <1>.\nWhat is the degree of node <2>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 151,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <6>, <1>.\nNode <4> is connected to nodes <3>, <5>, <0>, <2>.\nNode <6> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <3>, <6>, <0>, <2>.\nNode <5> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <4>, <5>, <1>.\nNode <2> is connected to nodes <4>, <1>.\nWhat is the degree of node <5>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 152,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <3>, <0>.\nNode <4> is connected to nodes <1>, <2>.\nNode <3> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <1>, <3>.\nNode <2> is connected to node <4>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 153,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <1>, <5>, <2>, <4>.\nNode <0> is connected to nodes <3>, <1>, <5>, <4>.\nNode <1> is connected to nodes <3>, <0>, <5>, <4>.\nNode <5> is connected to nodes <3>, <0>, <1>, <2>, <4>.\nNode <2> is connected to nodes <3>, <5>, <4>.\nNode <4> is connected to nodes <3>, <0>, <1>, <5>, <2>.\nWhat is the degree of node <5>?\nAnswer:\n",
        "answer": "5",
        "type": "degree"
    },
    {
        "index": 154,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <3>, <2>, <1>.\nNode <5> is connected to nodes <4>, <3>, <2>, <1>.\nNode <3> is connected to nodes <4>, <5>, <0>, <2>, <1>.\nNode <2> is connected to nodes <4>, <5>, <3>, <0>, <1>.\nNode <1> is connected to nodes <4>, <5>, <3>, <0>, <2>.\nNode <0> is connected to nodes <3>, <2>, <1>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 155,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <1>, <2>, <3>.\nNode <0> is connected to node <1>.\nNode <2> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <4>, <2>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 156,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <6>, <1>, <4>, <3>.\nNode <0> is connected to nodes <2>, <5>.\nNode <6> is connected to node <2>.\nNode <1> is connected to node <2>.\nNode <4> is connected to node <2>.\nNode <3> is connected to node <2>.\nNode <5> is connected to node <0>.\nWhat is the degree of node <5>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 157,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <1>, <3>, <2>.\nNode <1> is connected to node <6>.\nNode <3> is connected to node <6>.\nNode <2> is connected to nodes <6>, <0>.\nNode <0> is connected to nodes <2>, <5>, <4>.\nNode <5> is connected to node <0>.\nNode <4> is connected to node <0>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 158,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <5>, <2>, <3>.\nNode <5> is connected to nodes <3>, <6>, <0>.\nNode <3> is connected to nodes <1>, <4>, <0>, <2>.\nNode <4> is connected to nodes <5>, <2>, <6>, <1>.\nNode <0> is connected to node <4>.\nNode <6> is connected to nodes <4>, <2>, <3>.\nWhat is the out-degree of node <3>?\nAnswer:\n",
        "answer": "4",
        "type": "degree"
    },
    {
        "index": 159,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <6>, <1>, <3>, <4>, <0>.\nNode <6> is connected to node <2>.\nNode <1> is connected to nodes <2>, <5>.\nNode <3> is connected to node <2>.\nNode <4> is connected to node <2>.\nNode <0> is connected to node <2>.\nNode <5> is connected to node <1>.\nWhat is the degree of node <2>?\nAnswer:\n",
        "answer": "5",
        "type": "degree"
    },
    {
        "index": 160,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <4>, <3>.\nNode <1> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <2>, <1>, <0>.\nNode <0> is connected to node <3>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 161,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <0>, <2>.\nNode <4> is connected to nodes <5>, <6>, <2>, <1>.\nNode <0> is connected to nodes <5>, <3>.\nNode <2> is connected to nodes <5>, <4>.\nNode <6> is connected to node <4>.\nNode <1> is connected to node <4>.\nNode <3> is connected to node <0>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 162,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <1>, <4>, <5>.\nNode <3> is connected to node <0>.\nNode <1> is connected to nodes <0>, <2>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <0>.\nNode <2> is connected to node <1>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 163,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <0>.\nNode <1> is connected to node <4>.\nNode <0> is connected to nodes <4>, <3>, <2>.\nNode <3> is connected to node <0>.\nNode <2> is connected to node <0>.\nWhat is the degree of node <2>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 164,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <3>, <0>.\nNode <1> is connected to nodes <3>, <4>.\nNode <0> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <1>, <0>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 165,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <2>, <5>.\nNode <4> is connected to nodes <1>, <2>, <5>, <6>.\nNode <2> is connected to nodes <1>, <4>, <3>, <0>.\nNode <5> is connected to nodes <1>, <4>, <3>, <0>.\nNode <6> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <0>, <2>, <5>, <6>.\nNode <0> is connected to nodes <3>, <2>, <5>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 166,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <5>, <1>.\nNode <5> is connected to nodes <6>, <2>, <4>.\nNode <1> is connected to nodes <6>, <3>.\nNode <2> is connected to nodes <5>, <0>.\nNode <4> is connected to nodes <5>, <0>.\nNode <0> is connected to nodes <2>, <4>.\nNode <3> is connected to node <1>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 167,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <6>, <4>, <3>.\nNode <6> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <3> is connected to nodes <1>, <2>, <0>, <5>.\nNode <2> is connected to node <3>.\nNode <0> is connected to node <3>.\nNode <5> is connected to node <3>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 168,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <3>, <0>.\nNode <1> is connected to nodes <4>, <2>.\nNode <3> is connected to nodes <4>, <5>.\nNode <0> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <1>, <0>.\nNode <6> is connected to node <5>.\nNode <5> is connected to nodes <6>, <3>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 169,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <2>, <4>, <0>.\nNode <4> is connected to nodes <2>, <1>.\nNode <0> is connected to nodes <1>, <3>.\nNode <3> is connected to node <0>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 170,
        "question": "Given a directed graph:\nNode <5> is connected to node <0>.\nNode <0> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <2>, <1>, <0>, <5>.\nNode <2> is connected to nodes <1>, <3>, <5>, <4>.\nNode <1> is connected to node <5>.\nNode <3> is connected to nodes <5>, <4>, <2>, <1>, <0>.\nWhat is the out-degree of node <4>?\nAnswer:\n",
        "answer": "4",
        "type": "degree"
    },
    {
        "index": 171,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <0>, <1>.\nNode <2> is connected to nodes <0>, <3>.\nNode <1> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <2>, <1>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 172,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <0>, <5>.\nNode <1> is connected to nodes <2>, <4>, <0>, <3>.\nNode <0> is connected to nodes <2>, <1>, <4>, <5>.\nNode <5> is connected to nodes <2>, <4>, <0>, <3>.\nNode <4> is connected to nodes <1>, <0>, <5>, <3>.\nNode <3> is connected to nodes <1>, <4>, <5>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "4",
        "type": "degree"
    },
    {
        "index": 173,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <5>, <3>, <4>.\nNode <2> is connected to node <1>.\nNode <3> is connected to nodes <6>, <1>, <2>.\nNode <4> is connected to nodes <6>, <2>, <5>.\nNode <6> is connected to nodes <0>, <3>.\nNode <0> is connected to node <2>.\nWhat is the out-degree of node <4>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 174,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <4>, <0>.\nNode <5> is connected to node <1>.\nNode <4> is connected to nodes <1>, <3>, <2>.\nNode <0> is connected to node <1>.\nNode <3> is connected to node <4>.\nNode <2> is connected to node <4>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 175,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <0>, <1>.\nNode <4> is connected to node <3>.\nNode <0> is connected to node <3>.\nNode <1> is connected to nodes <3>, <2>.\nNode <2> is connected to node <1>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 176,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <6>, <5>, <1>.\nNode <2> is connected to nodes <4>, <6>, <5>, <1>, <3>, <0>.\nNode <6> is connected to nodes <4>, <2>, <5>, <1>, <0>.\nNode <5> is connected to nodes <4>, <2>, <6>, <1>, <3>.\nNode <1> is connected to nodes <4>, <2>, <6>, <5>, <3>, <0>.\nNode <3> is connected to nodes <2>, <5>, <1>.\nNode <0> is connected to nodes <2>, <6>, <1>.\nWhat is the degree of node <2>?\nAnswer:\n",
        "answer": "6",
        "type": "degree"
    },
    {
        "index": 177,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <5>, <4>.\nNode <2> is connected to node <1>.\nNode <0> is connected to node <1>.\nNode <5> is connected to nodes <0>, <2>.\nNode <3> is connected to nodes <2>, <4>, <1>.\nWhat is the out-degree of node <4>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 178,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <5>, <3>.\nNode <2> is connected to nodes <5>, <4>.\nNode <3> is connected to nodes <1>, <0>.\nNode <4> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <4>, <3>.\nWhat is the degree of node <2>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 179,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <0>.\nNode <5> is connected to node <6>.\nNode <6> is connected to node <3>.\nNode <3> is connected to nodes <1>, <6>, <5>, <4>.\nNode <1> is connected to nodes <2>, <4>, <3>.\nWhat is the out-degree of node <6>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 180,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <0>, <5>.\nNode <2> is connected to nodes <4>, <6>.\nNode <0> is connected to nodes <4>, <3>.\nNode <5> is connected to nodes <4>, <1>.\nNode <6> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <0>, <6>.\nNode <1> is connected to node <5>.\nWhat is the degree of node <2>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 181,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <1>, <4>.\nNode <0> is connected to node <1>.\nNode <4> is connected to nodes <2>, <5>, <3>.\nNode <5> is connected to nodes <6>, <4>.\nNode <6> is connected to nodes <5>, <3>.\nNode <3> is connected to nodes <6>, <4>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 182,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <3>, <1>.\nNode <2> is connected to nodes <4>, <3>, <0>, <5>.\nNode <3> is connected to node <2>.\nNode <1> is connected to nodes <0>, <4>.\nNode <5> is connected to nodes <2>, <4>, <3>, <0>.\nNode <4> is connected to node <3>.\nWhat is the out-degree of node <3>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 183,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <4>, <3>.\nNode <5> is connected to nodes <4>, <1>.\nNode <3> is connected to nodes <2>, <1>, <6>.\nNode <1> is connected to nodes <5>, <3>.\nNode <6> is connected to nodes <3>, <0>.\nNode <0> is connected to node <6>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 184,
        "question": "Given an undirected graph:\nNode <2> is connected to node <1>.\nNode <1> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <1>, <4>, <3>.\nNode <4> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <0>, <4>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 185,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <2>, <1>, <4>.\nNode <0> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <3>, <0>.\nNode <4> is connected to node <3>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 186,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <1>, <0>.\nNode <2> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <4>, <2>, <3>.\nNode <3> is connected to node <0>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 187,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <6>, <0>, <1>.\nNode <2> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <5>, <4>, <6>.\nNode <1> is connected to nodes <3>, <2>, <0>, <4>.\nNode <4> is connected to node <3>.\nNode <5> is connected to nodes <4>, <6>, <0>.\nWhat is the out-degree of node <4>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 188,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <6>, <3>.\nNode <3> is connected to nodes <6>, <4>.\nNode <2> is connected to nodes <1>, <5>, <0>.\nNode <1> is connected to node <2>.\nNode <5> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <2>, <5>.\nWhat is the degree of node <6>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 189,
        "question": "Given a directed graph:\nNode <1> is connected to node <0>.\nNode <0> is connected to nodes <4>, <3>.\nNode <2> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <0>, <2>.\nNode <5> is connected to node <2>.\nNode <3> is connected to nodes <1>, <2>, <5>.\nWhat is the out-degree of node <0>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 190,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <5>, <1>, <3>.\nNode <4> is connected to node <5>.\nNode <5> is connected to nodes <1>, <3>, <2>.\nNode <1> is connected to nodes <2>, <0>, <5>.\nNode <0> is connected to nodes <5>, <4>.\nWhat is the out-degree of node <3>?\nAnswer:\n",
        "answer": "0",
        "type": "degree"
    },
    {
        "index": 191,
        "question": "Given a directed graph:\nNode <1> is connected to node <4>.\nNode <4> is connected to nodes <1>, <0>, <3>, <2>.\nNode <0> is connected to node <5>.\nNode <5> is connected to node <2>.\nNode <3> is connected to nodes <5>, <4>, <1>.\nNode <2> is connected to nodes <4>, <1>, <0>, <3>.\nWhat is the out-degree of node <5>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 192,
        "question": "Given a directed graph:\nNode <4> is connected to node <3>.\nNode <3> is connected to node <2>.\nNode <2> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <0>, <4>, <2>.\nWhat is the out-degree of node <0>?\nAnswer:\n",
        "answer": "0",
        "type": "degree"
    },
    {
        "index": 193,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <2>, <4>.\nNode <0> is connected to nodes <3>, <1>.\nNode <6> is connected to node <5>.\nNode <5> is connected to node <0>.\nWhat is the out-degree of node <2>?\nAnswer:\n",
        "answer": "0",
        "type": "degree"
    },
    {
        "index": 194,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <0>, <4>, <1>.\nNode <3> is connected to node <2>.\nNode <0> is connected to node <2>.\nNode <4> is connected to node <2>.\nNode <1> is connected to node <2>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 195,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <0>, <4>.\nNode <3> is connected to nodes <2>, <1>.\nNode <0> is connected to node <2>.\nNode <4> is connected to node <2>.\nNode <1> is connected to node <3>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 196,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <4>, <2>, <0>.\nNode <4> is connected to nodes <2>, <3>, <1>.\nNode <0> is connected to nodes <1>, <4>, <5>, <2>, <3>.\nNode <5> is connected to nodes <3>, <1>, <4>.\nNode <2> is connected to nodes <4>, <5>.\nWhat is the out-degree of node <1>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 197,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <6>, <5>, <1>, <3>.\nNode <6> is connected to nodes <0>, <2>, <4>.\nNode <5> is connected to nodes <3>, <4>, <6>.\nNode <1> is connected to node <6>.\nNode <3> is connected to nodes <2>, <4>, <0>.\nNode <4> is connected to nodes <6>, <1>, <3>.\nNode <0> is connected to nodes <2>, <5>, <1>.\nWhat is the out-degree of node <1>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 198,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <0>, <2>, <1>.\nNode <2> is connected to nodes <1>, <3>, <0>.\nNode <0> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <3>, <2>.\nWhat is the out-degree of node <0>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 199,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <2>, <3>.\nNode <4> is connected to node <0>.\nNode <2> is connected to nodes <0>, <5>, <1>.\nNode <3> is connected to node <0>.\nNode <5> is connected to node <2>.\nNode <1> is connected to node <2>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 200,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <6>, <0>.\nNode <6> is connected to nodes <4>, <2>, <1>.\nNode <0> is connected to nodes <4>, <5>, <2>.\nNode <2> is connected to nodes <0>, <3>.\nNode <1> is connected to nodes <0>, <3>, <2>.\nNode <4> is connected to node <5>.\nNode <5> is connected to nodes <3>, <2>, <4>.\nWhat is the out-degree of node <1>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 201,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <4>.\nNode <1> is connected to node <3>.\nNode <4> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <0>, <4>.\nNode <0> is connected to node <2>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 202,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <5>, <1>.\nNode <3> is connected to nodes <5>, <2>.\nNode <1> is connected to nodes <0>, <4>.\nNode <2> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <2>, <1>.\nWhat is the degree of node <2>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 203,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <6>, <2>.\nNode <4> is connected to nodes <6>, <3>.\nNode <2> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <2>, <5>.\nNode <5> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <5>, <4>.\nWhat is the degree of node <5>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 204,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <0>, <5>.\nNode <4> is connected to nodes <0>, <3>.\nNode <5> is connected to nodes <2>, <1>.\nNode <6> is connected to node <1>.\nNode <1> is connected to nodes <6>, <5>, <3>.\nNode <3> is connected to nodes <1>, <4>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 205,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <2>, <4>, <5>.\nNode <2> is connected to nodes <3>, <0>, <4>, <6>.\nNode <4> is connected to nodes <6>, <2>, <3>, <1>.\nNode <5> is connected to nodes <6>, <4>.\nNode <3> is connected to nodes <1>, <6>.\nNode <0> is connected to nodes <1>, <6>, <2>.\nNode <1> is connected to nodes <4>, <5>, <6>, <0>.\nWhat is the out-degree of node <4>?\nAnswer:\n",
        "answer": "4",
        "type": "degree"
    },
    {
        "index": 206,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <3>, <0>, <4>.\nNode <3> is connected to nodes <6>, <4>.\nNode <0> is connected to nodes <6>, <2>, <5>, <1>.\nNode <4> is connected to nodes <6>, <3>, <2>, <5>, <1>.\nNode <2> is connected to nodes <4>, <0>.\nNode <5> is connected to nodes <4>, <0>.\nNode <1> is connected to nodes <4>, <0>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "5",
        "type": "degree"
    },
    {
        "index": 207,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <0>, <3>.\nNode <1> is connected to nodes <0>, <2>, <3>.\nNode <3> is connected to nodes <4>, <1>.\nNode <5> is connected to node <2>.\nNode <2> is connected to nodes <5>, <1>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 208,
        "question": "Given a directed graph:\nNode <0> is connected to node <3>.\nNode <3> is connected to nodes <0>, <4>.\nNode <1> is connected to nodes <4>, <2>, <0>.\nNode <2> is connected to node <3>.\nWhat is the out-degree of node <0>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 209,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <4>.\nNode <2> is connected to node <5>.\nNode <4> is connected to nodes <5>, <1>.\nNode <1> is connected to nodes <4>, <0>, <3>.\nNode <0> is connected to node <1>.\nNode <3> is connected to node <1>.\nWhat is the degree of node <2>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 210,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <0>.\nNode <3> is connected to node <4>.\nNode <0> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <0>, <1>.\nNode <1> is connected to node <2>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 211,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <2>, <5>, <1>.\nNode <3> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <5> is connected to nodes <0>, <4>.\nNode <1> is connected to node <0>.\nNode <4> is connected to node <5>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 212,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <2>, <0>.\nNode <5> is connected to nodes <4>, <3>, <2>, <0>.\nNode <2> is connected to nodes <4>, <3>, <5>, <1>.\nNode <0> is connected to nodes <4>, <3>, <5>, <1>.\nNode <3> is connected to nodes <5>, <1>, <2>, <0>.\nNode <1> is connected to nodes <3>, <2>, <0>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "4",
        "type": "degree"
    },
    {
        "index": 213,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <1>.\nNode <3> is connected to node <2>.\nNode <1> is connected to nodes <2>, <4>, <0>.\nNode <4> is connected to node <1>.\nNode <0> is connected to node <1>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 214,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <1>, <3>.\nNode <4> is connected to nodes <1>, <2>, <0>.\nNode <1> is connected to nodes <3>, <2>, <0>, <4>.\nNode <3> is connected to node <0>.\nNode <0> is connected to node <2>.\nWhat is the out-degree of node <1>?\nAnswer:\n",
        "answer": "4",
        "type": "degree"
    },
    {
        "index": 215,
        "question": "Given an undirected graph:\nNode <1> is connected to node <0>.\nNode <0> is connected to nodes <1>, <6>, <3>.\nNode <6> is connected to nodes <0>, <5>.\nNode <3> is connected to nodes <0>, <2>, <5>.\nNode <5> is connected to nodes <6>, <3>.\nNode <4> is connected to node <2>.\nNode <2> is connected to nodes <4>, <3>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 216,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <6>.\nNode <5> is connected to nodes <2>, <4>.\nNode <6> is connected to nodes <2>, <0>.\nNode <4> is connected to nodes <5>, <3>.\nNode <3> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <1>, <6>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 217,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <3>, <2>, <1>.\nNode <1> is connected to nodes <0>, <5>.\nNode <5> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <5>, <6>.\nNode <6> is connected to node <4>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 218,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <0>, <3>.\nNode <4> is connected to nodes <0>, <3>, <1>.\nNode <3> is connected to nodes <2>, <4>.\nNode <1> is connected to node <4>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 219,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <1>, <3>, <0>.\nNode <4> is connected to nodes <1>, <0>.\nNode <3> is connected to node <2>.\nNode <0> is connected to nodes <2>, <4>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 220,
        "question": "Given an undirected graph:\nNode <3> is connected to node <0>.\nNode <0> is connected to nodes <3>, <4>, <1>.\nNode <4> is connected to nodes <0>, <2>.\nNode <1> is connected to nodes <0>, <5>.\nNode <2> is connected to nodes <4>, <5>.\nNode <5> is connected to nodes <2>, <1>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 221,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>, <3>, <1>.\nNode <2> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <1> is connected to node <0>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "4",
        "type": "degree"
    },
    {
        "index": 222,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <2>, <4>, <0>, <1>.\nNode <5> is connected to nodes <2>, <4>, <1>.\nNode <4> is connected to nodes <0>, <1>, <3>, <5>.\nNode <0> is connected to nodes <4>, <1>, <3>.\nNode <1> is connected to nodes <4>, <0>, <3>, <5>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "4",
        "type": "degree"
    },
    {
        "index": 223,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <1>, <3>, <2>.\nNode <0> is connected to nodes <3>, <4>, <2>.\nNode <1> is connected to node <4>.\nNode <3> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <5>, <0>, <3>.\nWhat is the out-degree of node <2>?\nAnswer:\n",
        "answer": "0",
        "type": "degree"
    },
    {
        "index": 224,
        "question": "Given a directed graph:\nNode <1> is connected to node <4>.\nNode <4> is connected to node <3>.\nNode <3> is connected to nodes <5>, <4>, <2>.\nNode <2> is connected to nodes <3>, <5>, <0>, <1>.\nNode <5> is connected to node <3>.\nNode <0> is connected to nodes <1>, <4>, <2>.\nWhat is the out-degree of node <0>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 225,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <1>, <5>, <4>, <3>.\nNode <0> is connected to nodes <2>, <5>.\nNode <1> is connected to nodes <2>, <6>.\nNode <5> is connected to nodes <2>, <0>, <6>.\nNode <4> is connected to nodes <2>, <6>.\nNode <3> is connected to nodes <2>, <6>.\nNode <6> is connected to nodes <3>, <1>, <5>, <4>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 226,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <5>.\nNode <2> is connected to node <3>.\nNode <5> is connected to node <4>.\nNode <3> is connected to nodes <0>, <2>.\nNode <4> is connected to nodes <3>, <1>, <2>.\nWhat is the out-degree of node <4>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 227,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <5>, <2>, <4>, <1>.\nNode <5> is connected to nodes <6>, <4>.\nNode <2> is connected to nodes <6>, <3>.\nNode <4> is connected to nodes <6>, <5>, <1>.\nNode <1> is connected to nodes <6>, <0>, <3>, <4>.\nNode <0> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <1>, <0>, <2>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 228,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <1>, <2>.\nNode <0> is connected to nodes <3>, <4>.\nNode <1> is connected to node <3>.\nNode <2> is connected to node <3>.\nNode <4> is connected to node <0>.\nWhat is the degree of node <2>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 229,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <4>, <5>.\nNode <2> is connected to nodes <3>, <0>, <1>.\nNode <4> is connected to node <3>.\nNode <5> is connected to node <3>.\nNode <0> is connected to node <2>.\nNode <1> is connected to node <2>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 230,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <2>, <3>.\nNode <4> is connected to nodes <2>, <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <3>, <4>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 231,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <2>, <1>.\nNode <3> is connected to nodes <2>, <1>, <4>.\nNode <2> is connected to node <1>.\nNode <1> is connected to nodes <4>, <3>.\nNode <0> is connected to nodes <3>, <2>.\nWhat is the out-degree of node <2>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 232,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <2>, <0>.\nNode <5> is connected to node <4>.\nNode <2> is connected to nodes <4>, <1>, <3>.\nNode <0> is connected to node <4>.\nNode <1> is connected to node <2>.\nNode <3> is connected to node <2>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 233,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <5>.\nNode <0> is connected to nodes <3>, <4>.\nNode <5> is connected to nodes <2>, <4>, <0>.\nNode <3> is connected to nodes <1>, <5>.\nNode <2> is connected to nodes <1>, <4>, <0>, <3>.\nNode <1> is connected to nodes <0>, <5>.\nWhat is the out-degree of node <1>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 234,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1>, <6>, <4>, <2>, <0>.\nNode <1> is connected to nodes <5>, <3>, <6>, <4>, <2>, <0>.\nNode <6> is connected to nodes <5>, <3>, <1>, <2>, <0>.\nNode <4> is connected to nodes <5>, <3>, <1>, <2>, <0>.\nNode <2> is connected to nodes <5>, <3>, <1>, <6>, <4>.\nNode <0> is connected to nodes <5>, <3>, <1>, <6>, <4>.\nNode <3> is connected to nodes <1>, <6>, <4>, <2>, <0>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "5",
        "type": "degree"
    },
    {
        "index": 235,
        "question": "Given an undirected graph:\nNode <1> is connected to node <0>.\nNode <0> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <0>, <2>, <4>.\nNode <2> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <2>, <3>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 236,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <5>, <1>, <2>.\nNode <3> is connected to node <4>.\nNode <5> is connected to node <4>.\nNode <1> is connected to node <4>.\nNode <2> is connected to nodes <4>, <0>.\nNode <0> is connected to node <2>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 237,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <3>.\nNode <4> is connected to node <0>.\nNode <3> is connected to nodes <0>, <2>, <1>.\nNode <2> is connected to node <3>.\nNode <1> is connected to node <3>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 238,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <4>.\nNode <2> is connected to node <3>.\nNode <4> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <4>, <0>.\nNode <0> is connected to node <1>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 239,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <3>, <2>, <5>.\nNode <1> is connected to node <3>.\nNode <2> is connected to nodes <4>, <6>.\nNode <5> is connected to nodes <4>, <0>.\nNode <6> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <6>, <5>.\nWhat is the degree of node <6>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 240,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <5>, <2>.\nNode <3> is connected to nodes <5>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <4>, <2>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 241,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <4>, <5>.\nNode <1> is connected to nodes <2>, <5>.\nNode <4> is connected to nodes <2>, <0>, <5>.\nNode <5> is connected to nodes <2>, <1>, <4>, <6>, <3>.\nNode <0> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <0>, <5>, <6>.\nNode <6> is connected to nodes <5>, <3>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 242,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <2>, <1>, <3>.\nNode <5> is connected to nodes <2>, <0>.\nNode <1> is connected to nodes <4>, <0>.\nNode <3> is connected to node <4>.\nNode <0> is connected to nodes <1>, <5>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 243,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <3>, <5>, <2>.\nNode <1> is connected to node <4>.\nNode <3> is connected to nodes <4>, <2>, <0>, <1>.\nNode <5> is connected to nodes <2>, <3>.\nNode <4> is connected to nodes <2>, <3>.\nWhat is the out-degree of node <3>?\nAnswer:\n",
        "answer": "4",
        "type": "degree"
    },
    {
        "index": 244,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <2>, <1>.\nNode <4> is connected to nodes <0>, <3>.\nNode <2> is connected to nodes <0>, <3>.\nNode <1> is connected to nodes <0>, <5>.\nNode <3> is connected to nodes <4>, <2>.\nNode <5> is connected to node <1>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 245,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <3>, <0>.\nNode <1> is connected to nodes <3>, <5>.\nNode <0> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <0>, <6>.\nNode <6> is connected to nodes <2>, <5>.\nNode <5> is connected to nodes <1>, <6>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 246,
        "question": "Given a directed graph:\nNode <1> is connected to node <0>.\nNode <0> is connected to nodes <4>, <1>.\nNode <3> is connected to node <4>.\nNode <4> is connected to nodes <5>, <2>.\nNode <2> is connected to nodes <3>, <0>.\nNode <5> is connected to nodes <0>, <4>.\nWhat is the out-degree of node <4>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 247,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <0>, <1>, <4>.\nNode <2> is connected to node <3>.\nNode <0> is connected to node <3>.\nNode <1> is connected to node <3>.\nNode <4> is connected to node <3>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "4",
        "type": "degree"
    },
    {
        "index": 248,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <6>, <0>, <2>.\nNode <3> is connected to nodes <4>, <5>, <0>.\nNode <6> is connected to nodes <4>, <1>.\nNode <0> is connected to nodes <4>, <3>.\nNode <2> is connected to node <4>.\nNode <5> is connected to node <3>.\nNode <1> is connected to node <6>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 249,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <4>, <2>.\nNode <3> is connected to nodes <4>, <2>, <0>.\nNode <2> is connected to nodes <1>, <3>.\nNode <0> is connected to node <3>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 250,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to nodes <5>, <0>, <3>, <4>.\nNode <3> is connected to nodes <5>, <2>, <4>.\nNode <4> is connected to nodes <5>, <1>, <2>, <3>.\nNode <1> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <1>, <2>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 251,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <2>, <4>, <3>.\nNode <1> is connected to node <2>.\nNode <4> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <0>, <4>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 252,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <4>, <2>, <3>.\nNode <0> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <1>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 253,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5>, <3>.\nNode <5> is connected to nodes <3>, <0>, <1>.\nNode <3> is connected to nodes <5>, <4>.\nNode <0> is connected to nodes <1>, <2>.\nNode <1> is connected to node <5>.\nNode <4> is connected to node <3>.\nWhat is the out-degree of node <0>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 254,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <2>, <5>, <0>.\nNode <0> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <0>, <6>.\nNode <6> is connected to nodes <1>, <3>.\nNode <3> is connected to node <6>.\nWhat is the degree of node <2>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 255,
        "question": "Given a directed graph:\nNode <1> is connected to node <5>.\nNode <5> is connected to node <2>.\nNode <6> is connected to nodes <5>, <4>, <3>, <0>, <1>.\nNode <4> is connected to node <1>.\nNode <3> is connected to nodes <0>, <5>.\nNode <0> is connected to node <2>.\nNode <2> is connected to nodes <3>, <0>.\nWhat is the out-degree of node <2>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 256,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <5>, <4>, <2>.\nNode <1> is connected to nodes <0>, <5>, <4>, <3>, <2>.\nNode <5> is connected to nodes <0>, <1>, <4>, <3>, <2>.\nNode <4> is connected to nodes <0>, <1>, <5>, <2>.\nNode <2> is connected to nodes <0>, <1>, <5>, <4>, <3>.\nNode <3> is connected to nodes <1>, <5>, <2>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 257,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <3>, <0>.\nNode <1> is connected to nodes <2>, <0>.\nNode <3> is connected to node <2>.\nNode <0> is connected to nodes <2>, <1>, <4>.\nNode <4> is connected to node <0>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 258,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <0>, <2>.\nNode <4> is connected to node <3>.\nNode <0> is connected to node <3>.\nNode <2> is connected to nodes <3>, <1>.\nNode <1> is connected to node <2>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 259,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <0>, <2>.\nNode <0> is connected to node <5>.\nNode <2> is connected to nodes <1>, <0>, <3>.\nNode <5> is connected to node <0>.\nWhat is the out-degree of node <4>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 260,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <3>, <4>.\nNode <1> is connected to nodes <3>, <2>.\nNode <4> is connected to node <0>.\nNode <2> is connected to node <1>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 261,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <4>, <3>, <2>.\nNode <5> is connected to nodes <0>, <4>, <3>, <1>, <2>.\nNode <4> is connected to nodes <0>, <5>, <3>, <1>.\nNode <3> is connected to nodes <0>, <5>, <4>, <1>, <2>.\nNode <2> is connected to nodes <0>, <5>, <3>, <1>.\nNode <1> is connected to nodes <5>, <4>, <3>, <2>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "4",
        "type": "degree"
    },
    {
        "index": 262,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <3>, <5>.\nNode <4> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>, <2>.\nNode <5> is connected to node <0>.\nNode <1> is connected to node <3>.\nNode <2> is connected to node <3>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 263,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <4>, <3>, <2>.\nNode <0> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <2> is connected to nodes <1>, <5>.\nNode <5> is connected to node <2>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 264,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <2>.\nNode <0> is connected to node <1>.\nNode <2> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <2>, <3>.\nNode <3> is connected to node <4>.\nWhat is the degree of node <2>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 265,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <0>, <3>.\nNode <1> is connected to nodes <4>, <2>.\nNode <0> is connected to node <4>.\nNode <3> is connected to node <4>.\nNode <2> is connected to node <1>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 266,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <2>, <3>, <0>.\nNode <4> is connected to node <1>.\nNode <2> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <1>, <2>, <5>.\nNode <0> is connected to node <1>.\nNode <5> is connected to node <3>.\nWhat is the degree of node <2>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 267,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <1>, <0>, <5>.\nNode <3> is connected to nodes <1>, <4>.\nNode <0> is connected to nodes <2>, <5>.\nNode <5> is connected to nodes <2>, <0>.\nNode <4> is connected to node <3>.\nWhat is the degree of node <5>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 268,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <4>, <3>, <1>.\nNode <1> is connected to nodes <4>, <2>, <3>, <5>, <0>.\nNode <3> is connected to nodes <2>, <1>, <5>, <0>.\nNode <5> is connected to nodes <3>, <1>.\nNode <0> is connected to nodes <3>, <1>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "4",
        "type": "degree"
    },
    {
        "index": 269,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <2>, <0>, <5>.\nNode <4> is connected to node <1>.\nNode <2> is connected to nodes <1>, <3>, <6>.\nNode <0> is connected to node <1>.\nNode <5> is connected to node <1>.\nNode <3> is connected to node <2>.\nNode <6> is connected to node <2>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 270,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <3>, <6>.\nNode <1> is connected to nodes <3>, <2>, <4>.\nNode <6> is connected to nodes <0>, <5>.\nNode <2> is connected to node <1>.\nNode <4> is connected to nodes <1>, <5>.\nNode <5> is connected to nodes <6>, <4>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 271,
        "question": "Given a directed graph:\nNode <2> is connected to node <4>.\nNode <4> is connected to nodes <2>, <3>, <1>, <0>.\nNode <3> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <0>, <2>.\nWhat is the out-degree of node <0>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 272,
        "question": "Given a directed graph:\nNode <3> is connected to node <2>.\nNode <0> is connected to node <3>.\nNode <4> is connected to nodes <1>, <2>, <0>.\nNode <5> is connected to nodes <1>, <3>, <0>.\nWhat is the out-degree of node <1>?\nAnswer:\n",
        "answer": "0",
        "type": "degree"
    },
    {
        "index": 273,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <1>, <0>.\nNode <3> is connected to node <4>.\nNode <1> is connected to nodes <4>, <2>.\nNode <0> is connected to node <4>.\nNode <2> is connected to node <1>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 274,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <4>.\nNode <1> is connected to node <2>.\nNode <4> is connected to nodes <0>, <3>, <2>, <1>.\nNode <2> is connected to node <4>.\nNode <0> is connected to nodes <3>, <2>, <1>, <4>.\nWhat is the out-degree of node <3>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 275,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <5>, <6>, <4>, <1>.\nNode <2> is connected to node <0>.\nNode <5> is connected to node <0>.\nNode <6> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <1> is connected to nodes <0>, <3>.\nNode <3> is connected to node <1>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "5",
        "type": "degree"
    },
    {
        "index": 276,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <4>, <3>.\nNode <2> is connected to nodes <4>, <5>.\nNode <3> is connected to nodes <1>, <0>.\nNode <5> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <5>, <3>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 277,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <2>, <4>, <5>.\nNode <4> is connected to nodes <2>, <1>.\nNode <5> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <5>, <3>.\nNode <3> is connected to node <0>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 278,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <6>, <0>.\nNode <4> is connected to nodes <3>, <0>.\nNode <6> is connected to nodes <3>, <1>, <5>, <0>.\nNode <0> is connected to nodes <3>, <4>, <6>, <5>.\nNode <1> is connected to nodes <6>, <5>, <2>.\nNode <5> is connected to nodes <1>, <6>, <0>.\nNode <2> is connected to node <1>.\nWhat is the degree of node <2>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 279,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <2>, <4>, <0>.\nNode <3> is connected to nodes <5>, <6>.\nNode <2> is connected to node <5>.\nNode <4> is connected to nodes <5>, <1>.\nNode <0> is connected to node <5>.\nNode <6> is connected to node <3>.\nNode <1> is connected to node <4>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 280,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <1>, <2>, <5>.\nNode <1> is connected to nodes <3>, <2>, <0>.\nNode <5> is connected to nodes <1>, <3>, <2>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <2>.\nWhat is the out-degree of node <2>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 281,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <3>, <4>, <1>, <2>.\nNode <3> is connected to nodes <6>, <4>, <0>, <1>, <2>.\nNode <4> is connected to nodes <6>, <3>, <0>, <1>, <2>.\nNode <1> is connected to nodes <6>, <3>, <4>, <2>.\nNode <2> is connected to nodes <6>, <3>, <4>, <5>, <0>, <1>.\nNode <0> is connected to nodes <3>, <4>, <5>, <2>.\nNode <5> is connected to nodes <0>, <2>.\nWhat is the degree of node <4>?\nAnswer:\n",
        "answer": "5",
        "type": "degree"
    },
    {
        "index": 282,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <2>, <4>.\nNode <0> is connected to node <2>.\nNode <2> is connected to nodes <4>, <3>, <0>.\nNode <4> is connected to node <3>.\nNode <1> is connected to node <2>.\nWhat is the out-degree of node <0>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 283,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <0>, <4>, <3>, <5>, <1>, <2>.\nNode <0> is connected to nodes <6>, <2>.\nNode <4> is connected to nodes <6>, <2>.\nNode <3> is connected to node <6>.\nNode <5> is connected to nodes <6>, <2>, <1>.\nNode <1> is connected to nodes <6>, <5>.\nNode <2> is connected to nodes <6>, <0>, <4>, <5>.\nWhat is the degree of node <6>?\nAnswer:\n",
        "answer": "6",
        "type": "degree"
    },
    {
        "index": 284,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <5>, <1>, <3>.\nNode <5> is connected to nodes <6>, <4>.\nNode <1> is connected to node <6>.\nNode <3> is connected to nodes <6>, <0>, <2>.\nNode <4> is connected to nodes <5>, <0>.\nNode <0> is connected to nodes <4>, <3>.\nNode <2> is connected to node <3>.\nWhat is the degree of node <6>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 285,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <4>, <2>.\nNode <0> is connected to nodes <4>, <3>, <2>.\nNode <2> is connected to nodes <1>, <0>.\nNode <3> is connected to node <0>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 286,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <5>, <2>.\nNode <3> is connected to node <4>.\nNode <5> is connected to node <4>.\nNode <2> is connected to nodes <4>, <1>, <0>.\nNode <1> is connected to node <2>.\nNode <0> is connected to node <2>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 287,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <0>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <0> is connected to node <4>.\nNode <4> is connected to nodes <3>, <0>.\nNode <1> is connected to nodes <0>, <4>.\nWhat is the out-degree of node <3>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 288,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <6>, <5>.\nNode <2> is connected to nodes <6>, <1>.\nNode <5> is connected to nodes <4>, <1>.\nNode <3> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <3>, <2>, <5>.\nNode <0> is connected to node <3>.\nWhat is the degree of node <6>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 289,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <6>, <5>.\nNode <4> is connected to node <3>.\nNode <6> is connected to node <3>.\nNode <5> is connected to nodes <3>, <2>, <0>, <1>.\nNode <2> is connected to node <5>.\nNode <0> is connected to node <5>.\nNode <1> is connected to node <5>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 290,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <3>, <2>, <0>, <1>, <5>.\nNode <3> is connected to node <6>.\nNode <2> is connected to nodes <6>, <4>.\nNode <0> is connected to node <6>.\nNode <1> is connected to node <6>.\nNode <5> is connected to node <6>.\nNode <4> is connected to node <2>.\nWhat is the degree of node <0>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 291,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <3>, <1>.\nNode <4> is connected to nodes <3>, <2>.\nNode <1> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <4>, <1>.\nWhat is the degree of node <2>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 292,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <1>, <3>, <0>, <4>.\nNode <2> is connected to nodes <5>, <0>.\nNode <1> is connected to nodes <5>, <0>, <4>.\nNode <3> is connected to node <5>.\nNode <0> is connected to nodes <5>, <2>, <1>, <4>.\nNode <4> is connected to nodes <5>, <1>, <0>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 293,
        "question": "Given a directed graph:\nNode <2> is connected to node <3>.\nNode <3> is connected to nodes <5>, <0>, <1>.\nNode <4> is connected to nodes <1>, <5>, <2>.\nNode <1> is connected to nodes <2>, <4>.\nNode <5> is connected to nodes <1>, <3>.\nNode <0> is connected to nodes <1>, <5>, <4>.\nWhat is the out-degree of node <4>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 294,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <1>, <3>, <4>.\nNode <0> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <2>, <0>.\nNode <4> is connected to node <2>.\nWhat is the degree of node <1>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 295,
        "question": "Given a directed graph:\nNode <2> is connected to node <3>.\nNode <3> is connected to nodes <1>, <0>, <2>.\nNode <1> is connected to nodes <6>, <4>.\nNode <0> is connected to node <6>.\nNode <6> is connected to nodes <2>, <3>.\nNode <4> is connected to node <2>.\nNode <5> is connected to nodes <2>, <3>, <6>.\nWhat is the out-degree of node <1>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 296,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <6>, <5>, <1>.\nNode <3> is connected to nodes <2>, <0>, <4>.\nNode <6> is connected to node <2>.\nNode <5> is connected to node <2>.\nNode <1> is connected to node <2>.\nNode <0> is connected to node <3>.\nNode <4> is connected to node <3>.\nWhat is the degree of node <3>?\nAnswer:\n",
        "answer": "3",
        "type": "degree"
    },
    {
        "index": 297,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <1>, <4>.\nNode <0> is connected to node <5>.\nNode <1> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <0>, <2>.\nNode <5> is connected to node <4>.\nWhat is the out-degree of node <3>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 298,
        "question": "Given a directed graph:\nNode <4> is connected to node <2>.\nNode <2> is connected to nodes <4>, <1>.\nNode <1> is connected to node <4>.\nNode <0> is connected to node <4>.\nNode <3> is connected to nodes <2>, <4>, <1>, <0>.\nWhat is the out-degree of node <2>?\nAnswer:\n",
        "answer": "2",
        "type": "degree"
    },
    {
        "index": 299,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <1>, <2>.\nNode <4> is connected to nodes <0>, <2>.\nNode <1> is connected to nodes <0>, <6>.\nNode <2> is connected to nodes <0>, <4>, <3>.\nNode <6> is connected to node <1>.\nNode <3> is connected to nodes <2>, <5>.\nNode <5> is connected to node <3>.\nWhat is the degree of node <6>?\nAnswer:\n",
        "answer": "1",
        "type": "degree"
    },
    {
        "index": 0,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <1>, <3>, <5>, <0>.\nNode <4> is connected to nodes <2>, <1>, <5>.\nNode <1> is connected to nodes <2>, <4>, <3>, <5>, <0>.\nNode <3> is connected to nodes <2>, <1>, <0>.\nNode <5> is connected to nodes <2>, <4>, <1>, <0>.\nNode <0> is connected to nodes <2>, <1>, <3>, <5>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <0>, <5>, <4>, <2>, <3>]",
        "type": "DFS"
    },
    {
        "index": 1,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>, <6>, <4>.\nNode <1> is connected to nodes <0>, <6>, <3>.\nNode <2> is connected to nodes <0>, <4>, <3>.\nNode <6> is connected to nodes <0>, <1>, <4>, <5>, <3>.\nNode <4> is connected to nodes <0>, <2>, <6>, <5>.\nNode <3> is connected to nodes <1>, <2>, <6>, <5>.\nNode <5> is connected to nodes <6>, <4>, <3>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <3>, <5>, <4>, <6>, <0>, <2>]",
        "type": "DFS"
    },
    {
        "index": 2,
        "question": "Given an undirected graph:\nNode <5> is connected to node <6>.\nNode <6> is connected to nodes <5>, <4>, <1>.\nNode <4> is connected to nodes <6>, <0>.\nNode <1> is connected to nodes <6>, <3>, <2>.\nNode <3> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <3>, <4>.\nNode <2> is connected to node <1>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <4>, <6>, <1>, <2>, <3>, <5>]",
        "type": "DFS"
    },
    {
        "index": 3,
        "question": "Given an undirected graph:\nNode <0> is connected to node <1>.\nNode <1> is connected to nodes <0>, <4>, <2>.\nNode <4> is connected to node <1>.\nNode <2> is connected to nodes <1>, <3>.\nNode <3> is connected to node <2>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <1>, <2>, <3>, <0>]",
        "type": "DFS"
    },
    {
        "index": 4,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <5>, <1>.\nNode <2> is connected to nodes <5>, <1>.\nNode <1> is connected to nodes <0>, <2>, <6>.\nNode <4> is connected to node <3>.\nNode <3> is connected to nodes <4>, <6>.\nNode <6> is connected to nodes <3>, <1>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <6>, <1>, <2>, <5>, <0>, <4>]",
        "type": "DFS"
    },
    {
        "index": 5,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <3>, <4>, <0>.\nNode <3> is connected to nodes <1>, <4>, <5>, <2>.\nNode <0> is connected to node <1>.\nNode <1> is connected to nodes <0>, <3>.\nNode <5> is connected to node <3>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <2>, <0>, <1>, <4>, <5>]",
        "type": "DFS"
    },
    {
        "index": 6,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <6>, <5>, <4>, <3>.\nNode <2> is connected to nodes <1>, <0>, <6>, <4>.\nNode <6> is connected to nodes <1>, <0>, <2>, <5>, <4>.\nNode <5> is connected to nodes <1>, <0>, <6>, <3>.\nNode <4> is connected to nodes <1>, <0>, <2>, <6>.\nNode <3> is connected to nodes <1>, <0>, <5>.\nNode <0> is connected to nodes <2>, <6>, <5>, <4>, <3>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <6>, <5>, <3>, <0>, <2>, <1>]",
        "type": "DFS"
    },
    {
        "index": 7,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <3>, <2>.\nNode <3> is connected to node <6>.\nNode <2> is connected to nodes <6>, <4>, <1>, <5>.\nNode <4> is connected to node <2>.\nNode <1> is connected to nodes <2>, <0>.\nNode <5> is connected to node <2>.\nNode <0> is connected to node <1>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <1>, <2>, <5>, <4>, <6>, <3>]",
        "type": "DFS"
    },
    {
        "index": 8,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <4>, <5>, <2>.\nNode <1> is connected to nodes <4>, <3>.\nNode <5> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <0>, <5>.\nNode <3> is connected to node <1>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <1>, <3>, <0>, <2>, <5>]",
        "type": "DFS"
    },
    {
        "index": 9,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <4>, <1>, <2>.\nNode <5> is connected to node <3>.\nNode <4> is connected to node <3>.\nNode <1> is connected to node <3>.\nNode <2> is connected to nodes <3>, <0>.\nNode <0> is connected to node <2>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <2>, <0>, <1>, <4>, <5>]",
        "type": "DFS"
    },
    {
        "index": 10,
        "question": "Given a directed graph:\nNode <0> is connected to node <5>.\nNode <3> is connected to node <2>.\nNode <2> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <5>, <0>.\nNode <1> is connected to nodes <5>, <4>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <2>, <1>, <4>, <0>, <5>]",
        "type": "DFS"
    },
    {
        "index": 11,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <2>, <0>.\nNode <5> is connected to node <3>.\nNode <2> is connected to nodes <3>, <4>.\nNode <0> is connected to node <3>.\nNode <4> is connected to nodes <1>, <2>.\nNode <1> is connected to node <4>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <4>, <2>, <3>, <0>, <5>]",
        "type": "DFS"
    },
    {
        "index": 12,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <6>, <4>.\nNode <6> is connected to nodes <1>, <0>.\nNode <4> is connected to nodes <1>, <5>.\nNode <0> is connected to nodes <6>, <3>, <2>.\nNode <3> is connected to nodes <5>, <0>.\nNode <5> is connected to nodes <3>, <4>.\nNode <2> is connected to node <0>.\nStart from node <6>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<6>, <0>, <2>, <3>, <5>, <4>, <1>]",
        "type": "DFS"
    },
    {
        "index": 13,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <2>, <1>, <5>.\nNode <3> is connected to nodes <0>, <6>, <1>.\nNode <2> is connected to nodes <0>, <6>, <5>.\nNode <1> is connected to nodes <0>, <3>, <4>.\nNode <5> is connected to nodes <0>, <2>.\nNode <6> is connected to nodes <3>, <2>, <4>.\nNode <4> is connected to nodes <6>, <1>.\nStart from node <5>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<5>, <2>, <6>, <4>, <1>, <3>, <0>]",
        "type": "DFS"
    },
    {
        "index": 14,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <3>, <4>, <0>.\nNode <2> is connected to node <1>.\nNode <3> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <1>, <3>.\nNode <0> is connected to node <1>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <3>, <1>, <0>, <2>]",
        "type": "DFS"
    },
    {
        "index": 15,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <1>, <0>.\nNode <5> is connected to node <4>.\nNode <1> is connected to node <4>.\nNode <0> is connected to nodes <4>, <6>.\nNode <6> is connected to nodes <0>, <3>, <2>.\nNode <3> is connected to node <6>.\nNode <2> is connected to node <6>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <0>, <6>, <2>, <3>, <1>, <5>]",
        "type": "DFS"
    },
    {
        "index": 16,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <2>, <3>, <0>, <1>.\nNode <5> is connected to nodes <4>, <3>, <1>.\nNode <2> is connected to nodes <4>, <3>, <0>, <1>.\nNode <3> is connected to nodes <4>, <5>, <2>, <1>.\nNode <0> is connected to nodes <4>, <2>, <1>.\nNode <1> is connected to nodes <4>, <5>, <2>, <3>, <0>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <1>, <0>, <2>, <3>, <5>]",
        "type": "DFS"
    },
    {
        "index": 17,
        "question": "Given an undirected graph:\nNode <2> is connected to node <0>.\nNode <0> is connected to nodes <2>, <6>, <1>.\nNode <6> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <0>, <6>, <4>.\nNode <4> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <4>, <5>.\nNode <5> is connected to node <3>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <4>, <3>, <5>, <6>, <0>, <2>]",
        "type": "DFS"
    },
    {
        "index": 18,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <3>, <5>, <2>.\nNode <1> is connected to nodes <0>, <4>, <5>, <2>.\nNode <3> is connected to nodes <0>, <4>, <2>.\nNode <5> is connected to nodes <0>, <1>, <2>.\nNode <2> is connected to nodes <0>, <4>, <1>, <3>, <5>.\nNode <4> is connected to nodes <1>, <3>, <2>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <2>, <5>, <1>, <4>, <0>]",
        "type": "DFS"
    },
    {
        "index": 19,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <2>, <1>, <0>.\nNode <5> is connected to nodes <4>, <2>, <3>, <0>.\nNode <2> is connected to nodes <4>, <5>, <1>, <0>.\nNode <1> is connected to nodes <4>, <2>, <0>.\nNode <0> is connected to nodes <4>, <5>, <2>, <1>.\nNode <3> is connected to node <5>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <1>, <2>, <5>, <3>, <4>]",
        "type": "DFS"
    },
    {
        "index": 20,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <0>, <5>, <2>, <3>, <4>.\nNode <0> is connected to node <6>.\nNode <5> is connected to node <6>.\nNode <2> is connected to node <6>.\nNode <3> is connected to nodes <6>, <1>.\nNode <4> is connected to node <6>.\nNode <1> is connected to node <3>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <1>, <6>, <4>, <2>, <5>, <0>]",
        "type": "DFS"
    },
    {
        "index": 21,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <1>, <2>.\nNode <3> is connected to nodes <2>, <0>.\nNode <1> is connected to node <6>.\nNode <2> is connected to nodes <1>, <6>.\nNode <6> is connected to nodes <2>, <3>.\nNode <5> is connected to nodes <4>, <0>, <3>, <1>.\nNode <4> is connected to nodes <1>, <6>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <0>, <2>, <6>, <1>]",
        "type": "DFS"
    },
    {
        "index": 22,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <6>, <4>, <3>, <0>.\nNode <5> is connected to nodes <2>, <3>, <4>.\nNode <6> is connected to node <2>.\nNode <4> is connected to nodes <2>, <5>, <1>.\nNode <3> is connected to nodes <2>, <5>, <1>, <0>.\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <4>, <3>.\nStart from node <6>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<6>, <2>, <0>, <3>, <1>, <4>, <5>]",
        "type": "DFS"
    },
    {
        "index": 23,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <0>.\nNode <3> is connected to node <1>.\nNode <0> is connected to node <4>.\nNode <2> is connected to nodes <3>, <0>, <1>.\nNode <4> is connected to nodes <1>, <2>, <3>, <0>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <1>, <0>, <4>, <2>]",
        "type": "DFS"
    },
    {
        "index": 24,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1>, <4>, <3>, <2>.\nNode <1> is connected to nodes <5>, <0>, <4>, <3>.\nNode <4> is connected to nodes <5>, <0>, <1>, <3>, <2>.\nNode <3> is connected to nodes <5>, <0>, <1>, <4>, <2>.\nNode <2> is connected to nodes <5>, <0>, <4>, <3>.\nNode <0> is connected to nodes <1>, <4>, <3>, <2>.\nStart from node <5>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<5>, <2>, <3>, <4>, <1>, <0>]",
        "type": "DFS"
    },
    {
        "index": 25,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <3>, <5>.\nNode <5> is connected to node <1>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <5>, <1>, <3>, <0>, <2>]",
        "type": "DFS"
    },
    {
        "index": 26,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <5>, <0>, <6>.\nNode <4> is connected to nodes <3>, <2>, <5>, <1>.\nNode <5> is connected to nodes <3>, <4>, <2>, <1>.\nNode <0> is connected to nodes <3>, <6>.\nNode <6> is connected to nodes <3>, <0>.\nNode <2> is connected to nodes <4>, <5>.\nNode <1> is connected to nodes <4>, <5>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <6>, <3>, <5>, <1>, <4>, <2>]",
        "type": "DFS"
    },
    {
        "index": 27,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <6>.\nNode <4> is connected to nodes <2>, <0>.\nNode <6> is connected to nodes <2>, <1>, <5>, <3>.\nNode <0> is connected to node <4>.\nNode <1> is connected to node <6>.\nNode <5> is connected to node <6>.\nNode <3> is connected to node <6>.\nStart from node <6>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<6>, <3>, <5>, <1>, <2>, <4>, <0>]",
        "type": "DFS"
    },
    {
        "index": 28,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <2>, <4>, <0>.\nNode <5> is connected to node <2>.\nNode <4> is connected to nodes <3>, <1>.\nNode <0> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <0>, <4>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <1>, <4>, <3>, <2>, <5>]",
        "type": "DFS"
    },
    {
        "index": 29,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <1>, <4>.\nNode <2> is connected to nodes <1>, <0>, <4>.\nNode <4> is connected to nodes <3>, <2>.\nNode <0> is connected to node <2>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <2>, <4>, <3>, <0>]",
        "type": "DFS"
    },
    {
        "index": 30,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <0>, <1>.\nNode <2> is connected to nodes <0>, <1>, <6>, <3>, <5>.\nNode <1> is connected to nodes <4>, <2>, <6>.\nNode <6> is connected to nodes <2>, <1>, <3>.\nNode <3> is connected to nodes <2>, <5>, <6>.\nNode <5> is connected to nodes <2>, <3>.\nStart from node <6>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<6>, <3>, <5>, <2>, <1>, <4>, <0>]",
        "type": "DFS"
    },
    {
        "index": 31,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <5>, <6>, <3>, <0>.\nNode <6> is connected to nodes <1>, <2>.\nNode <3> is connected to nodes <1>, <4>, <2>.\nNode <4> is connected to nodes <3>, <0>.\nNode <5> is connected to nodes <2>, <0>.\nStart from node <6>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<6>, <2>, <1>, <0>, <5>, <3>, <4>]",
        "type": "DFS"
    },
    {
        "index": 32,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <6>, <4>.\nNode <6> is connected to node <5>.\nNode <4> is connected to nodes <5>, <2>, <0>.\nNode <2> is connected to node <4>.\nNode <0> is connected to nodes <4>, <1>, <3>.\nNode <1> is connected to node <0>.\nNode <3> is connected to node <0>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <0>, <3>, <1>, <2>, <5>, <6>]",
        "type": "DFS"
    },
    {
        "index": 33,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <4>, <2>.\nNode <0> is connected to nodes <1>, <4>, <2>, <5>, <3>.\nNode <4> is connected to nodes <1>, <0>, <2>, <5>, <3>.\nNode <2> is connected to nodes <1>, <0>, <4>, <5>, <3>.\nNode <5> is connected to nodes <0>, <4>, <2>, <3>.\nNode <3> is connected to nodes <0>, <4>, <2>, <5>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <3>, <5>, <4>, <0>, <1>]",
        "type": "DFS"
    },
    {
        "index": 34,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <4>, <0>, <2>, <1>.\nNode <3> is connected to nodes <5>, <4>, <0>, <1>.\nNode <4> is connected to nodes <5>, <3>, <2>, <1>.\nNode <0> is connected to nodes <5>, <3>, <2>, <1>.\nNode <2> is connected to nodes <5>, <4>, <0>, <1>.\nNode <1> is connected to nodes <5>, <3>, <4>, <0>, <2>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <1>, <2>, <0>, <3>, <5>]",
        "type": "DFS"
    },
    {
        "index": 35,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <2>, <3>, <0>.\nNode <3> is connected to nodes <1>, <2>.\nNode <0> is connected to node <3>.\nNode <2> is connected to nodes <1>, <4>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <4>, <0>, <3>, <1>]",
        "type": "DFS"
    },
    {
        "index": 36,
        "question": "Given a directed graph:\nNode <4> is connected to node <5>.\nNode <5> is connected to nodes <1>, <4>, <2>, <0>.\nNode <2> is connected to nodes <3>, <1>, <4>.\nNode <1> is connected to nodes <4>, <2>, <3>.\nNode <0> is connected to nodes <5>, <1>, <4>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <4>, <5>, <0>, <1>, <3>]",
        "type": "DFS"
    },
    {
        "index": 37,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <1>, <6>.\nNode <4> is connected to node <5>.\nNode <1> is connected to nodes <5>, <0>.\nNode <6> is connected to node <5>.\nNode <0> is connected to nodes <1>, <2>, <3>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <0>, <3>, <2>, <5>, <6>, <4>]",
        "type": "DFS"
    },
    {
        "index": 38,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <6>, <4>, <1>, <3>.\nNode <6> is connected to nodes <0>, <3>.\nNode <4> is connected to nodes <0>, <2>, <5>.\nNode <1> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <0>, <6>, <2>, <1>.\nNode <2> is connected to nodes <4>, <5>, <3>.\nNode <5> is connected to nodes <4>, <2>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <3>, <1>, <0>, <4>, <5>, <6>]",
        "type": "DFS"
    },
    {
        "index": 39,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <1>.\nNode <3> is connected to node <0>.\nNode <1> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <4>, <5>.\nNode <5> is connected to node <2>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <5>, <4>, <1>, <0>, <3>]",
        "type": "DFS"
    },
    {
        "index": 40,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <1>, <0>.\nNode <4> is connected to nodes <0>, <3>.\nNode <2> is connected to nodes <0>, <3>, <4>, <1>.\nNode <0> is connected to node <2>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <4>, <3>, <0>, <2>]",
        "type": "DFS"
    },
    {
        "index": 41,
        "question": "Given an undirected graph:\nNode <2> is connected to node <0>.\nNode <0> is connected to nodes <2>, <1>, <4>.\nNode <1> is connected to nodes <0>, <3>.\nNode <4> is connected to node <0>.\nNode <5> is connected to nodes <6>, <3>.\nNode <6> is connected to nodes <5>, <3>.\nNode <3> is connected to nodes <5>, <6>, <1>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <3>, <6>, <5>, <0>, <4>, <2>]",
        "type": "DFS"
    },
    {
        "index": 42,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <3>, <2>.\nNode <1> is connected to nodes <0>, <3>, <5>, <4>, <2>.\nNode <3> is connected to nodes <0>, <1>, <5>, <4>, <2>.\nNode <2> is connected to nodes <0>, <1>, <3>, <5>, <4>.\nNode <5> is connected to nodes <1>, <3>, <4>, <2>.\nNode <4> is connected to nodes <1>, <3>, <5>, <2>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <2>, <4>, <5>, <3>, <0>]",
        "type": "DFS"
    },
    {
        "index": 43,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <5>, <1>.\nNode <3> is connected to nodes <2>, <4>, <0>, <5>, <1>.\nNode <5> is connected to nodes <2>, <4>, <3>, <0>, <1>.\nNode <1> is connected to nodes <2>, <4>, <3>, <0>, <5>.\nNode <4> is connected to nodes <3>, <5>, <1>.\nNode <0> is connected to nodes <3>, <5>, <1>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <5>, <0>, <3>, <4>, <2>]",
        "type": "DFS"
    },
    {
        "index": 44,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>, <2>.\nNode <3> is connected to nodes <0>, <5>.\nNode <5> is connected to nodes <0>, <3>.\nNode <2> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <2>, <1>.\nNode <1> is connected to node <4>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <4>, <1>, <0>, <5>, <3>]",
        "type": "DFS"
    },
    {
        "index": 45,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <2>, <1>, <4>, <5>.\nNode <0> is connected to nodes <3>, <6>, <2>, <5>.\nNode <2> is connected to nodes <3>, <6>, <0>, <4>, <5>.\nNode <1> is connected to nodes <3>, <6>, <5>.\nNode <4> is connected to nodes <3>, <2>, <5>.\nNode <5> is connected to nodes <3>, <0>, <2>, <1>, <4>.\nNode <6> is connected to nodes <0>, <2>, <1>.\nStart from node <5>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<5>, <4>, <2>, <0>, <6>, <1>, <3>]",
        "type": "DFS"
    },
    {
        "index": 46,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to nodes <4>, <1>.\nNode <3> is connected to nodes <1>, <0>, <2>, <5>.\nNode <4> is connected to nodes <1>, <0>, <3>.\nNode <1> is connected to nodes <0>, <2>.\nNode <5> is connected to nodes <4>, <1>, <0>, <2>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <1>, <0>, <4>, <3>, <5>]",
        "type": "DFS"
    },
    {
        "index": 47,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <4>, <2>.\nNode <1> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <2> is connected to nodes <0>, <3>.\nNode <3> is connected to node <2>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <3>, <0>, <4>, <1>]",
        "type": "DFS"
    },
    {
        "index": 48,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <4>, <6>, <1>, <3>.\nNode <5> is connected to node <0>.\nNode <4> is connected to nodes <0>, <2>.\nNode <6> is connected to node <0>.\nNode <1> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <2> is connected to node <4>.\nStart from node <5>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<5>, <0>, <3>, <1>, <6>, <4>, <2>]",
        "type": "DFS"
    },
    {
        "index": 49,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <1>, <4>.\nNode <0> is connected to nodes <3>, <2>.\nNode <1> is connected to nodes <3>, <2>.\nNode <4> is connected to node <3>.\nNode <2> is connected to nodes <0>, <1>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <4>, <1>, <2>, <0>]",
        "type": "DFS"
    },
    {
        "index": 50,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <3>, <5>.\nNode <4> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <4>, <0>.\nNode <5> is connected to node <1>.\nNode <0> is connected to nodes <3>, <2>, <1>, <4>.\nNode <2> is connected to nodes <5>, <4>, <3>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <3>, <0>, <4>, <5>, <1>]",
        "type": "DFS"
    },
    {
        "index": 51,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <4>, <6>, <1>, <0>, <2>.\nNode <5> is connected to nodes <3>, <4>, <1>.\nNode <4> is connected to nodes <3>, <5>.\nNode <6> is connected to nodes <3>, <2>.\nNode <1> is connected to nodes <3>, <5>, <2>.\nNode <0> is connected to node <3>.\nNode <2> is connected to nodes <3>, <6>, <1>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <3>, <2>, <1>, <5>, <4>, <6>]",
        "type": "DFS"
    },
    {
        "index": 52,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <3>, <2>, <4>, <1>.\nNode <0> is connected to node <5>.\nNode <3> is connected to node <5>.\nNode <2> is connected to node <5>.\nNode <4> is connected to node <5>.\nNode <1> is connected to node <5>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <5>, <1>, <4>, <3>, <0>]",
        "type": "DFS"
    },
    {
        "index": 53,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <6>, <0>, <1>, <5>.\nNode <4> is connected to node <3>.\nNode <6> is connected to nodes <3>, <1>.\nNode <0> is connected to nodes <3>, <1>, <2>.\nNode <1> is connected to nodes <3>, <5>, <2>, <0>, <6>.\nNode <5> is connected to nodes <3>, <1>.\nNode <2> is connected to nodes <1>, <0>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <6>, <3>, <5>, <0>, <2>, <4>]",
        "type": "DFS"
    },
    {
        "index": 54,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <5>, <2>, <1>.\nNode <5> is connected to nodes <3>, <2>.\nNode <2> is connected to node <1>.\nNode <3> is connected to nodes <0>, <5>.\nNode <0> is connected to nodes <2>, <5>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <1>, <5>, <3>, <0>, <4>]",
        "type": "DFS"
    },
    {
        "index": 55,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <3>, <4>, <0>.\nNode <2> is connected to nodes <1>, <3>, <4>, <0>.\nNode <3> is connected to nodes <1>, <2>, <4>.\nNode <4> is connected to nodes <1>, <2>, <5>, <3>.\nNode <0> is connected to nodes <1>, <2>, <5>.\nNode <5> is connected to nodes <4>, <0>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <5>, <4>, <3>, <2>, <1>]",
        "type": "DFS"
    },
    {
        "index": 56,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <6>, <2>, <5>, <3>.\nNode <1> is connected to nodes <4>, <5>.\nNode <6> is connected to node <4>.\nNode <2> is connected to node <4>.\nNode <5> is connected to nodes <4>, <1>.\nNode <3> is connected to nodes <4>, <0>.\nNode <0> is connected to node <3>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <0>, <4>, <5>, <1>, <2>, <6>]",
        "type": "DFS"
    },
    {
        "index": 57,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>, <4>, <3>.\nNode <1> is connected to nodes <0>, <5>, <2>, <4>.\nNode <2> is connected to nodes <0>, <1>, <5>, <4>, <3>.\nNode <4> is connected to nodes <0>, <1>, <2>, <3>.\nNode <3> is connected to nodes <0>, <5>, <2>, <4>.\nNode <5> is connected to nodes <1>, <2>, <3>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <4>, <2>, <5>, <1>, <0>]",
        "type": "DFS"
    },
    {
        "index": 58,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <3>, <0>.\nNode <1> is connected to nodes <2>, <4>.\nNode <3> is connected to node <2>.\nNode <0> is connected to node <2>.\nNode <4> is connected to node <1>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <2>, <0>, <1>, <4>]",
        "type": "DFS"
    },
    {
        "index": 59,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <0>, <3>, <5>.\nNode <2> is connected to nodes <0>, <5>.\nNode <3> is connected to nodes <1>, <4>.\nNode <5> is connected to nodes <1>, <2>.\nNode <4> is connected to node <3>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <3>, <1>, <5>, <2>, <0>]",
        "type": "DFS"
    },
    {
        "index": 60,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <5>, <2>.\nNode <3> is connected to nodes <5>, <4>, <2>.\nNode <2> is connected to nodes <0>, <3>.\nNode <4> is connected to nodes <3>, <1>.\nNode <1> is connected to node <4>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <2>, <0>, <5>, <4>, <1>]",
        "type": "DFS"
    },
    {
        "index": 61,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <1>, <0>, <3>.\nNode <4> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <2>, <4>.\nNode <3> is connected to node <2>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <0>, <2>, <3>, <1>]",
        "type": "DFS"
    },
    {
        "index": 62,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <4>, <1>.\nNode <2> is connected to nodes <4>, <0>, <3>.\nNode <4> is connected to nodes <1>, <3>.\nNode <0> is connected to nodes <1>, <2>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <2>, <3>, <4>, <0>]",
        "type": "DFS"
    },
    {
        "index": 63,
        "question": "Given an undirected graph:\nNode <4> is connected to node <3>.\nNode <3> is connected to nodes <4>, <2>, <1>, <0>.\nNode <2> is connected to node <3>.\nNode <1> is connected to node <3>.\nNode <0> is connected to node <3>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <3>, <0>, <1>, <4>]",
        "type": "DFS"
    },
    {
        "index": 64,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <6>, <0>.\nNode <2> is connected to nodes <5>, <3>, <6>, <1>.\nNode <6> is connected to nodes <5>, <2>, <3>, <4>, <0>.\nNode <0> is connected to nodes <5>, <3>, <6>, <4>.\nNode <3> is connected to nodes <2>, <6>, <1>, <4>, <0>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <4> is connected to nodes <3>, <6>, <1>, <0>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <4>, <0>, <6>, <3>, <2>, <5>]",
        "type": "DFS"
    },
    {
        "index": 65,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <3>, <2>.\nNode <0> is connected to node <3>.\nNode <3> is connected to nodes <1>, <2>, <4>, <0>.\nNode <1> is connected to nodes <2>, <0>, <3>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <3>, <0>, <4>, <2>]",
        "type": "DFS"
    },
    {
        "index": 66,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <2>, <0>.\nNode <1> is connected to node <3>.\nNode <2> is connected to node <3>.\nNode <0> is connected to nodes <3>, <4>.\nNode <4> is connected to node <0>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <0>, <4>, <2>, <1>]",
        "type": "DFS"
    },
    {
        "index": 67,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1>, <2>, <4>.\nNode <1> is connected to nodes <5>, <2>, <3>.\nNode <2> is connected to nodes <5>, <1>, <0>.\nNode <4> is connected to node <5>.\nNode <3> is connected to node <1>.\nNode <0> is connected to node <2>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <2>, <1>, <3>, <5>, <4>]",
        "type": "DFS"
    },
    {
        "index": 68,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <4>, <0>.\nNode <2> is connected to node <3>.\nNode <4> is connected to nodes <3>, <1>.\nNode <0> is connected to node <3>.\nNode <1> is connected to node <4>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <3>, <0>, <4>, <1>]",
        "type": "DFS"
    },
    {
        "index": 69,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <2>, <1>, <3>.\nNode <0> is connected to node <1>.\nNode <2> is connected to nodes <1>, <0>.\nNode <1> is connected to node <4>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <0>, <1>, <4>, <2>]",
        "type": "DFS"
    },
    {
        "index": 70,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <1>, <6>, <5>.\nNode <3> is connected to nodes <2>, <5>, <4>.\nNode <1> is connected to nodes <2>, <6>.\nNode <6> is connected to nodes <2>, <1>, <0>.\nNode <5> is connected to nodes <2>, <3>, <4>.\nNode <4> is connected to nodes <3>, <5>, <0>.\nNode <0> is connected to nodes <4>, <6>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <6>, <1>, <2>, <5>, <4>, <3>]",
        "type": "DFS"
    },
    {
        "index": 71,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <1>, <0>, <4>.\nNode <3> is connected to node <2>.\nNode <1> is connected to node <2>.\nNode <0> is connected to node <2>.\nNode <4> is connected to node <2>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <4>, <0>, <1>, <3>]",
        "type": "DFS"
    },
    {
        "index": 72,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <5>, <4>.\nNode <0> is connected to nodes <5>, <4>, <1>.\nNode <5> is connected to nodes <4>, <1>, <0>.\nNode <4> is connected to nodes <1>, <0>, <3>.\nNode <3> is connected to nodes <4>, <1>, <0>.\nNode <2> is connected to node <0>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <3>, <0>, <1>, <5>]",
        "type": "DFS"
    },
    {
        "index": 73,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <1>, <2>, <0>.\nNode <3> is connected to node <5>.\nNode <1> is connected to node <5>.\nNode <2> is connected to node <5>.\nNode <0> is connected to nodes <5>, <4>.\nNode <4> is connected to nodes <6>, <0>.\nNode <6> is connected to node <4>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <4>, <6>, <5>, <2>, <1>, <3>]",
        "type": "DFS"
    },
    {
        "index": 74,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <4>, <0>.\nNode <3> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <0>, <2>, <3>.\nNode <0> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <4>, <0>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <1>, <4>, <3>, <2>]",
        "type": "DFS"
    },
    {
        "index": 75,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <3>, <1>.\nNode <5> is connected to nodes <0>, <2>, <3>, <4>.\nNode <3> is connected to nodes <0>, <2>, <5>, <4>, <1>.\nNode <1> is connected to nodes <0>, <2>, <3>, <4>.\nNode <2> is connected to nodes <5>, <3>, <4>, <1>.\nNode <4> is connected to nodes <2>, <5>, <3>, <1>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <1>, <4>, <5>, <2>, <0>]",
        "type": "DFS"
    },
    {
        "index": 76,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <3>, <2>, <0>, <5>.\nNode <3> is connected to nodes <0>, <1>.\nNode <2> is connected to node <4>.\nNode <0> is connected to nodes <5>, <3>.\nNode <5> is connected to nodes <4>, <6>, <3>, <2>, <0>.\nNode <1> is connected to nodes <3>, <2>, <5>, <4>.\nNode <4> is connected to nodes <2>, <5>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <3>, <1>, <4>, <5>, <2>, <6>]",
        "type": "DFS"
    },
    {
        "index": 77,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <3>, <4>.\nNode <5> is connected to nodes <1>, <2>, <3>, <0>, <4>.\nNode <3> is connected to nodes <1>, <5>, <2>, <0>, <4>.\nNode <4> is connected to nodes <1>, <5>, <2>, <3>, <0>.\nNode <2> is connected to nodes <5>, <3>, <0>, <4>.\nNode <0> is connected to nodes <5>, <2>, <3>, <4>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <4>, <0>, <3>, <5>, <1>]",
        "type": "DFS"
    },
    {
        "index": 78,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <5>, <3>.\nNode <4> is connected to nodes <5>, <3>, <1>.\nNode <3> is connected to nodes <0>, <4>.\nNode <1> is connected to nodes <4>, <2>.\nNode <2> is connected to node <1>.\nStart from node <5>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<5>, <4>, <1>, <2>, <3>, <0>]",
        "type": "DFS"
    },
    {
        "index": 79,
        "question": "Given an undirected graph:\nNode <1> is connected to node <4>.\nNode <4> is connected to nodes <1>, <5>, <0>, <2>.\nNode <5> is connected to node <4>.\nNode <0> is connected to nodes <4>, <3>.\nNode <2> is connected to node <4>.\nNode <3> is connected to node <0>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <0>, <4>, <2>, <5>, <1>]",
        "type": "DFS"
    },
    {
        "index": 80,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <6>, <4>, <5>, <1>.\nNode <6> is connected to nodes <0>, <4>, <1>, <3>.\nNode <4> is connected to nodes <0>, <6>, <2>, <5>, <1>, <3>.\nNode <5> is connected to nodes <0>, <4>, <2>, <1>, <3>.\nNode <1> is connected to nodes <0>, <6>, <4>, <2>, <5>, <3>.\nNode <3> is connected to nodes <6>, <4>, <2>, <5>, <1>.\nNode <2> is connected to nodes <4>, <5>, <1>, <3>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <1>, <3>, <5>, <2>, <4>, <6>]",
        "type": "DFS"
    },
    {
        "index": 81,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <1>, <4>, <3>.\nNode <0> is connected to node <2>.\nNode <1> is connected to node <2>.\nNode <4> is connected to node <2>.\nNode <3> is connected to node <2>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <2>, <3>, <4>, <1>]",
        "type": "DFS"
    },
    {
        "index": 82,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <3>, <0>, <4>.\nNode <1> is connected to node <2>.\nNode <3> is connected to node <2>.\nNode <0> is connected to node <2>.\nNode <4> is connected to node <2>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <2>, <4>, <0>, <1>]",
        "type": "DFS"
    },
    {
        "index": 83,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <0>, <2>.\nNode <3> is connected to nodes <4>, <2>.\nNode <0> is connected to nodes <4>, <1>.\nNode <2> is connected to nodes <4>, <3>.\nNode <1> is connected to node <0>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <3>, <4>, <0>, <1>]",
        "type": "DFS"
    },
    {
        "index": 84,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <2> is connected to node <0>.\nNode <4> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <4>, <1>.\nNode <1> is connected to node <3>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <1>, <4>, <0>, <2>]",
        "type": "DFS"
    },
    {
        "index": 85,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <4> is connected to node <3>.\nNode <1> is connected to nodes <3>, <0>.\nNode <3> is connected to node <1>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <1>, <0>, <4>, <3>]",
        "type": "DFS"
    },
    {
        "index": 86,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5>, <1>, <3>, <4>.\nNode <5> is connected to nodes <0>, <3>, <4>, <2>.\nNode <1> is connected to node <6>.\nNode <3> is connected to nodes <2>, <6>.\nNode <4> is connected to nodes <2>, <5>, <6>, <0>.\nNode <0> is connected to nodes <3>, <2>, <5>.\nNode <6> is connected to nodes <4>, <5>, <1>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <0>, <5>, <2>, <3>, <6>, <1>]",
        "type": "DFS"
    },
    {
        "index": 87,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <3>, <5>.\nNode <1> is connected to nodes <2>, <3>, <4>, <5>, <0>.\nNode <3> is connected to nodes <2>, <1>, <4>, <5>, <0>.\nNode <5> is connected to nodes <2>, <1>, <3>, <4>, <0>.\nNode <4> is connected to nodes <1>, <3>, <5>, <0>.\nNode <0> is connected to nodes <1>, <3>, <4>, <5>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <5>, <4>, <3>, <1>, <2>]",
        "type": "DFS"
    },
    {
        "index": 88,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <5>, <3>, <4>.\nNode <1> is connected to node <2>.\nNode <5> is connected to nodes <2>, <0>.\nNode <3> is connected to node <2>.\nNode <4> is connected to node <2>.\nNode <0> is connected to node <5>.\nStart from node <5>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<5>, <0>, <2>, <4>, <3>, <1>]",
        "type": "DFS"
    },
    {
        "index": 89,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <1>, <5>, <3>.\nNode <2> is connected to nodes <5>, <3>, <0>.\nNode <3> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <5>, <1>, <2>.\nNode <1> is connected to node <4>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <0>, <3>, <4>, <1>, <5>]",
        "type": "DFS"
    },
    {
        "index": 90,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <1>, <4>, <0>.\nNode <2> is connected to node <3>.\nNode <1> is connected to node <3>.\nNode <4> is connected to node <3>.\nNode <0> is connected to node <3>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <3>, <4>, <1>, <2>]",
        "type": "DFS"
    },
    {
        "index": 91,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <6>, <5>, <2>.\nNode <3> is connected to nodes <1>, <6>, <5>.\nNode <6> is connected to nodes <1>, <3>, <4>.\nNode <5> is connected to nodes <1>, <3>, <0>.\nNode <2> is connected to nodes <1>, <4>, <0>.\nNode <4> is connected to nodes <6>, <2>.\nNode <0> is connected to nodes <2>, <5>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <2>, <0>, <5>, <3>, <6>, <4>]",
        "type": "DFS"
    },
    {
        "index": 92,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <3>, <1>, <2>.\nNode <4> is connected to node <0>.\nNode <0> is connected to node <5>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <5>, <2>, <1>, <3>]",
        "type": "DFS"
    },
    {
        "index": 93,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <1>, <0>, <5>.\nNode <3> is connected to nodes <4>, <2>.\nNode <1> is connected to node <4>.\nNode <0> is connected to node <4>.\nNode <5> is connected to node <4>.\nNode <2> is connected to node <3>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <2>, <4>, <5>, <0>, <1>]",
        "type": "DFS"
    },
    {
        "index": 94,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <1>, <4>.\nNode <2> is connected to nodes <0>, <5>.\nNode <3> is connected to node <0>.\nNode <1> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <2>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <0>, <4>, <3>, <2>, <5>]",
        "type": "DFS"
    },
    {
        "index": 95,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <0>, <1>.\nNode <3> is connected to nodes <2>, <1>, <6>, <5>.\nNode <0> is connected to node <2>.\nNode <1> is connected to nodes <2>, <3>.\nNode <6> is connected to node <3>.\nNode <5> is connected to nodes <3>, <4>.\nNode <4> is connected to node <5>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <5>, <3>, <6>, <1>, <2>, <0>]",
        "type": "DFS"
    },
    {
        "index": 96,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <1>, <2>.\nNode <4> is connected to nodes <6>, <5>.\nNode <1> is connected to nodes <6>, <0>.\nNode <2> is connected to node <5>.\nNode <3> is connected to node <5>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <5>, <6>, <0>, <2>, <1>]",
        "type": "DFS"
    },
    {
        "index": 97,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <3>, <6>.\nNode <5> is connected to nodes <0>, <4>.\nNode <3> is connected to nodes <0>, <4>, <1>, <2>.\nNode <6> is connected to nodes <0>, <4>, <1>, <2>.\nNode <4> is connected to nodes <5>, <6>, <3>.\nNode <1> is connected to nodes <3>, <6>.\nNode <2> is connected to nodes <3>, <6>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <6>, <2>, <3>, <1>, <4>, <5>]",
        "type": "DFS"
    },
    {
        "index": 98,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <1>, <3>.\nNode <2> is connected to nodes <1>, <3>, <4>.\nNode <3> is connected to nodes <0>, <2>.\nNode <4> is connected to node <2>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <4>, <3>, <0>, <1>]",
        "type": "DFS"
    },
    {
        "index": 99,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <0>, <2>, <4>.\nNode <4> is connected to nodes <3>, <1>.\nNode <1> is connected to node <4>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <1>, <3>, <2>, <0>]",
        "type": "DFS"
    },
    {
        "index": 100,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <1>, <4>, <5>, <0>.\nNode <1> is connected to nodes <6>, <2>, <4>, <3>.\nNode <4> is connected to nodes <6>, <1>, <2>.\nNode <5> is connected to nodes <6>, <3>, <0>.\nNode <0> is connected to nodes <6>, <5>, <3>.\nNode <2> is connected to nodes <1>, <4>, <3>.\nNode <3> is connected to nodes <1>, <2>, <5>, <0>.\nStart from node <6>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<6>, <0>, <3>, <5>, <2>, <4>, <1>]",
        "type": "DFS"
    },
    {
        "index": 101,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <4>, <3>, <5>.\nNode <1> is connected to nodes <0>, <4>, <3>, <5>, <2>.\nNode <4> is connected to nodes <0>, <1>, <5>, <2>.\nNode <3> is connected to nodes <0>, <1>, <2>.\nNode <5> is connected to nodes <0>, <1>, <4>, <2>.\nNode <2> is connected to nodes <1>, <4>, <3>, <5>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <2>, <5>, <1>, <3>, <0>]",
        "type": "DFS"
    },
    {
        "index": 102,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <6>, <5>.\nNode <6> is connected to nodes <4>, <2>.\nNode <5> is connected to nodes <4>, <0>.\nNode <2> is connected to nodes <6>, <0>, <3>.\nNode <0> is connected to nodes <2>, <5>.\nNode <3> is connected to nodes <2>, <1>.\nNode <1> is connected to node <3>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <3>, <2>, <0>, <5>, <4>, <6>]",
        "type": "DFS"
    },
    {
        "index": 103,
        "question": "Given a directed graph:\nNode <0> is connected to node <2>.\nNode <2> is connected to node <3>.\nNode <4> is connected to nodes <2>, <3>, <0>.\nNode <3> is connected to nodes <1>, <0>, <4>, <2>.\nNode <1> is connected to nodes <0>, <2>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <2>, <3>, <4>, <1>]",
        "type": "DFS"
    },
    {
        "index": 104,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <2>, <0>.\nNode <5> is connected to nodes <3>, <2>, <0>.\nNode <2> is connected to nodes <3>, <5>, <1>, <0>, <4>.\nNode <0> is connected to nodes <3>, <5>, <2>, <4>.\nNode <1> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <1>, <2>, <0>.\nStart from node <5>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<5>, <0>, <4>, <2>, <1>, <3>]",
        "type": "DFS"
    },
    {
        "index": 105,
        "question": "Given an undirected graph:\nNode <0> is connected to node <1>.\nNode <1> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <1>, <3>, <4>, <5>.\nNode <3> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <3>, <2>.\nNode <5> is connected to node <2>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <5>, <4>, <3>, <1>, <0>]",
        "type": "DFS"
    },
    {
        "index": 106,
        "question": "Given a directed graph:\nNode <0> is connected to node <3>.\nNode <3> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <1>, <3>, <5>.\nNode <1> is connected to nodes <2>, <0>, <4>.\nNode <5> is connected to nodes <4>, <1>, <2>, <3>.\nNode <2> is connected to nodes <0>, <1>.\nStart from node <5>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<5>, <3>, <2>, <1>, <4>, <0>]",
        "type": "DFS"
    },
    {
        "index": 107,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <1>.\nNode <0> is connected to node <4>.\nNode <1> is connected to nodes <4>, <3>, <2>.\nNode <3> is connected to node <1>.\nNode <2> is connected to node <1>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <2>, <3>, <4>, <0>]",
        "type": "DFS"
    },
    {
        "index": 108,
        "question": "Given a directed graph:\nNode <1> is connected to node <3>.\nNode <3> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <2>, <3>.\nNode <2> is connected to node <1>.\nNode <0> is connected to nodes <3>, <1>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <1>, <3>, <4>, <2>]",
        "type": "DFS"
    },
    {
        "index": 109,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <1>, <4>, <3>.\nNode <5> is connected to nodes <0>, <2>.\nNode <1> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <2> is connected to node <5>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <5>, <0>, <3>, <4>, <1>]",
        "type": "DFS"
    },
    {
        "index": 110,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <1>, <2>.\nNode <0> is connected to nodes <3>, <4>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to node <3>.\nNode <4> is connected to nodes <0>, <1>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <4>, <0>, <3>, <2>]",
        "type": "DFS"
    },
    {
        "index": 111,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <6>, <3>.\nNode <1> is connected to nodes <6>, <4>.\nNode <3> is connected to nodes <0>, <2>, <5>.\nNode <2> is connected to nodes <5>, <3>.\nNode <5> is connected to nodes <2>, <3>.\nNode <4> is connected to node <1>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <4>, <6>, <0>, <3>, <5>, <2>]",
        "type": "DFS"
    },
    {
        "index": 112,
        "question": "Given an undirected graph:\nNode <2> is connected to node <4>.\nNode <4> is connected to nodes <2>, <1>, <3>, <0>.\nNode <1> is connected to node <4>.\nNode <3> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <4>, <3>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <0>, <4>, <1>, <2>]",
        "type": "DFS"
    },
    {
        "index": 113,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <1>, <3>, <4>.\nNode <5> is connected to nodes <0>, <2>, <1>, <3>, <4>.\nNode <1> is connected to nodes <0>, <5>, <2>, <3>, <4>.\nNode <3> is connected to nodes <0>, <5>, <1>, <4>.\nNode <4> is connected to nodes <0>, <5>, <2>, <1>, <3>.\nNode <2> is connected to nodes <5>, <1>, <4>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <4>, <3>, <5>, <2>, <0>]",
        "type": "DFS"
    },
    {
        "index": 114,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <3>, <2>, <1>.\nNode <4> is connected to nodes <3>, <2>, <0>.\nNode <3> is connected to nodes <1>, <0>, <4>.\nNode <2> is connected to nodes <1>, <4>, <6>.\nNode <1> is connected to nodes <4>, <3>.\nNode <5> is connected to nodes <6>, <3>, <2>, <1>, <0>.\nNode <6> is connected to nodes <1>, <0>.\nStart from node <6>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<6>, <0>, <1>, <3>, <4>, <2>]",
        "type": "DFS"
    },
    {
        "index": 115,
        "question": "Given an undirected graph:\nNode <4> is connected to node <3>.\nNode <3> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <3>, <1>, <0>.\nNode <1> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <2>, <1>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <0>, <2>, <3>, <4>]",
        "type": "DFS"
    },
    {
        "index": 116,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <6>, <4>.\nNode <6> is connected to nodes <3>, <1>, <0>, <2>, <5>.\nNode <4> is connected to nodes <3>, <5>.\nNode <1> is connected to node <6>.\nNode <0> is connected to node <6>.\nNode <2> is connected to node <6>.\nNode <5> is connected to nodes <6>, <4>.\nStart from node <6>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<6>, <5>, <4>, <3>, <2>, <0>, <1>]",
        "type": "DFS"
    },
    {
        "index": 117,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <5>, <1>.\nNode <4> is connected to nodes <5>, <2>.\nNode <1> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <1>, <4>, <0>.\nNode <0> is connected to node <2>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <0>, <4>, <5>, <3>, <1>]",
        "type": "DFS"
    },
    {
        "index": 118,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <4>, <1>.\nNode <5> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <1> is connected to nodes <0>, <3>, <2>.\nNode <3> is connected to node <1>.\nNode <2> is connected to node <1>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <1>, <2>, <0>, <4>, <5>]",
        "type": "DFS"
    },
    {
        "index": 119,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <1>.\nNode <5> is connected to nodes <4>, <2>.\nNode <1> is connected to nodes <4>, <6>.\nNode <2> is connected to nodes <5>, <3>.\nNode <6> is connected to nodes <1>, <0>.\nNode <3> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <3>, <6>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <6>, <0>, <3>, <2>, <5>, <4>]",
        "type": "DFS"
    },
    {
        "index": 120,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <0>, <2>, <6>, <3>.\nNode <4> is connected to node <0>.\nNode <2> is connected to nodes <1>, <3>.\nNode <6> is connected to nodes <1>, <5>.\nNode <3> is connected to nodes <1>, <2>.\nNode <5> is connected to node <6>.\nStart from node <6>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<6>, <5>, <1>, <3>, <2>, <0>, <4>]",
        "type": "DFS"
    },
    {
        "index": 121,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <2>, <3>, <5>, <4>.\nNode <2> is connected to nodes <6>, <1>, <3>.\nNode <3> is connected to nodes <6>, <1>, <2>, <5>, <4>, <0>.\nNode <5> is connected to nodes <6>, <1>, <3>, <0>.\nNode <4> is connected to nodes <6>, <3>, <0>.\nNode <1> is connected to nodes <2>, <3>, <5>, <0>.\nNode <0> is connected to nodes <1>, <3>, <5>, <4>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <0>, <4>, <6>, <5>, <1>, <2>]",
        "type": "DFS"
    },
    {
        "index": 122,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <1>, <6>.\nNode <3> is connected to node <1>.\nNode <6> is connected to nodes <2>, <0>, <4>.\nNode <0> is connected to nodes <6>, <5>.\nNode <5> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <6>, <5>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <5>, <0>, <6>, <2>, <1>, <3>]",
        "type": "DFS"
    },
    {
        "index": 123,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <0>, <3>.\nNode <1> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <2>, <1>, <4>.\nNode <4> is connected to node <3>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <3>, <4>, <2>, <0>]",
        "type": "DFS"
    },
    {
        "index": 124,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <4>, <5>.\nNode <1> is connected to nodes <4>, <0>, <2>.\nNode <4> is connected to nodes <3>, <0>.\nNode <5> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <5>, <1>, <3>.\nNode <3> is connected to node <2>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <2>, <5>, <0>, <3>, <4>]",
        "type": "DFS"
    },
    {
        "index": 125,
        "question": "Given an undirected graph:\nNode <3> is connected to node <0>.\nNode <0> is connected to nodes <3>, <4>, <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <0>, <4>, <2>.\nNode <2> is connected to node <1>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <1>, <4>, <0>, <3>]",
        "type": "DFS"
    },
    {
        "index": 126,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <2>, <3>, <1>, <4>.\nNode <5> is connected to nodes <0>, <2>, <1>, <4>.\nNode <2> is connected to nodes <0>, <5>, <3>, <1>, <4>.\nNode <3> is connected to nodes <0>, <2>, <1>.\nNode <1> is connected to nodes <0>, <5>, <2>, <3>.\nNode <4> is connected to nodes <0>, <5>, <2>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <3>, <2>, <4>, <5>, <0>]",
        "type": "DFS"
    },
    {
        "index": 127,
        "question": "Given an undirected graph:\nNode <4> is connected to node <0>.\nNode <0> is connected to nodes <4>, <3>, <2>.\nNode <3> is connected to nodes <0>, <1>.\nNode <2> is connected to nodes <0>, <5>.\nNode <1> is connected to nodes <3>, <5>.\nNode <5> is connected to nodes <1>, <2>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <1>, <5>, <2>, <0>, <4>]",
        "type": "DFS"
    },
    {
        "index": 128,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <5>, <1>.\nNode <4> is connected to nodes <5>, <6>.\nNode <1> is connected to nodes <0>, <3>, <2>.\nNode <6> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <6>, <1>.\nNode <2> is connected to node <1>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <2>, <3>, <6>, <4>, <5>, <0>]",
        "type": "DFS"
    },
    {
        "index": 129,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <6>, <0>, <5>.\nNode <6> is connected to nodes <4>, <0>, <2>.\nNode <0> is connected to nodes <4>, <6>, <3>, <1>, <2>, <5>.\nNode <5> is connected to nodes <4>, <0>, <3>, <1>.\nNode <2> is connected to nodes <6>, <0>.\nNode <3> is connected to nodes <0>, <5>.\nNode <1> is connected to nodes <0>, <5>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <0>, <5>, <1>, <3>, <4>, <6>]",
        "type": "DFS"
    },
    {
        "index": 130,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <0>, <2>.\nNode <3> is connected to nodes <4>, <2>.\nNode <0> is connected to nodes <4>, <1>.\nNode <2> is connected to nodes <4>, <3>.\nNode <1> is connected to node <0>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <2>, <3>, <0>, <1>]",
        "type": "DFS"
    },
    {
        "index": 131,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <5>, <4>.\nNode <1> is connected to node <2>.\nNode <5> is connected to nodes <2>, <6>, <3>.\nNode <4> is connected to nodes <2>, <0>.\nNode <6> is connected to node <5>.\nNode <3> is connected to node <5>.\nNode <0> is connected to node <4>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <4>, <2>, <5>, <3>, <6>, <1>]",
        "type": "DFS"
    },
    {
        "index": 132,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <1>, <5>, <0>.\nNode <5> is connected to nodes <1>, <2>.\nNode <0> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <0>, <3>.\nNode <3> is connected to node <4>.\nStart from node <5>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<5>, <2>, <0>, <4>, <3>, <1>]",
        "type": "DFS"
    },
    {
        "index": 133,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <3>, <0>.\nNode <1> is connected to node <2>.\nNode <3> is connected to node <2>.\nNode <0> is connected to nodes <2>, <4>.\nNode <4> is connected to node <0>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <2>, <0>, <4>, <3>]",
        "type": "DFS"
    },
    {
        "index": 134,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <6>.\nNode <4> is connected to nodes <5>, <3>, <2>, <1>.\nNode <6> is connected to nodes <5>, <3>.\nNode <3> is connected to nodes <4>, <6>.\nNode <2> is connected to node <4>.\nNode <1> is connected to nodes <4>, <0>.\nNode <0> is connected to node <1>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <0>, <4>, <2>, <3>, <6>, <5>]",
        "type": "DFS"
    },
    {
        "index": 135,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to node <4>.\nNode <4> is connected to node <3>.\nNode <3> is connected to nodes <2>, <4>, <1>.\nNode <0> is connected to node <2>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <2>, <4>, <3>, <1>]",
        "type": "DFS"
    },
    {
        "index": 136,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <2>, <5>, <4>.\nNode <0> is connected to node <1>.\nNode <2> is connected to node <1>.\nNode <5> is connected to node <1>.\nNode <4> is connected to nodes <1>, <3>.\nNode <3> is connected to node <4>.\nStart from node <5>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<5>, <1>, <4>, <3>, <2>, <0>]",
        "type": "DFS"
    },
    {
        "index": 137,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1>, <4>, <0>, <3>.\nNode <1> is connected to nodes <5>, <4>, <0>, <3>.\nNode <4> is connected to nodes <5>, <2>, <1>, <0>, <3>.\nNode <0> is connected to nodes <5>, <2>, <1>, <4>, <3>.\nNode <3> is connected to nodes <5>, <1>, <4>, <0>.\nNode <2> is connected to nodes <4>, <0>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <0>, <3>, <4>, <1>, <5>]",
        "type": "DFS"
    },
    {
        "index": 138,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <2>, <5>, <1>.\nNode <0> is connected to nodes <4>, <5>, <1>, <3>.\nNode <2> is connected to nodes <4>, <5>, <3>.\nNode <5> is connected to nodes <4>, <0>, <2>, <3>.\nNode <1> is connected to nodes <4>, <0>, <3>.\nNode <3> is connected to nodes <0>, <2>, <5>, <1>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <1>, <0>, <5>, <2>, <4>]",
        "type": "DFS"
    },
    {
        "index": 139,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <4>, <2>, <5>.\nNode <4> is connected to nodes <2>, <5>, <1>, <0>.\nNode <1> is connected to nodes <0>, <3>, <4>, <5>.\nNode <3> is connected to nodes <4>, <5>.\nNode <2> is connected to nodes <5>, <4>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <4>, <0>, <5>, <1>, <3>]",
        "type": "DFS"
    },
    {
        "index": 140,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <2>.\nNode <5> is connected to nodes <4>, <1>.\nNode <2> is connected to nodes <4>, <0>, <3>.\nNode <1> is connected to node <5>.\nNode <0> is connected to node <2>.\nNode <3> is connected to node <2>.\nStart from node <5>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<5>, <1>, <4>, <2>, <3>, <0>]",
        "type": "DFS"
    },
    {
        "index": 141,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <1>, <3>, <2>.\nNode <4> is connected to nodes <0>, <5>.\nNode <1> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <5> is connected to node <4>.\nStart from node <5>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<5>, <4>, <0>, <2>, <3>, <1>]",
        "type": "DFS"
    },
    {
        "index": 142,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <3>, <0>.\nNode <4> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <0> is connected to nodes <1>, <2>.\nNode <2> is connected to node <0>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <2>, <1>, <3>, <4>]",
        "type": "DFS"
    },
    {
        "index": 143,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <4>, <0>.\nNode <3> is connected to nodes <4>, <1>, <5>.\nNode <0> is connected to node <2>.\nNode <1> is connected to node <3>.\nNode <5> is connected to node <3>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <0>, <4>, <3>, <5>, <1>]",
        "type": "DFS"
    },
    {
        "index": 144,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <3>.\nNode <5> is connected to nodes <4>, <1>, <2>.\nNode <3> is connected to node <4>.\nNode <1> is connected to nodes <5>, <2>.\nNode <2> is connected to nodes <5>, <1>, <0>.\nNode <0> is connected to node <2>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <0>, <1>, <5>, <4>, <3>]",
        "type": "DFS"
    },
    {
        "index": 145,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <2>, <0>, <3>.\nNode <1> is connected to node <2>.\nNode <0> is connected to node <4>.\nNode <3> is connected to node <4>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <4>, <0>, <2>, <1>]",
        "type": "DFS"
    },
    {
        "index": 146,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <3>, <2>, <1>.\nNode <4> is connected to node <3>.\nNode <2> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <0>, <2>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <1>, <0>, <3>, <4>]",
        "type": "DFS"
    },
    {
        "index": 147,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <6>, <5>.\nNode <6> is connected to node <3>.\nNode <5> is connected to nodes <3>, <4>, <1>, <2>.\nNode <4> is connected to nodes <5>, <0>.\nNode <1> is connected to node <5>.\nNode <2> is connected to node <5>.\nNode <0> is connected to node <4>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <4>, <5>, <2>, <1>, <3>, <6>]",
        "type": "DFS"
    },
    {
        "index": 148,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <6>, <1>, <4>, <5>.\nNode <3> is connected to node <0>.\nNode <6> is connected to node <0>.\nNode <1> is connected to node <0>.\nNode <4> is connected to nodes <0>, <2>.\nNode <5> is connected to node <0>.\nNode <2> is connected to node <4>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <4>, <0>, <5>, <1>, <6>, <3>]",
        "type": "DFS"
    },
    {
        "index": 149,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <4>.\nNode <2> is connected to node <5>.\nNode <4> is connected to nodes <6>, <3>, <2>.\nNode <5> is connected to nodes <1>, <4>, <6>.\nNode <1> is connected to node <3>.\nNode <0> is connected to nodes <6>, <1>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <3>, <4>, <2>, <5>, <6>]",
        "type": "DFS"
    },
    {
        "index": 150,
        "question": "Given an undirected graph:\nNode <3> is connected to node <0>.\nNode <0> is connected to nodes <3>, <4>, <1>.\nNode <4> is connected to nodes <0>, <2>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <4>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <0>, <4>, <2>, <3>]",
        "type": "DFS"
    },
    {
        "index": 151,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <3>, <2>.\nNode <4> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <4>, <2>, <1>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <3>, <1>, <2>, <0>]",
        "type": "DFS"
    },
    {
        "index": 152,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <4>, <3>, <5>.\nNode <5> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <5>, <1>.\nNode <1> is connected to node <2>.\nStart from node <5>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<5>, <2>, <1>, <0>, <3>, <4>]",
        "type": "DFS"
    },
    {
        "index": 153,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <2>, <3>, <1>.\nNode <4> is connected to nodes <0>, <5>, <6>, <1>.\nNode <2> is connected to nodes <0>, <6>, <1>.\nNode <3> is connected to node <0>.\nNode <1> is connected to nodes <0>, <4>, <5>, <2>.\nNode <5> is connected to nodes <4>, <1>.\nNode <6> is connected to nodes <4>, <2>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <0>, <1>, <2>, <6>, <4>, <5>]",
        "type": "DFS"
    },
    {
        "index": 154,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <4>.\nNode <1> is connected to node <0>.\nNode <4> is connected to nodes <0>, <3>, <2>.\nNode <3> is connected to nodes <4>, <5>.\nNode <5> is connected to node <3>.\nNode <2> is connected to node <4>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <2>, <3>, <5>, <0>, <1>]",
        "type": "DFS"
    },
    {
        "index": 155,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <2>, <3>, <4>, <0>, <1>, <6>.\nNode <4> is connected to nodes <2>, <5>, <0>, <1>.\nNode <3> is connected to nodes <5>, <0>, <1>.\nNode <0> is connected to nodes <3>, <5>, <4>, <1>.\nNode <1> is connected to nodes <3>, <5>, <4>, <0>.\nNode <6> is connected to node <5>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <1>, <4>, <5>, <6>, <3>, <2>]",
        "type": "DFS"
    },
    {
        "index": 156,
        "question": "Given an undirected graph:\nNode <2> is connected to node <1>.\nNode <1> is connected to nodes <2>, <6>.\nNode <6> is connected to nodes <1>, <3>, <0>.\nNode <3> is connected to nodes <6>, <4>.\nNode <0> is connected to nodes <6>, <4>.\nNode <4> is connected to nodes <3>, <5>, <0>.\nNode <5> is connected to node <4>.\nStart from node <6>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<6>, <0>, <4>, <5>, <3>, <1>, <2>]",
        "type": "DFS"
    },
    {
        "index": 157,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <0>, <2>, <1>.\nNode <3> is connected to node <0>.\nNode <2> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <4>, <2>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <1>, <2>, <0>, <3>]",
        "type": "DFS"
    },
    {
        "index": 158,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <4>, <1>.\nNode <5> is connected to nodes <2>, <0>, <4>.\nNode <4> is connected to nodes <2>, <5>.\nNode <1> is connected to nodes <2>, <3>.\nNode <0> is connected to node <5>.\nNode <3> is connected to node <1>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <5>, <0>, <2>, <1>, <3>]",
        "type": "DFS"
    },
    {
        "index": 159,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <3>, <0>, <1>.\nNode <2> is connected to node <1>.\nNode <1> is connected to nodes <2>, <4>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <1>, <4>, <0>, <3>]",
        "type": "DFS"
    },
    {
        "index": 160,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <1>, <0>.\nNode <5> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <4>, <5>, <2>.\nNode <2> is connected to nodes <0>, <3>.\nNode <3> is connected to node <2>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <0>, <2>, <3>, <5>, <1>]",
        "type": "DFS"
    },
    {
        "index": 161,
        "question": "Given a directed graph:\nNode <3> is connected to node <4>.\nNode <4> is connected to nodes <5>, <3>.\nNode <0> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <5> is connected to nodes <2>, <3>, <1>.\nNode <2> is connected to nodes <3>, <1>, <5>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <3>, <4>, <5>, <1>, <2>]",
        "type": "DFS"
    },
    {
        "index": 162,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <4>, <5>, <1>.\nNode <0> is connected to node <3>.\nNode <4> is connected to nodes <3>, <2>.\nNode <5> is connected to node <3>.\nNode <1> is connected to node <3>.\nNode <2> is connected to node <4>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <3>, <1>, <5>, <4>, <2>]",
        "type": "DFS"
    },
    {
        "index": 163,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <5>, <3>, <4>, <6>, <0>.\nNode <5> is connected to nodes <4>, <6>.\nNode <3> is connected to nodes <4>, <2>, <1>.\nNode <4> is connected to nodes <6>, <5>.\nNode <6> is connected to nodes <5>, <3>.\nNode <0> is connected to nodes <5>, <3>, <4>, <6>.\nNode <2> is connected to nodes <6>, <0>, <5>, <3>, <4>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <4>, <5>, <6>, <3>, <1>, <0>]",
        "type": "DFS"
    },
    {
        "index": 164,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <3>, <0>, <4>.\nNode <3> is connected to node <6>.\nNode <0> is connected to nodes <4>, <2>, <1>, <5>.\nNode <4> is connected to nodes <2>, <6>, <5>, <0>.\nNode <6> is connected to nodes <1>, <0>, <4>.\nNode <2> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <0>, <4>, <2>, <6>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <6>, <4>, <0>, <5>, <3>, <2>]",
        "type": "DFS"
    },
    {
        "index": 165,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <4>, <1>, <0>.\nNode <4> is connected to nodes <5>, <2>, <3>.\nNode <1> is connected to nodes <0>, <2>, <3>.\nNode <0> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <3>, <1>, <5>.\nNode <3> is connected to nodes <0>, <2>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <1>, <3>, <2>, <5>, <4>]",
        "type": "DFS"
    },
    {
        "index": 166,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <1>, <2>.\nNode <4> is connected to nodes <1>, <6>.\nNode <2> is connected to nodes <5>, <3>, <0>.\nNode <6> is connected to node <4>.\nNode <3> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <2>, <3>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <0>, <2>, <5>, <1>, <4>, <6>]",
        "type": "DFS"
    },
    {
        "index": 167,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <1>, <0>.\nNode <2> is connected to node <4>.\nNode <1> is connected to nodes <4>, <3>.\nNode <0> is connected to nodes <3>, <2>.\nNode <4> is connected to nodes <3>, <2>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <0>, <2>, <4>, <1>]",
        "type": "DFS"
    },
    {
        "index": 168,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <5>, <2>, <1>.\nNode <5> is connected to nodes <4>, <0>.\nNode <2> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <4>, <0>, <5>.\nNode <4> is connected to nodes <0>, <2>, <3>.\nNode <0> is connected to nodes <5>, <1>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <0>, <1>, <5>, <4>, <3>]",
        "type": "DFS"
    },
    {
        "index": 169,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <0>, <4>, <1>, <5>.\nNode <5> is connected to nodes <0>, <3>, <2>, <4>, <1>.\nNode <3> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <3>, <2>, <4>, <5>.\nNode <4> is connected to nodes <2>, <1>, <5>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <5>, <1>, <2>, <0>, <3>]",
        "type": "DFS"
    },
    {
        "index": 170,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <6>, <4>.\nNode <0> is connected to nodes <5>, <6>, <4>, <2>.\nNode <6> is connected to nodes <5>, <0>, <2>, <1>.\nNode <4> is connected to nodes <5>, <0>, <3>, <2>, <1>.\nNode <2> is connected to nodes <0>, <3>, <6>, <4>.\nNode <3> is connected to nodes <4>, <2>.\nNode <1> is connected to nodes <6>, <4>.\nStart from node <6>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<6>, <1>, <4>, <2>, <3>, <0>, <5>]",
        "type": "DFS"
    },
    {
        "index": 171,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <4>, <0>, <3>.\nNode <4> is connected to nodes <6>, <2>.\nNode <0> is connected to nodes <6>, <2>.\nNode <3> is connected to nodes <6>, <5>.\nNode <2> is connected to nodes <4>, <0>.\nNode <5> is connected to nodes <1>, <3>.\nNode <1> is connected to node <5>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <5>, <1>, <6>, <0>, <2>, <4>]",
        "type": "DFS"
    },
    {
        "index": 172,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <4>, <3>, <1>.\nNode <5> is connected to nodes <2>, <0>, <4>, <1>.\nNode <4> is connected to nodes <2>, <5>, <0>, <3>, <1>.\nNode <3> is connected to nodes <2>, <0>, <4>, <1>.\nNode <1> is connected to nodes <2>, <5>, <0>, <4>, <3>.\nNode <0> is connected to nodes <5>, <4>, <3>, <1>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <1>, <3>, <4>, <5>, <2>]",
        "type": "DFS"
    },
    {
        "index": 173,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <3>, <6>, <5>.\nNode <4> is connected to node <2>.\nNode <3> is connected to nodes <2>, <0>.\nNode <6> is connected to nodes <2>, <1>.\nNode <5> is connected to node <2>.\nNode <0> is connected to node <3>.\nNode <1> is connected to node <6>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <3>, <2>, <5>, <6>, <1>, <4>]",
        "type": "DFS"
    },
    {
        "index": 174,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <4>, <0>.\nNode <1> is connected to nodes <0>, <4>, <3>.\nNode <4> is connected to nodes <0>, <2>.\nNode <3> is connected to nodes <1>, <4>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <1>, <3>, <4>, <2>]",
        "type": "DFS"
    },
    {
        "index": 175,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <5>, <2>, <0>.\nNode <1> is connected to node <4>.\nNode <5> is connected to node <4>.\nNode <2> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <4>, <2>, <3>.\nNode <3> is connected to node <0>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <4>, <0>, <3>, <2>, <5>]",
        "type": "DFS"
    },
    {
        "index": 176,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <4>, <1>, <3>.\nNode <0> is connected to node <4>.\nNode <1> is connected to node <2>.\nNode <3> is connected to node <2>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <2>, <1>, <4>, <0>]",
        "type": "DFS"
    },
    {
        "index": 177,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <4>, <2>, <0>, <5>.\nNode <5> is connected to nodes <3>, <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <2> is connected to nodes <5>, <3>, <4>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <1>, <5>, <3>, <2>, <4>]",
        "type": "DFS"
    },
    {
        "index": 178,
        "question": "Given an undirected graph:\nNode <1> is connected to node <4>.\nNode <4> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <4>, <2>, <5>.\nNode <2> is connected to nodes <3>, <0>.\nNode <5> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <2>, <5>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <5>, <3>, <2>, <4>, <1>]",
        "type": "DFS"
    },
    {
        "index": 179,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <1>, <2>.\nNode <5> is connected to nodes <1>, <3>, <0>.\nNode <2> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <2>, <5>.\nNode <0> is connected to node <5>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <3>, <5>, <0>, <1>, <4>]",
        "type": "DFS"
    },
    {
        "index": 180,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <0>, <4>, <1>, <6>.\nNode <5> is connected to node <3>.\nNode <0> is connected to node <3>.\nNode <4> is connected to node <3>.\nNode <1> is connected to nodes <3>, <2>.\nNode <6> is connected to node <3>.\nNode <2> is connected to node <1>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <3>, <6>, <1>, <2>, <4>, <5>]",
        "type": "DFS"
    },
    {
        "index": 181,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <6>, <1>, <5>.\nNode <6> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <3>, <5>, <0>, <2>.\nNode <5> is connected to nodes <6>, <2>, <1>, <3>.\nNode <0> is connected to nodes <6>, <4>.\nNode <2> is connected to nodes <5>, <4>, <6>.\nNode <3> is connected to nodes <5>, <6>, <1>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <2>, <6>, <5>, <3>, <4>, <0>]",
        "type": "DFS"
    },
    {
        "index": 182,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1>, <5>.\nNode <1> is connected to node <2>.\nNode <5> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <2>, <4>, <5>.\nNode <4> is connected to nodes <5>, <0>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <5>, <1>, <2>, <3>, <4>]",
        "type": "DFS"
    },
    {
        "index": 183,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <0>, <3>.\nNode <4> is connected to nodes <2>, <1>.\nNode <0> is connected to node <2>.\nNode <3> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <4>, <3>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <2>, <3>, <1>, <4>]",
        "type": "DFS"
    },
    {
        "index": 184,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <6>, <1>, <0>, <4>, <5>.\nNode <6> is connected to nodes <3>, <0>.\nNode <1> is connected to nodes <3>, <0>, <2>, <4>.\nNode <0> is connected to nodes <3>, <6>, <5>, <1>.\nNode <4> is connected to nodes <3>, <1>.\nNode <5> is connected to nodes <3>, <0>.\nNode <2> is connected to node <1>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <1>, <2>, <0>, <5>, <3>, <6>]",
        "type": "DFS"
    },
    {
        "index": 185,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <0>, <1>, <6>.\nNode <5> is connected to nodes <0>, <2>, <3>.\nNode <1> is connected to nodes <4>, <3>.\nNode <6> is connected to node <4>.\nNode <2> is connected to node <5>.\nNode <3> is connected to nodes <5>, <1>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <5>, <3>, <1>, <4>, <6>, <2>]",
        "type": "DFS"
    },
    {
        "index": 186,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <0>, <4>, <1>.\nNode <3> is connected to node <2>.\nNode <0> is connected to node <2>.\nNode <4> is connected to nodes <2>, <5>.\nNode <1> is connected to node <2>.\nNode <5> is connected to node <4>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <5>, <2>, <1>, <0>, <3>]",
        "type": "DFS"
    },
    {
        "index": 187,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <0>.\nNode <1> is connected to node <2>.\nNode <0> is connected to nodes <1>, <3>.\nNode <2> is connected to node <6>.\nNode <6> is connected to nodes <1>, <2>, <3>, <5>.\nNode <3> is connected to node <0>.\nNode <5> is connected to nodes <6>, <4>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <0>, <1>, <2>, <6>, <5>, <4>]",
        "type": "DFS"
    },
    {
        "index": 188,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <6>, <1>, <4>.\nNode <6> is connected to nodes <3>, <0>.\nNode <1> is connected to nodes <3>, <5>, <4>, <0>.\nNode <4> is connected to nodes <3>, <1>, <5>, <0>, <2>.\nNode <0> is connected to nodes <6>, <1>, <4>.\nNode <5> is connected to nodes <1>, <4>.\nNode <2> is connected to node <4>.\nStart from node <6>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<6>, <0>, <4>, <2>, <5>, <1>, <3>]",
        "type": "DFS"
    },
    {
        "index": 189,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <0>, <4>.\nNode <3> is connected to node <1>.\nNode <0> is connected to nodes <1>, <2>.\nNode <4> is connected to node <1>.\nNode <2> is connected to node <0>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <1>, <4>, <0>, <2>]",
        "type": "DFS"
    },
    {
        "index": 190,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <6>, <4>.\nNode <6> is connected to nodes <5>, <0>.\nNode <4> is connected to nodes <5>, <3>.\nNode <0> is connected to node <6>.\nNode <3> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <3>, <2>.\nNode <2> is connected to node <1>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <2>, <3>, <4>, <5>, <6>, <0>]",
        "type": "DFS"
    },
    {
        "index": 191,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <3>, <6>, <5>, <2>, <4>.\nNode <1> is connected to nodes <0>, <6>, <4>.\nNode <3> is connected to nodes <0>, <6>, <5>, <4>.\nNode <6> is connected to nodes <0>, <1>, <3>, <4>.\nNode <5> is connected to nodes <0>, <3>.\nNode <2> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <0>, <1>, <3>, <6>, <2>.\nStart from node <6>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<6>, <4>, <2>, <0>, <5>, <3>, <1>]",
        "type": "DFS"
    },
    {
        "index": 192,
        "question": "Given a directed graph:\nNode <3> is connected to node <1>.\nNode <1> is connected to nodes <5>, <4>, <0>.\nNode <2> is connected to nodes <1>, <5>, <0>, <3>.\nNode <5> is connected to node <2>.\nNode <0> is connected to nodes <2>, <5>.\nNode <4> is connected to nodes <0>, <3>, <1>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <1>, <0>, <5>, <2>, <4>]",
        "type": "DFS"
    },
    {
        "index": 193,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <4>, <2>.\nNode <3> is connected to nodes <4>, <2>, <1>.\nNode <4> is connected to node <0>.\nNode <2> is connected to node <4>.\nNode <1> is connected to nodes <3>, <0>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <0>, <2>, <3>, <1>]",
        "type": "DFS"
    },
    {
        "index": 194,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <3>, <6>, <2>.\nNode <0> is connected to node <5>.\nNode <3> is connected to node <5>.\nNode <6> is connected to node <5>.\nNode <2> is connected to nodes <5>, <4>, <1>.\nNode <4> is connected to node <2>.\nNode <1> is connected to node <2>.\nStart from node <6>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<6>, <5>, <2>, <1>, <4>, <3>, <0>]",
        "type": "DFS"
    },
    {
        "index": 195,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <1>, <2>, <4>.\nNode <4> is connected to nodes <3>, <0>.\nNode <0> is connected to node <4>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <3>, <4>, <0>, <2>]",
        "type": "DFS"
    },
    {
        "index": 196,
        "question": "Given an undirected graph:\nNode <3> is connected to node <1>.\nNode <1> is connected to nodes <3>, <0>, <4>, <2>.\nNode <0> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <2> is connected to node <1>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <1>, <2>, <0>, <3>]",
        "type": "DFS"
    },
    {
        "index": 197,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <2>.\nNode <0> is connected to node <1>.\nNode <2> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <3>, <2>.\nNode <3> is connected to node <4>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <2>, <1>, <0>, <3>]",
        "type": "DFS"
    },
    {
        "index": 198,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <2>, <0>.\nNode <1> is connected to node <4>.\nNode <2> is connected to node <3>.\nNode <0> is connected to node <3>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <4>, <3>, <0>, <2>]",
        "type": "DFS"
    },
    {
        "index": 199,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <0>, <5>, <2>.\nNode <1> is connected to nodes <3>, <4>, <0>, <5>.\nNode <0> is connected to nodes <3>, <1>, <4>, <5>, <2>.\nNode <5> is connected to nodes <3>, <1>, <4>, <0>.\nNode <2> is connected to nodes <3>, <4>, <0>.\nNode <4> is connected to nodes <1>, <0>, <5>, <2>.\nStart from node <5>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<5>, <0>, <2>, <4>, <1>, <3>]",
        "type": "DFS"
    },
    {
        "index": 200,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <0>, <4>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <2>, <1>.\nNode <1> is connected to node <4>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <3>, <2>, <4>, <1>]",
        "type": "DFS"
    },
    {
        "index": 201,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <4>, <3>.\nNode <1> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <3> is connected to nodes <0>, <2>.\nNode <2> is connected to node <3>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <2>, <0>, <4>, <1>]",
        "type": "DFS"
    },
    {
        "index": 202,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <6>, <3>, <2>, <0>.\nNode <1> is connected to nodes <3>, <5>, <2>, <0>.\nNode <6> is connected to node <0>.\nNode <3> is connected to nodes <2>, <0>, <1>, <6>.\nNode <2> is connected to node <0>.\nNode <0> is connected to nodes <6>, <3>, <5>.\nStart from node <6>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<6>, <0>, <5>, <3>, <1>, <2>]",
        "type": "DFS"
    },
    {
        "index": 203,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <1>, <3>, <2>.\nNode <3> is connected to nodes <2>, <0>, <1>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <1>, <0>, <2>, <4>]",
        "type": "DFS"
    },
    {
        "index": 204,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <1>, <5>, <6>.\nNode <2> is connected to node <1>.\nNode <5> is connected to nodes <0>, <4>.\nNode <6> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <5>, <3>, <6>.\nNode <3> is connected to node <4>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <6>, <4>, <3>, <5>, <1>, <2>]",
        "type": "DFS"
    },
    {
        "index": 205,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <0>, <6>, <5>.\nNode <2> is connected to nodes <1>, <3>, <0>, <6>.\nNode <0> is connected to nodes <1>, <3>, <2>, <4>, <6>, <5>.\nNode <6> is connected to nodes <1>, <3>, <2>, <0>, <4>, <5>.\nNode <5> is connected to nodes <1>, <0>, <4>, <6>.\nNode <3> is connected to nodes <2>, <0>, <6>.\nNode <4> is connected to nodes <0>, <6>, <5>.\nStart from node <5>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<5>, <6>, <4>, <0>, <2>, <3>, <1>]",
        "type": "DFS"
    },
    {
        "index": 206,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <1>, <4>.\nNode <2> is connected to node <0>.\nNode <1> is connected to nodes <0>, <3>.\nNode <4> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <1>, <5>, <4>.\nNode <5> is connected to node <3>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <3>, <5>, <1>, <0>, <2>]",
        "type": "DFS"
    },
    {
        "index": 207,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <1>, <3>.\nNode <2> is connected to nodes <1>, <5>.\nNode <3> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <3>, <5>.\nNode <5> is connected to nodes <2>, <4>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <5>, <2>, <1>, <0>, <3>]",
        "type": "DFS"
    },
    {
        "index": 208,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <4>, <0>, <5>, <6>.\nNode <1> is connected to node <4>.\nNode <0> is connected to nodes <2>, <3>.\nNode <5> is connected to node <2>.\nNode <6> is connected to node <2>.\nNode <3> is connected to node <0>.\nStart from node <6>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<6>, <2>, <5>, <0>, <3>, <4>, <1>]",
        "type": "DFS"
    },
    {
        "index": 209,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <1>, <2>.\nNode <4> is connected to nodes <3>, <6>, <0>.\nNode <1> is connected to nodes <5>, <3>, <0>.\nNode <2> is connected to nodes <0>, <1>, <5>, <6>.\nNode <3> is connected to nodes <6>, <4>, <1>.\nNode <6> is connected to nodes <2>, <5>, <3>.\nNode <5> is connected to nodes <3>, <6>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <6>, <3>, <1>, <0>, <4>, <5>]",
        "type": "DFS"
    },
    {
        "index": 210,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <6>, <5>, <1>, <4>.\nNode <6> is connected to nodes <0>, <5>, <1>, <4>.\nNode <5> is connected to nodes <1>, <4>, <2>.\nNode <1> is connected to nodes <4>, <2>, <3>, <6>, <0>, <5>.\nNode <4> is connected to nodes <2>, <3>, <0>.\nNode <3> is connected to nodes <0>, <1>, <4>, <2>.\nNode <0> is connected to nodes <5>, <1>, <4>, <2>, <6>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <4>, <0>, <6>, <1>, <5>, <3>]",
        "type": "DFS"
    },
    {
        "index": 211,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <4>, <2>.\nNode <0> is connected to node <3>.\nNode <4> is connected to node <3>.\nNode <2> is connected to nodes <3>, <1>, <5>.\nNode <1> is connected to node <2>.\nNode <5> is connected to node <2>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <5>, <1>, <3>, <4>, <0>]",
        "type": "DFS"
    },
    {
        "index": 212,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <1>, <4>, <3>, <0>.\nNode <4> is connected to nodes <3>, <2>.\nNode <0> is connected to nodes <1>, <4>, <3>.\nNode <1> is connected to nodes <4>, <2>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <2>, <0>, <3>, <4>]",
        "type": "DFS"
    },
    {
        "index": 213,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <0>, <3>, <2>.\nNode <0> is connected to nodes <3>, <2>, <1>, <4>.\nNode <3> is connected to nodes <4>, <0>, <5>.\nNode <2> is connected to nodes <4>, <0>, <5>.\nNode <5> is connected to nodes <4>, <0>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <2>, <5>, <0>, <4>, <3>]",
        "type": "DFS"
    },
    {
        "index": 214,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <4>, <1>.\nNode <0> is connected to node <2>.\nNode <4> is connected to node <2>.\nNode <1> is connected to nodes <2>, <3>.\nNode <3> is connected to node <1>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <1>, <3>, <4>, <0>]",
        "type": "DFS"
    },
    {
        "index": 215,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <5>, <1>, <4>, <2>.\nNode <0> is connected to nodes <3>, <5>, <1>, <4>, <2>.\nNode <5> is connected to nodes <3>, <0>, <1>, <4>, <2>.\nNode <1> is connected to nodes <3>, <0>, <5>.\nNode <4> is connected to nodes <3>, <0>, <5>, <2>.\nNode <2> is connected to nodes <3>, <0>, <5>, <4>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <2>, <4>, <5>, <1>, <3>]",
        "type": "DFS"
    },
    {
        "index": 216,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>, <6>, <4>.\nNode <1> is connected to nodes <0>, <6>, <3>.\nNode <2> is connected to node <0>.\nNode <6> is connected to nodes <0>, <1>, <4>, <5>.\nNode <4> is connected to nodes <0>, <5>, <3>, <6>.\nNode <3> is connected to nodes <1>, <4>.\nNode <5> is connected to nodes <4>, <6>.\nStart from node <5>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<5>, <6>, <4>, <3>, <1>, <0>, <2>]",
        "type": "DFS"
    },
    {
        "index": 217,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <0>, <6>.\nNode <5> is connected to nodes <0>, <3>, <6>.\nNode <6> is connected to nodes <2>, <5>.\nNode <1> is connected to nodes <4>, <3>.\nNode <4> is connected to node <1>.\nNode <3> is connected to nodes <1>, <5>.\nStart from node <5>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<5>, <6>, <2>, <0>, <3>, <1>, <4>]",
        "type": "DFS"
    },
    {
        "index": 218,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <1>, <3>, <2>.\nNode <1> is connected to nodes <0>, <3>, <5>, <4>.\nNode <5> is connected to node <0>.\nNode <2> is connected to nodes <4>, <0>, <5>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <2>, <5>, <0>, <3>, <1>]",
        "type": "DFS"
    },
    {
        "index": 219,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <2>, <4>.\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <6>, <4>, <3>, <0>.\nNode <4> is connected to nodes <5>, <1>, <2>, <6>.\nNode <5> is connected to nodes <0>, <6>.\nNode <0> is connected to nodes <1>, <4>, <3>, <5>.\nNode <6> is connected to nodes <4>, <3>, <0>, <1>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <3>, <4>, <6>, <0>, <5>, <2>]",
        "type": "DFS"
    },
    {
        "index": 220,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <6>, <2>.\nNode <2> is connected to nodes <6>, <3>, <4>.\nNode <4> is connected to nodes <2>, <5>.\nNode <5> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <5>, <1>.\nNode <1> is connected to node <0>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <1>, <5>, <4>, <2>, <3>, <6>]",
        "type": "DFS"
    },
    {
        "index": 221,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <4>, <1>, <2>.\nNode <3> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <0>, <3>.\nNode <2> is connected to node <0>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <0>, <1>, <3>, <4>]",
        "type": "DFS"
    },
    {
        "index": 222,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <1>, <3>.\nNode <4> is connected to nodes <1>, <2>.\nNode <3> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <4>, <3>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <2>, <4>, <1>, <0>]",
        "type": "DFS"
    },
    {
        "index": 223,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <1>, <4>, <0>.\nNode <1> is connected to nodes <6>, <0>.\nNode <4> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <3>, <6>.\nNode <6> is connected to nodes <4>, <5>, <1>.\nNode <3> is connected to nodes <4>, <0>.\nNode <2> is connected to nodes <3>, <6>.\nStart from node <5>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<5>, <0>, <6>, <1>, <4>, <2>, <3>]",
        "type": "DFS"
    },
    {
        "index": 224,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <4>, <0>.\nNode <2> is connected to nodes <3>, <1>, <0>.\nNode <4> is connected to node <3>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <0>, <3>, <2>, <4>]",
        "type": "DFS"
    },
    {
        "index": 225,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <6>, <4>, <5>, <1>.\nNode <0> is connected to node <2>.\nNode <6> is connected to nodes <2>, <3>.\nNode <4> is connected to node <2>.\nNode <5> is connected to node <2>.\nNode <1> is connected to node <2>.\nNode <3> is connected to node <6>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <2>, <1>, <5>, <4>, <6>, <3>]",
        "type": "DFS"
    },
    {
        "index": 226,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <3>, <2>.\nNode <1> is connected to node <3>.\nNode <2> is connected to nodes <4>, <0>.\nNode <0> is connected to node <2>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <3>, <4>, <2>, <0>]",
        "type": "DFS"
    },
    {
        "index": 227,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <2>, <4>, <1>, <5>, <6>.\nNode <0> is connected to nodes <3>, <1>.\nNode <2> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <3>, <1>, <2>.\nNode <1> is connected to nodes <3>, <0>, <6>, <4>.\nNode <5> is connected to node <3>.\nNode <6> is connected to nodes <3>, <1>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <4>, <1>, <6>, <3>, <5>, <0>]",
        "type": "DFS"
    },
    {
        "index": 228,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <5>, <3>, <4>.\nNode <2> is connected to nodes <3>, <0>.\nNode <5> is connected to nodes <3>, <0>, <1>.\nNode <3> is connected to nodes <0>, <5>.\nNode <4> is connected to node <1>.\nNode <1> is connected to node <5>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <4>, <1>, <5>, <3>, <2>]",
        "type": "DFS"
    },
    {
        "index": 229,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <2>, <4>.\nNode <0> is connected to nodes <3>, <1>.\nNode <2> is connected to node <3>.\nNode <4> is connected to node <3>.\nNode <1> is connected to node <0>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <1>, <3>, <4>, <2>]",
        "type": "DFS"
    },
    {
        "index": 230,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <1>, <3>, <5>, <6>.\nNode <0> is connected to nodes <1>, <3>, <5>, <2>, <4>.\nNode <1> is connected to nodes <3>, <5>, <4>, <0>.\nNode <3> is connected to nodes <5>, <6>, <2>.\nNode <5> is connected to nodes <2>, <3>.\nNode <6> is connected to nodes <2>, <1>, <5>.\nNode <4> is connected to nodes <6>, <2>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <2>, <6>, <5>, <3>, <1>, <0>]",
        "type": "DFS"
    },
    {
        "index": 231,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <2>.\nNode <0> is connected to node <1>.\nNode <2> is connected to nodes <6>, <0>.\nNode <1> is connected to nodes <0>, <4>.\nNode <6> is connected to nodes <3>, <0>.\nNode <5> is connected to nodes <3>, <4>.\nStart from node <5>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<5>, <4>, <3>, <2>, <0>, <1>, <6>]",
        "type": "DFS"
    },
    {
        "index": 232,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <1>, <0>.\nNode <5> is connected to nodes <1>, <4>, <3>.\nNode <0> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <0>, <5>.\nNode <3> is connected to node <5>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <4>, <5>, <3>, <1>, <2>]",
        "type": "DFS"
    },
    {
        "index": 233,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <2>, <1>, <3>.\nNode <0> is connected to node <4>.\nNode <2> is connected to node <4>.\nNode <1> is connected to node <4>.\nNode <3> is connected to node <4>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <3>, <1>, <2>, <0>]",
        "type": "DFS"
    },
    {
        "index": 234,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <1>, <6>.\nNode <4> is connected to node <0>.\nNode <1> is connected to node <0>.\nNode <6> is connected to nodes <0>, <5>.\nNode <5> is connected to nodes <2>, <6>, <3>.\nNode <2> is connected to node <5>.\nNode <3> is connected to node <5>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <6>, <5>, <3>, <2>, <1>, <4>]",
        "type": "DFS"
    },
    {
        "index": 235,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <4>, <0>, <5>.\nNode <3> is connected to node <2>.\nNode <4> is connected to node <5>.\nNode <0> is connected to nodes <1>, <2>, <3>.\nNode <2> is connected to nodes <3>, <4>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <5>, <0>, <3>, <2>, <4>]",
        "type": "DFS"
    },
    {
        "index": 236,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <4>, <1>.\nNode <2> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <0>, <4>, <2>.\nNode <4> is connected to nodes <2>, <0>.\nNode <1> is connected to nodes <4>, <5>.\nStart from node <5>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<5>, <2>, <4>, <0>, <1>]",
        "type": "DFS"
    },
    {
        "index": 237,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <3>, <0>, <5>.\nNode <4> is connected to nodes <3>, <5>.\nNode <0> is connected to nodes <2>, <1>.\nNode <5> is connected to nodes <2>, <4>.\nNode <1> is connected to node <0>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <1>, <2>, <5>, <4>, <3>]",
        "type": "DFS"
    },
    {
        "index": 238,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <0>, <6>, <1>, <4>.\nNode <5> is connected to nodes <3>, <2>.\nNode <0> is connected to nodes <3>, <1>.\nNode <6> is connected to nodes <3>, <2>.\nNode <1> is connected to nodes <3>, <0>, <2>.\nNode <4> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <5>, <6>, <1>, <4>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <4>, <3>, <1>, <0>, <6>, <5>]",
        "type": "DFS"
    },
    {
        "index": 239,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <0>, <5>, <1>.\nNode <3> is connected to nodes <2>, <4>.\nNode <0> is connected to node <2>.\nNode <5> is connected to node <2>.\nNode <1> is connected to nodes <2>, <6>.\nNode <4> is connected to node <3>.\nNode <6> is connected to node <1>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <2>, <1>, <6>, <5>, <3>, <4>]",
        "type": "DFS"
    },
    {
        "index": 240,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <0>.\nNode <5> is connected to node <3>.\nNode <0> is connected to nodes <3>, <2>, <4>, <1>.\nNode <2> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <1> is connected to node <0>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <0>, <4>, <2>, <3>, <5>]",
        "type": "DFS"
    },
    {
        "index": 241,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <0>, <2>, <1>.\nNode <5> is connected to nodes <0>, <2>, <6>, <3>, <1>.\nNode <2> is connected to nodes <3>, <4>, <5>, <1>.\nNode <3> is connected to nodes <2>, <6>, <5>, <1>.\nNode <1> is connected to nodes <2>, <6>, <3>, <4>, <5>.\nNode <6> is connected to nodes <3>, <5>, <1>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <1>, <5>, <3>, <6>, <0>, <4>]",
        "type": "DFS"
    },
    {
        "index": 242,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <0>.\nNode <2> is connected to node <3>.\nNode <0> is connected to nodes <3>, <1>, <6>, <4>.\nNode <1> is connected to node <0>.\nNode <6> is connected to nodes <0>, <5>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <6>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <0>, <6>, <5>, <1>, <3>, <2>]",
        "type": "DFS"
    },
    {
        "index": 243,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <6>, <5>, <3>, <1>, <2>, <4>.\nNode <6> is connected to nodes <0>, <5>, <1>, <2>, <4>.\nNode <5> is connected to nodes <0>, <6>, <2>.\nNode <3> is connected to nodes <0>, <1>, <2>, <4>.\nNode <1> is connected to nodes <0>, <6>, <3>, <2>.\nNode <2> is connected to nodes <0>, <6>, <5>, <3>, <1>, <4>.\nNode <4> is connected to nodes <0>, <6>, <3>, <2>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <2>, <1>, <3>, <0>, <5>, <6>]",
        "type": "DFS"
    },
    {
        "index": 244,
        "question": "Given an undirected graph:\nNode <3> is connected to node <6>.\nNode <6> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <6>, <2>.\nNode <2> is connected to nodes <4>, <1>, <5>.\nNode <1> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <1>, <5>.\nNode <5> is connected to nodes <2>, <0>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <5>, <0>, <1>, <4>, <6>, <3>]",
        "type": "DFS"
    },
    {
        "index": 245,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <2>, <1>.\nNode <4> is connected to nodes <2>, <5>, <3>.\nNode <1> is connected to nodes <0>, <5>.\nNode <5> is connected to nodes <1>, <4>.\nNode <3> is connected to node <4>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <4>, <5>, <1>, <0>, <2>]",
        "type": "DFS"
    },
    {
        "index": 246,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <3>.\nNode <2> is connected to node <6>.\nNode <3> is connected to nodes <6>, <2>, <0>, <1>.\nNode <6> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <3>, <4>, <6>, <2>, <5>.\nNode <5> is connected to nodes <3>, <2>.\nNode <0> is connected to nodes <1>, <3>, <6>, <2>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <5>, <2>, <6>, <4>, <3>, <0>]",
        "type": "DFS"
    },
    {
        "index": 247,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <1>, <5>.\nNode <4> is connected to nodes <2>, <3>.\nNode <1> is connected to node <0>.\nNode <5> is connected to nodes <2>, <4>, <1>, <0>.\nNode <3> is connected to nodes <0>, <5>.\nNode <0> is connected to node <2>.\nStart from node <5>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<5>, <0>, <2>, <1>, <4>, <3>]",
        "type": "DFS"
    },
    {
        "index": 248,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <5>, <2>.\nNode <5> is connected to nodes <0>, <4>.\nNode <2> is connected to nodes <1>, <4>, <3>.\nNode <3> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <4>, <3>, <2>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <2>, <3>, <4>, <5>, <0>]",
        "type": "DFS"
    },
    {
        "index": 249,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5>, <2>.\nNode <2> is connected to node <1>.\nNode <1> is connected to nodes <3>, <4>.\nNode <3> is connected to node <2>.\nNode <4> is connected to nodes <0>, <5>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <1>, <4>, <5>, <0>, <3>]",
        "type": "DFS"
    },
    {
        "index": 250,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <4>, <0>.\nNode <1> is connected to node <3>.\nNode <4> is connected to nodes <3>, <2>.\nNode <0> is connected to node <3>.\nNode <2> is connected to nodes <4>, <5>.\nNode <5> is connected to node <2>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <3>, <4>, <2>, <5>, <1>]",
        "type": "DFS"
    },
    {
        "index": 251,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <4>, <1>, <2>.\nNode <0> is connected to nodes <3>, <1>.\nNode <4> is connected to node <3>.\nNode <1> is connected to nodes <3>, <0>.\nNode <2> is connected to node <3>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <2>, <1>, <0>, <4>]",
        "type": "DFS"
    },
    {
        "index": 252,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <5>, <0>, <4>, <6>.\nNode <5> is connected to nodes <2>, <3>, <6>.\nNode <0> is connected to nodes <4>, <3>, <6>, <2>.\nNode <4> is connected to nodes <3>, <1>, <5>, <0>.\nNode <6> is connected to nodes <1>, <0>.\nNode <2> is connected to nodes <4>, <6>, <1>, <5>.\nNode <3> is connected to nodes <1>, <2>, <4>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <6>, <0>, <2>, <5>, <3>, <4>]",
        "type": "DFS"
    },
    {
        "index": 253,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <0>, <3>.\nNode <1> is connected to node <0>.\nNode <3> is connected to nodes <2>, <4>.\nNode <4> is connected to node <3>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <0>, <2>, <3>, <4>]",
        "type": "DFS"
    },
    {
        "index": 254,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <2>, <0>, <4>.\nNode <5> is connected to nodes <3>, <2>, <1>, <4>.\nNode <2> is connected to nodes <3>, <5>, <0>, <4>.\nNode <0> is connected to nodes <3>, <2>, <1>, <4>.\nNode <4> is connected to nodes <3>, <5>, <2>, <0>, <1>.\nNode <1> is connected to nodes <5>, <0>, <4>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <1>, <0>, <2>, <5>, <3>]",
        "type": "DFS"
    },
    {
        "index": 255,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <1>, <5>, <4>.\nNode <0> is connected to nodes <1>, <3>.\nNode <5> is connected to node <2>.\nNode <4> is connected to node <2>.\nNode <3> is connected to node <0>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <2>, <5>, <1>, <0>, <3>]",
        "type": "DFS"
    },
    {
        "index": 256,
        "question": "Given an undirected graph:\nNode <1> is connected to node <2>.\nNode <2> is connected to nodes <1>, <4>, <3>.\nNode <4> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <2>, <4>, <0>.\nNode <0> is connected to node <3>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <0>, <4>, <2>, <1>]",
        "type": "DFS"
    },
    {
        "index": 257,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <0>, <4>.\nNode <3> is connected to nodes <1>, <4>.\nNode <0> is connected to node <1>.\nNode <4> is connected to nodes <1>, <3>, <2>.\nNode <5> is connected to node <6>.\nNode <6> is connected to nodes <5>, <2>.\nNode <2> is connected to nodes <6>, <4>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <2>, <6>, <5>, <3>, <1>, <0>]",
        "type": "DFS"
    },
    {
        "index": 258,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <3>.\nNode <5> is connected to node <1>.\nNode <3> is connected to nodes <1>, <4>.\nNode <2> is connected to nodes <0>, <4>.\nNode <0> is connected to node <2>.\nNode <4> is connected to nodes <2>, <3>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <4>, <2>, <0>, <1>, <5>]",
        "type": "DFS"
    },
    {
        "index": 259,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <1>, <4>.\nNode <3> is connected to nodes <1>, <2>.\nNode <4> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <4>, <3>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <2>, <4>, <0>, <1>]",
        "type": "DFS"
    },
    {
        "index": 260,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <5>, <4>, <6>, <1>.\nNode <0> is connected to nodes <3>, <5>, <1>.\nNode <5> is connected to nodes <3>, <0>.\nNode <4> is connected to nodes <3>, <1>.\nNode <6> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <3>, <0>, <2>, <6>, <4>.\nNode <2> is connected to node <1>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <1>, <4>, <6>, <2>, <0>, <5>]",
        "type": "DFS"
    },
    {
        "index": 261,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <4>, <3>, <0>.\nNode <0> is connected to nodes <4>, <1>, <2>.\nNode <3> is connected to node <1>.\nNode <2> is connected to node <0>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <2>, <1>, <3>, <4>]",
        "type": "DFS"
    },
    {
        "index": 262,
        "question": "Given an undirected graph:\nNode <6> is connected to node <1>.\nNode <1> is connected to nodes <6>, <4>, <3>.\nNode <4> is connected to nodes <1>, <0>.\nNode <3> is connected to nodes <1>, <0>, <5>.\nNode <0> is connected to nodes <4>, <3>.\nNode <2> is connected to node <5>.\nNode <5> is connected to nodes <2>, <3>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <5>, <3>, <0>, <4>, <1>, <6>]",
        "type": "DFS"
    },
    {
        "index": 263,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>, <1>, <3>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <0>.\nNode <1> is connected to node <0>.\nNode <3> is connected to nodes <0>, <2>.\nNode <2> is connected to node <3>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <3>, <0>, <1>, <5>, <4>]",
        "type": "DFS"
    },
    {
        "index": 264,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <5>, <0>.\nNode <2> is connected to node <1>.\nNode <5> is connected to node <1>.\nNode <0> is connected to nodes <1>, <4>, <3>.\nNode <4> is connected to node <0>.\nNode <3> is connected to node <0>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <3>, <4>, <1>, <5>, <2>]",
        "type": "DFS"
    },
    {
        "index": 265,
        "question": "Given an undirected graph:\nNode <1> is connected to node <5>.\nNode <5> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <5>, <4>, <3>.\nNode <4> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <4>, <0>, <2>.\nNode <2> is connected to node <3>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <3>, <2>, <4>, <5>, <1>]",
        "type": "DFS"
    },
    {
        "index": 266,
        "question": "Given an undirected graph:\nNode <1> is connected to node <3>.\nNode <3> is connected to nodes <1>, <4>, <0>.\nNode <4> is connected to node <3>.\nNode <0> is connected to nodes <3>, <2>.\nNode <2> is connected to node <0>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <3>, <0>, <2>, <1>]",
        "type": "DFS"
    },
    {
        "index": 267,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <5>.\nNode <0> is connected to nodes <3>, <4>, <1>.\nNode <5> is connected to node <3>.\nNode <4> is connected to nodes <0>, <2>, <1>.\nNode <1> is connected to nodes <0>, <4>.\nNode <2> is connected to node <4>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <1>, <4>, <2>, <3>, <5>]",
        "type": "DFS"
    },
    {
        "index": 268,
        "question": "Given a directed graph:\nNode <0> is connected to node <4>.\nNode <4> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <5>, <4>, <1>.\nNode <1> is connected to nodes <0>, <4>.\nNode <5> is connected to nodes <0>, <2>, <3>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <1>, <4>, <2>, <0>, <5>]",
        "type": "DFS"
    },
    {
        "index": 269,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <4>, <1>.\nNode <0> is connected to node <2>.\nNode <4> is connected to node <2>.\nNode <1> is connected to nodes <2>, <3>.\nNode <3> is connected to node <1>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <1>, <2>, <4>, <0>]",
        "type": "DFS"
    },
    {
        "index": 270,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <6>.\nNode <0> is connected to nodes <3>, <2>.\nNode <6> is connected to nodes <3>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <2>, <5>.\nNode <5> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <5>, <6>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <5>, <4>, <6>, <3>, <0>, <2>]",
        "type": "DFS"
    },
    {
        "index": 271,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>, <3>.\nNode <2> is connected to nodes <0>, <1>, <4>, <3>.\nNode <4> is connected to nodes <0>, <1>, <2>, <5>, <3>.\nNode <3> is connected to nodes <0>, <1>, <2>, <4>, <5>.\nNode <1> is connected to nodes <2>, <4>, <5>, <3>.\nNode <5> is connected to nodes <1>, <4>, <3>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <3>, <5>, <4>, <2>, <1>]",
        "type": "DFS"
    },
    {
        "index": 272,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <1>, <5>.\nNode <2> is connected to nodes <1>, <3>, <0>, <4>.\nNode <1> is connected to nodes <5>, <0>, <4>, <2>.\nNode <5> is connected to node <2>.\nNode <3> is connected to nodes <4>, <2>, <1>.\nNode <0> is connected to nodes <1>, <3>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <3>, <1>, <2>, <4>, <5>]",
        "type": "DFS"
    },
    {
        "index": 273,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <6>, <4>, <3>.\nNode <6> is connected to nodes <2>, <1>.\nNode <4> is connected to nodes <2>, <0>, <3>.\nNode <3> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <6>, <5>.\nNode <5> is connected to node <1>.\nNode <0> is connected to node <4>.\nStart from node <5>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<5>, <1>, <6>, <2>, <3>, <4>, <0>]",
        "type": "DFS"
    },
    {
        "index": 274,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <3>, <6>, <0>.\nNode <1> is connected to node <3>.\nNode <6> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <2>, <6>, <5>.\nNode <5> is connected to nodes <0>, <4>.\nNode <4> is connected to node <5>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <1>, <2>, <0>, <5>, <4>, <6>]",
        "type": "DFS"
    },
    {
        "index": 275,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <6>, <1>.\nNode <6> is connected to nodes <3>, <0>.\nNode <1> is connected to nodes <5>, <0>, <3>.\nNode <2> is connected to nodes <0>, <3>, <5>.\nNode <0> is connected to node <2>.\nNode <3> is connected to node <2>.\nNode <4> is connected to nodes <1>, <5>, <6>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <5>, <1>, <3>, <0>, <6>]",
        "type": "DFS"
    },
    {
        "index": 276,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <5>.\nNode <0> is connected to nodes <3>, <6>.\nNode <5> is connected to nodes <3>, <4>, <2>, <1>.\nNode <6> is connected to node <0>.\nNode <4> is connected to node <5>.\nNode <2> is connected to node <5>.\nNode <1> is connected to node <5>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <5>, <2>, <4>, <3>, <0>, <6>]",
        "type": "DFS"
    },
    {
        "index": 277,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <4>, <5>.\nNode <5> is connected to nodes <4>, <1>, <3>.\nNode <3> is connected to nodes <5>, <0>.\nNode <0> is connected to nodes <3>, <2>.\nNode <2> is connected to node <0>.\nStart from node <5>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<5>, <3>, <0>, <2>, <1>, <4>]",
        "type": "DFS"
    },
    {
        "index": 278,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <3>, <4>.\nNode <0> is connected to nodes <2>, <3>, <5>, <6>.\nNode <3> is connected to nodes <2>, <0>, <1>, <6>.\nNode <4> is connected to nodes <2>, <1>, <5>, <6>.\nNode <5> is connected to nodes <0>, <4>, <6>.\nNode <6> is connected to nodes <0>, <3>, <4>, <5>.\nNode <1> is connected to nodes <3>, <4>.\nStart from node <5>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<5>, <6>, <4>, <1>, <3>, <0>, <2>]",
        "type": "DFS"
    },
    {
        "index": 279,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <3>, <1>, <0>, <2>.\nNode <2> is connected to nodes <3>, <1>, <0>, <4>.\nNode <1> is connected to nodes <5>, <4>, <2>.\nNode <5> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <5>, <4>, <2>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <2>, <4>, <1>, <5>, <3>]",
        "type": "DFS"
    },
    {
        "index": 280,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <4>, <1>, <5>.\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <4> is connected to nodes <2>, <0>.\nNode <1> is connected to nodes <2>, <6>.\nNode <5> is connected to node <2>.\nNode <3> is connected to node <0>.\nNode <6> is connected to node <1>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <5>, <1>, <6>, <4>, <0>, <3>]",
        "type": "DFS"
    },
    {
        "index": 281,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <6>, <2>.\nNode <6> is connected to nodes <1>, <0>, <5>, <2>, <4>.\nNode <2> is connected to nodes <4>, <6>, <1>, <5>.\nNode <1> is connected to nodes <0>, <5>, <3>, <2>, <4>, <6>.\nNode <0> is connected to node <3>.\nNode <5> is connected to nodes <3>, <2>, <4>, <1>, <0>.\nNode <3> is connected to nodes <2>, <6>, <1>, <5>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <6>, <4>, <2>, <5>, <0>, <3>]",
        "type": "DFS"
    },
    {
        "index": 282,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <3>, <0>.\nNode <2> is connected to nodes <1>, <5>, <4>.\nNode <3> is connected to node <1>.\nNode <0> is connected to node <1>.\nNode <5> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <2>, <5>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <0>, <3>, <2>, <4>, <5>]",
        "type": "DFS"
    },
    {
        "index": 283,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <5>.\nNode <0> is connected to nodes <4>, <2>.\nNode <5> is connected to nodes <4>, <1>.\nNode <2> is connected to nodes <0>, <3>.\nNode <1> is connected to nodes <5>, <3>.\nNode <3> is connected to nodes <1>, <2>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <3>, <1>, <5>, <4>, <0>]",
        "type": "DFS"
    },
    {
        "index": 284,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <1>, <2>, <5>.\nNode <1> is connected to node <6>.\nNode <2> is connected to node <6>.\nNode <5> is connected to nodes <6>, <0>, <3>.\nNode <0> is connected to node <5>.\nNode <3> is connected to nodes <5>, <4>.\nNode <4> is connected to node <3>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <6>, <5>, <3>, <4>, <0>, <2>]",
        "type": "DFS"
    },
    {
        "index": 285,
        "question": "Given an undirected graph:\nNode <2> is connected to node <3>.\nNode <3> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <3>, <5>.\nNode <5> is connected to nodes <4>, <0>, <1>.\nNode <4> is connected to nodes <5>, <0>.\nNode <0> is connected to nodes <5>, <4>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <1>, <5>, <0>, <4>, <2>]",
        "type": "DFS"
    },
    {
        "index": 286,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <2>, <5>, <6>, <4>.\nNode <3> is connected to nodes <2>, <5>, <1>.\nNode <5> is connected to nodes <0>, <3>.\nNode <6> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <1> is connected to node <3>.\nStart from node <5>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<5>, <3>, <1>, <2>, <0>, <4>, <6>]",
        "type": "DFS"
    },
    {
        "index": 287,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1>, <4>, <3>.\nNode <1> is connected to node <3>.\nNode <4> is connected to nodes <2>, <5>, <0>.\nNode <3> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <0>, <4>, <2>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <3>, <2>, <4>, <0>, <5>]",
        "type": "DFS"
    },
    {
        "index": 288,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <0>, <2>, <4>.\nNode <3> is connected to nodes <1>, <4>.\nNode <0> is connected to nodes <1>, <4>, <5>.\nNode <2> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <1>, <3>, <6>, <0>, <2>.\nNode <6> is connected to nodes <4>, <5>.\nNode <5> is connected to nodes <6>, <0>.\nStart from node <6>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<6>, <5>, <0>, <4>, <2>, <1>, <3>]",
        "type": "DFS"
    },
    {
        "index": 289,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <5>, <3>, <0>, <4>.\nNode <5> is connected to nodes <3>, <0>, <4>.\nNode <3> is connected to nodes <2>, <6>.\nNode <0> is connected to nodes <1>, <2>, <5>.\nNode <1> is connected to nodes <2>, <6>, <4>.\nNode <4> is connected to nodes <2>, <6>.\nStart from node <5>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<5>, <4>, <6>, <2>, <0>, <1>, <3>]",
        "type": "DFS"
    },
    {
        "index": 290,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <3>, <4>.\nNode <2> is connected to nodes <3>, <6>.\nNode <4> is connected to nodes <0>, <5>.\nNode <6> is connected to nodes <2>, <1>.\nNode <5> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <5>, <6>.\nStart from node <5>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<5>, <4>, <0>, <3>, <2>, <6>, <1>]",
        "type": "DFS"
    },
    {
        "index": 291,
        "question": "Given an undirected graph:\nNode <3> is connected to node <1>.\nNode <1> is connected to nodes <3>, <2>, <4>.\nNode <2> is connected to nodes <1>, <0>.\nNode <4> is connected to node <1>.\nNode <0> is connected to node <2>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <4>, <2>, <0>, <3>]",
        "type": "DFS"
    },
    {
        "index": 292,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <4>, <3>, <1>.\nNode <4> is connected to node <3>.\nNode <1> is connected to nodes <0>, <4>.\nStart from node <0>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<0>, <1>, <4>, <3>, <2>]",
        "type": "DFS"
    },
    {
        "index": 293,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <3>.\nNode <4> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>, <2>.\nNode <1> is connected to node <3>.\nNode <2> is connected to node <3>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <2>, <1>, <0>, <4>]",
        "type": "DFS"
    },
    {
        "index": 294,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <4>, <0>, <2>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <0> is connected to node <1>.\nNode <2> is connected to node <1>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <1>, <0>, <4>, <3>]",
        "type": "DFS"
    },
    {
        "index": 295,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <5>, <4>, <3>.\nNode <0> is connected to node <1>.\nNode <5> is connected to nodes <1>, <2>, <4>, <3>.\nNode <4> is connected to nodes <1>, <5>, <3>.\nNode <3> is connected to nodes <1>, <2>, <5>, <4>.\nNode <2> is connected to nodes <5>, <3>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <3>, <4>, <5>, <2>, <0>]",
        "type": "DFS"
    },
    {
        "index": 296,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <3>, <2>.\nNode <0> is connected to nodes <4>, <1>, <3>.\nNode <3> is connected to nodes <4>, <0>.\nNode <2> is connected to node <4>.\nNode <1> is connected to node <0>.\nStart from node <3>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<3>, <0>, <1>, <4>, <2>]",
        "type": "DFS"
    },
    {
        "index": 297,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <0>, <5>, <2>, <4>.\nNode <1> is connected to nodes <3>, <5>, <4>.\nNode <0> is connected to nodes <3>, <2>.\nNode <5> is connected to nodes <3>, <1>, <2>, <4>.\nNode <2> is connected to nodes <3>, <0>, <5>.\nNode <4> is connected to nodes <3>, <1>, <5>.\nStart from node <1>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<1>, <4>, <5>, <2>, <0>, <3>]",
        "type": "DFS"
    },
    {
        "index": 298,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <3>, <2>, <1>.\nNode <4> is connected to nodes <0>, <3>, <2>, <1>.\nNode <3> is connected to nodes <0>, <4>, <2>, <1>.\nNode <2> is connected to nodes <0>, <5>, <4>, <3>, <1>.\nNode <1> is connected to nodes <0>, <5>, <4>, <3>, <2>.\nNode <5> is connected to nodes <2>, <1>.\nStart from node <4>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<4>, <1>, <2>, <3>, <0>, <5>]",
        "type": "DFS"
    },
    {
        "index": 299,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <6>, <1>, <3>.\nNode <1> is connected to nodes <4>, <2>.\nNode <6> is connected to nodes <0>, <1>, <3>, <2>.\nNode <5> is connected to nodes <6>, <0>, <3>.\nNode <0> is connected to nodes <3>, <5>, <2>, <6>.\nNode <2> is connected to nodes <0>, <3>, <5>.\nStart from node <2>, output a sequence of traversal in depth-first search (DFS) order.\nAnswer:\n",
        "answer": "[<2>, <5>, <3>, <1>, <4>, <6>, <0>]",
        "type": "DFS"
    },
    {
        "index": 0,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <1>, <4>.\nNode <2> is connected to node <0>.\nNode <1> is connected to nodes <0>, <3>.\nNode <4> is connected to node <0>.\nNode <3> is connected to node <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 1,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>, <1>, <4>.\nNode <3> is connected to nodes <0>, <2>, <5>, <1>.\nNode <5> is connected to nodes <0>, <3>, <2>, <1>, <4>.\nNode <1> is connected to nodes <0>, <3>, <2>, <5>, <4>.\nNode <4> is connected to nodes <0>, <2>, <5>, <1>.\nNode <2> is connected to nodes <3>, <5>, <1>, <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 2,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <1>, <3>.\nNode <0> is connected to nodes <2>, <1>, <4>.\nNode <1> is connected to nodes <2>, <0>.\nNode <3> is connected to node <2>.\nNode <4> is connected to node <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 3,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <5>, <1>, <4>.\nNode <2> is connected to nodes <0>, <5>, <1>, <4>, <3>.\nNode <5> is connected to nodes <0>, <2>, <1>, <4>.\nNode <1> is connected to nodes <0>, <2>, <5>, <4>, <3>.\nNode <4> is connected to nodes <0>, <2>, <5>, <1>, <3>.\nNode <3> is connected to nodes <2>, <1>, <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 4,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <6>, <5>, <0>.\nNode <6> is connected to nodes <3>, <5>.\nNode <5> is connected to nodes <3>, <6>, <4>, <1>, <2>, <0>.\nNode <0> is connected to nodes <3>, <5>, <1>, <4>.\nNode <4> is connected to nodes <5>, <0>.\nNode <1> is connected to nodes <5>, <0>.\nNode <2> is connected to node <5>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 5,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <6>, <2>.\nNode <0> is connected to nodes <5>, <1>.\nNode <6> is connected to nodes <5>, <1>, <2>, <4>, <3>.\nNode <2> is connected to nodes <5>, <6>.\nNode <1> is connected to nodes <0>, <6>, <3>, <4>.\nNode <4> is connected to nodes <6>, <1>.\nNode <3> is connected to nodes <6>, <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 6,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <2>, <6>, <5>, <1>.\nNode <4> is connected to nodes <2>, <0>, <5>, <1>.\nNode <0> is connected to nodes <6>, <4>, <5>.\nNode <6> is connected to nodes <0>, <3>, <5>, <1>.\nNode <5> is connected to nodes <0>, <3>, <6>, <4>, <1>.\nNode <1> is connected to nodes <3>, <6>, <4>, <5>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 7,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <0>, <2>.\nNode <3> is connected to node <4>.\nNode <0> is connected to nodes <4>, <1>.\nNode <2> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <2>, <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 8,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <5>, <0>, <6>, <3>.\nNode <4> is connected to nodes <5>, <6>, <3>.\nNode <1> is connected to nodes <0>, <6>, <3>.\nNode <0> is connected to nodes <1>, <6>, <2>.\nNode <6> is connected to nodes <1>, <0>, <2>, <4>.\nNode <3> is connected to nodes <1>, <2>, <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 9,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <0>, <5>.\nNode <3> is connected to nodes <0>, <2>.\nNode <5> is connected to nodes <1>, <2>, <4>.\nNode <2> is connected to nodes <5>, <3>.\nNode <4> is connected to node <5>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 10,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <0>, <1>.\nNode <4> is connected to nodes <5>, <3>.\nNode <0> is connected to node <5>.\nNode <1> is connected to node <5>.\nNode <3> is connected to nodes <4>, <2>.\nNode <2> is connected to node <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 11,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <4>, <3>.\nNode <1> is connected to nodes <4>, <2>.\nNode <3> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <1>, <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 12,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <1>, <2>, <4>.\nNode <0> is connected to node <3>.\nNode <1> is connected to node <3>.\nNode <2> is connected to node <3>.\nNode <4> is connected to node <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 13,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <6>, <0>.\nNode <5> is connected to nodes <2>, <1>, <4>.\nNode <6> is connected to nodes <2>, <0>, <3>.\nNode <0> is connected to nodes <2>, <6>, <3>, <4>.\nNode <1> is connected to nodes <5>, <4>.\nNode <4> is connected to nodes <5>, <0>, <1>.\nNode <3> is connected to nodes <6>, <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 14,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <4>, <5>, <0>.\nNode <2> is connected to nodes <1>, <5>, <0>, <3>.\nNode <4> is connected to nodes <1>, <5>, <0>, <3>.\nNode <5> is connected to nodes <1>, <2>, <4>, <0>, <3>.\nNode <0> is connected to nodes <1>, <2>, <4>, <5>, <3>.\nNode <3> is connected to nodes <2>, <4>, <5>, <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 15,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <2>, <3>.\nNode <0> is connected to node <1>.\nNode <2> is connected to nodes <1>, <4>, <3>.\nNode <3> is connected to nodes <1>, <2>.\nNode <5> is connected to node <4>.\nNode <4> is connected to nodes <5>, <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 16,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <4>, <2>.\nNode <5> is connected to nodes <3>, <2>, <6>.\nNode <4> is connected to nodes <3>, <0>, <1>, <6>.\nNode <2> is connected to nodes <3>, <5>, <0>, <6>.\nNode <6> is connected to nodes <5>, <4>, <0>, <2>.\nNode <0> is connected to nodes <4>, <1>, <2>, <6>.\nNode <1> is connected to nodes <4>, <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 17,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <0>, <1>, <5>.\nNode <3> is connected to node <2>.\nNode <0> is connected to node <2>.\nNode <1> is connected to nodes <2>, <4>.\nNode <5> is connected to node <2>.\nNode <4> is connected to node <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 18,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <4>, <1>, <2>.\nNode <0> is connected to nodes <3>, <6>, <4>, <1>, <2>.\nNode <4> is connected to nodes <3>, <0>, <6>, <1>.\nNode <1> is connected to nodes <3>, <0>, <6>, <5>, <4>, <2>.\nNode <2> is connected to nodes <3>, <0>, <6>, <1>.\nNode <6> is connected to nodes <0>, <4>, <1>, <2>.\nNode <5> is connected to node <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 19,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <2>, <3>, <6>, <1>.\nNode <4> is connected to nodes <0>, <5>, <2>, <3>, <6>, <1>.\nNode <2> is connected to nodes <0>, <4>, <6>.\nNode <3> is connected to nodes <0>, <4>, <6>, <1>.\nNode <6> is connected to nodes <0>, <4>, <5>, <2>, <3>, <1>.\nNode <1> is connected to nodes <0>, <4>, <5>, <3>, <6>.\nNode <5> is connected to nodes <4>, <6>, <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 20,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <0>, <5>, <4>.\nNode <2> is connected to nodes <3>, <5>, <4>, <1>.\nNode <0> is connected to nodes <3>, <5>, <4>, <1>.\nNode <5> is connected to nodes <3>, <2>, <0>, <4>, <1>.\nNode <4> is connected to nodes <3>, <2>, <0>, <5>.\nNode <1> is connected to nodes <2>, <0>, <5>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 21,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <0>, <3>, <2>.\nNode <1> is connected to nodes <4>, <0>, <2>, <5>.\nNode <0> is connected to nodes <4>, <1>, <3>, <2>, <5>.\nNode <3> is connected to nodes <4>, <0>, <2>, <5>.\nNode <2> is connected to nodes <4>, <1>, <0>, <3>.\nNode <5> is connected to nodes <1>, <0>, <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 22,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <2>, <0>.\nNode <4> is connected to nodes <2>, <3>.\nNode <0> is connected to node <1>.\nNode <3> is connected to node <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 23,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <5>, <2>, <4>, <3>.\nNode <0> is connected to node <1>.\nNode <5> is connected to nodes <1>, <2>, <4>, <3>.\nNode <2> is connected to nodes <1>, <5>, <4>, <3>.\nNode <4> is connected to nodes <1>, <5>, <2>, <3>.\nNode <3> is connected to nodes <1>, <5>, <2>, <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 24,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <4>.\nNode <0> is connected to node <2>.\nNode <4> is connected to nodes <2>, <3>, <1>.\nNode <3> is connected to node <4>.\nNode <1> is connected to node <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 25,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <5>.\nNode <0> is connected to node <3>.\nNode <5> is connected to nodes <3>, <4>, <6>.\nNode <4> is connected to nodes <2>, <5>.\nNode <2> is connected to node <4>.\nNode <6> is connected to nodes <5>, <1>.\nNode <1> is connected to node <6>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 26,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <3>, <4>.\nNode <0> is connected to node <5>.\nNode <3> is connected to nodes <5>, <2>.\nNode <4> is connected to node <5>.\nNode <2> is connected to nodes <3>, <1>.\nNode <1> is connected to node <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 27,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <5>, <4>.\nNode <0> is connected to nodes <5>, <3>.\nNode <4> is connected to node <1>.\nNode <3> is connected to nodes <0>, <2>.\nNode <2> is connected to node <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "5",
        "type": "diameter"
    },
    {
        "index": 28,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <6>, <1>.\nNode <6> is connected to node <5>.\nNode <1> is connected to nodes <5>, <0>, <2>.\nNode <0> is connected to nodes <4>, <3>, <1>.\nNode <4> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <2> is connected to node <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 29,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <0>, <2>, <4>.\nNode <5> is connected to nodes <1>, <0>, <3>, <4>.\nNode <0> is connected to nodes <1>, <5>, <3>, <2>.\nNode <2> is connected to nodes <1>, <0>, <3>.\nNode <4> is connected to nodes <1>, <5>.\nNode <3> is connected to nodes <5>, <0>, <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 30,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <3>, <0>, <1>.\nNode <2> is connected to nodes <4>, <5>, <3>, <0>, <1>.\nNode <3> is connected to nodes <4>, <2>, <5>, <0>.\nNode <0> is connected to nodes <4>, <2>, <3>, <1>.\nNode <1> is connected to nodes <4>, <2>, <0>.\nNode <5> is connected to nodes <2>, <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 31,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <5>, <3>.\nNode <1> is connected to nodes <5>, <2>.\nNode <3> is connected to nodes <0>, <4>.\nNode <2> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <2>, <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 32,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <6>.\nNode <1> is connected to nodes <4>, <0>.\nNode <6> is connected to nodes <4>, <2>.\nNode <0> is connected to nodes <1>, <3>.\nNode <2> is connected to nodes <6>, <5>.\nNode <5> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <5>, <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 33,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <2>, <6>, <3>.\nNode <4> is connected to nodes <0>, <5>, <2>, <3>, <1>.\nNode <2> is connected to nodes <0>, <4>, <5>, <6>, <3>.\nNode <6> is connected to nodes <0>, <5>, <2>, <3>, <1>.\nNode <3> is connected to nodes <0>, <4>, <2>, <6>, <1>.\nNode <5> is connected to nodes <4>, <2>, <6>, <1>.\nNode <1> is connected to nodes <4>, <5>, <6>, <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 34,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <5>, <0>.\nNode <2> is connected to nodes <1>, <0>.\nNode <5> is connected to nodes <1>, <6>, <3>, <4>.\nNode <0> is connected to nodes <1>, <2>, <3>, <4>.\nNode <6> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <6>, <5>, <0>.\nNode <4> is connected to nodes <5>, <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 35,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <5>, <2>, <4>, <3>.\nNode <1> is connected to nodes <0>, <5>, <4>.\nNode <5> is connected to nodes <0>, <1>, <2>, <4>, <3>.\nNode <2> is connected to nodes <0>, <5>, <4>, <3>.\nNode <4> is connected to nodes <0>, <1>, <5>, <2>, <3>.\nNode <3> is connected to nodes <0>, <5>, <2>, <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 36,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1>, <0>, <4>, <2>.\nNode <1> is connected to nodes <5>, <0>, <4>, <2>.\nNode <0> is connected to nodes <5>, <1>, <4>, <3>, <2>.\nNode <4> is connected to nodes <5>, <1>, <0>, <3>, <2>.\nNode <2> is connected to nodes <5>, <1>, <0>, <4>, <3>.\nNode <3> is connected to nodes <0>, <4>, <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 37,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <1>, <2>, <5>.\nNode <3> is connected to nodes <0>, <4>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <5> is connected to node <0>.\nNode <4> is connected to node <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 38,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <2>, <4>.\nNode <3> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nNode <1> is connected to node <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 39,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <5>, <0>.\nNode <1> is connected to nodes <3>, <6>, <0>, <4>.\nNode <5> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <3>, <1>, <6>, <5>, <4>, <2>.\nNode <6> is connected to nodes <1>, <0>.\nNode <4> is connected to nodes <1>, <0>.\nNode <2> is connected to node <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 40,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <2>, <0>.\nNode <1> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <4>, <1>.\nNode <0> is connected to nodes <4>, <3>.\nNode <3> is connected to node <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 41,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <4>, <1>, <6>, <2>, <0>.\nNode <5> is connected to nodes <3>, <6>, <2>, <0>.\nNode <4> is connected to nodes <3>, <1>, <6>, <2>, <0>.\nNode <1> is connected to nodes <3>, <4>, <6>, <2>, <0>.\nNode <6> is connected to nodes <3>, <5>, <4>, <1>, <0>.\nNode <2> is connected to nodes <3>, <5>, <4>, <1>, <0>.\nNode <0> is connected to nodes <3>, <5>, <4>, <1>, <6>, <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 42,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <0>, <3>, <2>.\nNode <4> is connected to node <1>.\nNode <0> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <2> is connected to node <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 43,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <6>, <1>.\nNode <6> is connected to nodes <5>, <0>.\nNode <1> is connected to nodes <5>, <3>.\nNode <0> is connected to nodes <6>, <4>.\nNode <3> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <0>, <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 44,
        "question": "Given an undirected graph:\nNode <3> is connected to node <2>.\nNode <2> is connected to nodes <3>, <5>.\nNode <5> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <5>, <4>, <0>.\nNode <4> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <1>, <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 45,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <3>, <4>.\nNode <0> is connected to nodes <3>, <2>.\nNode <4> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <0>, <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 46,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <1>, <5>.\nNode <0> is connected to nodes <2>, <6>, <4>, <1>, <5>.\nNode <1> is connected to nodes <2>, <6>, <0>, <3>, <4>, <5>.\nNode <5> is connected to nodes <2>, <6>, <0>, <4>, <1>.\nNode <6> is connected to nodes <0>, <1>, <5>.\nNode <4> is connected to nodes <0>, <1>, <5>.\nNode <3> is connected to node <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 47,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <6>, <4>, <5>, <3>, <2>, <1>.\nNode <6> is connected to nodes <0>, <4>, <3>, <2>, <1>.\nNode <4> is connected to nodes <0>, <6>, <3>, <1>.\nNode <5> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <0>, <6>, <4>, <2>.\nNode <2> is connected to nodes <0>, <6>, <3>, <1>.\nNode <1> is connected to nodes <0>, <6>, <4>, <5>, <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 48,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <3>.\nNode <5> is connected to node <2>.\nNode <3> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <0>, <3>, <1>.\nNode <0> is connected to node <4>.\nNode <1> is connected to node <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 49,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <0>, <5>, <2>.\nNode <1> is connected to nodes <0>, <2>.\nNode <5> is connected to nodes <3>, <4>.\nNode <2> is connected to nodes <3>, <1>.\nNode <4> is connected to node <5>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 50,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <5>, <1>, <0>.\nNode <5> is connected to nodes <6>, <1>, <4>, <3>, <2>.\nNode <1> is connected to nodes <6>, <5>, <2>.\nNode <0> is connected to nodes <6>, <4>.\nNode <4> is connected to nodes <5>, <0>, <3>.\nNode <3> is connected to nodes <5>, <4>.\nNode <2> is connected to nodes <5>, <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 51,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <5>, <0>.\nNode <2> is connected to nodes <4>, <0>.\nNode <5> is connected to nodes <4>, <1>.\nNode <0> is connected to nodes <4>, <2>.\nNode <1> is connected to nodes <3>, <5>.\nNode <3> is connected to node <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 52,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <5>, <0>.\nNode <4> is connected to node <3>.\nNode <5> is connected to node <3>.\nNode <0> is connected to nodes <3>, <2>, <1>.\nNode <2> is connected to node <0>.\nNode <1> is connected to node <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 53,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <1>, <2>.\nNode <0> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <3>, <0>.\nNode <2> is connected to nodes <3>, <6>.\nNode <5> is connected to nodes <6>, <4>.\nNode <6> is connected to nodes <5>, <2>.\nNode <4> is connected to node <5>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "5",
        "type": "diameter"
    },
    {
        "index": 54,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <2>, <6>.\nNode <3> is connected to nodes <2>, <1>.\nNode <6> is connected to nodes <4>, <0>, <1>.\nNode <5> is connected to node <0>.\nNode <0> is connected to nodes <5>, <6>.\nNode <1> is connected to nodes <6>, <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 55,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <1>, <3>.\nNode <4> is connected to nodes <5>, <2>, <0>, <3>.\nNode <1> is connected to nodes <5>, <2>, <0>, <3>.\nNode <3> is connected to nodes <5>, <0>, <4>, <1>.\nNode <2> is connected to nodes <0>, <4>, <1>.\nNode <0> is connected to nodes <2>, <4>, <1>, <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 56,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <2>, <6>, <0>.\nNode <4> is connected to nodes <1>, <5>, <3>.\nNode <2> is connected to node <1>.\nNode <6> is connected to node <1>.\nNode <0> is connected to node <1>.\nNode <5> is connected to node <4>.\nNode <3> is connected to node <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 57,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <2>, <3>, <6>, <1>.\nNode <0> is connected to nodes <5>, <2>, <4>.\nNode <2> is connected to nodes <5>, <0>, <3>, <4>, <6>.\nNode <3> is connected to nodes <5>, <2>, <4>.\nNode <6> is connected to nodes <5>, <2>, <4>, <1>.\nNode <1> is connected to nodes <5>, <6>.\nNode <4> is connected to nodes <0>, <2>, <3>, <6>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 58,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <6>.\nNode <4> is connected to nodes <1>, <5>, <0>.\nNode <6> is connected to nodes <1>, <3>.\nNode <5> is connected to node <4>.\nNode <0> is connected to nodes <4>, <2>, <3>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <6>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 59,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <1>, <3>, <2>.\nNode <4> is connected to nodes <1>, <6>.\nNode <3> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <0>, <3>, <5>.\nNode <5> is connected to node <2>.\nNode <6> is connected to node <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "5",
        "type": "diameter"
    },
    {
        "index": 60,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>, <2>.\nNode <4> is connected to nodes <0>, <3>, <5>, <1>, <2>.\nNode <5> is connected to nodes <0>, <4>, <3>, <1>, <2>.\nNode <2> is connected to nodes <0>, <4>, <3>, <5>, <1>.\nNode <3> is connected to nodes <4>, <5>, <2>.\nNode <1> is connected to nodes <4>, <5>, <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 61,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <6>, <5>, <0>, <2>.\nNode <6> is connected to node <1>.\nNode <5> is connected to node <1>.\nNode <0> is connected to node <1>.\nNode <2> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <4>, <2>.\nNode <4> is connected to node <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 62,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <3>, <6>.\nNode <4> is connected to nodes <3>, <2>.\nNode <6> is connected to nodes <0>, <5>.\nNode <5> is connected to nodes <6>, <1>.\nNode <1> is connected to nodes <5>, <2>.\nNode <2> is connected to nodes <1>, <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 63,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <1>, <2>, <0>, <3>.\nNode <5> is connected to nodes <4>, <1>, <2>, <0>.\nNode <1> is connected to nodes <4>, <5>, <0>, <3>.\nNode <2> is connected to nodes <4>, <5>, <0>.\nNode <0> is connected to nodes <4>, <5>, <1>, <2>.\nNode <3> is connected to nodes <4>, <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 64,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <2>, <5>, <1>.\nNode <4> is connected to nodes <3>, <2>, <5>, <0>.\nNode <2> is connected to nodes <3>, <4>, <5>, <0>, <1>.\nNode <5> is connected to nodes <3>, <4>, <2>, <1>.\nNode <1> is connected to nodes <3>, <2>, <5>, <0>.\nNode <0> is connected to nodes <4>, <2>, <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 65,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <6>, <5>, <2>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <0>.\nNode <6> is connected to node <0>.\nNode <5> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <1> is connected to node <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 66,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <5>, <4>.\nNode <3> is connected to nodes <1>, <5>.\nNode <5> is connected to nodes <1>, <3>, <0>.\nNode <4> is connected to node <1>.\nNode <0> is connected to nodes <5>, <6>.\nNode <2> is connected to node <6>.\nNode <6> is connected to nodes <2>, <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "5",
        "type": "diameter"
    },
    {
        "index": 67,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <3>, <2>, <0>.\nNode <4> is connected to node <1>.\nNode <3> is connected to nodes <1>, <5>.\nNode <2> is connected to node <1>.\nNode <0> is connected to node <1>.\nNode <5> is connected to node <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 68,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <4>, <3>.\nNode <5> is connected to nodes <0>, <2>, <3>.\nNode <4> is connected to node <0>.\nNode <3> is connected to nodes <0>, <5>.\nNode <2> is connected to nodes <5>, <1>.\nNode <1> is connected to node <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 69,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <6>.\nNode <4> is connected to nodes <3>, <0>, <2>.\nNode <6> is connected to nodes <3>, <1>.\nNode <0> is connected to node <4>.\nNode <2> is connected to node <4>.\nNode <1> is connected to nodes <5>, <6>.\nNode <5> is connected to node <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "5",
        "type": "diameter"
    },
    {
        "index": 70,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <5>, <1>.\nNode <4> is connected to nodes <5>, <2>.\nNode <1> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <1>, <4>, <0>.\nNode <0> is connected to nodes <2>, <6>.\nNode <6> is connected to node <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 71,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <3>, <2>.\nNode <0> is connected to nodes <3>, <6>.\nNode <2> is connected to nodes <1>, <5>, <4>.\nNode <5> is connected to node <2>.\nNode <4> is connected to nodes <2>, <6>.\nNode <6> is connected to nodes <0>, <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 72,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <2>, <3>, <4>.\nNode <5> is connected to nodes <1>, <0>, <2>, <3>, <4>.\nNode <2> is connected to nodes <1>, <0>, <5>, <4>.\nNode <3> is connected to nodes <1>, <0>, <5>, <4>.\nNode <4> is connected to nodes <1>, <0>, <5>, <2>, <3>.\nNode <0> is connected to nodes <5>, <2>, <3>, <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 73,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <2>, <5>.\nNode <3> is connected to nodes <2>, <4>.\nNode <5> is connected to nodes <0>, <1>.\nNode <1> is connected to node <5>.\nNode <4> is connected to node <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "5",
        "type": "diameter"
    },
    {
        "index": 74,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <1>, <4>.\nNode <2> is connected to nodes <1>, <3>.\nNode <4> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <4>, <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 75,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <5>, <2>, <1>, <3>.\nNode <0> is connected to nodes <4>, <1>, <6>.\nNode <5> is connected to nodes <4>, <2>, <6>.\nNode <2> is connected to nodes <4>, <5>.\nNode <1> is connected to nodes <4>, <0>.\nNode <3> is connected to nodes <4>, <6>.\nNode <6> is connected to nodes <0>, <5>, <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 76,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <6>, <3>.\nNode <6> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <2>, <6>, <1>.\nNode <1> is connected to nodes <3>, <5>.\nNode <5> is connected to nodes <1>, <0>.\nNode <4> is connected to node <0>.\nNode <0> is connected to nodes <4>, <5>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "5",
        "type": "diameter"
    },
    {
        "index": 77,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <0>.\nNode <2> is connected to node <4>.\nNode <0> is connected to nodes <4>, <1>, <3>.\nNode <1> is connected to node <0>.\nNode <3> is connected to node <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 78,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <3>.\nNode <0> is connected to node <1>.\nNode <3> is connected to nodes <1>, <2>, <4>.\nNode <2> is connected to node <3>.\nNode <4> is connected to node <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 79,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <5>.\nNode <0> is connected to node <3>.\nNode <5> is connected to nodes <3>, <6>.\nNode <6> is connected to nodes <4>, <5>, <2>.\nNode <4> is connected to nodes <6>, <1>.\nNode <2> is connected to node <6>.\nNode <1> is connected to node <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "5",
        "type": "diameter"
    },
    {
        "index": 80,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <4>, <2>, <5>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <2> is connected to nodes <1>, <0>.\nNode <5> is connected to node <1>.\nNode <0> is connected to node <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 81,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <1>, <5>, <0>.\nNode <0> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <0>, <2>.\nNode <2> is connected to node <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 82,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <3>, <0>, <5>.\nNode <2> is connected to nodes <4>, <1>, <0>, <5>.\nNode <3> is connected to nodes <4>, <1>, <0>, <5>.\nNode <0> is connected to nodes <4>, <2>, <3>, <1>, <5>.\nNode <5> is connected to nodes <4>, <2>, <3>, <0>.\nNode <1> is connected to nodes <2>, <3>, <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 83,
        "question": "Given an undirected graph:\nNode <0> is connected to node <4>.\nNode <4> is connected to nodes <0>, <5>, <3>.\nNode <5> is connected to nodes <4>, <1>.\nNode <3> is connected to nodes <4>, <6>.\nNode <1> is connected to nodes <5>, <2>.\nNode <2> is connected to nodes <1>, <6>.\nNode <6> is connected to nodes <2>, <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 84,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <4>, <0>, <3>.\nNode <2> is connected to nodes <1>, <5>, <0>, <6>.\nNode <4> is connected to nodes <1>, <5>, <0>, <6>, <3>.\nNode <0> is connected to nodes <1>, <2>, <4>, <5>, <6>.\nNode <3> is connected to nodes <1>, <4>, <5>, <6>.\nNode <5> is connected to nodes <2>, <4>, <0>, <6>, <3>.\nNode <6> is connected to nodes <2>, <4>, <5>, <0>, <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 85,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <1>, <5>, <6>.\nNode <2> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <3>, <2>, <5>, <0>, <6>.\nNode <5> is connected to nodes <3>, <1>, <4>.\nNode <6> is connected to nodes <3>, <1>.\nNode <0> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <5>, <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 86,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <2>.\nNode <5> is connected to node <3>.\nNode <2> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <2>, <1>, <4>.\nNode <1> is connected to node <0>.\nNode <4> is connected to node <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 87,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <5>, <0>.\nNode <1> is connected to nodes <3>, <2>, <5>, <0>.\nNode <5> is connected to nodes <3>, <4>, <2>, <1>, <0>.\nNode <0> is connected to nodes <3>, <4>, <2>, <1>, <5>.\nNode <4> is connected to nodes <5>, <0>.\nNode <2> is connected to nodes <1>, <5>, <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 88,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <4>, <3>, <2>.\nNode <0> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <2> is connected to node <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 89,
        "question": "Given an undirected graph:\nNode <3> is connected to node <1>.\nNode <1> is connected to nodes <3>, <4>, <0>.\nNode <4> is connected to nodes <1>, <2>.\nNode <0> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <4>, <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 90,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <4>, <0>.\nNode <1> is connected to node <2>.\nNode <4> is connected to node <2>.\nNode <0> is connected to nodes <2>, <3>.\nNode <3> is connected to node <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 91,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <2>.\nNode <5> is connected to nodes <4>, <1>, <0>, <3>, <2>.\nNode <2> is connected to nodes <4>, <5>, <0>, <3>.\nNode <1> is connected to nodes <5>, <0>, <3>.\nNode <0> is connected to nodes <1>, <5>, <3>, <2>.\nNode <3> is connected to nodes <1>, <5>, <0>, <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 92,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <3>, <0>, <1>.\nNode <4> is connected to nodes <3>, <1>.\nNode <0> is connected to node <2>.\nNode <1> is connected to nodes <2>, <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 93,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <0>, <4>, <5>.\nNode <2> is connected to nodes <0>, <5>.\nNode <4> is connected to nodes <3>, <1>.\nNode <5> is connected to nodes <3>, <2>.\nNode <1> is connected to node <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 94,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <4>, <3>.\nNode <5> is connected to nodes <2>, <1>, <0>.\nNode <4> is connected to node <2>.\nNode <3> is connected to node <2>.\nNode <1> is connected to node <5>.\nNode <0> is connected to node <5>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 95,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <5>, <0>, <2>.\nNode <3> is connected to nodes <1>, <4>, <2>.\nNode <5> is connected to nodes <1>, <4>, <0>, <2>.\nNode <0> is connected to nodes <1>, <4>, <5>, <2>.\nNode <2> is connected to nodes <1>, <3>, <4>, <5>, <0>.\nNode <4> is connected to nodes <3>, <5>, <0>, <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 96,
        "question": "Given an undirected graph:\nNode <3> is connected to node <2>.\nNode <2> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <2>, <5>, <4>.\nNode <5> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <5>, <4>.\nNode <4> is connected to nodes <0>, <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 97,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <0>, <4>, <2>, <1>.\nNode <5> is connected to nodes <3>, <0>, <4>, <2>.\nNode <0> is connected to nodes <3>, <5>, <4>, <2>, <1>.\nNode <4> is connected to nodes <3>, <5>, <0>, <2>, <1>.\nNode <2> is connected to nodes <3>, <5>, <0>, <4>.\nNode <1> is connected to nodes <3>, <0>, <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 98,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <6>, <3>.\nNode <6> is connected to nodes <4>, <1>.\nNode <3> is connected to nodes <4>, <0>.\nNode <1> is connected to nodes <6>, <2>.\nNode <5> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <5>, <3>.\nNode <2> is connected to nodes <5>, <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 99,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <4>, <3>.\nNode <2> is connected to node <1>.\nNode <4> is connected to nodes <1>, <0>.\nNode <3> is connected to node <1>.\nNode <0> is connected to node <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 100,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <2>, <1>, <5>.\nNode <5> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <5>, <0>.\nNode <0> is connected to node <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 101,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <5>, <0>.\nNode <2> is connected to nodes <4>, <1>, <0>.\nNode <5> is connected to nodes <4>, <1>, <3>, <0>.\nNode <0> is connected to nodes <4>, <1>, <3>, <2>, <5>.\nNode <1> is connected to nodes <3>, <2>, <5>, <0>.\nNode <3> is connected to nodes <1>, <5>, <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 102,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <4>, <3>, <2>.\nNode <5> is connected to nodes <1>, <4>, <3>, <0>.\nNode <4> is connected to nodes <1>, <5>.\nNode <3> is connected to nodes <1>, <5>, <0>, <2>.\nNode <2> is connected to nodes <1>, <3>, <0>.\nNode <0> is connected to nodes <5>, <3>, <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 103,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <6>.\nNode <4> is connected to nodes <0>, <5>.\nNode <6> is connected to nodes <0>, <3>, <2>.\nNode <5> is connected to nodes <4>, <2>.\nNode <3> is connected to nodes <6>, <1>.\nNode <2> is connected to nodes <6>, <5>.\nNode <1> is connected to node <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 104,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <1>, <0>.\nNode <4> is connected to nodes <1>, <2>.\nNode <0> is connected to node <3>.\nNode <2> is connected to node <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 105,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <1>.\nNode <5> is connected to nodes <0>, <4>, <3>, <2>, <1>.\nNode <1> is connected to nodes <0>, <3>, <5>.\nNode <4> is connected to nodes <3>, <5>, <2>.\nNode <3> is connected to nodes <4>, <5>, <2>, <1>.\nNode <2> is connected to nodes <4>, <3>, <5>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 106,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <5>, <1>, <3>.\nNode <3> is connected to nodes <5>, <0>, <2>, <6>, <1>, <4>.\nNode <1> is connected to nodes <0>, <3>.\nNode <2> is connected to nodes <6>, <3>, <4>.\nNode <6> is connected to nodes <2>, <3>.\nNode <4> is connected to nodes <2>, <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 107,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <4>, <1>.\nNode <5> is connected to nodes <2>, <6>.\nNode <4> is connected to nodes <2>, <6>.\nNode <1> is connected to nodes <2>, <0>, <3>.\nNode <6> is connected to nodes <5>, <4>.\nNode <0> is connected to node <1>.\nNode <3> is connected to node <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 108,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <4>.\nNode <2> is connected to node <3>.\nNode <4> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <4>, <0>.\nNode <0> is connected to node <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 109,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <4>, <0>.\nNode <1> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <2>, <1>, <3>.\nNode <3> is connected to node <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 110,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <1>, <4>.\nNode <0> is connected to nodes <1>, <2>.\nNode <4> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <4>, <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 111,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <1>, <0>.\nNode <3> is connected to nodes <2>, <0>, <4>.\nNode <1> is connected to node <2>.\nNode <0> is connected to nodes <2>, <3>.\nNode <4> is connected to node <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 112,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <0>, <4>.\nNode <2> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <1>, <2>, <3>.\nNode <3> is connected to nodes <4>, <5>.\nNode <5> is connected to node <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 113,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <0>.\nNode <2> is connected to node <3>.\nNode <0> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <5>, <1>, <0>.\nNode <5> is connected to node <4>.\nNode <1> is connected to node <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 114,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <4>, <3>.\nNode <0> is connected to nodes <5>, <1>, <4>, <2>, <3>.\nNode <4> is connected to nodes <5>, <0>, <2>.\nNode <3> is connected to nodes <5>, <1>, <0>, <2>.\nNode <1> is connected to nodes <0>, <2>, <3>.\nNode <2> is connected to nodes <1>, <0>, <4>, <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 115,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <3>, <0>.\nNode <4> is connected to nodes <2>, <5>.\nNode <3> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <2>, <3>.\nNode <5> is connected to nodes <4>, <6>, <1>.\nNode <6> is connected to node <5>.\nNode <1> is connected to node <5>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 116,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <1>, <0>.\nNode <3> is connected to node <4>.\nNode <1> is connected to nodes <4>, <2>.\nNode <0> is connected to node <4>.\nNode <2> is connected to node <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 117,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <3>, <0>, <1>.\nNode <2> is connected to node <4>.\nNode <3> is connected to node <4>.\nNode <0> is connected to nodes <4>, <5>.\nNode <1> is connected to node <4>.\nNode <5> is connected to node <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 118,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>.\nNode <3> is connected to node <0>.\nNode <5> is connected to nodes <0>, <4>, <2>, <1>.\nNode <4> is connected to node <5>.\nNode <2> is connected to node <5>.\nNode <1> is connected to node <5>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 119,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <3>, <1>.\nNode <0> is connected to nodes <3>, <2>, <5>.\nNode <1> is connected to node <4>.\nNode <2> is connected to nodes <0>, <5>.\nNode <5> is connected to nodes <0>, <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 120,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <0>, <1>.\nNode <4> is connected to nodes <2>, <3>.\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to node <2>.\nNode <3> is connected to nodes <4>, <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 121,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <4>, <3>.\nNode <0> is connected to nodes <5>, <1>.\nNode <4> is connected to nodes <5>, <2>.\nNode <3> is connected to nodes <5>, <1>.\nNode <1> is connected to nodes <0>, <3>.\nNode <2> is connected to node <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 122,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <4>, <0>.\nNode <2> is connected to nodes <4>, <1>.\nNode <0> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <2>, <5>, <0>.\nNode <5> is connected to node <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 123,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <1>, <2>, <5>, <3>.\nNode <4> is connected to node <0>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <5> is connected to node <0>.\nNode <3> is connected to node <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 124,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <1>, <5>, <3>, <2>.\nNode <0> is connected to nodes <4>, <1>, <5>, <3>, <2>.\nNode <1> is connected to nodes <4>, <0>, <3>, <2>.\nNode <5> is connected to nodes <4>, <0>, <2>.\nNode <3> is connected to nodes <4>, <0>, <1>, <2>.\nNode <2> is connected to nodes <4>, <0>, <1>, <5>, <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 125,
        "question": "Given an undirected graph:\nNode <1> is connected to node <4>.\nNode <4> is connected to nodes <1>, <0>, <6>, <5>, <3>.\nNode <2> is connected to nodes <0>, <5>, <3>.\nNode <0> is connected to nodes <2>, <6>, <4>, <3>.\nNode <5> is connected to nodes <2>, <6>, <4>, <3>.\nNode <3> is connected to nodes <2>, <0>, <5>, <4>.\nNode <6> is connected to nodes <0>, <5>, <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 126,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <1>, <0>, <3>.\nNode <0> is connected to nodes <1>, <4>, <2>.\nNode <3> is connected to node <4>.\nNode <2> is connected to node <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 127,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <6>, <5>, <3>.\nNode <6> is connected to nodes <2>, <5>.\nNode <5> is connected to nodes <2>, <6>, <4>, <3>, <1>.\nNode <3> is connected to nodes <2>, <5>, <1>, <4>, <0>.\nNode <4> is connected to nodes <5>, <3>.\nNode <1> is connected to nodes <5>, <3>.\nNode <0> is connected to node <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 128,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <1>, <0>, <4>.\nNode <3> is connected to nodes <1>, <5>.\nNode <0> is connected to node <2>.\nNode <4> is connected to nodes <2>, <5>.\nNode <5> is connected to nodes <3>, <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 129,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <3>, <2>.\nNode <0> is connected to nodes <1>, <4>, <5>.\nNode <3> is connected to nodes <1>, <4>, <2>, <5>.\nNode <2> is connected to nodes <1>, <3>, <4>, <5>.\nNode <4> is connected to nodes <0>, <3>, <2>, <5>.\nNode <5> is connected to nodes <0>, <3>, <4>, <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 130,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <2>, <3>.\nNode <4> is connected to node <1>.\nNode <2> is connected to nodes <1>, <0>.\nNode <3> is connected to node <1>.\nNode <0> is connected to node <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 131,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <5>, <1>, <4>, <2>.\nNode <0> is connected to nodes <3>, <5>, <1>, <4>, <2>.\nNode <5> is connected to nodes <3>, <0>, <4>, <2>.\nNode <1> is connected to nodes <3>, <0>, <4>.\nNode <4> is connected to nodes <3>, <0>, <5>, <1>, <2>.\nNode <2> is connected to nodes <3>, <0>, <5>, <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 132,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <4>.\nNode <2> is connected to node <3>.\nNode <4> is connected to nodes <3>, <1>, <0>.\nNode <1> is connected to node <4>.\nNode <0> is connected to node <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 133,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <5>, <3>.\nNode <1> is connected to nodes <4>, <0>.\nNode <5> is connected to nodes <4>, <2>.\nNode <3> is connected to node <4>.\nNode <0> is connected to node <1>.\nNode <2> is connected to node <5>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 134,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <1>, <2>, <4>.\nNode <0> is connected to node <3>.\nNode <1> is connected to node <3>.\nNode <2> is connected to node <3>.\nNode <4> is connected to node <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 135,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <3>, <0>, <5>, <1>.\nNode <2> is connected to nodes <4>, <0>, <5>, <1>.\nNode <3> is connected to nodes <4>, <5>, <1>.\nNode <0> is connected to nodes <4>, <2>, <5>, <1>.\nNode <5> is connected to nodes <4>, <2>, <3>, <0>, <1>.\nNode <1> is connected to nodes <4>, <2>, <3>, <0>, <5>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 136,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <0>, <5>, <4>.\nNode <1> is connected to nodes <2>, <3>, <4>, <6>.\nNode <0> is connected to nodes <2>, <3>, <5>, <4>, <6>.\nNode <5> is connected to nodes <2>, <3>, <0>, <4>, <6>.\nNode <4> is connected to nodes <2>, <1>, <0>, <5>, <6>.\nNode <3> is connected to nodes <1>, <0>, <5>.\nNode <6> is connected to nodes <1>, <0>, <5>, <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 137,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <1>, <0>.\nNode <4> is connected to nodes <1>, <5>.\nNode <0> is connected to nodes <3>, <5>.\nNode <5> is connected to nodes <0>, <2>, <4>.\nNode <2> is connected to nodes <5>, <6>.\nNode <6> is connected to node <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 138,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <0>, <1>.\nNode <5> is connected to nodes <4>, <1>.\nNode <0> is connected to nodes <4>, <2>.\nNode <1> is connected to nodes <4>, <5>.\nNode <3> is connected to node <2>.\nNode <2> is connected to nodes <3>, <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 139,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <2>, <4>, <1>.\nNode <5> is connected to nodes <0>, <3>, <2>, <4>, <1>.\nNode <2> is connected to nodes <0>, <5>, <3>, <4>, <1>.\nNode <4> is connected to nodes <0>, <5>, <3>, <2>.\nNode <1> is connected to nodes <0>, <5>, <3>, <2>.\nNode <3> is connected to nodes <5>, <2>, <4>, <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 140,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <3>, <1>, <4>.\nNode <5> is connected to nodes <0>, <2>.\nNode <3> is connected to node <0>.\nNode <1> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <2> is connected to node <5>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 141,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <3>, <1>, <4>, <5>.\nNode <0> is connected to nodes <2>, <3>, <1>, <5>.\nNode <3> is connected to nodes <2>, <0>, <4>, <5>.\nNode <1> is connected to nodes <2>, <0>, <4>, <5>.\nNode <4> is connected to nodes <2>, <3>, <1>, <5>.\nNode <5> is connected to nodes <2>, <0>, <3>, <1>, <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 142,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <2>, <5>.\nNode <5> is connected to nodes <2>, <3>, <4>, <0>, <1>.\nNode <4> is connected to node <5>.\nNode <0> is connected to node <5>.\nNode <1> is connected to node <5>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 143,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <0>, <1>.\nNode <2> is connected to node <4>.\nNode <0> is connected to node <4>.\nNode <1> is connected to nodes <4>, <3>.\nNode <3> is connected to node <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 144,
        "question": "Given an undirected graph:\nNode <2> is connected to node <0>.\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <3> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <0>, <1>, <3>.\nNode <1> is connected to node <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 145,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <4>, <0>.\nNode <1> is connected to nodes <4>, <2>.\nNode <0> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <1>, <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 146,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <4>, <0>, <1>.\nNode <2> is connected to nodes <3>, <0>, <5>.\nNode <4> is connected to nodes <3>, <0>, <5>.\nNode <0> is connected to nodes <3>, <2>, <4>, <1>, <5>.\nNode <1> is connected to nodes <3>, <0>, <5>.\nNode <5> is connected to nodes <2>, <4>, <0>, <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 147,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <2>, <1>.\nNode <0> is connected to nodes <5>, <4>, <2>, <1>.\nNode <2> is connected to nodes <5>, <0>, <4>, <1>.\nNode <1> is connected to nodes <5>, <3>, <0>, <4>, <2>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <2>, <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 148,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <5>, <6>, <2>, <1>.\nNode <0> is connected to nodes <3>, <4>, <2>, <1>.\nNode <5> is connected to nodes <3>, <4>, <2>.\nNode <6> is connected to nodes <3>, <4>.\nNode <2> is connected to nodes <3>, <0>, <5>, <4>, <1>.\nNode <1> is connected to nodes <3>, <0>, <2>.\nNode <4> is connected to nodes <0>, <5>, <6>, <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 149,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <0>, <2>.\nNode <3> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <4>, <3>, <1>.\nNode <2> is connected to nodes <4>, <5>.\nNode <1> is connected to node <0>.\nNode <5> is connected to node <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 150,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <0>, <5>.\nNode <2> is connected to nodes <3>, <1>, <6>, <5>.\nNode <0> is connected to nodes <3>, <1>, <6>, <4>, <5>.\nNode <5> is connected to nodes <3>, <2>, <1>, <0>.\nNode <1> is connected to nodes <2>, <0>, <6>, <4>, <5>.\nNode <6> is connected to nodes <2>, <1>, <0>.\nNode <4> is connected to nodes <1>, <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 151,
        "question": "Given an undirected graph:\nNode <2> is connected to node <5>.\nNode <5> is connected to nodes <2>, <0>, <3>.\nNode <0> is connected to nodes <5>, <3>, <1>.\nNode <3> is connected to nodes <5>, <0>, <4>.\nNode <4> is connected to node <3>.\nNode <1> is connected to node <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 152,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <0>, <3>, <4>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <1>, <3>.\nNode <5> is connected to node <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 153,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <2>, <3>, <6>, <5>.\nNode <4> is connected to nodes <0>, <1>, <3>, <6>, <5>.\nNode <2> is connected to nodes <0>, <3>, <6>, <5>.\nNode <3> is connected to nodes <0>, <4>, <2>, <1>.\nNode <6> is connected to nodes <0>, <4>, <2>, <1>, <5>.\nNode <5> is connected to nodes <0>, <4>, <2>, <1>, <6>.\nNode <1> is connected to nodes <4>, <3>, <6>, <5>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 154,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <4>, <5>, <3>, <0>.\nNode <0> is connected to nodes <4>, <5>, <1>, <3>, <2>.\nNode <5> is connected to nodes <1>, <0>, <2>.\nNode <2> is connected to nodes <5>, <0>.\nNode <3> is connected to nodes <1>, <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 155,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>, <4>, <1>.\nNode <3> is connected to nodes <0>, <2>, <5>, <4>, <1>.\nNode <5> is connected to nodes <0>, <2>, <3>, <4>, <1>.\nNode <4> is connected to nodes <0>, <2>, <3>, <5>.\nNode <1> is connected to nodes <0>, <3>, <5>.\nNode <2> is connected to nodes <3>, <5>, <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 156,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <1>, <0>.\nNode <2> is connected to nodes <4>, <5>.\nNode <1> is connected to node <4>.\nNode <0> is connected to node <4>.\nNode <5> is connected to nodes <2>, <3>.\nNode <3> is connected to node <5>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 157,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <5>, <0>, <3>, <4>, <6>.\nNode <1> is connected to nodes <2>, <5>, <0>, <3>, <4>, <6>.\nNode <5> is connected to nodes <2>, <1>, <3>, <6>.\nNode <0> is connected to nodes <2>, <1>, <6>.\nNode <3> is connected to nodes <2>, <1>, <5>.\nNode <4> is connected to nodes <2>, <1>, <6>.\nNode <6> is connected to nodes <2>, <1>, <5>, <0>, <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 158,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <5>, <0>.\nNode <2> is connected to nodes <5>, <3>.\nNode <0> is connected to node <1>.\nNode <3> is connected to nodes <2>, <4>.\nNode <4> is connected to node <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "5",
        "type": "diameter"
    },
    {
        "index": 159,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <2>, <0>.\nNode <3> is connected to nodes <2>, <1>.\nNode <0> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <3>, <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 160,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <6>, <5>.\nNode <6> is connected to nodes <3>, <2>.\nNode <5> is connected to node <3>.\nNode <2> is connected to nodes <6>, <0>, <4>.\nNode <0> is connected to nodes <2>, <1>.\nNode <4> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <0>, <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "5",
        "type": "diameter"
    },
    {
        "index": 161,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <6>, <2>, <3>.\nNode <6> is connected to nodes <0>, <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>, <5>.\nNode <4> is connected to node <6>.\nNode <1> is connected to node <3>.\nNode <5> is connected to node <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 162,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <2>, <4>, <1>.\nNode <3> is connected to node <2>.\nNode <4> is connected to node <0>.\nNode <1> is connected to node <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 163,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <3>.\nNode <5> is connected to nodes <4>, <0>, <3>.\nNode <3> is connected to nodes <4>, <5>, <1>.\nNode <0> is connected to nodes <5>, <2>.\nNode <1> is connected to node <3>.\nNode <2> is connected to node <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 164,
        "question": "Given an undirected graph:\nNode <2> is connected to node <5>.\nNode <5> is connected to nodes <2>, <4>, <1>, <0>.\nNode <4> is connected to nodes <5>, <1>.\nNode <1> is connected to nodes <5>, <4>.\nNode <0> is connected to nodes <5>, <3>.\nNode <3> is connected to node <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 165,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <1>, <6>.\nNode <0> is connected to node <2>.\nNode <1> is connected to nodes <2>, <3>, <6>.\nNode <6> is connected to nodes <2>, <1>, <4>.\nNode <3> is connected to nodes <1>, <5>.\nNode <5> is connected to node <3>.\nNode <4> is connected to node <6>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 166,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <2>, <0>.\nNode <3> is connected to node <4>.\nNode <2> is connected to node <4>.\nNode <0> is connected to nodes <4>, <1>.\nNode <1> is connected to node <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 167,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <5>, <4>, <1>, <3>, <0>.\nNode <3> is connected to nodes <5>, <1>, <2>, <0>.\nNode <4> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <4>, <2>, <3>, <0>.\nNode <0> is connected to nodes <1>, <2>, <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 168,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <4>, <0>, <3>.\nNode <2> is connected to nodes <1>, <5>, <4>.\nNode <4> is connected to nodes <1>, <5>, <2>, <0>.\nNode <0> is connected to nodes <1>, <5>, <4>, <3>.\nNode <3> is connected to nodes <1>, <5>, <0>.\nNode <5> is connected to nodes <2>, <4>, <0>, <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 169,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <3>, <2>.\nNode <5> is connected to node <4>.\nNode <3> is connected to nodes <4>, <1>.\nNode <2> is connected to nodes <4>, <0>.\nNode <1> is connected to node <3>.\nNode <0> is connected to node <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 170,
        "question": "Given an undirected graph:\nNode <1> is connected to node <2>.\nNode <2> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <2>, <4>, <3>.\nNode <4> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <4>, <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 171,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <1>, <2>, <0>.\nNode <0> is connected to node <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 172,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <4>, <3>, <1>.\nNode <4> is connected to nodes <6>, <2>.\nNode <3> is connected to node <6>.\nNode <1> is connected to node <6>.\nNode <2> is connected to nodes <4>, <5>, <0>.\nNode <5> is connected to node <2>.\nNode <0> is connected to node <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 173,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <1>, <3>.\nNode <0> is connected to nodes <5>, <4>, <1>, <2>, <3>.\nNode <1> is connected to nodes <5>, <4>, <0>, <2>, <3>.\nNode <3> is connected to nodes <5>, <4>, <0>, <1>, <2>.\nNode <4> is connected to nodes <0>, <1>, <2>, <3>.\nNode <2> is connected to nodes <4>, <0>, <1>, <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 174,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <3>, <2>, <5>.\nNode <3> is connected to nodes <6>, <0>, <1>.\nNode <2> is connected to nodes <6>, <4>, <1>.\nNode <5> is connected to nodes <6>, <4>.\nNode <0> is connected to nodes <3>, <4>.\nNode <1> is connected to nodes <3>, <4>, <2>.\nNode <4> is connected to nodes <0>, <2>, <5>, <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 175,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <1>, <2>.\nNode <0> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <4>, <0>.\nNode <2> is connected to nodes <4>, <3>.\nNode <3> is connected to node <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 176,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <5>, <4>, <2>.\nNode <1> is connected to nodes <3>, <5>, <4>, <0>.\nNode <5> is connected to nodes <3>, <1>, <4>, <2>.\nNode <4> is connected to nodes <3>, <1>, <5>, <2>.\nNode <2> is connected to nodes <3>, <5>, <4>, <0>.\nNode <0> is connected to nodes <1>, <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 177,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <0>, <3>.\nNode <4> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <2>, <4>, <1>.\nNode <1> is connected to node <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 178,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <2>, <1>.\nNode <5> is connected to nodes <3>, <1>.\nNode <2> is connected to nodes <3>, <0>.\nNode <1> is connected to nodes <3>, <5>, <4>.\nNode <4> is connected to node <1>.\nNode <0> is connected to nodes <2>, <6>.\nNode <6> is connected to node <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "5",
        "type": "diameter"
    },
    {
        "index": 179,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <3>, <1>.\nNode <0> is connected to node <5>.\nNode <3> is connected to node <5>.\nNode <1> is connected to nodes <5>, <4>, <2>.\nNode <4> is connected to node <1>.\nNode <2> is connected to node <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 180,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <6>, <0>.\nNode <1> is connected to nodes <2>, <5>, <4>.\nNode <6> is connected to nodes <2>, <0>, <3>, <5>, <4>.\nNode <0> is connected to nodes <2>, <3>, <6>.\nNode <5> is connected to nodes <1>, <6>.\nNode <4> is connected to nodes <1>, <6>.\nNode <3> is connected to nodes <0>, <6>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 181,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <2>.\nNode <3> is connected to nodes <0>, <2>.\nNode <4> is connected to nodes <0>, <5>.\nNode <2> is connected to nodes <0>, <3>.\nNode <1> is connected to node <5>.\nNode <5> is connected to nodes <1>, <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 182,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <4>, <3>, <6>.\nNode <5> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <2>, <5>, <3>, <1>, <0>.\nNode <3> is connected to nodes <2>, <4>, <6>.\nNode <6> is connected to nodes <2>, <3>, <1>.\nNode <1> is connected to nodes <4>, <6>.\nNode <0> is connected to node <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 183,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <4>, <2>.\nNode <1> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <2> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <2>, <5>.\nNode <5> is connected to node <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 184,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <2>, <3>, <5>.\nNode <4> is connected to nodes <0>, <2>, <5>.\nNode <2> is connected to nodes <0>, <4>, <1>, <5>.\nNode <3> is connected to nodes <0>, <1>, <5>.\nNode <5> is connected to nodes <0>, <4>, <2>, <3>.\nNode <1> is connected to nodes <2>, <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 185,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <1>, <4>.\nNode <0> is connected to nodes <3>, <2>.\nNode <1> is connected to node <3>.\nNode <4> is connected to node <3>.\nNode <2> is connected to node <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 186,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <2>, <0>.\nNode <4> is connected to nodes <1>, <0>.\nNode <2> is connected to nodes <1>, <3>.\nNode <0> is connected to nodes <1>, <4>.\nNode <3> is connected to node <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 187,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <3>, <1>.\nNode <0> is connected to nodes <3>, <5>.\nNode <1> is connected to nodes <2>, <5>, <6>.\nNode <5> is connected to nodes <0>, <1>.\nNode <6> is connected to nodes <1>, <4>.\nNode <4> is connected to node <6>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 188,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <2>, <5>, <0>.\nNode <4> is connected to node <3>.\nNode <2> is connected to nodes <3>, <6>.\nNode <5> is connected to node <3>.\nNode <0> is connected to nodes <3>, <1>.\nNode <6> is connected to node <2>.\nNode <1> is connected to node <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 189,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <3>, <5>, <2>.\nNode <0> is connected to node <1>.\nNode <3> is connected to nodes <1>, <4>, <5>.\nNode <5> is connected to nodes <1>, <3>.\nNode <2> is connected to node <1>.\nNode <4> is connected to node <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 190,
        "question": "Given an undirected graph:\nNode <0> is connected to node <4>.\nNode <4> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <1>, <5>, <6>.\nNode <5> is connected to nodes <2>, <3>.\nNode <6> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <6>, <5>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "5",
        "type": "diameter"
    },
    {
        "index": 191,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <0>, <1>.\nNode <2> is connected to nodes <0>, <4>.\nNode <1> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <2>, <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 192,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <1>, <5>.\nNode <4> is connected to nodes <3>, <2>.\nNode <1> is connected to node <3>.\nNode <5> is connected to node <3>.\nNode <2> is connected to nodes <4>, <6>.\nNode <6> is connected to nodes <0>, <2>.\nNode <0> is connected to node <6>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "5",
        "type": "diameter"
    },
    {
        "index": 193,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <4>, <0>.\nNode <1> is connected to nodes <3>, <0>.\nNode <4> is connected to nodes <3>, <2>.\nNode <0> is connected to nodes <3>, <1>.\nNode <2> is connected to node <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 194,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <0>, <4>.\nNode <1> is connected to nodes <0>, <4>, <2>.\nNode <4> is connected to nodes <3>, <1>.\nNode <2> is connected to node <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 195,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <0> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <1>, <0>.\nNode <4> is connected to node <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 196,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <5>, <1>.\nNode <0> is connected to nodes <3>, <5>.\nNode <5> is connected to nodes <3>, <0>.\nNode <1> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <1>, <4>.\nNode <4> is connected to node <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 197,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <3>, <0>, <5>, <1>.\nNode <4> is connected to nodes <2>, <6>, <3>, <0>, <5>, <1>.\nNode <3> is connected to nodes <2>, <6>, <4>, <5>.\nNode <0> is connected to nodes <2>, <4>, <5>, <1>.\nNode <5> is connected to nodes <2>, <4>, <3>, <0>, <1>.\nNode <1> is connected to nodes <2>, <6>, <4>, <0>, <5>.\nNode <6> is connected to nodes <4>, <3>, <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 198,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <0>, <4>, <1>, <5>.\nNode <3> is connected to nodes <2>, <0>, <1>.\nNode <0> is connected to nodes <2>, <3>, <4>, <1>, <5>.\nNode <4> is connected to nodes <2>, <0>, <1>, <5>.\nNode <1> is connected to nodes <2>, <3>, <0>, <4>, <5>.\nNode <5> is connected to nodes <2>, <0>, <4>, <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 199,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <4>, <2>.\nNode <1> is connected to nodes <4>, <5>, <6>.\nNode <2> is connected to node <0>.\nNode <5> is connected to node <1>.\nNode <6> is connected to nodes <1>, <3>.\nNode <3> is connected to node <6>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "5",
        "type": "diameter"
    },
    {
        "index": 200,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <3>.\nNode <0> is connected to node <2>.\nNode <3> is connected to nodes <2>, <5>, <4>.\nNode <5> is connected to nodes <1>, <3>.\nNode <1> is connected to node <5>.\nNode <4> is connected to node <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 201,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <6>, <3>, <0>.\nNode <2> is connected to node <5>.\nNode <6> is connected to nodes <5>, <3>, <1>, <0>.\nNode <3> is connected to nodes <5>, <1>, <4>, <6>.\nNode <0> is connected to nodes <5>, <6>.\nNode <1> is connected to nodes <3>, <6>, <4>.\nNode <4> is connected to nodes <3>, <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 202,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <6>, <1>.\nNode <2> is connected to nodes <6>, <3>.\nNode <1> is connected to nodes <4>, <5>.\nNode <5> is connected to nodes <1>, <0>.\nNode <3> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <3>, <5>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 203,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <2>.\nNode <5> is connected to nodes <1>, <3>.\nNode <2> is connected to nodes <1>, <0>.\nNode <3> is connected to node <5>.\nNode <0> is connected to nodes <2>, <4>.\nNode <4> is connected to node <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "5",
        "type": "diameter"
    },
    {
        "index": 204,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <0>, <3>.\nNode <1> is connected to nodes <0>, <2>.\nNode <3> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <3>, <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 205,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <1>, <4>.\nNode <2> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <3>, <2>, <4>, <0>, <6>, <5>.\nNode <4> is connected to nodes <3>, <1>, <0>.\nNode <0> is connected to nodes <1>, <4>.\nNode <6> is connected to nodes <1>, <5>.\nNode <5> is connected to nodes <1>, <6>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 206,
        "question": "Given an undirected graph:\nNode <2> is connected to node <4>.\nNode <4> is connected to nodes <2>, <3>, <5>, <0>, <1>.\nNode <3> is connected to nodes <5>, <0>, <4>, <1>.\nNode <5> is connected to nodes <3>, <4>, <1>.\nNode <0> is connected to nodes <3>, <4>, <1>.\nNode <1> is connected to nodes <3>, <5>, <0>, <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 207,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <5>, <3>.\nNode <1> is connected to nodes <2>, <4>, <0>, <5>, <3>.\nNode <5> is connected to nodes <2>, <1>, <4>, <0>, <3>.\nNode <3> is connected to nodes <2>, <1>, <4>, <0>, <5>.\nNode <4> is connected to nodes <1>, <0>, <5>, <3>.\nNode <0> is connected to nodes <1>, <4>, <5>, <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 208,
        "question": "Given an undirected graph:\nNode <2> is connected to node <5>.\nNode <5> is connected to nodes <2>, <3>, <4>.\nNode <3> is connected to nodes <5>, <0>, <6>.\nNode <4> is connected to nodes <5>, <0>.\nNode <0> is connected to nodes <4>, <3>, <1>.\nNode <1> is connected to node <0>.\nNode <6> is connected to node <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 209,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <2>, <1>, <3>, <5>.\nNode <4> is connected to nodes <0>, <1>, <3>.\nNode <2> is connected to nodes <0>, <1>, <3>, <5>.\nNode <1> is connected to nodes <0>, <4>, <2>, <3>, <5>.\nNode <3> is connected to nodes <0>, <4>, <2>, <1>, <5>.\nNode <5> is connected to nodes <0>, <2>, <1>, <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 210,
        "question": "Given an undirected graph:\nNode <4> is connected to node <1>.\nNode <1> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <1>, <0>, <3>.\nNode <0> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <0>, <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 211,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <6>, <5>, <3>, <2>, <1>, <0>.\nNode <6> is connected to nodes <4>, <5>, <3>, <2>.\nNode <5> is connected to nodes <4>, <6>, <3>, <2>, <1>, <0>.\nNode <3> is connected to nodes <4>, <6>, <5>, <1>, <0>.\nNode <2> is connected to nodes <4>, <6>, <5>, <1>, <0>.\nNode <1> is connected to nodes <4>, <5>, <3>, <2>, <0>.\nNode <0> is connected to nodes <4>, <5>, <3>, <2>, <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 212,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <6>, <1>, <3>.\nNode <5> is connected to nodes <0>, <2>, <6>.\nNode <6> is connected to nodes <0>, <5>, <2>, <4>.\nNode <1> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <0>, <1>.\nNode <2> is connected to nodes <5>, <4>, <6>.\nNode <4> is connected to nodes <2>, <6>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 213,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <3>, <0>.\nNode <1> is connected to node <2>.\nNode <3> is connected to node <2>.\nNode <0> is connected to nodes <2>, <4>.\nNode <4> is connected to node <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 214,
        "question": "Given an undirected graph:\nNode <3> is connected to node <5>.\nNode <5> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <5>, <1>.\nNode <4> is connected to nodes <1>, <6>.\nNode <1> is connected to nodes <4>, <2>, <0>.\nNode <6> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <1>, <6>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "5",
        "type": "diameter"
    },
    {
        "index": 215,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <0>, <1>.\nNode <2> is connected to node <3>.\nNode <0> is connected to nodes <3>, <4>.\nNode <1> is connected to node <3>.\nNode <4> is connected to node <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 216,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <0>, <1>, <2>.\nNode <3> is connected to node <0>.\nNode <1> is connected to nodes <4>, <5>.\nNode <2> is connected to node <4>.\nNode <5> is connected to node <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 217,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <2>, <4>.\nNode <3> is connected to nodes <5>, <1>, <4>.\nNode <2> is connected to nodes <5>, <1>, <0>.\nNode <4> is connected to nodes <5>, <1>, <3>, <0>.\nNode <1> is connected to nodes <3>, <2>, <4>.\nNode <0> is connected to nodes <2>, <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 218,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <2>, <1>, <3>.\nNode <4> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <1> is connected to node <0>.\nNode <3> is connected to node <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 219,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <4>.\nNode <3> is connected to node <2>.\nNode <4> is connected to nodes <2>, <1>, <5>, <0>.\nNode <1> is connected to node <4>.\nNode <5> is connected to node <4>.\nNode <0> is connected to node <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 220,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <1>.\nNode <5> is connected to nodes <0>, <4>.\nNode <1> is connected to nodes <0>, <2>.\nNode <4> is connected to nodes <5>, <3>.\nNode <2> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <2>, <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 221,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <2>, <3>.\nNode <5> is connected to nodes <0>, <4>, <3>.\nNode <2> is connected to nodes <0>, <4>, <1>, <3>.\nNode <3> is connected to nodes <0>, <5>, <4>, <1>, <2>.\nNode <4> is connected to nodes <5>, <1>, <2>, <3>.\nNode <1> is connected to nodes <4>, <2>, <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 222,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <4>, <2>, <3>, <5>.\nNode <1> is connected to nodes <0>, <4>, <2>, <3>.\nNode <4> is connected to nodes <0>, <1>, <2>, <3>.\nNode <2> is connected to nodes <0>, <1>, <4>, <3>, <5>.\nNode <3> is connected to nodes <0>, <1>, <4>, <2>, <5>.\nNode <5> is connected to nodes <0>, <2>, <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 223,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <3>, <5>, <1>, <0>, <6>.\nNode <5> is connected to nodes <3>, <2>, <4>, <0>, <6>.\nNode <2> is connected to nodes <5>, <1>, <0>, <6>.\nNode <1> is connected to nodes <2>, <4>, <6>.\nNode <0> is connected to nodes <2>, <4>, <5>, <6>.\nNode <6> is connected to nodes <2>, <4>, <5>, <1>, <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 224,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <5>, <3>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <5> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <1> is connected to node <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 225,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <1>, <5>, <2>, <3>.\nNode <4> is connected to nodes <0>, <1>, <5>, <6>.\nNode <1> is connected to nodes <0>, <4>, <6>.\nNode <5> is connected to nodes <0>, <4>, <2>, <3>.\nNode <2> is connected to nodes <0>, <5>, <6>, <3>.\nNode <3> is connected to nodes <0>, <5>, <2>, <6>.\nNode <6> is connected to nodes <4>, <1>, <2>, <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 226,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <1>.\nNode <2> is connected to nodes <0>, <3>, <1>, <5>, <4>, <6>.\nNode <3> is connected to nodes <0>, <2>, <1>.\nNode <1> is connected to nodes <0>, <2>, <3>, <4>, <6>.\nNode <5> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <2>, <1>, <5>.\nNode <6> is connected to nodes <2>, <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 227,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <3>.\nNode <5> is connected to nodes <2>, <6>.\nNode <3> is connected to nodes <2>, <4>.\nNode <6> is connected to nodes <5>, <1>.\nNode <4> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <6>, <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 228,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <5>, <2>, <6>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <1>.\nNode <2> is connected to nodes <1>, <3>.\nNode <6> is connected to node <1>.\nNode <3> is connected to nodes <2>, <0>.\nNode <0> is connected to node <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 229,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <2>, <1>.\nNode <5> is connected to nodes <0>, <3>.\nNode <2> is connected to nodes <0>, <3>, <1>, <6>, <4>.\nNode <1> is connected to nodes <0>, <2>.\nNode <3> is connected to nodes <5>, <2>, <6>.\nNode <6> is connected to nodes <2>, <4>, <3>.\nNode <4> is connected to nodes <2>, <6>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 230,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <2>, <0>.\nNode <3> is connected to node <4>.\nNode <2> is connected to node <4>.\nNode <0> is connected to nodes <4>, <1>.\nNode <1> is connected to node <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 231,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <4>, <3>.\nNode <5> is connected to nodes <0>, <2>, <4>, <3>, <1>.\nNode <4> is connected to nodes <0>, <5>, <3>, <1>.\nNode <3> is connected to nodes <0>, <5>, <4>.\nNode <2> is connected to node <5>.\nNode <1> is connected to nodes <5>, <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 232,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <3>, <4>.\nNode <0> is connected to nodes <3>, <1>.\nNode <4> is connected to nodes <2>, <6>.\nNode <1> is connected to nodes <0>, <5>.\nNode <6> is connected to nodes <4>, <5>.\nNode <5> is connected to nodes <6>, <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 233,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <0>, <3>.\nNode <1> is connected to nodes <0>, <2>.\nNode <3> is connected to node <4>.\nNode <2> is connected to node <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 234,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <6>, <3>.\nNode <6> is connected to nodes <5>, <0>, <3>.\nNode <3> is connected to nodes <5>, <6>, <4>.\nNode <0> is connected to nodes <6>, <2>.\nNode <2> is connected to node <0>.\nNode <1> is connected to node <4>.\nNode <4> is connected to nodes <1>, <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "5",
        "type": "diameter"
    },
    {
        "index": 235,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <4>, <6>.\nNode <3> is connected to nodes <5>, <2>, <4>.\nNode <4> is connected to nodes <5>, <3>.\nNode <6> is connected to nodes <5>, <0>, <1>.\nNode <2> is connected to node <3>.\nNode <0> is connected to node <6>.\nNode <1> is connected to node <6>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 236,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <5>, <0>.\nNode <1> is connected to nodes <5>, <2>.\nNode <0> is connected to node <3>.\nNode <2> is connected to nodes <1>, <4>.\nNode <4> is connected to node <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "5",
        "type": "diameter"
    },
    {
        "index": 237,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <4>, <1>, <0>.\nNode <2> is connected to nodes <5>, <4>, <1>.\nNode <4> is connected to nodes <5>, <3>, <2>, <1>, <0>.\nNode <1> is connected to nodes <5>, <3>, <2>, <4>, <0>.\nNode <0> is connected to nodes <5>, <3>, <4>, <1>.\nNode <3> is connected to nodes <4>, <1>, <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 238,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <0>, <5>, <4>, <1>.\nNode <3> is connected to nodes <2>, <0>, <5>.\nNode <0> is connected to nodes <2>, <3>, <5>, <4>.\nNode <5> is connected to nodes <2>, <3>, <0>.\nNode <4> is connected to nodes <2>, <0>, <1>.\nNode <1> is connected to nodes <2>, <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 239,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <2>.\nNode <4> is connected to node <1>.\nNode <2> is connected to nodes <1>, <5>.\nNode <5> is connected to nodes <2>, <6>, <3>, <0>.\nNode <6> is connected to node <5>.\nNode <3> is connected to node <5>.\nNode <0> is connected to node <5>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 240,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <6>, <1>, <5>.\nNode <1> is connected to nodes <6>, <3>, <4>.\nNode <5> is connected to node <3>.\nNode <4> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <4>, <0>.\nNode <0> is connected to node <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "5",
        "type": "diameter"
    },
    {
        "index": 241,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <5>, <0>, <2>.\nNode <4> is connected to node <3>.\nNode <5> is connected to nodes <3>, <1>.\nNode <0> is connected to node <3>.\nNode <2> is connected to node <3>.\nNode <1> is connected to node <5>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 242,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>, <1>.\nNode <3> is connected to nodes <0>, <2>, <5>, <1>, <4>.\nNode <5> is connected to nodes <0>, <3>, <2>, <1>.\nNode <1> is connected to nodes <0>, <3>, <2>, <5>, <4>.\nNode <2> is connected to nodes <3>, <5>, <1>, <4>.\nNode <4> is connected to nodes <3>, <2>, <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 243,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <0>, <6>.\nNode <5> is connected to nodes <0>, <2>, <1>.\nNode <6> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <6>, <4>, <5>.\nNode <4> is connected to node <2>.\nNode <1> is connected to node <5>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 244,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <6>, <1>, <0>, <5>.\nNode <6> is connected to nodes <3>, <4>.\nNode <1> is connected to nodes <3>, <5>.\nNode <0> is connected to nodes <3>, <4>, <5>, <2>.\nNode <5> is connected to nodes <3>, <1>, <0>, <2>.\nNode <4> is connected to nodes <6>, <0>.\nNode <2> is connected to nodes <0>, <5>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 245,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <0>, <2>.\nNode <1> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <4>, <1>, <3>.\nNode <2> is connected to node <4>.\nNode <3> is connected to node <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 246,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <0>, <2>.\nNode <3> is connected to nodes <1>, <4>.\nNode <0> is connected to node <1>.\nNode <2> is connected to node <1>.\nNode <4> is connected to node <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 247,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <1>, <0>.\nNode <5> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <4>, <5>, <2>.\nNode <2> is connected to nodes <0>, <3>.\nNode <3> is connected to node <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 248,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <6>, <5>, <0>, <2>.\nNode <4> is connected to node <6>.\nNode <5> is connected to nodes <1>, <3>, <0>.\nNode <0> is connected to nodes <1>, <5>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <5>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 249,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <5>, <4>.\nNode <2> is connected to nodes <1>, <3>, <5>.\nNode <5> is connected to nodes <1>, <2>.\nNode <4> is connected to node <1>.\nNode <3> is connected to nodes <2>, <0>.\nNode <0> is connected to node <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 250,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <1>, <0>, <2>.\nNode <3> is connected to nodes <4>, <1>, <0>.\nNode <1> is connected to nodes <4>, <5>, <3>, <0>.\nNode <0> is connected to nodes <4>, <5>, <3>, <1>, <2>.\nNode <2> is connected to nodes <4>, <5>, <0>.\nNode <5> is connected to nodes <1>, <0>, <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 251,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <2>, <6>.\nNode <4> is connected to nodes <2>, <3>.\nNode <6> is connected to nodes <5>, <0>.\nNode <3> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <1>, <6>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 252,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1>, <4>, <0>, <3>.\nNode <1> is connected to nodes <5>, <3>, <2>, <0>.\nNode <4> is connected to nodes <5>, <3>.\nNode <0> is connected to nodes <5>, <1>, <2>.\nNode <3> is connected to nodes <5>, <1>, <6>, <4>.\nNode <2> is connected to nodes <1>, <0>.\nNode <6> is connected to node <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 253,
        "question": "Given an undirected graph:\nNode <2> is connected to node <1>.\nNode <1> is connected to nodes <2>, <4>, <3>.\nNode <4> is connected to nodes <1>, <0>.\nNode <3> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <3>, <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 254,
        "question": "Given an undirected graph:\nNode <1> is connected to node <3>.\nNode <3> is connected to nodes <1>, <4>, <0>.\nNode <4> is connected to nodes <3>, <2>.\nNode <0> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <0>, <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 255,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <5>, <2>.\nNode <1> is connected to nodes <3>, <4>.\nNode <5> is connected to nodes <3>, <4>.\nNode <2> is connected to nodes <3>, <6>.\nNode <4> is connected to nodes <1>, <5>, <0>.\nNode <6> is connected to node <2>.\nNode <0> is connected to node <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "5",
        "type": "diameter"
    },
    {
        "index": 256,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <3>, <1>, <0>.\nNode <4> is connected to nodes <2>, <3>, <1>.\nNode <3> is connected to nodes <2>, <4>, <5>, <1>, <0>.\nNode <1> is connected to nodes <2>, <4>, <3>, <5>, <0>.\nNode <0> is connected to nodes <2>, <3>, <5>, <1>.\nNode <5> is connected to nodes <3>, <1>, <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 257,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <4>, <0>, <3>, <5>.\nNode <1> is connected to nodes <2>, <0>, <3>, <5>.\nNode <4> is connected to nodes <2>, <3>, <5>.\nNode <0> is connected to nodes <2>, <1>, <3>, <5>.\nNode <3> is connected to nodes <2>, <1>, <4>, <0>, <5>.\nNode <5> is connected to nodes <2>, <1>, <4>, <0>, <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 258,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <0>, <5>, <4>.\nNode <1> is connected to nodes <0>, <5>, <4>.\nNode <3> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <3>, <2>, <1>, <4>.\nNode <4> is connected to nodes <3>, <5>, <2>, <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 259,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <6>, <3>, <4>, <1>, <5>.\nNode <6> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <1> is connected to node <0>.\nNode <5> is connected to nodes <0>, <2>.\nNode <2> is connected to node <5>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 260,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <2>.\nNode <3> is connected to node <4>.\nNode <2> is connected to nodes <4>, <1>, <0>.\nNode <1> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <1>, <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 261,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <4>, <3>.\nNode <5> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <0>, <2>.\nNode <3> is connected to node <0>.\nNode <1> is connected to nodes <5>, <2>.\nNode <2> is connected to nodes <4>, <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 262,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <5>, <4>, <0>.\nNode <2> is connected to nodes <1>, <5>, <3>, <4>.\nNode <5> is connected to nodes <1>, <2>, <3>, <4>, <0>.\nNode <4> is connected to nodes <1>, <2>, <5>, <3>.\nNode <0> is connected to nodes <1>, <5>, <3>.\nNode <3> is connected to nodes <2>, <5>, <4>, <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 263,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <1>, <4>, <3>.\nNode <2> is connected to node <1>.\nNode <4> is connected to nodes <0>, <3>, <5>.\nNode <3> is connected to nodes <0>, <4>.\nNode <5> is connected to node <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 264,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <2>, <0>.\nNode <3> is connected to nodes <2>, <1>, <0>.\nNode <0> is connected to nodes <4>, <3>.\nNode <1> is connected to node <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 265,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <4>, <0>.\nNode <3> is connected to nodes <5>, <0>, <6>, <1>, <2>.\nNode <4> is connected to nodes <5>, <6>, <1>.\nNode <0> is connected to nodes <5>, <3>, <2>.\nNode <6> is connected to nodes <3>, <4>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to nodes <3>, <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 266,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <1>, <3>.\nNode <4> is connected to nodes <1>, <0>.\nNode <3> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <3>, <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 267,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>, <1>, <3>, <5>.\nNode <2> is connected to nodes <0>, <4>, <1>, <5>.\nNode <4> is connected to nodes <0>, <2>, <3>.\nNode <1> is connected to nodes <0>, <2>, <5>.\nNode <3> is connected to nodes <0>, <4>, <5>.\nNode <5> is connected to nodes <0>, <2>, <1>, <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 268,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <2>, <0>, <1>.\nNode <5> is connected to node <3>.\nNode <2> is connected to nodes <3>, <4>.\nNode <0> is connected to node <3>.\nNode <1> is connected to node <3>.\nNode <4> is connected to node <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 269,
        "question": "Given an undirected graph:\nNode <3> is connected to node <2>.\nNode <2> is connected to nodes <3>, <0>, <1>.\nNode <0> is connected to nodes <2>, <5>, <1>.\nNode <1> is connected to nodes <2>, <0>.\nNode <5> is connected to nodes <0>, <4>.\nNode <4> is connected to node <5>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 270,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <5>, <4>, <1>, <2>.\nNode <0> is connected to nodes <3>, <5>, <4>.\nNode <5> is connected to nodes <3>, <0>, <4>, <1>, <2>.\nNode <4> is connected to nodes <3>, <0>, <5>, <1>, <2>.\nNode <1> is connected to nodes <3>, <5>, <4>, <2>.\nNode <2> is connected to nodes <3>, <5>, <4>, <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 271,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <3>, <4>, <2>.\nNode <0> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <2> is connected to node <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 272,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <4>, <0>.\nNode <1> is connected to nodes <3>, <4>, <0>, <2>.\nNode <4> is connected to nodes <3>, <5>, <1>, <0>, <2>.\nNode <0> is connected to nodes <3>, <1>, <4>.\nNode <5> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <5>, <1>, <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 273,
        "question": "Given an undirected graph:\nNode <5> is connected to node <0>.\nNode <0> is connected to nodes <5>, <2>, <3>.\nNode <2> is connected to nodes <0>, <4>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <3>, <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 274,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <2>, <5>, <1>, <4>.\nNode <0> is connected to nodes <3>, <2>, <1>, <4>.\nNode <2> is connected to nodes <3>, <0>, <4>.\nNode <5> is connected to nodes <3>, <1>, <4>.\nNode <1> is connected to nodes <3>, <0>, <5>, <4>.\nNode <4> is connected to nodes <3>, <0>, <2>, <5>, <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 275,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <1>, <2>, <5>, <4>.\nNode <0> is connected to nodes <3>, <1>, <2>.\nNode <1> is connected to nodes <3>, <0>, <2>, <5>, <4>.\nNode <2> is connected to nodes <3>, <0>, <1>, <4>.\nNode <5> is connected to nodes <3>, <1>, <4>.\nNode <4> is connected to nodes <3>, <1>, <2>, <5>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 276,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <6>, <0>, <1>, <3>.\nNode <2> is connected to nodes <4>, <5>, <6>, <0>, <1>.\nNode <6> is connected to nodes <4>, <2>, <5>, <3>.\nNode <0> is connected to nodes <4>, <2>, <5>, <1>.\nNode <1> is connected to nodes <4>, <2>, <5>, <0>, <3>.\nNode <3> is connected to nodes <4>, <5>, <6>, <1>.\nNode <5> is connected to nodes <2>, <6>, <0>, <1>, <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 277,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <0>, <5>, <4>, <1>.\nNode <0> is connected to nodes <6>, <5>, <4>, <1>.\nNode <5> is connected to nodes <6>, <0>, <2>, <3>, <4>, <1>.\nNode <4> is connected to nodes <6>, <0>, <5>, <2>, <3>.\nNode <1> is connected to nodes <6>, <0>, <5>, <2>.\nNode <2> is connected to nodes <5>, <4>, <1>.\nNode <3> is connected to nodes <5>, <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 278,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <0>.\nNode <5> is connected to node <2>.\nNode <0> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <0>, <6>, <3>, <4>.\nNode <6> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 279,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <0>, <4>.\nNode <3> is connected to nodes <2>, <0>, <4>, <5>.\nNode <0> is connected to nodes <2>, <3>, <1>, <5>.\nNode <4> is connected to nodes <2>, <3>, <1>, <5>.\nNode <5> is connected to nodes <3>, <0>, <1>, <4>.\nNode <1> is connected to nodes <0>, <4>, <5>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 280,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <5>, <6>.\nNode <1> is connected to nodes <2>, <3>.\nNode <5> is connected to nodes <2>, <6>.\nNode <6> is connected to nodes <2>, <0>, <5>.\nNode <3> is connected to nodes <1>, <4>.\nNode <0> is connected to node <6>.\nNode <4> is connected to node <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "5",
        "type": "diameter"
    },
    {
        "index": 281,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <0>, <1>, <3>, <4>.\nNode <2> is connected to nodes <5>, <0>, <1>, <3>, <4>.\nNode <0> is connected to nodes <5>, <2>, <1>, <3>.\nNode <1> is connected to nodes <5>, <2>, <0>, <4>.\nNode <3> is connected to nodes <5>, <2>, <0>, <4>.\nNode <4> is connected to nodes <5>, <2>, <1>, <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 282,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <6>.\nNode <3> is connected to nodes <0>, <4>, <1>.\nNode <4> is connected to nodes <0>, <3>, <6>, <2>, <5>.\nNode <6> is connected to nodes <0>, <4>, <2>, <5>, <1>.\nNode <1> is connected to nodes <3>, <6>, <5>.\nNode <2> is connected to nodes <4>, <6>, <5>.\nNode <5> is connected to nodes <4>, <6>, <2>, <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 283,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <0>, <4>, <3>.\nNode <5> is connected to nodes <2>, <0>, <4>, <1>, <3>.\nNode <0> is connected to nodes <2>, <5>, <1>, <3>.\nNode <4> is connected to nodes <2>, <5>, <3>.\nNode <3> is connected to nodes <2>, <5>, <0>, <4>, <1>.\nNode <1> is connected to nodes <5>, <0>, <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 284,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <6>, <0>, <4>.\nNode <2> is connected to nodes <6>, <5>, <0>, <3>.\nNode <0> is connected to nodes <1>, <5>, <2>, <3>, <4>.\nNode <4> is connected to nodes <1>, <5>, <0>, <3>.\nNode <5> is connected to nodes <2>, <0>, <4>.\nNode <3> is connected to nodes <2>, <0>, <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 285,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <4>, <1>, <2>.\nNode <5> is connected to nodes <3>, <0>.\nNode <4> is connected to node <3>.\nNode <1> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <3>, <1>.\nNode <0> is connected to node <5>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 286,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <0>, <4>.\nNode <1> is connected to nodes <2>, <3>.\nNode <4> is connected to nodes <5>, <3>.\nNode <3> is connected to nodes <4>, <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 287,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <0>, <1>, <4>.\nNode <2> is connected to node <3>.\nNode <0> is connected to node <3>.\nNode <1> is connected to node <3>.\nNode <4> is connected to node <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 288,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <2>, <3>.\nNode <0> is connected to nodes <2>, <4>.\nNode <3> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <0>, <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 289,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <3>, <2>.\nNode <0> is connected to node <5>.\nNode <3> is connected to nodes <5>, <4>.\nNode <2> is connected to node <5>.\nNode <4> is connected to nodes <3>, <1>.\nNode <1> is connected to node <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 290,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <1>, <3>, <0>.\nNode <4> is connected to nodes <1>, <0>.\nNode <3> is connected to node <2>.\nNode <0> is connected to nodes <2>, <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 291,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <0>, <3>.\nNode <4> is connected to nodes <0>, <6>.\nNode <3> is connected to nodes <1>, <2>.\nNode <6> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <6>, <2>.\nNode <2> is connected to nodes <5>, <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 292,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <0>, <2>.\nNode <4> is connected to nodes <3>, <0>, <6>.\nNode <0> is connected to nodes <3>, <4>, <2>, <6>, <1>, <5>.\nNode <2> is connected to nodes <3>, <0>.\nNode <6> is connected to nodes <4>, <0>.\nNode <1> is connected to nodes <0>, <5>.\nNode <5> is connected to nodes <0>, <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 293,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <6>, <2>.\nNode <6> is connected to nodes <5>, <1>.\nNode <2> is connected to nodes <5>, <0>, <1>.\nNode <1> is connected to nodes <6>, <2>, <4>.\nNode <0> is connected to nodes <2>, <3>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 294,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <1>, <5>.\nNode <4> is connected to nodes <2>, <1>, <0>, <3>.\nNode <1> is connected to nodes <2>, <4>, <0>, <3>, <5>.\nNode <5> is connected to nodes <2>, <1>, <3>.\nNode <0> is connected to nodes <4>, <1>, <3>.\nNode <3> is connected to nodes <4>, <1>, <0>, <5>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 295,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <1>, <6>.\nNode <4> is connected to nodes <5>, <6>, <2>.\nNode <1> is connected to node <5>.\nNode <6> is connected to nodes <5>, <4>.\nNode <2> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <2>, <0>.\nNode <0> is connected to node <3>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "5",
        "type": "diameter"
    },
    {
        "index": 296,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <6>, <2>, <4>, <0>.\nNode <6> is connected to nodes <5>, <3>, <2>, <1>.\nNode <2> is connected to nodes <5>, <3>, <6>, <4>.\nNode <4> is connected to nodes <5>, <3>, <2>, <1>.\nNode <0> is connected to nodes <5>, <1>.\nNode <3> is connected to nodes <6>, <2>, <4>, <1>.\nNode <1> is connected to nodes <3>, <6>, <4>, <0>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 297,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <1>, <2>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <5>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <5> is connected to node <4>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "3",
        "type": "diameter"
    },
    {
        "index": 298,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <3>, <2>.\nNode <5> is connected to nodes <0>, <3>, <1>, <2>, <4>.\nNode <3> is connected to nodes <0>, <5>, <1>, <2>.\nNode <2> is connected to nodes <0>, <5>, <3>, <1>, <4>.\nNode <1> is connected to nodes <5>, <3>, <2>, <4>.\nNode <4> is connected to nodes <5>, <1>, <2>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "2",
        "type": "diameter"
    },
    {
        "index": 299,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <6>, <3>.\nNode <6> is connected to nodes <4>, <1>.\nNode <3> is connected to nodes <4>, <5>.\nNode <1> is connected to nodes <6>, <0>.\nNode <5> is connected to nodes <3>, <2>, <0>.\nNode <2> is connected to node <5>.\nNode <0> is connected to nodes <5>, <1>.\nCalculate the diameter of the graph. The diameter is the maximum distance over all pairs of nodes in the graph.\nAnswer:\n",
        "answer": "4",
        "type": "diameter"
    },
    {
        "index": 0,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <0>.\nNode <5> is connected to nodes <1>, <3>.\nNode <0> is connected to nodes <1>, <2>, <4>.\nNode <3> is connected to nodes <5>, <4>.\nNode <2> is connected to node <0>.\nNode <4> is connected to nodes <0>, <3>.\nIs there an edge between node <4> and node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 1,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <1>.\nNode <3> is connected to node <2>.\nNode <1> is connected to nodes <2>, <4>, <0>.\nNode <4> is connected to node <1>.\nNode <0> is connected to node <1>.\nIs there an edge between node <1> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 2,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <4>, <1>.\nNode <0> is connected to nodes <4>, <3>, <5>.\nNode <1> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <1>, <0>.\nNode <5> is connected to node <0>.\nIs there an edge between node <1> and node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 3,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <6>, <4>.\nNode <2> is connected to node <1>.\nNode <6> is connected to node <4>.\nNode <1> is connected to nodes <4>, <3>, <0>.\nNode <5> is connected to nodes <4>, <3>.\nNode <0> is connected to node <1>.\nIs there a directed edge from node <1> to node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 4,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <1>, <2>, <0>.\nNode <4> is connected to nodes <1>, <5>.\nNode <2> is connected to node <3>.\nNode <0> is connected to nodes <3>, <5>.\nNode <5> is connected to nodes <4>, <0>.\nIs there an edge between node <5> and node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 5,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <3>, <0>.\nNode <4> is connected to nodes <3>, <0>, <2>.\nNode <0> is connected to nodes <1>, <4>.\nNode <2> is connected to node <4>.\nIs there an edge between node <1> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 6,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <0>, <5>.\nNode <3> is connected to nodes <0>, <4>, <2>.\nNode <0> is connected to nodes <5>, <2>.\nNode <5> is connected to node <4>.\nNode <1> is connected to nodes <0>, <5>, <2>, <3>.\nIs there a directed edge from node <0> to node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 7,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <4>.\nNode <1> is connected to node <2>.\nNode <4> is connected to nodes <2>, <0>, <3>.\nNode <0> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <0>, <4>.\nIs there an edge between node <4> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 8,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <4>, <2>, <1>.\nNode <3> is connected to nodes <4>, <2>, <0>.\nNode <4> is connected to nodes <0>, <3>.\nNode <2> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <0>, <2>.\nIs there a directed edge from node <3> to node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 9,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>, <4>.\nNode <1> is connected to node <0>.\nNode <2> is connected to nodes <0>, <3>.\nNode <4> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <2>, <4>.\nIs there an edge between node <1> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 10,
        "question": "Given a directed graph:\nNode <4> is connected to node <6>.\nNode <6> is connected to nodes <4>, <2>, <5>.\nNode <2> is connected to nodes <6>, <4>.\nNode <1> is connected to nodes <6>, <2>.\nNode <3> is connected to node <4>.\nNode <0> is connected to nodes <6>, <4>, <1>.\nIs there a directed edge from node <1> to node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 11,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <5>, <2>, <1>.\nNode <5> is connected to node <6>.\nNode <2> is connected to nodes <6>, <0>, <4>.\nNode <1> is connected to node <6>.\nNode <0> is connected to nodes <2>, <3>.\nNode <4> is connected to node <2>.\nNode <3> is connected to node <0>.\nIs there an edge between node <1> and node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 12,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <1>, <4>.\nNode <3> is connected to nodes <2>, <0>.\nNode <1> is connected to node <2>.\nNode <4> is connected to node <2>.\nNode <0> is connected to node <3>.\nIs there an edge between node <2> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 13,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <5>, <4>, <1>.\nNode <4> is connected to nodes <1>, <0>, <5>.\nNode <5> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <1>, <2>.\nIs there a directed edge from node <4> to node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 14,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <5>, <3>.\nNode <0> is connected to nodes <2>, <1>, <5>, <3>.\nNode <5> is connected to nodes <2>, <4>, <0>, <1>, <3>.\nNode <3> is connected to nodes <2>, <4>, <0>, <5>.\nNode <4> is connected to nodes <1>, <5>, <3>.\nNode <1> is connected to nodes <4>, <0>, <5>.\nIs there an edge between node <2> and node <5>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 15,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <1>, <0>.\nNode <5> is connected to nodes <3>, <2>, <4>.\nNode <1> is connected to node <3>.\nNode <0> is connected to node <3>.\nNode <2> is connected to node <5>.\nNode <4> is connected to node <5>.\nIs there an edge between node <3> and node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 16,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <4>, <0>.\nNode <2> is connected to nodes <4>, <3>.\nNode <0> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <0>, <2>.\nIs there an edge between node <3> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 17,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <6>, <4>, <0>.\nNode <6> is connected to nodes <2>, <5>.\nNode <4> is connected to nodes <2>, <3>.\nNode <0> is connected to nodes <2>, <5>, <1>.\nNode <5> is connected to nodes <6>, <0>.\nNode <3> is connected to node <4>.\nNode <1> is connected to node <0>.\nIs there an edge between node <0> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 18,
        "question": "Given an undirected graph:\nNode <1> is connected to node <2>.\nNode <2> is connected to nodes <1>, <5>.\nNode <5> is connected to nodes <2>, <3>, <4>.\nNode <3> is connected to nodes <5>, <0>.\nNode <4> is connected to nodes <5>, <6>.\nNode <0> is connected to nodes <3>, <6>.\nNode <6> is connected to nodes <4>, <0>.\nIs there an edge between node <5> and node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 19,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <2>.\nNode <0> is connected to node <3>.\nNode <2> is connected to nodes <3>, <1>, <4>.\nNode <1> is connected to node <2>.\nNode <4> is connected to node <2>.\nIs there an edge between node <0> and node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 20,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <3>, <0>, <5>.\nNode <2> is connected to nodes <1>, <3>, <0>.\nNode <3> is connected to nodes <1>, <2>, <4>, <6>.\nNode <0> is connected to nodes <1>, <2>, <5>, <4>.\nNode <5> is connected to nodes <1>, <0>.\nNode <4> is connected to nodes <0>, <3>.\nNode <6> is connected to node <3>.\nIs there an edge between node <3> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 21,
        "question": "Given an undirected graph:\nNode <0> is connected to node <1>.\nNode <1> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <1>, <3>, <2>.\nNode <3> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <4>, <3>.\nIs there an edge between node <3> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 22,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <1>, <4>.\nNode <0> is connected to nodes <3>, <2>.\nNode <1> is connected to node <3>.\nNode <4> is connected to node <3>.\nNode <2> is connected to node <0>.\nIs there an edge between node <3> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 23,
        "question": "Given a directed graph:\nNode <1> is connected to node <4>.\nNode <4> is connected to nodes <3>, <0>.\nNode <3> is connected to node <0>.\nNode <0> is connected to nodes <1>, <4>, <3>.\nNode <2> is connected to nodes <1>, <4>.\nIs there a directed edge from node <0> to node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 24,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5>, <2>, <3>.\nNode <5> is connected to node <2>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to node <1>.\nNode <1> is connected to node <0>.\nIs there a directed edge from node <4> to node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 25,
        "question": "Given an undirected graph:\nNode <5> is connected to node <2>.\nNode <2> is connected to nodes <5>, <3>, <0>.\nNode <3> is connected to nodes <2>, <1>.\nNode <0> is connected to node <2>.\nNode <1> is connected to nodes <3>, <4>.\nNode <4> is connected to node <1>.\nIs there an edge between node <5> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 26,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <1>, <4>, <3>.\nNode <2> is connected to nodes <5>, <6>, <3>.\nNode <1> is connected to nodes <5>, <0>.\nNode <4> is connected to nodes <5>, <3>.\nNode <3> is connected to nodes <5>, <2>, <6>, <0>, <4>.\nNode <6> is connected to nodes <2>, <3>.\nNode <0> is connected to nodes <3>, <1>.\nIs there an edge between node <1> and node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 27,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <5>, <1>.\nNode <3> is connected to node <4>.\nNode <5> is connected to nodes <4>, <0>.\nNode <1> is connected to node <4>.\nNode <0> is connected to nodes <5>, <2>.\nNode <2> is connected to node <0>.\nIs there an edge between node <4> and node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 28,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <5>, <1>, <3>, <2>.\nNode <0> is connected to node <5>.\nNode <1> is connected to node <4>.\nNode <3> is connected to node <4>.\nNode <2> is connected to node <4>.\nIs there an edge between node <3> and node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 29,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <1>, <3>, <5>, <4>.\nNode <2> is connected to node <0>.\nNode <1> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <5> is connected to node <0>.\nNode <4> is connected to node <0>.\nIs there an edge between node <3> and node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 30,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <2>, <0>.\nNode <4> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <1>, <4>, <5>.\nNode <6> is connected to node <3>.\nNode <3> is connected to nodes <6>, <5>.\nNode <5> is connected to nodes <3>, <0>.\nIs there an edge between node <4> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 31,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <3>, <5>, <4>, <2>.\nNode <1> is connected to nodes <0>, <5>, <4>, <6>.\nNode <3> is connected to nodes <0>, <4>, <2>, <6>.\nNode <5> is connected to nodes <0>, <1>, <4>, <2>.\nNode <4> is connected to nodes <0>, <1>, <3>, <5>, <2>, <6>.\nNode <2> is connected to nodes <0>, <3>, <5>, <4>, <6>.\nNode <6> is connected to nodes <1>, <3>, <4>, <2>.\nIs there an edge between node <2> and node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 32,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <0>, <5>, <2>.\nNode <1> is connected to nodes <4>, <0>, <5>, <2>.\nNode <0> is connected to nodes <4>, <3>, <1>, <5>, <2>.\nNode <5> is connected to nodes <4>, <3>, <1>, <0>, <2>.\nNode <2> is connected to nodes <4>, <1>, <0>, <5>.\nNode <3> is connected to nodes <0>, <5>.\nIs there an edge between node <0> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 33,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <4>, <2>.\nNode <1> is connected to nodes <3>, <2>.\nNode <4> is connected to node <3>.\nNode <2> is connected to nodes <3>, <1>, <0>.\nNode <0> is connected to node <2>.\nIs there an edge between node <1> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 34,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <2>.\nNode <4> is connected to node <3>.\nNode <2> is connected to node <4>.\nNode <5> is connected to nodes <0>, <1>, <4>, <2>, <3>.\nNode <0> is connected to nodes <1>, <4>, <2>.\nNode <6> is connected to node <3>.\nIs there a directed edge from node <3> to node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 35,
        "question": "Given a directed graph:\nNode <4> is connected to node <3>.\nNode <3> is connected to node <4>.\nNode <1> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <0>, <3>, <1>.\nNode <0> is connected to nodes <5>, <1>.\nNode <5> is connected to nodes <1>, <2>.\nIs there a directed edge from node <1> to node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 36,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <1>, <0>, <2>.\nNode <1> is connected to nodes <5>, <4>, <3>.\nNode <0> is connected to nodes <2>, <1>.\nNode <2> is connected to node <6>.\nNode <4> is connected to nodes <3>, <0>, <2>.\nNode <3> is connected to nodes <6>, <4>.\nNode <6> is connected to nodes <0>, <2>, <5>, <1>.\nIs there a directed edge from node <4> to node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 37,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <1>, <4>.\nNode <3> is connected to nodes <1>, <0>.\nNode <4> is connected to node <2>.\nNode <0> is connected to node <3>.\nIs there an edge between node <2> and node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 38,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <1>, <6>, <5>, <0>, <3>.\nNode <4> is connected to nodes <2>, <5>.\nNode <1> is connected to nodes <2>, <3>, <0>.\nNode <6> is connected to node <2>.\nNode <5> is connected to nodes <2>, <4>, <0>.\nNode <0> is connected to nodes <2>, <1>, <5>.\nNode <3> is connected to nodes <2>, <1>.\nIs there an edge between node <1> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 39,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <2>, <6>, <1>.\nNode <4> is connected to nodes <0>, <3>.\nNode <2> is connected to node <0>.\nNode <6> is connected to node <0>.\nNode <1> is connected to nodes <0>, <5>.\nNode <3> is connected to node <4>.\nNode <5> is connected to node <1>.\nIs there an edge between node <6> and node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 40,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <3>, <2>.\nNode <4> is connected to node <5>.\nNode <3> is connected to nodes <5>, <1>.\nNode <2> is connected to node <5>.\nNode <1> is connected to nodes <0>, <3>.\nNode <0> is connected to node <1>.\nIs there an edge between node <2> and node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 41,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <0>.\nNode <5> is connected to nodes <1>, <2>.\nNode <0> is connected to node <1>.\nNode <2> is connected to nodes <5>, <3>, <4>.\nNode <3> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <3>, <2>.\nIs there an edge between node <1> and node <5>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 42,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <2>, <1>.\nNode <0> is connected to node <1>.\nNode <4> is connected to nodes <3>, <0>, <1>.\nIs there a directed edge from node <0> to node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 43,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to node <4>.\nNode <0> is connected to node <3>.\nNode <3> is connected to nodes <4>, <1>, <2>, <0>.\nIs there a directed edge from node <1> to node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 44,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <0>, <2>.\nNode <1> is connected to nodes <4>, <5>.\nNode <5> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <5>, <3>.\nIs there an edge between node <3> and node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 45,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <2>, <3>, <0>.\nNode <1> is connected to node <4>.\nNode <2> is connected to nodes <0>, <4>, <1>.\nNode <3> is connected to nodes <0>, <2>.\nNode <0> is connected to node <4>.\nIs there a directed edge from node <1> to node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 46,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <2>, <6>, <5>.\nNode <4> is connected to node <2>.\nNode <6> is connected to nodes <0>, <3>.\nNode <5> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <1>, <6>.\nIs there an edge between node <1> and node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 47,
        "question": "Given an undirected graph:\nNode <5> is connected to node <2>.\nNode <2> is connected to nodes <5>, <1>, <6>, <4>.\nNode <1> is connected to nodes <2>, <3>, <0>.\nNode <6> is connected to node <2>.\nNode <4> is connected to node <2>.\nNode <3> is connected to node <1>.\nNode <0> is connected to node <1>.\nIs there an edge between node <1> and node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 48,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <2>, <4>.\nNode <3> is connected to node <1>.\nNode <2> is connected to node <1>.\nNode <4> is connected to nodes <1>, <0>.\nNode <0> is connected to node <4>.\nIs there an edge between node <4> and node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 49,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <1>, <3>.\nNode <5> is connected to nodes <2>, <0>, <1>, <3>, <4>.\nNode <1> is connected to nodes <2>, <5>, <0>, <3>, <4>.\nNode <3> is connected to nodes <2>, <5>, <0>, <1>, <4>.\nNode <0> is connected to nodes <5>, <1>, <3>, <4>.\nNode <4> is connected to nodes <5>, <0>, <1>, <3>.\nIs there an edge between node <2> and node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 50,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <4>, <2>, <0>, <3>, <1>.\nNode <4> is connected to nodes <6>, <2>, <0>, <1>.\nNode <2> is connected to nodes <6>, <4>, <5>, <0>, <3>, <1>.\nNode <0> is connected to nodes <6>, <4>, <2>, <3>, <1>.\nNode <3> is connected to nodes <6>, <2>, <5>, <0>.\nNode <1> is connected to nodes <6>, <4>, <2>, <5>, <0>.\nNode <5> is connected to nodes <2>, <3>, <1>.\nIs there an edge between node <0> and node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 51,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <1>, <2>, <4>.\nNode <3> is connected to node <0>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <4> is connected to node <0>.\nIs there an edge between node <0> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 52,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <1>, <0>.\nNode <4> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <2>, <3>.\nIs there a directed edge from node <0> to node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 53,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <0>, <5>, <3>.\nNode <4> is connected to node <1>.\nNode <0> is connected to nodes <1>, <2>.\nNode <5> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <2> is connected to node <0>.\nIs there an edge between node <2> and node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 54,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <2>, <5>, <1>.\nNode <3> is connected to node <2>.\nNode <5> is connected to nodes <4>, <1>, <0>.\nNode <1> is connected to nodes <4>, <5>.\nNode <0> is connected to node <5>.\nIs there an edge between node <5> and node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 55,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <6>, <1>, <5>, <2>.\nNode <0> is connected to nodes <3>, <6>, <5>, <2>.\nNode <6> is connected to nodes <3>, <0>, <1>, <2>.\nNode <1> is connected to nodes <3>, <6>, <4>, <5>, <2>.\nNode <5> is connected to nodes <3>, <0>, <1>, <2>.\nNode <2> is connected to nodes <3>, <0>, <6>, <1>, <4>, <5>.\nNode <4> is connected to nodes <1>, <2>.\nIs there an edge between node <2> and node <6>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 56,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <0>, <4>.\nNode <3> is connected to node <5>.\nNode <0> is connected to nodes <5>, <1>.\nNode <4> is connected to nodes <5>, <2>.\nNode <2> is connected to node <4>.\nNode <1> is connected to node <0>.\nIs there an edge between node <3> and node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 57,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <1>, <2>.\nNode <0> is connected to node <4>.\nNode <1> is connected to node <4>.\nNode <2> is connected to nodes <4>, <3>.\nNode <3> is connected to node <2>.\nIs there an edge between node <3> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 58,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <0>, <5>.\nNode <0> is connected to node <4>.\nNode <5> is connected to nodes <3>, <2>, <0>.\nNode <4> is connected to node <6>.\nNode <1> is connected to nodes <5>, <3>, <6>.\nNode <3> is connected to nodes <6>, <0>, <1>.\nNode <2> is connected to nodes <6>, <4>.\nIs there a directed edge from node <0> to node <6>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 59,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <3>, <1>.\nNode <5> is connected to nodes <3>, <0>.\nNode <1> is connected to nodes <4>, <2>.\nNode <0> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <0>, <1>.\nIs there an edge between node <5> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 60,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1>, <2>, <3>.\nNode <1> is connected to node <5>.\nNode <2> is connected to nodes <5>, <0>.\nNode <3> is connected to nodes <5>, <4>.\nNode <0> is connected to node <2>.\nNode <4> is connected to node <3>.\nIs there an edge between node <4> and node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 61,
        "question": "Given an undirected graph:\nNode <0> is connected to node <3>.\nNode <3> is connected to nodes <0>, <1>, <2>.\nNode <1> is connected to nodes <3>, <5>, <4>.\nNode <2> is connected to nodes <3>, <6>.\nNode <5> is connected to nodes <6>, <1>.\nNode <6> is connected to nodes <5>, <2>.\nNode <4> is connected to node <1>.\nIs there an edge between node <5> and node <6>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 62,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <5>, <2>.\nNode <0> is connected to nodes <3>, <5>.\nNode <5> is connected to nodes <3>, <0>.\nNode <2> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <2>, <1>.\nNode <1> is connected to node <4>.\nIs there an edge between node <5> and node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 63,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <1>, <0>.\nNode <3> is connected to nodes <4>, <0>.\nNode <1> is connected to node <4>.\nNode <0> is connected to nodes <4>, <3>, <2>.\nNode <2> is connected to node <0>.\nIs there an edge between node <3> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 64,
        "question": "Given an undirected graph:\nNode <1> is connected to node <4>.\nNode <4> is connected to nodes <1>, <0>, <3>.\nNode <0> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <4>, <0>, <2>.\nNode <2> is connected to node <3>.\nIs there an edge between node <4> and node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 65,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <1>, <4>.\nNode <3> is connected to nodes <0>, <1>, <2>.\nNode <1> is connected to nodes <0>, <3>.\nNode <4> is connected to node <0>.\nNode <2> is connected to node <3>.\nIs there an edge between node <4> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 66,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <6>, <4>.\nNode <0> is connected to nodes <6>, <4>.\nNode <4> is connected to nodes <3>, <0>, <1>.\nNode <1> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <1>, <5>.\nNode <5> is connected to node <2>.\nIs there an edge between node <3> and node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 67,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <2>, <1>.\nNode <4> is connected to nodes <3>, <0>.\nNode <2> is connected to nodes <3>, <0>.\nNode <1> is connected to node <3>.\nNode <0> is connected to nodes <4>, <2>.\nIs there an edge between node <0> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 68,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1>, <0>, <4>.\nNode <1> is connected to nodes <5>, <3>, <0>.\nNode <0> is connected to nodes <5>, <1>, <6>.\nNode <4> is connected to nodes <5>, <6>, <2>, <3>.\nNode <3> is connected to nodes <1>, <4>.\nNode <6> is connected to nodes <2>, <0>, <4>.\nNode <2> is connected to nodes <6>, <4>.\nIs there an edge between node <1> and node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 69,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <1>.\nNode <2> is connected to node <4>.\nNode <1> is connected to nodes <4>, <3>, <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <3>, <1>.\nIs there an edge between node <3> and node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 70,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <6>, <1>.\nNode <6> is connected to nodes <0>, <3>.\nNode <1> is connected to nodes <0>, <2>.\nNode <3> is connected to nodes <6>, <5>.\nNode <4> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <4>, <1>.\nNode <5> is connected to nodes <4>, <3>.\nIs there an edge between node <1> and node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 71,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <1>, <5>, <0>.\nNode <3> is connected to nodes <2>, <4>, <5>, <0>.\nNode <1> is connected to nodes <2>, <0>.\nNode <5> is connected to nodes <2>, <3>, <4>, <0>.\nNode <0> is connected to nodes <2>, <3>, <1>, <5>.\nNode <4> is connected to nodes <3>, <5>.\nIs there an edge between node <3> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 72,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <2>, <1>.\nNode <0> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <3>, <0>, <4>.\nNode <1> is connected to node <3>.\nNode <4> is connected to node <2>.\nIs there an edge between node <2> and node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 73,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <1>, <0>, <4>.\nNode <2> is connected to node <3>.\nNode <1> is connected to node <3>.\nNode <0> is connected to node <3>.\nNode <4> is connected to node <3>.\nIs there an edge between node <3> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 74,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <3>.\nNode <4> is connected to node <1>.\nNode <3> is connected to nodes <1>, <0>, <2>.\nNode <0> is connected to node <3>.\nNode <2> is connected to node <3>.\nIs there an edge between node <2> and node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 75,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <3>, <0>.\nNode <1> is connected to node <4>.\nNode <3> is connected to nodes <4>, <2>.\nNode <0> is connected to node <4>.\nNode <2> is connected to node <3>.\nIs there an edge between node <2> and node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 76,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <3>, <0>, <2>.\nNode <3> is connected to nodes <0>, <4>, <2>, <5>, <1>.\nNode <0> is connected to nodes <4>, <5>.\nNode <2> is connected to nodes <5>, <1>.\nNode <1> is connected to nodes <3>, <0>.\nNode <4> is connected to nodes <1>, <3>, <0>.\nIs there a directed edge from node <2> to node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 77,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <3>, <4>.\nNode <1> is connected to nodes <0>, <5>, <2>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <1>.\nNode <2> is connected to node <1>.\nIs there an edge between node <0> and node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 78,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <1>, <2>, <0>.\nNode <3> is connected to node <4>.\nNode <1> is connected to node <4>.\nNode <2> is connected to node <4>.\nNode <0> is connected to node <4>.\nIs there an edge between node <1> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 79,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <0>, <4>, <3>.\nNode <2> is connected to node <0>.\nNode <0> is connected to nodes <3>, <1>, <2>.\nNode <4> is connected to nodes <3>, <2>, <0>.\nNode <3> is connected to nodes <2>, <0>, <4>.\nIs there a directed edge from node <2> to node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 80,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <5>, <2>.\nNode <5> is connected to nodes <2>, <0>, <4>, <3>.\nNode <2> is connected to nodes <6>, <5>.\nNode <6> is connected to node <1>.\nNode <1> is connected to nodes <5>, <0>, <4>, <6>, <3>.\nNode <3> is connected to node <1>.\nIs there a directed edge from node <3> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 81,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <4>, <3>, <1>.\nNode <0> is connected to node <2>.\nNode <4> is connected to node <2>.\nNode <3> is connected to node <2>.\nNode <1> is connected to node <2>.\nIs there an edge between node <1> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 82,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <3>, <5>.\nNode <4> is connected to nodes <3>, <5>.\nNode <5> is connected to nodes <0>, <2>, <4>.\nNode <2> is connected to nodes <5>, <1>.\nNode <1> is connected to node <2>.\nIs there an edge between node <5> and node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 83,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <0>, <4>, <2>.\nNode <1> is connected to nodes <0>, <5>.\nNode <4> is connected to node <3>.\nNode <2> is connected to node <3>.\nNode <5> is connected to node <1>.\nIs there an edge between node <2> and node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 84,
        "question": "Given a directed graph:\nNode <3> is connected to node <2>.\nNode <2> is connected to node <0>.\nNode <0> is connected to nodes <2>, <3>.\nNode <4> is connected to nodes <3>, <2>.\nNode <1> is connected to nodes <3>, <0>, <2>.\nIs there a directed edge from node <2> to node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 85,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <5>, <1>, <0>.\nNode <2> is connected to nodes <5>, <0>.\nNode <1> is connected to node <3>.\nNode <0> is connected to nodes <3>, <6>, <2>.\nNode <4> is connected to node <6>.\nNode <6> is connected to nodes <4>, <0>.\nIs there an edge between node <3> and node <6>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 86,
        "question": "Given an undirected graph:\nNode <4> is connected to node <0>.\nNode <0> is connected to nodes <4>, <1>, <5>.\nNode <1> is connected to nodes <0>, <3>, <5>.\nNode <5> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <1>, <2>.\nNode <2> is connected to node <3>.\nIs there an edge between node <5> and node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 87,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>, <1>.\nNode <4> is connected to node <0>.\nNode <5> is connected to nodes <0>, <2>.\nNode <1> is connected to nodes <0>, <3>.\nNode <2> is connected to nodes <5>, <3>.\nNode <3> is connected to nodes <2>, <1>.\nIs there an edge between node <2> and node <5>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 88,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <2>, <4>, <3>.\nNode <5> is connected to nodes <1>, <2>, <0>, <3>.\nNode <2> is connected to nodes <1>, <5>, <4>.\nNode <4> is connected to nodes <1>, <2>, <0>, <3>.\nNode <3> is connected to nodes <1>, <5>, <0>, <4>.\nNode <0> is connected to nodes <5>, <4>, <3>.\nIs there an edge between node <0> and node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 89,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <1>, <0>.\nNode <1> is connected to node <4>.\nNode <0> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <2>, <5>.\nIs there a directed edge from node <4> to node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 90,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <1>, <0>, <4>.\nNode <2> is connected to nodes <3>, <1>, <5>, <0>, <4>.\nNode <1> is connected to nodes <3>, <2>, <6>, <0>, <4>.\nNode <0> is connected to nodes <3>, <2>, <1>, <5>, <6>.\nNode <4> is connected to nodes <3>, <2>, <1>, <5>.\nNode <5> is connected to nodes <2>, <6>, <0>, <4>.\nNode <6> is connected to nodes <1>, <5>, <0>.\nIs there an edge between node <2> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 91,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <3>, <4>, <1>.\nNode <3> is connected to nodes <2>, <1>.\nNode <1> is connected to node <4>.\nNode <4> is connected to node <0>.\nIs there a directed edge from node <2> to node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 92,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <1>, <2>, <4>.\nNode <0> is connected to node <3>.\nNode <1> is connected to node <3>.\nNode <2> is connected to node <3>.\nNode <4> is connected to node <3>.\nIs there an edge between node <0> and node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 93,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <5>, <1>.\nNode <2> is connected to nodes <4>, <5>, <0>, <3>, <1>.\nNode <5> is connected to nodes <4>, <2>, <0>, <3>.\nNode <1> is connected to nodes <4>, <2>, <0>, <3>.\nNode <0> is connected to nodes <2>, <5>, <1>.\nNode <3> is connected to nodes <2>, <5>, <1>.\nIs there an edge between node <1> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 94,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <2>.\nNode <5> is connected to nodes <1>, <3>.\nNode <2> is connected to nodes <1>, <0>, <4>.\nNode <3> is connected to nodes <5>, <4>.\nNode <0> is connected to node <2>.\nNode <4> is connected to nodes <2>, <3>.\nIs there an edge between node <5> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 95,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2>, <0>, <3>.\nNode <2> is connected to nodes <0>, <3>, <5>.\nNode <0> is connected to nodes <4>, <5>, <2>.\nNode <3> is connected to nodes <5>, <1>, <2>, <0>, <4>.\nNode <1> is connected to node <4>.\nNode <4> is connected to nodes <5>, <1>.\nIs there a directed edge from node <4> to node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 96,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <6>, <1>, <0>.\nNode <6> is connected to nodes <5>, <3>.\nNode <1> is connected to nodes <5>, <3>, <4>.\nNode <0> is connected to nodes <5>, <3>, <4>, <2>.\nNode <3> is connected to nodes <6>, <1>, <2>, <0>.\nNode <4> is connected to nodes <1>, <0>.\nNode <2> is connected to nodes <3>, <0>.\nIs there an edge between node <6> and node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 97,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <6>, <2>.\nNode <6> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <4>, <6>, <0>, <3>.\nNode <1> is connected to node <0>.\nNode <0> is connected to nodes <1>, <2>.\nNode <5> is connected to node <3>.\nNode <3> is connected to nodes <5>, <2>.\nIs there an edge between node <5> and node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 98,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <5>, <4>, <1>, <3>.\nNode <2> is connected to node <5>.\nNode <4> is connected to nodes <0>, <3>.\nNode <1> is connected to node <0>.\nNode <3> is connected to nodes <0>, <4>.\nIs there an edge between node <0> and node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 99,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <1>, <2>, <4>.\nNode <0> is connected to node <5>.\nNode <1> is connected to nodes <5>, <3>.\nNode <2> is connected to node <5>.\nNode <4> is connected to node <5>.\nNode <3> is connected to node <1>.\nIs there an edge between node <4> and node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 100,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <1>, <4>, <2>.\nNode <2> is connected to nodes <1>, <0>, <3>.\nNode <4> is connected to node <0>.\nNode <3> is connected to nodes <2>, <5>.\nNode <5> is connected to node <3>.\nIs there an edge between node <0> and node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 101,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <5>, <0>.\nNode <5> is connected to nodes <6>, <0>, <4>.\nNode <0> is connected to node <2>.\nNode <2> is connected to nodes <3>, <4>.\nNode <3> is connected to node <4>.\nNode <1> is connected to nodes <6>, <0>, <3>.\nNode <6> is connected to nodes <0>, <2>, <1>, <5>.\nIs there a directed edge from node <4> to node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 102,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <4>, <2>, <1>.\nNode <0> is connected to node <3>.\nNode <4> is connected to node <3>.\nNode <2> is connected to node <3>.\nNode <1> is connected to node <3>.\nIs there an edge between node <0> and node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 103,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <1>.\nNode <0> is connected to node <3>.\nNode <1> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <4>, <1>.\nNode <4> is connected to node <2>.\nIs there an edge between node <3> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 104,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <0>, <1>, <4>.\nNode <3> is connected to nodes <5>, <2>.\nNode <0> is connected to node <5>.\nNode <1> is connected to node <5>.\nNode <4> is connected to node <5>.\nNode <2> is connected to node <3>.\nIs there an edge between node <2> and node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 105,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <0>, <1>, <5>.\nNode <4> is connected to node <3>.\nNode <0> is connected to node <3>.\nNode <1> is connected to nodes <3>, <2>.\nNode <5> is connected to node <3>.\nNode <2> is connected to node <1>.\nIs there an edge between node <1> and node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 106,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <1>, <6>.\nNode <5> is connected to nodes <1>, <2>, <6>, <4>.\nNode <6> is connected to nodes <3>, <5>.\nNode <0> is connected to node <2>.\nNode <2> is connected to nodes <0>, <5>.\nNode <4> is connected to node <5>.\nIs there an edge between node <2> and node <6>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 107,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <2>, <6>, <5>, <0>.\nNode <3> is connected to node <2>.\nNode <6> is connected to nodes <1>, <5>.\nNode <5> is connected to nodes <1>, <6>.\nNode <0> is connected to nodes <1>, <4>.\nNode <4> is connected to node <0>.\nIs there an edge between node <5> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 108,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <4>, <3>, <1>.\nNode <0> is connected to node <2>.\nNode <4> is connected to node <2>.\nNode <3> is connected to node <2>.\nNode <1> is connected to node <2>.\nIs there an edge between node <0> and node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 109,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <3>, <1>, <0>, <4>.\nNode <3> is connected to nodes <6>, <1>.\nNode <1> is connected to nodes <6>, <3>, <0>, <4>.\nNode <0> is connected to nodes <6>, <1>, <2>, <5>.\nNode <4> is connected to nodes <6>, <1>.\nNode <2> is connected to nodes <0>, <5>.\nNode <5> is connected to nodes <0>, <2>.\nIs there an edge between node <1> and node <6>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 110,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <4>, <5>, <2>.\nNode <0> is connected to nodes <4>, <1>.\nNode <5> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <3>, <5>.\nNode <1> is connected to node <0>.\nIs there an edge between node <4> and node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 111,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <0>, <1>, <4>.\nNode <4> is connected to node <3>.\nIs there an edge between node <2> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 112,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <5>, <1>.\nNode <3> is connected to nodes <2>, <0>.\nNode <5> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <3>, <1>.\nNode <4> is connected to node <5>.\nIs there an edge between node <0> and node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 113,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <5>, <0>.\nNode <1> is connected to nodes <5>, <4>.\nNode <0> is connected to nodes <2>, <6>.\nNode <6> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <6>, <4>.\nNode <4> is connected to nodes <3>, <1>.\nIs there an edge between node <6> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 114,
        "question": "Given an undirected graph:\nNode <1> is connected to node <0>.\nNode <0> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <0>, <5>, <4>.\nNode <6> is connected to node <3>.\nNode <3> is connected to nodes <6>, <4>.\nNode <4> is connected to nodes <3>, <2>, <5>.\nNode <5> is connected to nodes <2>, <4>.\nIs there an edge between node <1> and node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 115,
        "question": "Given a directed graph:\nNode <4> is connected to node <5>.\nNode <5> is connected to nodes <1>, <2>, <4>.\nNode <3> is connected to nodes <5>, <0>, <4>.\nNode <0> is connected to node <3>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <1>.\nIs there a directed edge from node <5> to node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 116,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1>, <2>, <0>.\nNode <1> is connected to node <5>.\nNode <2> is connected to nodes <5>, <4>, <6>.\nNode <0> is connected to nodes <5>, <3>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <2>.\nNode <6> is connected to node <2>.\nIs there an edge between node <0> and node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 117,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <2>, <1>.\nNode <3> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <3>, <1>.\nIs there an edge between node <4> and node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 118,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <6>, <2>.\nNode <6> is connected to nodes <1>, <0>, <3>.\nNode <2> is connected to nodes <4>, <6>.\nNode <0> is connected to node <1>.\nNode <4> is connected to nodes <2>, <5>, <0>, <3>.\nNode <5> is connected to nodes <1>, <0>, <3>.\nIs there a directed edge from node <6> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 119,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <5>, <1>, <0>, <2>, <3>.\nNode <5> is connected to nodes <6>, <1>, <0>, <4>, <3>.\nNode <1> is connected to nodes <6>, <5>, <0>, <4>, <3>.\nNode <0> is connected to nodes <6>, <5>, <1>, <2>.\nNode <2> is connected to nodes <6>, <0>, <4>.\nNode <3> is connected to nodes <6>, <5>, <1>, <4>.\nNode <4> is connected to nodes <5>, <1>, <2>, <3>.\nIs there an edge between node <4> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 120,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <4>.\nNode <1> is connected to node <4>.\nNode <4> is connected to nodes <5>, <3>, <2>, <1>.\nNode <5> is connected to nodes <3>, <4>, <0>.\nNode <3> is connected to nodes <2>, <4>.\nNode <0> is connected to node <2>.\nIs there a directed edge from node <2> to node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 121,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <1>, <0>, <3>, <4>.\nNode <5> is connected to nodes <2>, <1>, <0>, <3>.\nNode <1> is connected to nodes <2>, <5>, <0>, <3>, <4>.\nNode <0> is connected to nodes <2>, <5>, <1>, <3>, <4>.\nNode <3> is connected to nodes <2>, <5>, <1>, <0>.\nNode <4> is connected to nodes <2>, <1>, <0>.\nIs there an edge between node <0> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 122,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <1>.\nNode <1> is connected to node <2>.\nNode <3> is connected to nodes <5>, <1>.\nNode <5> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <1>, <0>, <5>.\nNode <6> is connected to node <4>.\nIs there a directed edge from node <1> to node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 123,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <1>.\nNode <4> is connected to node <0>.\nNode <1> is connected to nodes <0>, <2>, <3>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <1>.\nIs there an edge between node <1> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 124,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <4>, <1>.\nNode <3> is connected to nodes <4>, <5>.\nNode <1> is connected to nodes <2>, <0>.\nNode <5> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <5>, <1>.\nIs there an edge between node <2> and node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 125,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <5>, <0>.\nNode <5> is connected to node <0>.\nNode <0> is connected to nodes <1>, <5>.\nNode <4> is connected to node <5>.\nNode <2> is connected to nodes <1>, <4>.\nNode <3> is connected to node <4>.\nIs there a directed edge from node <2> to node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 126,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <6>.\nNode <3> is connected to nodes <0>, <5>, <6>.\nNode <6> is connected to nodes <0>, <3>.\nNode <5> is connected to nodes <3>, <1>.\nNode <4> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <4>, <5>.\nNode <2> is connected to node <4>.\nIs there an edge between node <4> and node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 127,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <4>, <6>, <1>.\nNode <5> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <2>, <5>.\nNode <6> is connected to nodes <2>, <0>.\nNode <1> is connected to nodes <2>, <3>.\nNode <0> is connected to node <6>.\nNode <3> is connected to node <1>.\nIs there an edge between node <5> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 128,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <3>, <5>, <0>.\nNode <3> is connected to nodes <6>, <0>, <2>.\nNode <5> is connected to nodes <6>, <0>.\nNode <0> is connected to nodes <6>, <3>, <5>, <2>, <4>, <1>.\nNode <2> is connected to nodes <3>, <0>.\nNode <4> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <0>, <4>.\nIs there an edge between node <3> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 129,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <3>.\nNode <5> is connected to nodes <2>, <4>.\nNode <3> is connected to nodes <2>, <1>.\nNode <4> is connected to nodes <5>, <0>.\nNode <0> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <0>, <3>.\nIs there an edge between node <5> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 130,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <2>, <4>, <1>.\nNode <0> is connected to node <3>.\nNode <2> is connected to node <3>.\nNode <4> is connected to node <3>.\nNode <1> is connected to node <3>.\nIs there an edge between node <4> and node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 131,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <5>, <4>, <0>, <3>.\nNode <1> is connected to nodes <2>, <5>, <6>.\nNode <5> is connected to nodes <2>, <1>, <4>, <0>, <6>.\nNode <4> is connected to nodes <2>, <5>, <0>, <3>, <6>.\nNode <0> is connected to nodes <2>, <5>, <4>, <3>, <6>.\nNode <3> is connected to nodes <2>, <4>, <0>.\nNode <6> is connected to nodes <1>, <5>, <4>, <0>.\nIs there an edge between node <3> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 132,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <1>, <5>.\nNode <2> is connected to nodes <6>, <3>.\nNode <5> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <3>, <4>, <2>, <6>.\nNode <1> is connected to nodes <4>, <6>, <5>, <0>, <3>.\nNode <4> is connected to node <6>.\nIs there a directed edge from node <0> to node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 133,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <2>, <0>.\nNode <1> is connected to nodes <4>, <3>.\nNode <2> is connected to node <4>.\nNode <0> is connected to node <4>.\nNode <3> is connected to node <1>.\nIs there an edge between node <4> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 134,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <2>, <0>, <6>.\nNode <3> is connected to nodes <1>, <4>, <2>, <0>, <6>.\nNode <2> is connected to nodes <1>, <3>, <4>, <0>, <6>.\nNode <0> is connected to nodes <1>, <3>, <4>, <2>, <5>.\nNode <6> is connected to nodes <1>, <3>, <4>, <2>, <5>.\nNode <4> is connected to nodes <3>, <2>, <0>, <6>.\nNode <5> is connected to nodes <0>, <6>.\nIs there an edge between node <0> and node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 135,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <2>, <0>, <1>, <4>, <5>.\nNode <2> is connected to nodes <6>, <5>.\nNode <0> is connected to nodes <6>, <1>, <3>.\nNode <1> is connected to nodes <6>, <0>, <3>.\nNode <4> is connected to nodes <6>, <5>.\nNode <5> is connected to nodes <6>, <2>, <4>.\nNode <3> is connected to nodes <0>, <1>.\nIs there an edge between node <0> and node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 136,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <4>, <5>, <0>.\nNode <3> is connected to nodes <4>, <1>.\nNode <5> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <2>, <5>.\nNode <1> is connected to node <3>.\nIs there an edge between node <3> and node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 137,
        "question": "Given a directed graph:\nNode <1> is connected to node <2>.\nNode <2> is connected to nodes <0>, <3>.\nNode <5> is connected to nodes <0>, <4>, <3>, <1>.\nNode <0> is connected to nodes <4>, <3>, <2>, <5>.\nNode <4> is connected to nodes <3>, <1>, <0>.\nNode <3> is connected to nodes <2>, <5>, <0>, <4>.\nIs there a directed edge from node <1> to node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 138,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <2>, <3>, <0>.\nNode <5> is connected to nodes <4>, <2>, <6>, <0>.\nNode <2> is connected to nodes <4>, <5>, <3>, <6>, <0>.\nNode <3> is connected to nodes <4>, <1>, <2>, <6>.\nNode <0> is connected to nodes <4>, <5>, <2>.\nNode <1> is connected to nodes <3>, <6>.\nNode <6> is connected to nodes <1>, <5>, <2>, <3>.\nIs there an edge between node <4> and node <5>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 139,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <5>, <3>.\nNode <5> is connected to node <0>.\nNode <3> is connected to nodes <2>, <5>.\nNode <1> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <5>, <1>, <2>.\nNode <2> is connected to nodes <5>, <1>.\nIs there a directed edge from node <4> to node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 140,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <5>, <3>.\nNode <1> is connected to nodes <2>, <3>.\nNode <5> is connected to nodes <2>, <0>.\nNode <3> is connected to nodes <2>, <1>.\nNode <4> is connected to node <0>.\nNode <0> is connected to nodes <4>, <5>.\nIs there an edge between node <2> and node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 141,
        "question": "Given an undirected graph:\nNode <4> is connected to node <2>.\nNode <2> is connected to nodes <4>, <0>, <3>.\nNode <0> is connected to nodes <2>, <1>.\nNode <3> is connected to node <2>.\nNode <1> is connected to node <0>.\nIs there an edge between node <3> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 142,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <3>, <0>, <5>, <2>.\nNode <4> is connected to nodes <1>, <3>, <0>, <5>, <2>.\nNode <3> is connected to nodes <1>, <4>, <0>.\nNode <0> is connected to nodes <1>, <4>, <3>, <5>, <2>.\nNode <5> is connected to nodes <1>, <4>, <0>, <2>.\nNode <2> is connected to nodes <1>, <4>, <0>, <5>.\nIs there an edge between node <3> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 143,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <2>, <0>, <1>.\nNode <4> is connected to node <3>.\nNode <2> is connected to node <3>.\nNode <0> is connected to node <3>.\nNode <1> is connected to node <3>.\nIs there an edge between node <4> and node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 144,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <1>.\nNode <5> is connected to nodes <0>, <2>, <1>, <4>.\nNode <1> is connected to nodes <0>, <2>, <5>, <4>, <3>.\nNode <2> is connected to nodes <5>, <1>, <4>, <3>.\nNode <4> is connected to nodes <2>, <5>, <1>, <3>.\nNode <3> is connected to nodes <2>, <1>, <4>.\nIs there an edge between node <0> and node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 145,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <4>, <2>.\nNode <0> is connected to node <5>.\nNode <4> is connected to nodes <5>, <3>, <1>.\nNode <2> is connected to node <5>.\nNode <3> is connected to node <4>.\nNode <1> is connected to node <4>.\nIs there an edge between node <1> and node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 146,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <3>, <4>.\nNode <0> is connected to nodes <1>, <2>.\nNode <3> is connected to nodes <1>, <0>.\nNode <4> is connected to nodes <1>, <0>, <3>.\nNode <1> is connected to node <0>.\nIs there a directed edge from node <2> to node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 147,
        "question": "Given a directed graph:\nNode <4> is connected to node <1>.\nNode <1> is connected to node <5>.\nNode <3> is connected to nodes <6>, <5>, <4>.\nNode <6> is connected to nodes <4>, <3>.\nNode <5> is connected to nodes <6>, <1>.\nNode <0> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <4>, <0>.\nIs there a directed edge from node <2> to node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 148,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <1>, <5>, <2>, <0>.\nNode <4> is connected to nodes <3>, <1>, <5>.\nNode <1> is connected to nodes <3>, <4>, <2>, <0>.\nNode <5> is connected to nodes <3>, <4>, <2>, <0>.\nNode <2> is connected to nodes <3>, <1>, <5>.\nNode <0> is connected to nodes <3>, <1>, <5>.\nIs there an edge between node <0> and node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 149,
        "question": "Given an undirected graph:\nNode <2> is connected to node <0>.\nNode <0> is connected to nodes <2>, <6>.\nNode <6> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <1>, <6>, <3>.\nNode <1> is connected to nodes <4>, <5>.\nNode <3> is connected to nodes <4>, <5>.\nNode <5> is connected to nodes <1>, <3>.\nIs there an edge between node <5> and node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 150,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <2>, <1>.\nNode <3> is connected to nodes <4>, <1>.\nNode <2> is connected to nodes <4>, <0>.\nNode <1> is connected to nodes <4>, <3>.\nNode <0> is connected to node <2>.\nIs there an edge between node <0> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 151,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <6>, <3>, <0>.\nNode <6> is connected to nodes <1>, <0>.\nNode <3> is connected to nodes <1>, <0>, <4>, <2>.\nNode <0> is connected to nodes <1>, <6>, <3>, <4>, <5>, <2>.\nNode <4> is connected to nodes <3>, <0>.\nNode <2> is connected to nodes <3>, <0>.\nNode <5> is connected to node <0>.\nIs there an edge between node <0> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 152,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <6>, <0>, <3>.\nNode <6> is connected to node <5>.\nNode <0> is connected to nodes <5>, <2>, <4>, <1>.\nNode <3> is connected to node <5>.\nNode <2> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <1> is connected to node <0>.\nIs there an edge between node <4> and node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 153,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <1>, <5>, <3>, <0>, <4>, <2>.\nNode <1> is connected to nodes <6>, <5>, <3>, <4>, <2>.\nNode <5> is connected to nodes <6>, <1>, <3>, <0>, <2>.\nNode <3> is connected to nodes <6>, <1>, <5>, <0>, <4>, <2>.\nNode <0> is connected to nodes <6>, <5>, <3>, <4>.\nNode <4> is connected to nodes <6>, <1>, <3>, <0>.\nNode <2> is connected to nodes <6>, <1>, <5>, <3>.\nIs there an edge between node <1> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 154,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <6>, <4>.\nNode <6> is connected to node <5>.\nNode <4> is connected to nodes <5>, <2>, <1>, <3>.\nNode <2> is connected to node <4>.\nNode <1> is connected to node <4>.\nNode <3> is connected to nodes <4>, <0>.\nNode <0> is connected to node <3>.\nIs there an edge between node <0> and node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 155,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <5>, <0>.\nNode <1> is connected to nodes <3>, <5>, <0>, <4>.\nNode <5> is connected to nodes <3>, <2>, <1>, <0>.\nNode <0> is connected to nodes <3>, <2>, <1>, <5>, <4>.\nNode <2> is connected to nodes <5>, <0>, <6>.\nNode <6> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <1>, <0>, <6>.\nIs there an edge between node <2> and node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 156,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <1>, <3>.\nNode <4> is connected to nodes <1>, <5>.\nNode <3> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <3>, <5>.\nNode <5> is connected to nodes <0>, <4>.\nIs there an edge between node <2> and node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 157,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <3>, <2>, <4>.\nNode <4> is connected to nodes <1>, <0>.\nNode <1> is connected to node <4>.\nIs there an edge between node <3> and node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 158,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <5>.\nNode <5> is connected to nodes <2>, <1>.\nNode <2> is connected to node <6>.\nNode <6> is connected to node <0>.\nNode <0> is connected to nodes <6>, <3>, <2>.\nNode <1> is connected to node <5>.\nIs there a directed edge from node <2> to node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 159,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <0>, <4>, <3>.\nNode <2> is connected to node <1>.\nNode <0> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <3> is connected to node <1>.\nIs there an edge between node <2> and node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 160,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <0>, <2>, <5>, <1>.\nNode <0> is connected to nodes <6>, <4>, <2>, <5>, <3>.\nNode <2> is connected to nodes <6>, <4>, <0>, <5>, <1>, <3>.\nNode <5> is connected to nodes <6>, <4>, <0>, <2>, <1>, <3>.\nNode <1> is connected to nodes <6>, <4>, <2>, <5>, <3>.\nNode <4> is connected to nodes <0>, <2>, <5>, <1>, <3>.\nNode <3> is connected to nodes <4>, <0>, <2>, <5>, <1>.\nIs there an edge between node <4> and node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 161,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <0>, <3>.\nNode <2> is connected to nodes <0>, <3>, <4>.\nNode <3> is connected to nodes <1>, <2>.\nNode <4> is connected to node <2>.\nIs there an edge between node <0> and node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 162,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <5>, <4>.\nNode <3> is connected to nodes <1>, <4>.\nNode <5> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <0>, <3>, <1>.\nNode <1> is connected to nodes <5>, <0>, <3>.\nIs there a directed edge from node <5> to node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 163,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <3>, <4>, <2>.\nNode <4> is connected to nodes <3>, <1>.\nNode <2> is connected to nodes <1>, <0>.\nNode <0> is connected to node <2>.\nIs there an edge between node <1> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 164,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <1>, <3>.\nNode <5> is connected to node <4>.\nNode <3> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <0>, <4>.\nNode <1> is connected to nodes <3>, <2>.\nIs there a directed edge from node <1> to node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 165,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <0>.\nNode <5> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <3>, <5>, <1>.\nNode <1> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <1>, <2>.\nNode <2> is connected to node <4>.\nIs there an edge between node <2> and node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 166,
        "question": "Given a directed graph:\nNode <4> is connected to node <0>.\nNode <0> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <5>, <3>, <0>.\nNode <3> is connected to nodes <0>, <1>, <2>.\nNode <1> is connected to nodes <2>, <4>.\nNode <5> is connected to node <3>.\nIs there a directed edge from node <1> to node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 167,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <2>, <0>.\nNode <3> is connected to nodes <1>, <4>.\nNode <2> is connected to node <1>.\nNode <0> is connected to node <1>.\nNode <4> is connected to node <3>.\nIs there an edge between node <3> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 168,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <6>, <2>, <1>, <3>.\nNode <5> is connected to nodes <0>, <2>, <1>.\nNode <6> is connected to nodes <0>, <4>.\nNode <2> is connected to nodes <0>, <5>, <4>.\nNode <1> is connected to nodes <0>, <5>.\nNode <3> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <6>, <2>, <3>.\nIs there an edge between node <5> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 169,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <1>.\nNode <2> is connected to node <4>.\nNode <1> is connected to nodes <4>, <3>, <5>, <0>.\nNode <3> is connected to node <1>.\nNode <5> is connected to node <1>.\nNode <0> is connected to node <1>.\nIs there an edge between node <4> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 170,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <4>.\nNode <5> is connected to node <3>.\nNode <4> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <0>, <4>, <1>, <6>.\nNode <0> is connected to node <2>.\nNode <1> is connected to node <2>.\nNode <6> is connected to node <2>.\nIs there an edge between node <3> and node <5>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 171,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <2>.\nNode <1> is connected to node <0>.\nNode <2> is connected to nodes <4>, <0>, <3>, <1>.\nNode <0> is connected to node <2>.\nNode <4> is connected to node <2>.\nIs there a directed edge from node <4> to node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 172,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <0>, <5>, <2>.\nNode <3> is connected to nodes <4>, <1>, <0>, <5>, <2>.\nNode <0> is connected to nodes <4>, <1>, <3>, <5>.\nNode <5> is connected to nodes <4>, <1>, <3>, <0>, <2>.\nNode <2> is connected to nodes <4>, <1>, <3>, <5>.\nNode <1> is connected to nodes <3>, <0>, <5>, <2>.\nIs there an edge between node <3> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 173,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <0>, <1>, <3>, <2>, <6>.\nNode <4> is connected to nodes <5>, <6>.\nNode <0> is connected to nodes <5>, <3>, <2>, <6>.\nNode <1> is connected to node <5>.\nNode <3> is connected to nodes <5>, <0>.\nNode <2> is connected to nodes <5>, <0>.\nNode <6> is connected to nodes <5>, <4>, <0>.\nIs there an edge between node <6> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 174,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <0>.\nNode <1> is connected to node <0>.\nNode <0> is connected to node <3>.\nNode <3> is connected to nodes <1>, <5>, <0>.\nNode <5> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nIs there a directed edge from node <5> to node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 175,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <3>, <2>.\nNode <0> is connected to nodes <4>, <1>.\nNode <3> is connected to node <4>.\nNode <2> is connected to node <4>.\nNode <1> is connected to node <0>.\nIs there an edge between node <2> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 176,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <6>, <5>.\nNode <1> is connected to nodes <0>, <4>, <3>.\nNode <6> is connected to nodes <2>, <4>, <3>, <1>.\nNode <5> is connected to nodes <2>, <4>, <3>, <1>.\nNode <0> is connected to nodes <4>, <3>.\nNode <4> is connected to node <5>.\nNode <3> is connected to nodes <2>, <0>, <4>.\nIs there a directed edge from node <6> to node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 177,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <4>, <0>, <6>, <5>.\nNode <1> is connected to nodes <2>, <6>, <0>.\nNode <4> is connected to nodes <2>, <3>, <5>.\nNode <0> is connected to nodes <2>, <1>.\nNode <6> is connected to nodes <2>, <1>, <3>.\nNode <5> is connected to nodes <2>, <4>.\nNode <3> is connected to nodes <4>, <6>.\nIs there an edge between node <5> and node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 178,
        "question": "Given a directed graph:\nNode <3> is connected to node <0>.\nNode <0> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <4>, <1>, <3>.\nNode <4> is connected to nodes <1>, <0>, <3>, <2>.\nNode <1> is connected to node <0>.\nNode <5> is connected to nodes <0>, <3>, <4>.\nIs there a directed edge from node <2> to node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 179,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <1>, <3>, <0>.\nNode <5> is connected to nodes <2>, <1>, <3>.\nNode <1> is connected to nodes <2>, <5>, <4>.\nNode <3> is connected to nodes <2>, <5>, <4>, <0>.\nNode <0> is connected to nodes <2>, <4>, <3>.\nNode <4> is connected to nodes <1>, <3>, <0>.\nIs there an edge between node <5> and node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 180,
        "question": "Given an undirected graph:\nNode <4> is connected to node <1>.\nNode <1> is connected to nodes <4>, <0>, <3>, <2>.\nNode <0> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <2> is connected to node <1>.\nIs there an edge between node <2> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 181,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <1>, <0>.\nNode <4> is connected to node <2>.\nNode <1> is connected to nodes <2>, <3>.\nNode <0> is connected to node <2>.\nNode <3> is connected to node <1>.\nIs there an edge between node <2> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 182,
        "question": "Given an undirected graph:\nNode <1> is connected to node <2>.\nNode <2> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <2>, <4>, <3>.\nNode <4> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <0>, <4>.\nIs there an edge between node <4> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 183,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <1>, <4>, <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <2>, <4>.\nIs there an edge between node <1> and node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 184,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <3>, <4>, <2>, <5>, <0>.\nNode <3> is connected to nodes <6>, <4>, <2>.\nNode <4> is connected to nodes <6>, <3>, <2>, <0>.\nNode <2> is connected to nodes <6>, <3>, <4>, <5>, <0>.\nNode <5> is connected to nodes <6>, <2>.\nNode <0> is connected to nodes <6>, <4>, <1>, <2>.\nNode <1> is connected to node <0>.\nIs there an edge between node <4> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 185,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <0>.\nNode <1> is connected to node <3>.\nNode <0> is connected to nodes <3>, <4>, <2>.\nNode <4> is connected to node <0>.\nNode <2> is connected to node <0>.\nIs there an edge between node <2> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 186,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <4>, <5>, <0>, <2>.\nNode <1> is connected to nodes <3>, <4>, <5>, <0>.\nNode <4> is connected to nodes <3>, <1>, <5>, <0>.\nNode <5> is connected to nodes <3>, <1>, <4>, <0>, <2>.\nNode <0> is connected to nodes <3>, <1>, <4>, <5>.\nNode <2> is connected to nodes <3>, <5>.\nIs there an edge between node <4> and node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 187,
        "question": "Given a directed graph:\nNode <0> is connected to node <2>.\nNode <2> is connected to node <3>.\nNode <4> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <3>, <0>, <4>.\nIs there a directed edge from node <1> to node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 188,
        "question": "Given an undirected graph:\nNode <4> is connected to node <2>.\nNode <2> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <2>, <5>.\nNode <5> is connected to nodes <0>, <1>, <3>.\nNode <1> is connected to nodes <5>, <3>.\nNode <3> is connected to nodes <5>, <1>.\nIs there an edge between node <4> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 189,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <0>, <4>, <2>.\nNode <5> is connected to nodes <1>, <3>, <0>, <4>, <2>.\nNode <0> is connected to nodes <1>, <5>, <3>, <4>, <2>.\nNode <4> is connected to nodes <1>, <5>, <3>, <0>.\nNode <2> is connected to nodes <1>, <5>, <3>, <0>.\nNode <3> is connected to nodes <5>, <0>, <4>, <2>.\nIs there an edge between node <3> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 190,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <3>.\nNode <0> is connected to node <1>.\nNode <3> is connected to node <2>.\nNode <2> is connected to nodes <1>, <0>.\nNode <4> is connected to nodes <2>, <3>.\nIs there a directed edge from node <1> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 191,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <0>, <4>.\nNode <1> is connected to node <2>.\nNode <4> is connected to node <3>.\nIs there an edge between node <1> and node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 192,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <3>, <2>, <0>, <6>.\nNode <4> is connected to node <6>.\nNode <3> is connected to nodes <5>, <1>, <4>.\nNode <2> is connected to nodes <6>, <1>.\nNode <0> is connected to nodes <5>, <6>.\nNode <6> is connected to nodes <3>, <2>, <5>.\nNode <5> is connected to nodes <1>, <3>, <2>, <0>.\nIs there a directed edge from node <5> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 193,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <5>, <1>.\nNode <2> is connected to nodes <5>, <1>.\nNode <5> is connected to nodes <3>, <2>.\nNode <1> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <2>, <4>, <1>.\nIs there a directed edge from node <1> to node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 194,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <1>, <2>.\nNode <0> is connected to node <3>.\nNode <1> is connected to node <3>.\nNode <2> is connected to nodes <3>, <4>.\nNode <4> is connected to node <2>.\nIs there an edge between node <4> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 195,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <0>, <1>, <3>.\nNode <5> is connected to nodes <4>, <0>, <1>, <2>.\nNode <0> is connected to nodes <4>, <5>, <1>, <2>, <3>.\nNode <1> is connected to nodes <4>, <5>, <0>, <2>, <3>.\nNode <3> is connected to nodes <4>, <0>, <1>, <2>.\nNode <2> is connected to nodes <5>, <0>, <1>, <3>.\nIs there an edge between node <5> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 196,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <1>, <3>, <0>.\nNode <2> is connected to node <4>.\nNode <1> is connected to node <4>.\nNode <3> is connected to node <4>.\nNode <0> is connected to node <4>.\nIs there an edge between node <4> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 197,
        "question": "Given a directed graph:\nNode <0> is connected to node <2>.\nNode <2> is connected to nodes <3>, <4>, <0>.\nNode <1> is connected to nodes <2>, <5>, <0>.\nNode <5> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <1>, <2>.\nNode <4> is connected to nodes <0>, <2>, <5>.\nIs there a directed edge from node <2> to node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 198,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <1>, <3>.\nNode <4> is connected to nodes <1>, <0>.\nNode <3> is connected to node <2>.\nNode <0> is connected to node <4>.\nIs there an edge between node <1> and node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 199,
        "question": "Given an undirected graph:\nNode <3> is connected to node <1>.\nNode <1> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <1>, <2>, <0>.\nNode <2> is connected to nodes <4>, <5>.\nNode <5> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <4>, <5>.\nIs there an edge between node <0> and node <5>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 200,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <4>, <1>.\nNode <2> is connected to node <3>.\nNode <4> is connected to node <3>.\nNode <1> is connected to nodes <3>, <0>.\nNode <0> is connected to node <1>.\nIs there an edge between node <1> and node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 201,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <2>, <0>, <3>.\nNode <0> is connected to nodes <3>, <4>, <2>.\nNode <2> is connected to node <4>.\nNode <4> is connected to nodes <2>, <1>.\nIs there a directed edge from node <0> to node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 202,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <0>.\nNode <1> is connected to node <5>.\nNode <0> is connected to node <1>.\nNode <5> is connected to node <1>.\nNode <4> is connected to nodes <0>, <5>, <2>.\nNode <6> is connected to nodes <0>, <2>.\nIs there a directed edge from node <6> to node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 203,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <1>, <2>, <3>.\nNode <5> is connected to nodes <0>, <1>, <4>, <3>.\nNode <1> is connected to nodes <0>, <5>, <2>, <4>, <3>.\nNode <2> is connected to nodes <0>, <1>, <4>, <3>.\nNode <3> is connected to nodes <0>, <5>, <1>, <2>, <4>.\nNode <4> is connected to nodes <5>, <1>, <2>, <3>.\nIs there an edge between node <4> and node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 204,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <0>, <4>.\nNode <5> is connected to nodes <0>, <1>, <3>.\nNode <4> is connected to node <2>.\nNode <1> is connected to node <5>.\nNode <3> is connected to node <5>.\nIs there an edge between node <5> and node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 205,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <4>, <2>.\nNode <1> is connected to node <0>.\nNode <4> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <0>, <4>, <3>.\nNode <3> is connected to node <2>.\nIs there an edge between node <0> and node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 206,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <1>, <3>, <6>.\nNode <2> is connected to nodes <1>, <4>.\nNode <3> is connected to nodes <0>, <4>.\nNode <6> is connected to nodes <0>, <5>.\nNode <4> is connected to nodes <3>, <2>.\nNode <5> is connected to node <6>.\nIs there an edge between node <1> and node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 207,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <0>, <6>.\nNode <1> is connected to nodes <2>, <0>, <6>.\nNode <0> is connected to nodes <3>, <2>.\nNode <6> is connected to nodes <1>, <4>, <0>.\nNode <2> is connected to node <5>.\nNode <5> is connected to nodes <1>, <6>.\nIs there a directed edge from node <5> to node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 208,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <0>.\nNode <3> is connected to node <0>.\nNode <0> is connected to nodes <3>, <2>.\nNode <5> is connected to nodes <1>, <2>.\nNode <4> is connected to nodes <0>, <5>.\nIs there a directed edge from node <2> to node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 209,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <6>, <1>, <2>.\nNode <4> is connected to node <6>.\nNode <1> is connected to nodes <0>, <3>.\nNode <2> is connected to nodes <0>, <5>.\nNode <3> is connected to node <1>.\nNode <5> is connected to node <2>.\nIs there an edge between node <6> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 210,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <3>, <5>, <2>, <4>, <1>, <0>.\nNode <3> is connected to nodes <6>, <5>, <4>, <1>, <0>.\nNode <5> is connected to nodes <6>, <3>, <2>, <1>, <0>.\nNode <2> is connected to nodes <6>, <5>, <4>, <1>, <0>.\nNode <4> is connected to nodes <6>, <3>, <2>, <1>.\nNode <1> is connected to nodes <6>, <3>, <5>, <2>, <4>, <0>.\nNode <0> is connected to nodes <6>, <3>, <5>, <2>, <1>.\nIs there an edge between node <0> and node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 211,
        "question": "Given a directed graph:\nNode <4> is connected to node <3>.\nNode <5> is connected to node <2>.\nNode <2> is connected to nodes <6>, <5>.\nNode <1> is connected to node <3>.\nNode <0> is connected to nodes <2>, <1>.\nNode <6> is connected to nodes <4>, <5>, <1>, <0>, <3>.\nIs there a directed edge from node <3> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 212,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <3>, <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <0>, <2>.\nNode <1> is connected to nodes <0>, <4>.\nNode <2> is connected to nodes <3>, <5>.\nNode <5> is connected to node <2>.\nIs there an edge between node <1> and node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 213,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <2>, <5>, <4>, <1>.\nNode <3> is connected to nodes <0>, <5>, <4>, <1>.\nNode <2> is connected to nodes <0>, <5>, <4>.\nNode <5> is connected to nodes <0>, <3>, <2>, <4>.\nNode <4> is connected to nodes <0>, <3>, <2>, <5>, <1>.\nNode <1> is connected to nodes <0>, <3>, <4>.\nIs there an edge between node <3> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 214,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <4>, <0>.\nNode <3> is connected to nodes <2>, <4>, <0>, <1>.\nNode <4> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <1>, <3>.\nIs there a directed edge from node <2> to node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 215,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <2>, <0>, <3>.\nNode <1> is connected to node <2>.\nNode <0> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <4>, <0>.\nIs there an edge between node <0> and node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 216,
        "question": "Given an undirected graph:\nNode <1> is connected to node <0>.\nNode <0> is connected to nodes <1>, <2>, <4>, <3>.\nNode <2> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <3> is connected to node <0>.\nIs there an edge between node <2> and node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 217,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <2>, <4>.\nNode <2> is connected to node <0>.\nNode <0> is connected to nodes <4>, <3>.\nNode <1> is connected to nodes <3>, <2>.\nIs there a directed edge from node <4> to node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 218,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <3>, <1>.\nNode <4> is connected to nodes <3>, <2>.\nNode <1> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <4>, <1>.\nIs there an edge between node <0> and node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 219,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <2>, <1>.\nNode <0> is connected to nodes <2>, <5>.\nNode <1> is connected to nodes <4>, <6>.\nNode <6> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <6>, <5>.\nNode <5> is connected to nodes <3>, <0>.\nIs there an edge between node <5> and node <6>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 220,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <0>, <6>, <4>.\nNode <5> is connected to node <0>.\nNode <6> is connected to node <3>.\nNode <4> is connected to nodes <3>, <1>, <2>.\nNode <1> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <4>, <1>.\nIs there an edge between node <3> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 221,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <5>, <0>.\nNode <2> is connected to nodes <6>, <4>, <1>, <3>.\nNode <5> is connected to nodes <6>, <4>, <1>, <2>.\nNode <0> is connected to node <1>.\nNode <1> is connected to node <3>.\nNode <6> is connected to nodes <4>, <2>.\nIs there a directed edge from node <3> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 222,
        "question": "Given an undirected graph:\nNode <4> is connected to node <0>.\nNode <0> is connected to nodes <4>, <3>, <1>.\nNode <3> is connected to node <0>.\nNode <1> is connected to nodes <0>, <2>.\nNode <2> is connected to node <1>.\nIs there an edge between node <2> and node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 223,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <1>.\nNode <3> is connected to nodes <0>, <5>.\nNode <4> is connected to nodes <0>, <2>.\nNode <1> is connected to nodes <0>, <5>.\nNode <5> is connected to nodes <3>, <1>.\nNode <2> is connected to node <4>.\nIs there an edge between node <4> and node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 224,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <4>.\nNode <5> is connected to node <1>.\nNode <4> is connected to nodes <1>, <3>, <2>, <0>.\nNode <3> is connected to node <4>.\nNode <2> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <4>, <2>.\nIs there an edge between node <0> and node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 225,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <1>, <2>.\nNode <0> is connected to nodes <5>, <3>, <4>.\nNode <1> is connected to node <5>.\nNode <2> is connected to node <5>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nIs there an edge between node <0> and node <5>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 226,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <4>, <3>.\nNode <5> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <1>, <5>.\nNode <3> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <3>, <0>.\nNode <0> is connected to node <2>.\nIs there an edge between node <4> and node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 227,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <4>, <2>, <3>, <6>, <0>.\nNode <4> is connected to nodes <2>, <3>, <1>, <5>.\nNode <2> is connected to nodes <3>, <1>, <6>, <0>, <4>.\nNode <3> is connected to nodes <1>, <5>, <4>.\nNode <6> is connected to nodes <0>, <5>, <3>, <1>.\nNode <0> is connected to nodes <5>, <2>, <3>.\nNode <1> is connected to nodes <6>, <4>.\nIs there a directed edge from node <2> to node <6>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 228,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <6>, <3>.\nNode <6> is connected to nodes <0>, <4>, <3>, <1>.\nNode <3> is connected to nodes <2>, <6>.\nNode <0> is connected to nodes <5>, <2>.\nNode <4> is connected to nodes <2>, <6>.\nIs there a directed edge from node <0> to node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 229,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <1>.\nNode <4> is connected to node <0>.\nNode <1> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <1>, <3>.\nNode <3> is connected to node <2>.\nIs there an edge between node <0> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 230,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <2>.\nNode <0> is connected to node <1>.\nNode <2> is connected to nodes <1>, <3>.\nNode <4> is connected to node <3>.\nNode <3> is connected to nodes <4>, <5>, <2>.\nNode <5> is connected to node <3>.\nIs there an edge between node <4> and node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 231,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <4>, <0>, <2>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <0> is connected to node <1>.\nNode <2> is connected to node <1>.\nIs there an edge between node <0> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 232,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <3>.\nNode <1> is connected to node <4>.\nNode <3> is connected to nodes <4>, <2>, <0>.\nNode <2> is connected to node <3>.\nNode <0> is connected to node <3>.\nIs there an edge between node <3> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 233,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <0>, <5>, <4>, <3>.\nNode <2> is connected to nodes <1>, <0>, <5>, <4>, <3>, <6>.\nNode <0> is connected to nodes <1>, <2>, <5>, <4>, <3>.\nNode <5> is connected to nodes <1>, <2>, <0>, <4>, <3>, <6>.\nNode <4> is connected to nodes <1>, <2>, <0>, <5>, <6>.\nNode <3> is connected to nodes <1>, <2>, <0>, <5>, <6>.\nNode <6> is connected to nodes <2>, <5>, <4>, <3>.\nIs there an edge between node <2> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 234,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>, <2>, <1>, <4>.\nNode <3> is connected to nodes <0>, <5>, <2>, <1>.\nNode <5> is connected to nodes <0>, <3>, <2>, <4>.\nNode <2> is connected to nodes <0>, <3>, <5>, <1>.\nNode <1> is connected to nodes <0>, <3>, <2>.\nNode <4> is connected to nodes <0>, <5>.\nIs there an edge between node <1> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 235,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <6>, <3>, <5>, <0>, <1>, <2>.\nNode <6> is connected to node <4>.\nNode <3> is connected to node <4>.\nNode <5> is connected to node <4>.\nNode <0> is connected to node <4>.\nNode <1> is connected to node <4>.\nNode <2> is connected to node <4>.\nIs there an edge between node <3> and node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 236,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <2>, <1>.\nNode <4> is connected to node <0>.\nNode <2> is connected to nodes <0>, <3>.\nNode <1> is connected to node <0>.\nNode <3> is connected to node <2>.\nIs there an edge between node <4> and node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 237,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <1>, <2>.\nNode <0> is connected to node <3>.\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to node <3>.\nNode <4> is connected to nodes <3>, <1>.\nIs there a directed edge from node <4> to node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 238,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <0>, <3>.\nNode <1> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <4>, <3>, <2>, <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <2>, <0>.\nIs there a directed edge from node <2> to node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 239,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <3>, <2>.\nNode <0> is connected to nodes <4>, <6>, <1>.\nNode <3> is connected to nodes <4>, <5>.\nNode <2> is connected to nodes <4>, <6>.\nNode <6> is connected to nodes <0>, <2>.\nNode <1> is connected to node <0>.\nNode <5> is connected to node <3>.\nIs there an edge between node <4> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 240,
        "question": "Given a directed graph:\nNode <1> is connected to node <3>.\nNode <3> is connected to nodes <0>, <4>, <2>.\nNode <0> is connected to nodes <4>, <3>.\nNode <4> is connected to node <1>.\nNode <2> is connected to nodes <1>, <4>.\nIs there a directed edge from node <1> to node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 241,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <1>, <5>, <2>, <6>.\nNode <4> is connected to nodes <0>, <6>.\nNode <1> is connected to nodes <0>, <2>, <3>, <5>.\nNode <5> is connected to nodes <0>, <1>.\nNode <2> is connected to nodes <0>, <3>, <1>.\nNode <6> is connected to nodes <0>, <4>.\nNode <3> is connected to nodes <2>, <1>.\nIs there an edge between node <5> and node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 242,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <6>, <3>, <2>.\nNode <5> is connected to nodes <1>, <4>, <6>, <2>.\nNode <6> is connected to nodes <1>, <4>, <5>, <2>.\nNode <3> is connected to nodes <1>, <4>.\nNode <2> is connected to nodes <1>, <4>, <5>, <6>, <0>.\nNode <4> is connected to nodes <5>, <6>, <3>, <2>.\nNode <0> is connected to node <2>.\nIs there an edge between node <6> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 243,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <1>, <2>, <5>.\nNode <0> is connected to nodes <3>, <4>, <1>, <2>, <5>.\nNode <1> is connected to nodes <3>, <0>, <2>, <5>.\nNode <2> is connected to nodes <3>, <0>, <4>, <1>, <5>.\nNode <5> is connected to nodes <3>, <0>, <4>, <1>, <2>.\nNode <4> is connected to nodes <0>, <2>, <5>.\nIs there an edge between node <3> and node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 244,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <1>, <3>.\nNode <0> is connected to nodes <4>, <1>, <2>.\nNode <1> is connected to nodes <3>, <2>, <0>, <4>.\nNode <3> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <3>, <2>.\nIs there a directed edge from node <1> to node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 245,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <2>, <1>.\nNode <5> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <4>, <3>, <0>.\nNode <3> is connected to nodes <1>, <5>.\nNode <0> is connected to node <1>.\nIs there an edge between node <5> and node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 246,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <2>, <4>.\nNode <3> is connected to nodes <5>, <2>, <0>.\nNode <2> is connected to nodes <1>, <5>.\nNode <4> is connected to nodes <1>, <3>, <5>.\nNode <0> is connected to nodes <3>, <2>, <4>, <1>.\nNode <5> is connected to nodes <4>, <1>, <0>.\nIs there a directed edge from node <4> to node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 247,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <3>, <2>.\nNode <4> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <0>, <4>, <1>.\nNode <2> is connected to node <1>.\nNode <5> is connected to nodes <2>, <0>, <4>, <1>, <3>.\nNode <1> is connected to nodes <3>, <5>, <0>.\nIs there a directed edge from node <0> to node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 248,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <0>, <2>.\nNode <1> is connected to nodes <3>, <2>.\nNode <0> is connected to node <3>.\nNode <2> is connected to nodes <3>, <1>, <5>.\nNode <5> is connected to nodes <2>, <4>.\nNode <4> is connected to node <5>.\nIs there an edge between node <3> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 249,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <5>, <4>, <1>, <3>, <2>.\nNode <3> is connected to nodes <5>, <0>, <4>, <1>, <2>.\nNode <4> is connected to nodes <0>, <1>, <3>, <2>.\nNode <1> is connected to nodes <0>, <4>, <3>.\nNode <2> is connected to nodes <0>, <4>, <3>.\nIs there an edge between node <5> and node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 250,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <5>, <2>.\nNode <0> is connected to node <1>.\nNode <5> is connected to nodes <1>, <6>.\nNode <2> is connected to node <1>.\nNode <6> is connected to nodes <4>, <5>, <3>.\nNode <4> is connected to node <6>.\nNode <3> is connected to node <6>.\nIs there an edge between node <5> and node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 251,
        "question": "Given a directed graph:\nNode <1> is connected to node <2>.\nNode <2> is connected to node <0>.\nNode <0> is connected to nodes <4>, <1>.\nNode <4> is connected to node <2>.\nNode <3> is connected to nodes <1>, <2>.\nIs there a directed edge from node <1> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 252,
        "question": "Given an undirected graph:\nNode <6> is connected to node <1>.\nNode <1> is connected to nodes <6>, <3>, <4>.\nNode <3> is connected to nodes <1>, <4>, <2>.\nNode <4> is connected to nodes <1>, <0>, <3>.\nNode <0> is connected to nodes <4>, <5>.\nNode <5> is connected to node <0>.\nNode <2> is connected to node <3>.\nIs there an edge between node <1> and node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 253,
        "question": "Given an undirected graph:\nNode <3> is connected to node <2>.\nNode <2> is connected to nodes <3>, <0>, <4>.\nNode <0> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <2>, <0>, <1>.\nNode <1> is connected to node <4>.\nIs there an edge between node <3> and node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 254,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <1>, <5>, <3>, <2>.\nNode <4> is connected to nodes <0>, <5>, <2>.\nNode <1> is connected to nodes <0>, <5>, <3>.\nNode <5> is connected to nodes <0>, <4>, <1>, <3>, <2>.\nNode <3> is connected to nodes <0>, <1>, <5>, <2>.\nNode <2> is connected to nodes <0>, <4>, <5>, <3>.\nIs there an edge between node <0> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 255,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5>, <1>.\nNode <5> is connected to nodes <4>, <3>.\nNode <1> is connected to nodes <4>, <2>, <3>.\nNode <0> is connected to node <4>.\nNode <4> is connected to node <3>.\nNode <3> is connected to nodes <4>, <0>.\nIs there a directed edge from node <3> to node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 256,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <1>, <2>, <6>, <3>.\nNode <0> is connected to nodes <4>, <2>.\nNode <1> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <4>, <0>, <1>, <5>, <6>, <3>.\nNode <6> is connected to nodes <4>, <2>.\nNode <3> is connected to nodes <4>, <2>.\nNode <5> is connected to node <2>.\nIs there an edge between node <3> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 257,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <0>, <2>.\nNode <1> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <3>, <1>, <4>.\nNode <4> is connected to node <2>.\nIs there an edge between node <1> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 258,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <5>, <3>.\nNode <4> is connected to nodes <2>, <0>.\nNode <5> is connected to nodes <2>, <0>.\nNode <3> is connected to nodes <2>, <1>.\nNode <0> is connected to nodes <4>, <5>.\nNode <1> is connected to node <3>.\nIs there an edge between node <3> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 259,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <1>, <0>, <5>.\nNode <4> is connected to nodes <2>, <3>, <1>, <0>, <5>.\nNode <1> is connected to nodes <2>, <4>, <3>, <0>, <5>.\nNode <0> is connected to nodes <2>, <4>, <3>, <1>.\nNode <5> is connected to nodes <2>, <4>, <3>, <1>.\nNode <3> is connected to nodes <4>, <1>, <0>, <5>.\nIs there an edge between node <0> and node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 260,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <6>, <2>.\nNode <5> is connected to nodes <0>, <3>, <4>, <2>, <1>.\nNode <6> is connected to nodes <0>, <3>, <1>.\nNode <2> is connected to nodes <0>, <5>.\nNode <3> is connected to nodes <5>, <6>.\nNode <4> is connected to nodes <5>, <1>.\nNode <1> is connected to nodes <5>, <6>, <4>.\nIs there an edge between node <1> and node <5>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 261,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <0>, <2>, <1>.\nNode <1> is connected to nodes <3>, <4>.\nNode <3> is connected to node <1>.\nIs there an edge between node <4> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 262,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <3>, <4>, <5>.\nNode <2> is connected to nodes <1>, <0>, <3>, <6>.\nNode <3> is connected to nodes <1>, <2>, <6>.\nNode <4> is connected to nodes <1>, <6>.\nNode <5> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <2>, <5>.\nNode <6> is connected to nodes <2>, <3>, <4>.\nIs there an edge between node <5> and node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 263,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <1>, <0>, <4>.\nNode <3> is connected to node <2>.\nNode <1> is connected to node <2>.\nNode <0> is connected to node <2>.\nNode <4> is connected to node <2>.\nIs there an edge between node <4> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 264,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <5>, <0>, <2>.\nNode <4> is connected to node <1>.\nNode <5> is connected to nodes <1>, <3>.\nNode <0> is connected to node <1>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <5>.\nIs there an edge between node <4> and node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 265,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <3>, <4>, <1>.\nNode <2> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <4>, <2>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nIs there a directed edge from node <4> to node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 266,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <0>, <5>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <5>, <1>.\nNode <1> is connected to nodes <3>, <4>.\nIs there an edge between node <1> and node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 267,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <3>, <1>, <4>.\nNode <4> is connected to nodes <3>, <5>, <0>.\nNode <1> is connected to nodes <5>, <2>.\nNode <6> is connected to node <2>.\nNode <2> is connected to nodes <6>, <1>.\nNode <0> is connected to node <4>.\nIs there an edge between node <0> and node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 268,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <2>, <0>.\nNode <5> is connected to nodes <2>, <3>.\nNode <0> is connected to nodes <1>, <4>.\nNode <3> is connected to nodes <5>, <4>.\nNode <4> is connected to nodes <3>, <0>.\nIs there an edge between node <1> and node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 269,
        "question": "Given a directed graph:\nNode <5> is connected to node <2>.\nNode <2> is connected to nodes <1>, <4>, <0>, <3>, <5>.\nNode <1> is connected to nodes <4>, <6>, <3>, <2>.\nNode <4> is connected to nodes <6>, <3>, <1>.\nNode <0> is connected to nodes <3>, <5>, <2>, <1>, <4>.\nNode <3> is connected to node <6>.\nNode <6> is connected to nodes <5>, <2>, <4>.\nIs there a directed edge from node <2> to node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 270,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <2> is connected to node <1>.\nNode <3> is connected to nodes <4>, <0>, <1>, <2>.\nNode <1> is connected to nodes <3>, <5>.\nNode <4> is connected to nodes <0>, <5>, <2>, <3>.\nIs there a directed edge from node <0> to node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 271,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <3>, <2>, <5>, <4>, <1>.\nNode <3> is connected to node <6>.\nNode <2> is connected to node <6>.\nNode <5> is connected to nodes <6>, <0>.\nNode <4> is connected to node <6>.\nNode <1> is connected to node <6>.\nNode <0> is connected to node <5>.\nIs there an edge between node <3> and node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 272,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <6>.\nNode <3> is connected to nodes <4>, <5>.\nNode <6> is connected to nodes <4>, <1>, <0>.\nNode <5> is connected to nodes <3>, <2>.\nNode <1> is connected to nodes <6>, <2>.\nNode <2> is connected to nodes <1>, <5>.\nNode <0> is connected to node <6>.\nIs there an edge between node <3> and node <1>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 273,
        "question": "Given a directed graph:\nNode <5> is connected to node <6>.\nNode <6> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <2>, <5>.\nNode <4> is connected to nodes <3>, <1>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <0>.\nIs there a directed edge from node <3> to node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 274,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <2>, <4>, <5>.\nNode <2> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <5>, <2>.\nIs there a directed edge from node <4> to node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 275,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <1>, <4>.\nNode <0> is connected to node <3>.\nNode <1> is connected to node <3>.\nNode <4> is connected to nodes <3>, <2>.\nNode <2> is connected to node <4>.\nIs there an edge between node <1> and node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 276,
        "question": "Given a directed graph:\nNode <4> is connected to node <2>.\nNode <2> is connected to nodes <1>, <5>.\nNode <5> is connected to nodes <3>, <0>, <4>.\nNode <3> is connected to nodes <0>, <5>, <2>.\nNode <0> is connected to nodes <4>, <2>, <3>.\nIs there a directed edge from node <1> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 277,
        "question": "Given a directed graph:\nNode <3> is connected to node <2>.\nNode <2> is connected to nodes <4>, <5>.\nNode <1> is connected to nodes <2>, <3>.\nNode <0> is connected to nodes <2>, <4>.\nNode <5> is connected to node <0>.\nIs there a directed edge from node <4> to node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 278,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <6>, <5>, <0>, <4>, <3>.\nNode <2> is connected to nodes <1>, <6>, <5>, <0>, <4>, <3>.\nNode <6> is connected to nodes <1>, <2>, <5>, <0>, <4>, <3>.\nNode <5> is connected to nodes <1>, <2>, <6>, <4>.\nNode <0> is connected to nodes <1>, <2>, <6>, <3>.\nNode <4> is connected to nodes <1>, <2>, <6>, <5>, <3>.\nNode <3> is connected to nodes <1>, <2>, <6>, <0>, <4>.\nIs there an edge between node <2> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 279,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>, <1>, <6>.\nNode <3> is connected to nodes <0>, <5>, <1>, <2>, <6>.\nNode <5> is connected to nodes <0>, <3>, <1>, <6>, <4>.\nNode <1> is connected to nodes <0>, <3>, <5>, <6>, <4>.\nNode <6> is connected to nodes <0>, <3>, <5>, <1>, <2>.\nNode <2> is connected to nodes <3>, <6>.\nNode <4> is connected to nodes <5>, <1>.\nIs there an edge between node <3> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 280,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>, <3>, <1>.\nNode <2> is connected to nodes <0>, <3>, <1>.\nNode <4> is connected to nodes <0>, <5>, <3>, <1>.\nNode <3> is connected to nodes <0>, <5>, <2>, <4>, <1>.\nNode <1> is connected to nodes <0>, <2>, <4>, <3>.\nNode <5> is connected to nodes <4>, <3>.\nIs there an edge between node <1> and node <5>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 281,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <3>, <2>.\nNode <4> is connected to nodes <3>, <0>.\nNode <2> is connected to node <1>.\nNode <0> is connected to node <4>.\nIs there an edge between node <0> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 282,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <5>, <1>.\nNode <2> is connected to nodes <4>, <0>.\nNode <5> is connected to nodes <4>, <0>.\nNode <1> is connected to nodes <4>, <3>.\nNode <0> is connected to nodes <2>, <5>.\nNode <3> is connected to node <1>.\nIs there an edge between node <1> and node <2>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 283,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5>, <1>.\nNode <5> is connected to node <3>.\nNode <1> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <2>, <5>, <1>.\nNode <2> is connected to nodes <5>, <1>, <0>.\nNode <4> is connected to nodes <0>, <3>.\nIs there a directed edge from node <5> to node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 284,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <3>, <0>, <1>.\nNode <3> is connected to nodes <1>, <4>, <2>.\nNode <0> is connected to node <1>.\nNode <1> is connected to nodes <5>, <3>, <0>.\nNode <4> is connected to node <3>.\nNode <2> is connected to node <1>.\nIs there a directed edge from node <0> to node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 285,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <4>, <5>, <1>, <0>.\nNode <3> is connected to node <2>.\nNode <4> is connected to node <2>.\nNode <5> is connected to node <2>.\nNode <1> is connected to nodes <2>, <6>.\nNode <0> is connected to node <2>.\nNode <6> is connected to node <1>.\nIs there an edge between node <2> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 286,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <5>, <1>, <3>.\nNode <4> is connected to nodes <0>, <1>.\nNode <3> is connected to node <2>.\nNode <5> is connected to node <3>.\nNode <0> is connected to nodes <5>, <1>.\nIs there a directed edge from node <1> to node <2>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 287,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <2>, <3>.\nNode <4> is connected to nodes <0>, <5>.\nNode <2> is connected to nodes <0>, <6>.\nNode <3> is connected to nodes <0>, <5>.\nNode <5> is connected to nodes <4>, <3>.\nNode <6> is connected to nodes <2>, <1>.\nNode <1> is connected to node <6>.\nIs there an edge between node <1> and node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 288,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <1>, <3>.\nNode <0> is connected to node <2>.\nNode <1> is connected to nodes <2>, <5>, <4>.\nNode <3> is connected to node <2>.\nNode <5> is connected to node <1>.\nNode <4> is connected to node <1>.\nIs there an edge between node <1> and node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 289,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <3>, <2>, <1>, <5>.\nNode <0> is connected to nodes <4>, <3>, <2>, <1>.\nNode <3> is connected to nodes <4>, <0>, <2>.\nNode <2> is connected to nodes <4>, <0>, <3>, <1>.\nNode <1> is connected to nodes <4>, <0>, <2>, <5>.\nNode <5> is connected to nodes <4>, <1>.\nIs there an edge between node <3> and node <0>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 290,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <1>, <2>, <4>.\nNode <3> is connected to nodes <0>, <1>, <5>, <2>.\nNode <1> is connected to nodes <0>, <3>, <5>, <2>, <4>.\nNode <2> is connected to nodes <0>, <3>, <1>, <5>, <4>.\nNode <4> is connected to nodes <0>, <1>, <5>, <2>.\nNode <5> is connected to nodes <3>, <1>, <2>, <4>.\nIs there an edge between node <1> and node <3>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 291,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <4>, <1>, <0>.\nNode <3> is connected to node <4>.\nNode <1> is connected to node <2>.\nNode <0> is connected to node <2>.\nIs there an edge between node <1> and node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 292,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <1>, <2>, <4>.\nNode <1> is connected to nodes <0>, <2>, <4>, <3>.\nNode <5> is connected to node <0>.\nNode <0> is connected to node <1>.\nNode <2> is connected to nodes <5>, <3>, <1>.\nIs there a directed edge from node <4> to node <0>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 293,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <6>, <3>.\nNode <4> is connected to nodes <6>, <5>.\nNode <3> is connected to nodes <1>, <5>, <2>.\nNode <5> is connected to nodes <4>, <3>.\nNode <2> is connected to nodes <3>, <0>.\nNode <0> is connected to node <2>.\nIs there an edge between node <3> and node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 294,
        "question": "Given an undirected graph:\nNode <3> is connected to node <4>.\nNode <4> is connected to nodes <3>, <1>, <0>.\nNode <1> is connected to node <4>.\nNode <0> is connected to nodes <4>, <2>.\nNode <2> is connected to node <0>.\nIs there an edge between node <0> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 295,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>, <1>, <3>.\nNode <2> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <1> is connected to node <0>.\nNode <3> is connected to node <0>.\nIs there an edge between node <4> and node <3>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 296,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <3>, <2>.\nNode <1> is connected to node <4>.\nNode <3> is connected to nodes <4>, <5>.\nNode <2> is connected to nodes <4>, <0>.\nNode <0> is connected to node <2>.\nNode <5> is connected to node <3>.\nIs there an edge between node <0> and node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 297,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <2>, <4>.\nNode <0> is connected to nodes <1>, <4>.\nNode <2> is connected to node <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <1> is connected to node <2>.\nIs there a directed edge from node <0> to node <1>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 298,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <4>, <0>, <5>.\nNode <1> is connected to node <3>.\nNode <4> is connected to nodes <3>, <2>.\nNode <0> is connected to node <3>.\nNode <5> is connected to node <3>.\nNode <2> is connected to node <4>.\nIs there an edge between node <1> and node <4>?\nAnswer:\n",
        "answer": "No",
        "type": "edge"
    },
    {
        "index": 299,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <3>, <4>, <1>.\nNode <0> is connected to node <5>.\nNode <3> is connected to nodes <5>, <2>.\nNode <4> is connected to node <5>.\nNode <1> is connected to node <5>.\nNode <2> is connected to node <3>.\nIs there an edge between node <5> and node <4>?\nAnswer:\n",
        "answer": "Yes",
        "type": "edge"
    },
    {
        "index": 0,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <3>, <0>.\nNode <2> is connected to node <4>.\nNode <3> is connected to nodes <0>, <5>, <1>.\nNode <0> is connected to node <3>.\nNode <5> is connected to node <6>.\nNode <1> is connected to node <2>.\nNode <6> is connected to node <0>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <2>, <4>, <0>, <3>, <5>, <6>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 1,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <4>, <2>.\nNode <1> is connected to node <4>.\nNode <2> is connected to nodes <0>, <3>.\nNode <3> is connected to node <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <4>, <0>, <2>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 2,
        "question": "Given a directed graph:\nNode <2> is connected to node <4>.\nNode <4> is connected to nodes <5>, <0>.\nNode <5> is connected to nodes <4>, <2>.\nNode <0> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <1>, <0>.\nNode <1> is connected to node <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <3>, <1>, <5>, <2>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 3,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <2>, <4>, <3>.\nNode <0> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <1>, <0>.\nNode <3> is connected to node <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <0>, <4>, <1>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 4,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <0>, <1>.\nNode <2> is connected to nodes <0>, <1>, <3>.\nNode <1> is connected to nodes <4>, <2>.\nNode <3> is connected to node <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <2>, <0>, <4>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 5,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <2>, <6>, <3>.\nNode <0> is connected to nodes <4>, <1>.\nNode <2> is connected to node <4>.\nNode <6> is connected to nodes <4>, <3>, <5>, <1>.\nNode <3> is connected to nodes <4>, <6>, <5>.\nNode <1> is connected to nodes <0>, <6>.\nNode <5> is connected to nodes <6>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <4>, <0>, <1>, <6>, <3>, <5>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 6,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <4>, <3>.\nNode <1> is connected to node <4>.\nNode <2> is connected to nodes <0>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <1>, <4>, <0>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 7,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <0>, <1>.\nNode <4> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <4>, <1>.\nNode <2> is connected to nodes <0>, <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <4>, <3>, <0>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 8,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <5>, <0>.\nNode <5> is connected to nodes <6>, <2>, <1>.\nNode <0> is connected to nodes <3>, <2>.\nNode <6> is connected to nodes <5>, <0>, <1>.\nNode <2> is connected to nodes <6>, <3>, <5>, <4>.\nNode <1> is connected to nodes <4>, <5>, <6>.\nNode <3> is connected to nodes <4>, <6>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <4>, <0>, <2>, <6>, <1>, <5>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 9,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <2>, <0>.\nNode <3> is connected to nodes <4>, <1>, <2>.\nNode <2> is connected to nodes <4>, <3>, <0>.\nNode <0> is connected to nodes <4>, <2>, <1>.\nNode <1> is connected to nodes <3>, <0>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <0>, <4>, <3>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 10,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <5>, <0>, <1>, <2>.\nNode <3> is connected to nodes <4>, <2>.\nNode <5> is connected to nodes <4>, <2>.\nNode <0> is connected to nodes <4>, <2>, <1>.\nNode <1> is connected to nodes <4>, <0>.\nNode <2> is connected to nodes <4>, <3>, <5>, <0>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <0>, <4>, <5>, <2>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 11,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <2>, <5>.\nNode <1> is connected to nodes <2>, <0>.\nNode <5> is connected to nodes <3>, <0>, <4>.\nNode <0> is connected to nodes <5>, <1>.\nNode <4> is connected to node <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <1>, <2>, <3>, <5>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 12,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <4>, <0>.\nNode <5> is connected to nodes <3>, <6>.\nNode <4> is connected to nodes <3>, <2>, <1>.\nNode <0> is connected to nodes <3>, <2>, <6>, <1>.\nNode <6> is connected to nodes <5>, <0>.\nNode <2> is connected to nodes <4>, <0>, <1>.\nNode <1> is connected to nodes <4>, <2>, <0>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <1>, <2>, <0>, <3>, <5>, <6>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 13,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <5>, <2>, <1>.\nNode <1> is connected to nodes <5>, <0>.\nNode <2> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <3>, <2>.\nNode <3> is connected to node <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<5>, <1>, <0>, <2>, <4>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 14,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <4>, <2>.\nNode <3> is connected to nodes <2>, <1>.\nNode <4> is connected to nodes <0>, <3>.\nNode <2> is connected to node <0>.\nNode <0> is connected to node <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <0>, <3>, <1>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 15,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <3>, <2>.\nNode <1> is connected to nodes <2>, <5>, <0>.\nNode <5> is connected to nodes <3>, <1>, <2>.\nNode <3> is connected to nodes <5>, <2>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <5>, <1>, <0>, <4>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 16,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <2>, <5>.\nNode <0> is connected to node <5>.\nNode <2> is connected to nodes <6>, <3>, <1>.\nNode <5> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <6>, <0>, <2>.\nNode <6> is connected to nodes <3>, <1>, <4>, <0>.\nNode <4> is connected to node <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <0>, <5>, <2>, <1>, <6>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 17,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <6>, <3>, <1>, <2>.\nNode <5> is connected to nodes <0>, <2>, <6>, <4>.\nNode <6> is connected to nodes <0>, <5>, <4>, <1>.\nNode <3> is connected to nodes <0>, <4>, <1>.\nNode <1> is connected to nodes <0>, <3>, <4>, <2>, <6>.\nNode <2> is connected to nodes <0>, <5>, <1>.\nNode <4> is connected to nodes <5>, <3>, <6>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <1>, <3>, <0>, <6>, <5>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 18,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <4>, <2>.\nNode <2> is connected to node <1>.\nNode <1> is connected to node <3>.\nNode <3> is connected to node <6>.\nNode <6> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <2>, <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<5>, <2>, <1>, <3>, <6>, <0>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 19,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <1>, <5>.\nNode <0> is connected to nodes <3>, <4>, <2>.\nNode <1> is connected to nodes <3>, <2>, <5>.\nNode <5> is connected to nodes <3>, <1>.\nNode <4> is connected to node <0>.\nNode <2> is connected to nodes <0>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<5>, <3>, <1>, <2>, <0>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 20,
        "question": "Given an undirected graph:\nNode <4> is connected to node <2>.\nNode <2> is connected to nodes <4>, <3>, <0>.\nNode <3> is connected to nodes <2>, <0>, <1>.\nNode <0> is connected to nodes <2>, <3>, <1>.\nNode <1> is connected to nodes <0>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <2>, <0>, <3>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 21,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <1>.\nNode <0> is connected to node <2>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to node <3>.\nNode <4> is connected to node <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <1>, <3>, <0>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 22,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <2>, <0>, <1>.\nNode <4> is connected to nodes <0>, <3>.\nNode <2> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <2>, <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <0>, <1>, <4>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 23,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <4>, <3>.\nNode <1> is connected to nodes <2>, <0>, <4>.\nNode <4> is connected to nodes <2>, <1>, <0>.\nNode <3> is connected to node <2>.\nNode <0> is connected to nodes <1>, <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <2>, <4>, <1>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 24,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <3>, <6>, <2>, <1>.\nNode <0> is connected to nodes <5>, <6>.\nNode <3> is connected to nodes <5>, <2>.\nNode <6> is connected to nodes <5>, <0>, <1>, <2>.\nNode <2> is connected to nodes <5>, <3>, <6>.\nNode <1> is connected to nodes <5>, <4>, <6>.\nNode <4> is connected to node <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <1>, <6>, <2>, <3>, <5>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 25,
        "question": "Given a directed graph:\nNode <3> is connected to node <4>.\nNode <4> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <2>, <3>, <1>, <4>.\nNode <2> is connected to nodes <1>, <0>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <1>, <0>, <4>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 26,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <3>, <5>, <0>.\nNode <5> is connected to nodes <3>, <1>, <0>, <4>.\nNode <0> is connected to nodes <1>, <2>, <5>, <4>.\nNode <2> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <0>, <2>, <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<5>, <3>, <1>, <0>, <4>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 27,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to node <1>.\nNode <4> is connected to nodes <1>, <0>, <3>.\nNode <0> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <0>, <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <0>, <4>, <1>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 28,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <1>.\nNode <0> is connected to node <4>.\nNode <1> is connected to nodes <4>, <3>.\nNode <2> is connected to node <3>.\nNode <3> is connected to nodes <2>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <3>, <1>, <4>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 29,
        "question": "Given a directed graph:\nNode <2> is connected to node <4>.\nNode <4> is connected to nodes <2>, <0>.\nNode <0> is connected to node <4>.\nNode <3> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <3>, <0>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <3>, <0>, <4>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 30,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <1>, <3>.\nNode <4> is connected to nodes <1>, <2>, <0>.\nNode <3> is connected to nodes <5>, <2>, <0>.\nNode <2> is connected to nodes <3>, <4>.\nNode <0> is connected to nodes <3>, <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <3>, <0>, <4>, <1>, <5>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 31,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <3>.\nNode <0> is connected to node <4>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <2>.\nNode <1> is connected to nodes <0>, <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <4>, <2>, <3>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 32,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <4>, <2>, <1>.\nNode <4> is connected to nodes <1>, <3>, <0>.\nNode <2> is connected to nodes <4>, <0>, <3>.\nNode <1> is connected to nodes <2>, <3>.\nNode <3> is connected to node <2>.\nNode <0> is connected to nodes <5>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <5>, <1>, <2>, <4>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 33,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <3>, <1>, <2>, <4>.\nNode <2> is connected to nodes <3>, <0>, <1>.\nNode <1> is connected to nodes <0>, <2>, <4>.\nNode <4> is connected to nodes <0>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <2>, <1>, <0>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 34,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <2>, <0>.\nNode <1> is connected to node <3>.\nNode <2> is connected to nodes <3>, <4>, <0>.\nNode <0> is connected to nodes <3>, <4>, <2>.\nNode <4> is connected to nodes <0>, <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <2>, <0>, <3>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 35,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <5>, <1>, <4>, <0>.\nNode <5> is connected to nodes <6>, <3>, <0>.\nNode <1> is connected to nodes <6>, <4>, <0>.\nNode <4> is connected to nodes <6>, <3>, <1>, <2>.\nNode <0> is connected to nodes <6>, <5>, <3>, <1>.\nNode <3> is connected to nodes <5>, <0>, <2>, <4>.\nNode <2> is connected to nodes <3>, <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <1>, <6>, <5>, <3>, <2>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 36,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <4>, <1>.\nNode <2> is connected to nodes <4>, <0>, <6>.\nNode <1> is connected to nodes <3>, <0>, <5>.\nNode <0> is connected to nodes <1>, <5>, <2>.\nNode <5> is connected to nodes <1>, <0>, <6>.\nNode <6> is connected to nodes <5>, <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<6>, <2>, <4>, <3>, <1>, <5>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 37,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <1>.\nNode <4> is connected to node <3>.\nNode <1> is connected to node <2>.\nNode <0> is connected to nodes <3>, <2>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <0>, <4>, <3>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 38,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <2>, <1>, <3>, <4>, <0>, <5>.\nNode <2> is connected to nodes <6>, <1>.\nNode <1> is connected to nodes <6>, <2>, <5>, <0>.\nNode <3> is connected to nodes <6>, <5>, <0>, <4>.\nNode <4> is connected to nodes <6>, <3>.\nNode <0> is connected to nodes <6>, <1>, <3>.\nNode <5> is connected to nodes <6>, <1>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<5>, <6>, <4>, <3>, <0>, <1>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 39,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <0>, <4>, <1>.\nNode <0> is connected to node <6>.\nNode <4> is connected to nodes <5>, <6>, <2>.\nNode <1> is connected to nodes <6>, <3>, <5>, <2>.\nNode <3> is connected to nodes <4>, <6>, <1>, <5>, <0>.\nNode <5> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <1>, <5>, <4>, <6>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<5>, <3>, <0>, <6>, <4>, <2>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 40,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <3>, <5>.\nNode <1> is connected to nodes <6>, <5>.\nNode <3> is connected to nodes <4>, <6>.\nNode <5> is connected to node <2>.\nNode <4> is connected to nodes <0>, <5>.\nNode <6> is connected to node <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <6>, <5>, <2>, <0>, <3>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 41,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <4>, <3>.\nNode <2> is connected to nodes <1>, <0>.\nNode <4> is connected to nodes <3>, <1>.\nNode <0> is connected to nodes <3>, <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <1>, <3>, <2>, <0>, <5>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 42,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <0>.\nNode <3> is connected to node <5>.\nNode <0> is connected to nodes <5>, <4>, <3>.\nNode <5> is connected to node <0>.\nNode <4> is connected to nodes <3>, <5>.\nNode <1> is connected to nodes <2>, <0>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <2>, <3>, <5>, <0>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 43,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>, <3>, <1>.\nNode <2> is connected to nodes <0>, <1>, <3>.\nNode <4> is connected to node <0>.\nNode <3> is connected to nodes <0>, <2>.\nNode <1> is connected to nodes <0>, <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <0>, <3>, <2>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 44,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <1>, <0>, <5>.\nNode <2> is connected to node <5>.\nNode <1> is connected to nodes <5>, <3>, <4>, <0>.\nNode <0> is connected to node <4>.\nNode <5> is connected to node <0>.\nNode <3> is connected to node <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <5>, <0>, <4>, <1>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 45,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <6>, <3>.\nNode <2> is connected to nodes <5>, <6>, <3>, <4>.\nNode <6> is connected to nodes <5>, <2>, <0>.\nNode <3> is connected to nodes <5>, <2>, <1>, <0>.\nNode <4> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <0>, <4>, <3>.\nNode <0> is connected to nodes <1>, <6>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <3>, <0>, <6>, <5>, <2>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 46,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <5>, <3>.\nNode <1> is connected to nodes <5>, <3>.\nNode <5> is connected to nodes <4>, <0>.\nNode <3> is connected to node <4>.\nNode <4> is connected to node <5>.\nNode <0> is connected to nodes <3>, <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <5>, <0>, <2>, <1>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 47,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <4>, <3>, <1>.\nNode <4> is connected to nodes <2>, <1>.\nNode <1> is connected to node <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <2>, <1>, <3>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 48,
        "question": "Given an undirected graph:\nNode <3> is connected to node <2>.\nNode <2> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <0>, <4>.\nNode <0> is connected to node <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <2>, <4>, <1>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 49,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <6>, <5>.\nNode <0> is connected to nodes <3>, <2>, <4>.\nNode <6> is connected to node <3>.\nNode <5> is connected to nodes <3>, <1>, <2>.\nNode <2> is connected to nodes <0>, <5>.\nNode <4> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <4>, <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<6>, <3>, <5>, <1>, <4>, <0>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 50,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <1>, <0>.\nNode <3> is connected to nodes <5>, <1>, <4>.\nNode <1> is connected to nodes <5>, <3>, <2>, <0>.\nNode <0> is connected to nodes <5>, <1>, <4>.\nNode <4> is connected to nodes <3>, <0>.\nNode <2> is connected to node <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <1>, <5>, <0>, <4>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 51,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <5>, <2>.\nNode <1> is connected to nodes <5>, <0>.\nNode <5> is connected to nodes <4>, <1>.\nNode <2> is connected to node <0>.\nNode <4> is connected to node <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <3>, <2>, <0>, <1>, <5>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 52,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <6>, <0>.\nNode <3> is connected to node <5>.\nNode <6> is connected to nodes <1>, <4>, <3>.\nNode <0> is connected to node <2>.\nNode <5> is connected to nodes <0>, <6>.\nNode <2> is connected to nodes <4>, <1>.\nNode <1> is connected to node <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <5>, <6>, <4>, <0>, <2>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 53,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <0>, <5>.\nNode <4> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <2>, <4>, <1>.\nNode <5> is connected to nodes <2>, <3>, <1>.\nNode <1> is connected to nodes <0>, <5>.\nNode <3> is connected to node <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <5>, <2>, <4>, <0>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 54,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <4>, <2>.\nNode <0> is connected to nodes <3>, <5>, <6>, <2>.\nNode <4> is connected to nodes <3>, <6>, <1>.\nNode <2> is connected to nodes <3>, <0>, <5>.\nNode <5> is connected to nodes <0>, <2>.\nNode <6> is connected to nodes <0>, <4>.\nNode <1> is connected to node <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<5>, <2>, <3>, <0>, <6>, <4>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 55,
        "question": "Given a directed graph:\nNode <1> is connected to node <0>.\nNode <0> is connected to nodes <5>, <3>.\nNode <5> is connected to nodes <2>, <1>.\nNode <3> is connected to node <2>.\nNode <2> is connected to node <4>.\nNode <4> is connected to nodes <1>, <3>, <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <2>, <4>, <5>, <1>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 56,
        "question": "Given a directed graph:\nNode <1> is connected to node <3>.\nNode <3> is connected to node <5>.\nNode <2> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <3>, <0>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <0>, <4>, <1>, <3>, <5>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 57,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <1>, <2>, <5>.\nNode <4> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <0>, <4>.\nNode <5> is connected to nodes <0>, <3>.\nNode <3> is connected to node <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <4>, <1>, <0>, <5>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 58,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <6>, <2>, <3>, <4>, <5>.\nNode <6> is connected to nodes <2>, <4>, <3>, <1>.\nNode <2> is connected to nodes <0>, <5>.\nNode <3> is connected to node <6>.\nNode <4> is connected to nodes <1>, <3>, <0>.\nNode <5> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <3>, <5>, <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <5>, <4>, <1>, <3>, <6>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 59,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <1>, <2>, <3>, <5>.\nNode <1> is connected to nodes <3>, <0>, <5>.\nNode <3> is connected to nodes <5>, <4>, <0>, <1>.\nNode <5> is connected to nodes <2>, <1>, <0>, <6>.\nNode <6> is connected to nodes <5>, <2>.\nNode <4> is connected to nodes <0>, <3>, <1>, <6>, <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <6>, <2>, <0>, <3>, <1>, <5>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 60,
        "question": "Given a directed graph:\nNode <1> is connected to node <2>.\nNode <2> is connected to node <3>.\nNode <3> is connected to node <4>.\nNode <4> is connected to node <1>.\nNode <0> is connected to nodes <4>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <1>, <2>, <3>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 61,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <6>, <2>.\nNode <0> is connected to nodes <2>, <5>.\nNode <6> is connected to nodes <2>, <5>, <0>, <3>.\nNode <2> is connected to nodes <1>, <5>, <3>, <4>.\nNode <1> is connected to nodes <0>, <3>, <5>.\nNode <3> is connected to node <6>.\nNode <4> is connected to nodes <3>, <5>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <5>, <0>, <2>, <4>, <3>, <6>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 62,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <0>.\nNode <4> is connected to node <3>.\nNode <3> is connected to nodes <2>, <4>, <1>.\nNode <2> is connected to nodes <0>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <4>, <3>, <2>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 63,
        "question": "Given a directed graph:\nNode <2> is connected to node <3>.\nNode <3> is connected to nodes <4>, <1>.\nNode <4> is connected to node <6>.\nNode <1> is connected to nodes <4>, <2>.\nNode <6> is connected to nodes <5>, <3>.\nNode <5> is connected to node <2>.\nNode <0> is connected to node <6>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <6>, <5>, <2>, <3>, <1>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 64,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5>, <0>, <4>, <3>.\nNode <5> is connected to node <0>.\nNode <0> is connected to nodes <4>, <1>, <3>.\nNode <4> is connected to nodes <6>, <1>.\nNode <3> is connected to nodes <2>, <5>, <6>.\nNode <1> is connected to nodes <5>, <0>, <3>, <4>.\nNode <6> is connected to nodes <3>, <4>, <0>, <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <3>, <6>, <0>, <4>, <1>, <5>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 65,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <0>, <3>.\nNode <1> is connected to nodes <0>, <4>.\nNode <3> is connected to nodes <1>, <2>.\nNode <4> is connected to nodes <0>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <3>, <2>, <1>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 66,
        "question": "Given a directed graph:\nNode <0> is connected to node <1>.\nNode <1> is connected to nodes <3>, <4>, <2>.\nNode <3> is connected to node <4>.\nNode <4> is connected to node <2>.\nNode <2> is connected to nodes <0>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <0>, <1>, <3>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 67,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <3>, <1>, <4>.\nNode <0> is connected to nodes <5>, <4>.\nNode <3> is connected to nodes <1>, <6>, <4>, <2>, <0>.\nNode <1> is connected to nodes <6>, <3>.\nNode <4> is connected to nodes <1>, <6>, <3>.\nNode <5> is connected to nodes <0>, <2>, <6>.\nNode <6> is connected to node <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <6>, <5>, <2>, <1>, <3>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 68,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <4>, <2>.\nNode <5> is connected to node <4>.\nNode <2> is connected to node <5>.\nNode <3> is connected to nodes <4>, <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <4>, <0>, <1>, <2>, <5>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 69,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <0>, <4>.\nNode <1> is connected to node <0>.\nNode <4> is connected to nodes <2>, <3>.\nNode <3> is connected to node <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <0>, <2>, <4>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 70,
        "question": "Given a directed graph:\nNode <4> is connected to node <2>.\nNode <2> is connected to node <1>.\nNode <1> is connected to nodes <4>, <0>, <3>.\nNode <0> is connected to nodes <4>, <2>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <2>, <1>, <0>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 71,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <2>.\nNode <5> is connected to nodes <1>, <0>, <4>.\nNode <2> is connected to nodes <1>, <3>.\nNode <0> is connected to nodes <5>, <4>, <3>.\nNode <4> is connected to nodes <5>, <0>.\nNode <3> is connected to nodes <0>, <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <2>, <1>, <5>, <4>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 72,
        "question": "Given a directed graph:\nNode <1> is connected to node <6>.\nNode <6> is connected to node <0>.\nNode <0> is connected to node <6>.\nNode <4> is connected to nodes <2>, <0>.\nNode <2> is connected to node <3>.\nNode <3> is connected to node <5>.\nNode <5> is connected to node <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <2>, <3>, <5>, <1>, <6>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 73,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <0>.\nNode <2> is connected to node <4>.\nNode <0> is connected to node <3>.\nNode <4> is connected to nodes <3>, <2>.\nNode <3> is connected to node <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <4>, <3>, <1>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 74,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <0>.\nNode <3> is connected to node <1>.\nNode <0> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <0>, <4>.\nNode <4> is connected to node <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <2>, <0>, <1>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 75,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <0>, <4>, <2>.\nNode <4> is connected to node <6>.\nNode <0> is connected to nodes <4>, <3>, <1>, <6>.\nNode <2> is connected to node <1>.\nNode <3> is connected to nodes <5>, <6>.\nNode <6> is connected to node <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<6>, <2>, <1>, <0>, <3>, <5>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 76,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <1>, <0>, <4>, <3>.\nNode <4> is connected to nodes <0>, <6>.\nNode <5> is connected to nodes <4>, <6>, <0>.\nNode <0> is connected to nodes <6>, <3>.\nNode <1> is connected to nodes <6>, <0>, <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<5>, <0>, <3>, <2>, <1>, <4>, <6>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 77,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <6>, <4>.\nNode <3> is connected to nodes <5>, <4>, <2>.\nNode <6> is connected to nodes <5>, <2>, <4>, <1>.\nNode <4> is connected to nodes <5>, <3>, <6>.\nNode <2> is connected to nodes <3>, <6>.\nNode <1> is connected to nodes <6>, <0>.\nNode <0> is connected to node <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<5>, <4>, <3>, <2>, <6>, <1>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 78,
        "question": "Given a directed graph:\nNode <0> is connected to node <3>.\nNode <3> is connected to node <4>.\nNode <4> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <0>, <3>.\nNode <2> is connected to nodes <3>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <3>, <4>, <1>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 79,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <5>, <2>.\nNode <3> is connected to nodes <5>, <4>.\nNode <2> is connected to nodes <1>, <0>.\nNode <0> is connected to node <2>.\nNode <4> is connected to node <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <3>, <5>, <1>, <2>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 80,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <0>, <6>.\nNode <6> is connected to nodes <2>, <3>, <4>.\nNode <4> is connected to node <3>.\nNode <5> is connected to nodes <0>, <6>, <3>, <1>.\nNode <1> is connected to node <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <5>, <6>, <4>, <3>, <0>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 81,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <3>, <1>.\nNode <2> is connected to nodes <4>, <0>, <3>.\nNode <3> is connected to nodes <4>, <2>, <0>.\nNode <1> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <2>, <1>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <2>, <3>, <0>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 82,
        "question": "Given a directed graph:\nNode <2> is connected to node <4>.\nNode <4> is connected to nodes <1>, <2>.\nNode <1> is connected to node <3>.\nNode <0> is connected to node <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <2>, <4>, <1>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 83,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <1>, <2>.\nNode <3> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <4>, <3>, <0>, <2>.\nNode <2> is connected to nodes <4>, <1>.\nNode <0> is connected to node <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <4>, <3>, <1>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 84,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <0>, <5>, <2>.\nNode <1> is connected to nodes <4>, <5>.\nNode <0> is connected to nodes <1>, <3>, <6>.\nNode <5> is connected to nodes <0>, <4>.\nNode <2> is connected to nodes <4>, <5>.\nNode <3> is connected to nodes <1>, <5>.\nNode <6> is connected to nodes <2>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <1>, <5>, <0>, <6>, <2>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 85,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5>, <4>, <3>, <0>.\nNode <5> is connected to nodes <4>, <2>, <0>.\nNode <4> is connected to node <6>.\nNode <3> is connected to nodes <2>, <6>, <5>, <1>.\nNode <0> is connected to nodes <5>, <2>.\nNode <6> is connected to nodes <2>, <5>, <0>, <4>.\nNode <1> is connected to nodes <2>, <0>, <6>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <1>, <0>, <2>, <5>, <4>, <6>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 86,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <1>, <0>, <5>, <6>.\nNode <4> is connected to nodes <2>, <5>, <6>.\nNode <1> is connected to nodes <2>, <6>, <3>.\nNode <0> is connected to nodes <2>, <3>.\nNode <5> is connected to nodes <2>, <4>, <6>.\nNode <6> is connected to nodes <2>, <4>, <5>, <1>.\nNode <3> is connected to nodes <1>, <0>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <3>, <1>, <6>, <2>, <5>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 87,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <2>, <0>.\nNode <5> is connected to nodes <4>, <2>, <3>, <1>.\nNode <2> is connected to nodes <4>, <5>, <3>.\nNode <0> is connected to node <4>.\nNode <3> is connected to nodes <5>, <2>.\nNode <1> is connected to node <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <4>, <2>, <3>, <5>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 88,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <4>, <0>.\nNode <2> is connected to nodes <3>, <1>.\nNode <4> is connected to nodes <3>, <1>.\nNode <0> is connected to node <3>.\nNode <1> is connected to nodes <2>, <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <3>, <2>, <1>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 89,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <2>, <1>.\nNode <3> is connected to nodes <5>, <1>, <4>.\nNode <2> is connected to nodes <5>, <0>.\nNode <1> is connected to nodes <5>, <3>, <4>.\nNode <4> is connected to nodes <3>, <1>.\nNode <0> is connected to node <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <2>, <5>, <1>, <4>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 90,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <3>, <2>.\nNode <3> is connected to node <0>.\nNode <2> is connected to nodes <1>, <0>.\nNode <1> is connected to node <5>.\nNode <4> is connected to nodes <2>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <2>, <1>, <5>, <3>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 91,
        "question": "Given a directed graph:\nNode <1> is connected to node <2>.\nNode <2> is connected to node <3>.\nNode <3> is connected to nodes <0>, <4>, <2>.\nNode <0> is connected to node <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <2>, <3>, <0>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 92,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <2>.\nNode <3> is connected to node <1>.\nNode <2> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <0>, <5>.\nNode <5> is connected to node <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<5>, <4>, <0>, <2>, <1>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 93,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <0>, <3>.\nNode <4> is connected to nodes <0>, <3>, <1>, <2>.\nNode <3> is connected to nodes <5>, <4>, <1>.\nNode <1> is connected to nodes <3>, <4>, <2>.\nNode <2> is connected to nodes <4>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <4>, <0>, <5>, <3>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 94,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <5>.\nNode <5> is connected to node <2>.\nNode <2> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <5>, <0>.\nNode <3> is connected to nodes <1>, <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <1>, <0>, <5>, <2>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 95,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <3>.\nNode <0> is connected to node <1>.\nNode <3> is connected to nodes <2>, <1>, <0>.\nNode <1> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <4>, <3>, <0>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <3>, <2>, <0>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 96,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <4>.\nNode <4> is connected to node <6>.\nNode <6> is connected to nodes <2>, <1>.\nNode <2> is connected to node <1>.\nNode <5> is connected to nodes <3>, <1>.\nNode <3> is connected to node <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<5>, <3>, <4>, <6>, <2>, <1>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 97,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <4>, <1>.\nNode <0> is connected to nodes <4>, <3>, <1>.\nNode <1> is connected to nodes <2>, <0>.\nNode <3> is connected to nodes <0>, <5>.\nNode <5> is connected to node <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <2>, <1>, <0>, <3>, <5>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 98,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <4>, <0>, <1>, <6>.\nNode <5> is connected to nodes <3>, <0>, <2>.\nNode <4> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <3>, <5>, <4>, <6>, <2>.\nNode <1> is connected to nodes <3>, <6>, <2>.\nNode <6> is connected to nodes <3>, <2>, <0>, <1>.\nNode <2> is connected to nodes <5>, <6>, <0>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<6>, <2>, <1>, <3>, <4>, <0>, <5>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 99,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <0>.\nNode <1> is connected to node <5>.\nNode <0> is connected to node <4>.\nNode <5> is connected to nodes <3>, <0>.\nNode <4> is connected to nodes <3>, <6>, <0>.\nNode <6> is connected to node <5>.\nNode <2> is connected to nodes <1>, <3>, <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <1>, <5>, <3>, <0>, <4>, <6>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 100,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <0>, <1>, <5>, <3>.\nNode <5> is connected to nodes <0>, <2>, <3>, <4>.\nNode <1> is connected to nodes <2>, <4>.\nNode <3> is connected to nodes <2>, <5>.\nNode <4> is connected to nodes <5>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <4>, <5>, <0>, <2>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 101,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <1>, <2>.\nNode <5> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <3>, <5>.\nNode <2> is connected to nodes <3>, <0>, <4>.\nNode <0> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <0>, <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <4>, <2>, <3>, <5>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 102,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <1>, <5>.\nNode <0> is connected to nodes <2>, <4>, <5>.\nNode <1> is connected to nodes <2>, <3>.\nNode <5> is connected to nodes <2>, <0>, <3>.\nNode <4> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <4>, <5>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <2>, <0>, <5>, <3>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 103,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <2>, <4>, <3>.\nNode <2> is connected to node <0>.\nNode <4> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <2>, <4>.\nNode <0> is connected to node <5>.\nNode <5> is connected to node <0>.\nNode <1> is connected to nodes <0>, <6>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <6>, <3>, <4>, <2>, <0>, <5>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 104,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <3>, <0>, <2>.\nNode <3> is connected to nodes <6>, <5>, <0>, <4>.\nNode <0> is connected to node <5>.\nNode <2> is connected to nodes <4>, <3>, <6>.\nNode <5> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <3>, <0>, <6>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<6>, <1>, <2>, <3>, <0>, <5>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 105,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <0>.\nNode <4> is connected to node <5>.\nNode <0> is connected to nodes <1>, <3>.\nNode <5> is connected to node <0>.\nNode <3> is connected to nodes <1>, <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <4>, <5>, <0>, <3>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 106,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <6>, <2>.\nNode <6> is connected to nodes <5>, <3>.\nNode <5> is connected to node <0>.\nNode <3> is connected to node <1>.\nNode <0> is connected to nodes <4>, <6>.\nNode <4> is connected to nodes <0>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<6>, <5>, <0>, <4>, <3>, <1>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 107,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <0>, <4>.\nNode <1> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <3>, <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <2>, <1>, <3>, <4>, <5>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 108,
        "question": "Given a directed graph:\nNode <3> is connected to node <1>.\nNode <1> is connected to node <0>.\nNode <2> is connected to nodes <0>, <3>.\nNode <4> is connected to nodes <1>, <2>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <2>, <3>, <1>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 109,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <4>.\nNode <0> is connected to node <1>.\nNode <4> is connected to node <3>.\nNode <5> is connected to nodes <2>, <0>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <0>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<5>, <2>, <1>, <4>, <3>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 110,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <2>, <0>.\nNode <4> is connected to node <2>.\nNode <0> is connected to nodes <1>, <3>.\nNode <3> is connected to node <0>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <2>, <1>, <0>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 111,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <4>, <0>, <3>.\nNode <2> is connected to nodes <5>, <3>, <1>, <4>.\nNode <4> is connected to nodes <5>, <2>, <3>, <6>, <0>.\nNode <0> is connected to nodes <5>, <4>.\nNode <3> is connected to nodes <5>, <2>, <1>, <4>, <6>.\nNode <1> is connected to nodes <2>, <3>, <6>.\nNode <6> is connected to nodes <3>, <1>, <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <0>, <5>, <3>, <2>, <1>, <6>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 112,
        "question": "Given an undirected graph:\nNode <0> is connected to node <2>.\nNode <2> is connected to nodes <0>, <1>, <3>.\nNode <1> is connected to nodes <2>, <4>.\nNode <3> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <3>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <2>, <1>, <4>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 113,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <3>, <1>.\nNode <2> is connected to node <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <3>, <0>, <4>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 114,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <2>, <0>.\nNode <1> is connected to nodes <2>, <4>.\nNode <0> is connected to node <3>.\nNode <4> is connected to node <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <1>, <2>, <3>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 115,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <3>, <6>.\nNode <4> is connected to nodes <5>, <0>.\nNode <3> is connected to nodes <6>, <0>, <1>.\nNode <5> is connected to nodes <4>, <6>, <3>.\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to nodes <6>, <4>, <3>, <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <5>, <4>, <0>, <3>, <6>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 116,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <0>, <2>.\nNode <4> is connected to nodes <0>, <3>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <4>, <0>, <1>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 117,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <0>, <3>.\nNode <4> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <2>, <5>.\nNode <1> is connected to node <4>.\nNode <5> is connected to node <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <4>, <0>, <2>, <3>, <5>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 118,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <5>, <4>.\nNode <2> is connected to node <5>.\nNode <5> is connected to nodes <1>, <2>.\nNode <4> is connected to nodes <2>, <0>, <1>.\nNode <3> is connected to node <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <2>, <5>, <1>, <4>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 119,
        "question": "Given a directed graph:\nNode <4> is connected to node <2>.\nNode <2> is connected to nodes <6>, <5>.\nNode <6> is connected to nodes <5>, <0>.\nNode <5> is connected to nodes <3>, <0>, <2>, <6>.\nNode <3> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <5>, <6>, <2>.\nNode <1> is connected to nodes <0>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <0>, <6>, <5>, <3>, <4>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 120,
        "question": "Given a directed graph:\nNode <2> is connected to node <4>.\nNode <4> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <2>, <4>.\nNode <3> is connected to nodes <1>, <2>, <4>.\nNode <0> is connected to nodes <4>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <4>, <3>, <1>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 121,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <0>, <1>, <5>.\nNode <2> is connected to nodes <1>, <4>, <0>, <3>.\nNode <1> is connected to nodes <3>, <0>.\nNode <4> is connected to node <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <3>, <5>, <2>, <1>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 122,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <6>, <3>.\nNode <1> is connected to nodes <0>, <5>.\nNode <6> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <0>, <6>.\nNode <5> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <5>, <4>.\nNode <4> is connected to node <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <6>, <0>, <1>, <5>, <2>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 123,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <4>, <2>.\nNode <3> is connected to nodes <1>, <5>, <4>.\nNode <4> is connected to nodes <1>, <3>, <5>, <0>, <2>.\nNode <2> is connected to nodes <1>, <4>.\nNode <5> is connected to nodes <3>, <0>, <4>.\nNode <0> is connected to nodes <5>, <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <1>, <3>, <4>, <5>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 124,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <0>, <2>, <5>.\nNode <4> is connected to nodes <0>, <2>, <1>.\nNode <2> is connected to nodes <3>, <1>, <4>.\nNode <5> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <2>, <5>, <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <0>, <3>, <2>, <1>, <5>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 125,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <6>, <4>, <2>.\nNode <3> is connected to nodes <1>, <0>, <5>, <2>.\nNode <6> is connected to nodes <5>, <3>, <0>, <2>.\nNode <4> is connected to nodes <6>, <1>, <2>, <0>.\nNode <2> is connected to node <1>.\nNode <0> is connected to nodes <3>, <2>.\nNode <5> is connected to node <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <6>, <5>, <4>, <0>, <3>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 126,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <4>, <6>.\nNode <5> is connected to nodes <0>, <3>.\nNode <6> is connected to nodes <1>, <0>.\nNode <0> is connected to node <2>.\nNode <3> is connected to nodes <2>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<6>, <0>, <2>, <5>, <3>, <1>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 127,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <6>, <1>, <2>, <3>.\nNode <5> is connected to nodes <4>, <1>, <0>.\nNode <6> is connected to nodes <4>, <2>, <0>, <1>.\nNode <1> is connected to nodes <4>, <5>, <2>, <6>, <3>, <0>.\nNode <2> is connected to nodes <4>, <6>, <1>.\nNode <3> is connected to nodes <4>, <1>, <0>.\nNode <0> is connected to nodes <5>, <6>, <1>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <3>, <4>, <2>, <6>, <1>, <5>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 128,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <1>, <4>.\nNode <3> is connected to nodes <2>, <0>.\nNode <1> is connected to nodes <2>, <0>, <5>.\nNode <4> is connected to nodes <2>, <0>, <5>.\nNode <0> is connected to nodes <3>, <1>, <4>.\nNode <5> is connected to nodes <1>, <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<5>, <1>, <2>, <4>, <0>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 129,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <1>, <5>, <4>.\nNode <3> is connected to nodes <1>, <4>, <5>.\nNode <5> is connected to nodes <2>, <3>, <0>.\nNode <4> is connected to nodes <2>, <3>.\nNode <0> is connected to node <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <3>, <4>, <2>, <5>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 130,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <3>, <2>.\nNode <0> is connected to nodes <4>, <3>, <1>.\nNode <3> is connected to nodes <4>, <0>, <2>.\nNode <2> is connected to nodes <4>, <3>.\nNode <1> is connected to node <0>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <4>, <3>, <0>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 131,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <1>, <2>.\nNode <3> is connected to node <1>.\nNode <2> is connected to nodes <6>, <4>.\nNode <4> is connected to node <5>.\nNode <5> is connected to node <0>.\nNode <6> is connected to node <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <6>, <4>, <5>, <0>, <3>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 132,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <6>, <5>, <1>.\nNode <0> is connected to nodes <2>, <6>, <5>, <4>.\nNode <6> is connected to nodes <2>, <0>, <4>, <1>.\nNode <5> is connected to nodes <2>, <0>, <3>.\nNode <1> is connected to nodes <2>, <4>, <6>.\nNode <4> is connected to nodes <0>, <6>, <1>.\nNode <3> is connected to node <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <5>, <2>, <0>, <4>, <6>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 133,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <4>, <6>, <0>.\nNode <4> is connected to nodes <3>, <1>.\nNode <6> is connected to nodes <4>, <2>, <0>.\nNode <0> is connected to nodes <5>, <3>.\nNode <3> is connected to nodes <4>, <5>.\nNode <1> is connected to nodes <0>, <5>.\nNode <2> is connected to nodes <0>, <3>, <4>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<6>, <2>, <1>, <0>, <3>, <5>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 134,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <5>, <6>.\nNode <3> is connected to nodes <2>, <1>.\nNode <5> is connected to nodes <2>, <4>, <0>.\nNode <6> is connected to nodes <2>, <4>, <0>.\nNode <1> is connected to node <3>.\nNode <4> is connected to nodes <6>, <5>.\nNode <0> is connected to nodes <6>, <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <6>, <0>, <5>, <2>, <3>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 135,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <3>, <0>, <1>.\nNode <4> is connected to nodes <2>, <3>, <0>.\nNode <3> is connected to nodes <2>, <4>, <0>, <1>.\nNode <0> is connected to nodes <2>, <4>, <3>.\nNode <1> is connected to nodes <2>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <3>, <1>, <2>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 136,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <0>.\nNode <5> is connected to nodes <2>, <4>.\nNode <0> is connected to nodes <2>, <3>.\nNode <4> is connected to nodes <5>, <1>.\nNode <3> is connected to node <0>.\nNode <1> is connected to node <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <0>, <2>, <5>, <4>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 137,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <0>, <4>, <5>, <2>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <3>.\nNode <2> is connected to nodes <0>, <4>.\nNode <3> is connected to node <2>.\nNode <1> is connected to node <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<6>, <4>, <1>, <5>, <3>, <2>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 138,
        "question": "Given a directed graph:\nNode <0> is connected to node <1>.\nNode <1> is connected to node <4>.\nNode <4> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <0>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <0>, <1>, <4>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 139,
        "question": "Given an undirected graph:\nNode <4> is connected to node <0>.\nNode <0> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <2>, <3>.\nNode <3> is connected to node <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <0>, <2>, <1>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 140,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <1>.\nNode <4> is connected to node <0>.\nNode <0> is connected to nodes <4>, <5>.\nNode <5> is connected to node <2>.\nNode <2> is connected to nodes <5>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <0>, <5>, <2>, <3>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 141,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <4>, <3>.\nNode <0> is connected to node <5>.\nNode <4> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <5>, <2>.\nNode <2> is connected to node <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <4>, <0>, <5>, <1>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 142,
        "question": "Given a directed graph:\nNode <0> is connected to node <2>.\nNode <2> is connected to node <4>.\nNode <4> is connected to node <5>.\nNode <3> is connected to node <5>.\nNode <5> is connected to node <1>.\nNode <1> is connected to nodes <3>, <0>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <5>, <1>, <0>, <2>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 143,
        "question": "Given a directed graph:\nNode <2> is connected to node <0>.\nNode <0> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <3>, <0>, <2>.\nNode <4> is connected to nodes <1>, <2>.\nNode <3> is connected to node <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <1>, <0>, <4>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 144,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <4>, <0>, <2>.\nNode <3> is connected to nodes <1>, <2>.\nNode <4> is connected to nodes <5>, <2>.\nNode <0> is connected to node <3>.\nNode <2> is connected to nodes <4>, <0>.\nNode <5> is connected to nodes <0>, <6>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <0>, <3>, <1>, <4>, <5>, <6>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 145,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <4>, <0>, <1>, <3>.\nNode <4> is connected to nodes <2>, <5>, <6>.\nNode <0> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <5>, <3>, <4>, <0>.\nNode <3> is connected to nodes <0>, <2>, <1>.\nNode <2> is connected to nodes <1>, <4>.\nNode <6> is connected to nodes <5>, <4>, <0>, <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <2>, <4>, <6>, <5>, <0>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 146,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <3>, <1>, <4>.\nNode <0> is connected to nodes <3>, <4>.\nNode <1> is connected to node <2>.\nNode <4> is connected to nodes <2>, <0>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <0>, <4>, <2>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 147,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <5>, <4>, <1>.\nNode <2> is connected to nodes <3>, <5>, <6>, <1>, <4>, <0>.\nNode <5> is connected to nodes <3>, <2>, <0>.\nNode <4> is connected to nodes <3>, <2>, <6>, <0>.\nNode <1> is connected to nodes <3>, <2>, <6>.\nNode <6> is connected to nodes <2>, <4>, <1>.\nNode <0> is connected to nodes <2>, <5>, <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <5>, <0>, <4>, <6>, <2>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 148,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <4>, <2>, <0>, <6>, <5>.\nNode <1> is connected to nodes <3>, <4>, <5>, <6>, <2>.\nNode <4> is connected to nodes <3>, <1>, <0>, <5>.\nNode <2> is connected to nodes <3>, <1>.\nNode <0> is connected to nodes <3>, <4>, <6>, <5>.\nNode <6> is connected to nodes <3>, <1>, <0>, <5>.\nNode <5> is connected to nodes <3>, <1>, <4>, <0>, <6>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <3>, <2>, <1>, <6>, <5>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 149,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <4>, <1>.\nNode <1> is connected to node <2>.\nNode <2> is connected to node <0>.\nNode <0> is connected to nodes <3>, <2>.\nNode <5> is connected to node <6>.\nNode <3> is connected to node <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <2>, <0>, <3>, <5>, <6>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 150,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <5>, <6>.\nNode <4> is connected to nodes <2>, <6>, <5>.\nNode <5> is connected to nodes <2>, <4>, <3>.\nNode <6> is connected to nodes <2>, <4>, <0>.\nNode <1> is connected to node <0>.\nNode <0> is connected to nodes <1>, <6>.\nNode <3> is connected to node <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <0>, <6>, <2>, <4>, <5>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 151,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <4>, <5>.\nNode <0> is connected to nodes <4>, <5>.\nNode <5> is connected to nodes <2>, <1>, <0>, <3>.\nNode <1> is connected to nodes <5>, <3>.\nNode <3> is connected to nodes <5>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <4>, <2>, <5>, <3>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 152,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <4>, <0>, <3>.\nNode <2> is connected to nodes <1>, <3>, <4>.\nNode <4> is connected to nodes <1>, <2>.\nNode <0> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <1>, <2>, <0>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <3>, <1>, <2>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 153,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <1>, <2>, <3>.\nNode <5> is connected to nodes <0>, <3>, <1>, <2>.\nNode <1> is connected to nodes <0>, <5>, <4>.\nNode <2> is connected to nodes <0>, <5>.\nNode <3> is connected to nodes <0>, <5>, <4>.\nNode <4> is connected to nodes <1>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <4>, <1>, <0>, <2>, <5>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 154,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <3>, <0>.\nNode <1> is connected to nodes <2>, <4>, <3>, <0>.\nNode <3> is connected to nodes <2>, <1>.\nNode <0> is connected to nodes <2>, <1>, <4>.\nNode <4> is connected to nodes <1>, <0>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <0>, <4>, <1>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 155,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <3>, <1>.\nNode <0> is connected to node <3>.\nNode <3> is connected to nodes <0>, <4>.\nNode <1> is connected to node <3>.\nNode <4> is connected to node <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <3>, <4>, <2>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 156,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <1>, <4>.\nNode <2> is connected to node <3>.\nNode <1> is connected to nodes <3>, <0>.\nNode <4> is connected to nodes <3>, <0>, <5>.\nNode <0> is connected to nodes <1>, <4>, <5>.\nNode <5> is connected to nodes <0>, <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <0>, <5>, <4>, <3>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 157,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <3>, <5>, <4>.\nNode <3> is connected to nodes <6>, <5>, <0>, <2>.\nNode <5> is connected to nodes <6>, <3>, <4>, <1>.\nNode <4> is connected to nodes <6>, <1>, <5>, <2>.\nNode <0> is connected to nodes <3>, <1>, <2>.\nNode <2> is connected to nodes <3>, <4>, <0>.\nNode <1> is connected to nodes <4>, <0>, <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<6>, <3>, <2>, <4>, <5>, <1>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 158,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <5>, <6>.\nNode <3> is connected to nodes <6>, <1>, <5>.\nNode <5> is connected to nodes <3>, <1>.\nNode <6> is connected to node <1>.\nNode <2> is connected to nodes <1>, <4>, <6>, <3>, <0>.\nNode <4> is connected to nodes <0>, <1>, <6>.\nNode <0> is connected to nodes <2>, <6>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <2>, <4>, <6>, <1>, <3>, <5>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 159,
        "question": "Given a directed graph:\nNode <3> is connected to node <0>.\nNode <0> is connected to node <2>.\nNode <2> is connected to node <1>.\nNode <1> is connected to node <4>.\nNode <4> is connected to node <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <3>, <0>, <2>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 160,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <4>, <0>, <2>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <2>.\nNode <0> is connected to nodes <3>, <5>.\nNode <2> is connected to nodes <3>, <4>, <1>, <5>.\nNode <5> is connected to node <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <2>, <5>, <1>, <3>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 161,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <2>, <5>.\nNode <3> is connected to nodes <0>, <5>, <4>.\nNode <2> is connected to node <0>.\nNode <5> is connected to nodes <0>, <3>.\nNode <4> is connected to nodes <3>, <1>.\nNode <1> is connected to node <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <0>, <5>, <3>, <4>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 162,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <4>, <0>.\nNode <1> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <2>, <1>, <3>.\nNode <0> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <4>, <0>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <3>, <4>, <2>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 163,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <2>, <1>.\nNode <3> is connected to nodes <4>, <1>, <0>, <5>.\nNode <2> is connected to nodes <4>, <5>.\nNode <1> is connected to nodes <4>, <3>, <0>.\nNode <0> is connected to nodes <3>, <1>.\nNode <5> is connected to nodes <3>, <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <4>, <2>, <5>, <3>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 164,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <5>, <3>.\nNode <2> is connected to node <6>.\nNode <5> is connected to node <6>.\nNode <3> is connected to nodes <0>, <6>, <1>.\nNode <6> is connected to nodes <3>, <5>.\nNode <1> is connected to nodes <2>, <0>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <6>, <3>, <1>, <0>, <4>, <5>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 165,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <4>, <3>, <0>, <1>, <2>.\nNode <4> is connected to nodes <6>, <3>.\nNode <3> is connected to nodes <6>, <4>, <2>.\nNode <0> is connected to nodes <6>, <2>, <5>.\nNode <1> is connected to nodes <6>, <5>.\nNode <2> is connected to nodes <6>, <3>, <0>.\nNode <5> is connected to nodes <0>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <5>, <0>, <2>, <6>, <3>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 166,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <1>.\nNode <3> is connected to node <2>.\nNode <1> is connected to node <4>.\nNode <2> is connected to node <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <3>, <2>, <1>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 167,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5>, <3>.\nNode <5> is connected to node <1>.\nNode <3> is connected to node <4>.\nNode <1> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <5>, <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<5>, <1>, <0>, <2>, <3>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 168,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <5>, <1>.\nNode <4> is connected to nodes <5>, <2>.\nNode <1> is connected to nodes <3>, <0>.\nNode <2> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <2>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <4>, <5>, <3>, <1>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 169,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <1>, <0>.\nNode <3> is connected to nodes <1>, <2>.\nNode <0> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <3>, <0>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <1>, <4>, <0>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 170,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <4>, <2>, <1>.\nNode <5> is connected to nodes <3>, <1>.\nNode <4> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <3>, <4>, <1>, <0>.\nNode <1> is connected to nodes <3>, <5>, <2>, <0>.\nNode <0> is connected to nodes <2>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <4>, <3>, <5>, <1>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 171,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <1>, <4>, <3>.\nNode <1> is connected to nodes <4>, <6>.\nNode <4> is connected to nodes <5>, <0>.\nNode <3> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <1>, <4>, <6>.\nNode <0> is connected to nodes <6>, <1>.\nNode <2> is connected to node <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <3>, <5>, <1>, <4>, <0>, <6>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 172,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <2>, <5>, <4>.\nNode <2> is connected to nodes <6>, <5>, <0>, <3>, <1>.\nNode <5> is connected to nodes <6>, <2>, <4>, <0>.\nNode <4> is connected to nodes <6>, <5>, <0>.\nNode <0> is connected to nodes <2>, <5>, <4>, <3>, <1>.\nNode <3> is connected to nodes <2>, <0>, <1>.\nNode <1> is connected to nodes <2>, <0>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<5>, <0>, <4>, <6>, <2>, <1>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 173,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <0>, <1>, <4>.\nNode <3> is connected to nodes <2>, <4>, <0>, <1>.\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <2>, <3>.\nNode <4> is connected to nodes <2>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <2>, <4>, <3>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 174,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <3>, <2>.\nNode <1> is connected to nodes <0>, <2>.\nNode <3> is connected to node <1>.\nNode <2> is connected to node <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <0>, <3>, <1>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 175,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <0>, <3>, <5>.\nNode <1> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <4>, <1>, <5>, <2>.\nNode <5> is connected to nodes <4>, <3>, <2>.\nNode <2> is connected to nodes <3>, <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <0>, <4>, <5>, <2>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 176,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <2>.\nNode <0> is connected to node <4>.\nNode <4> is connected to nodes <3>, <0>.\nNode <3> is connected to node <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <4>, <3>, <1>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 177,
        "question": "Given a directed graph:\nNode <3> is connected to node <4>.\nNode <4> is connected to nodes <0>, <1>.\nNode <0> is connected to node <4>.\nNode <1> is connected to nodes <3>, <2>.\nNode <2> is connected to node <5>.\nNode <5> is connected to nodes <4>, <0>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <5>, <0>, <4>, <1>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 178,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <5>, <3>.\nNode <5> is connected to nodes <1>, <4>.\nNode <3> is connected to nodes <1>, <4>.\nNode <1> is connected to node <2>.\nNode <0> is connected to nodes <2>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <3>, <4>, <5>, <1>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 179,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <3>, <4>, <2>.\nNode <1> is connected to nodes <0>, <3>, <2>.\nNode <3> is connected to nodes <0>, <1>, <4>.\nNode <4> is connected to nodes <0>, <3>.\nNode <2> is connected to nodes <0>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <4>, <0>, <1>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 180,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <5>, <3>, <2>.\nNode <3> is connected to node <1>.\nNode <2> is connected to node <3>.\nNode <4> is connected to node <2>.\nNode <0> is connected to node <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <4>, <2>, <3>, <1>, <5>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 181,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <3>, <0>, <4>.\nNode <2> is connected to node <4>.\nNode <3> is connected to nodes <1>, <4>.\nNode <0> is connected to node <6>.\nNode <4> is connected to nodes <1>, <5>, <0>.\nNode <5> is connected to nodes <3>, <0>, <4>.\nNode <6> is connected to node <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <6>, <5>, <3>, <1>, <2>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 182,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <0>, <4>.\nNode <2> is connected to nodes <3>, <1>.\nNode <0> is connected to nodes <3>, <1>.\nNode <4> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <2>, <0>, <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <3>, <0>, <1>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 183,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <4>, <2>, <1>.\nNode <4> is connected to nodes <1>, <5>, <3>.\nNode <2> is connected to nodes <3>, <1>.\nNode <1> is connected to node <3>.\nNode <5> is connected to nodes <6>, <0>.\nNode <3> is connected to nodes <1>, <4>, <0>, <6>, <2>.\nNode <0> is connected to nodes <4>, <1>, <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <6>, <4>, <5>, <0>, <2>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 184,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <6>, <1>.\nNode <6> is connected to nodes <0>, <4>.\nNode <1> is connected to node <5>.\nNode <0> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <2>, <1>.\nNode <3> is connected to nodes <6>, <0>, <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <6>, <0>, <4>, <1>, <5>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 185,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <2>, <1>.\nNode <1> is connected to node <3>.\nNode <3> is connected to node <2>.\nNode <0> is connected to nodes <2>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <3>, <2>, <4>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 186,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <5>, <2>, <1>, <4>.\nNode <5> is connected to nodes <6>, <1>, <0>, <2>.\nNode <2> is connected to nodes <6>, <5>, <0>, <3>.\nNode <1> is connected to nodes <6>, <5>, <3>.\nNode <4> is connected to nodes <6>, <0>, <3>.\nNode <0> is connected to nodes <5>, <4>, <2>.\nNode <3> is connected to nodes <4>, <2>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <2>, <6>, <4>, <3>, <1>, <5>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 187,
        "question": "Given a directed graph:\nNode <3> is connected to node <5>.\nNode <5> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <2>, <5>.\nNode <2> is connected to node <3>.\nNode <1> is connected to nodes <4>, <2>.\nNode <4> is connected to node <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <4>, <3>, <5>, <0>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 188,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <2>, <3>.\nNode <4> is connected to nodes <2>, <1>, <0>.\nNode <0> is connected to nodes <3>, <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <0>, <3>, <1>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 189,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <4>, <0>, <5>.\nNode <3> is connected to nodes <4>, <5>.\nNode <0> is connected to node <2>.\nNode <5> is connected to nodes <2>, <3>, <1>.\nNode <1> is connected to node <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <5>, <3>, <4>, <2>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 190,
        "question": "Given a directed graph:\nNode <0> is connected to node <3>.\nNode <3> is connected to node <4>.\nNode <1> is connected to node <2>.\nNode <2> is connected to nodes <0>, <4>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <2>, <0>, <3>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 191,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <3>, <0>, <1>.\nNode <4> is connected to nodes <2>, <0>, <1>.\nNode <3> is connected to nodes <2>, <0>, <1>.\nNode <0> is connected to nodes <2>, <4>, <3>.\nNode <1> is connected to nodes <2>, <4>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <4>, <1>, <3>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 192,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <2>, <5>.\nNode <1> is connected to node <2>.\nNode <2> is connected to node <3>.\nNode <5> is connected to node <1>.\nNode <4> is connected to nodes <3>, <1>, <5>.\nNode <0> is connected to node <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <4>, <1>, <2>, <3>, <5>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 193,
        "question": "Given a directed graph:\nNode <3> is connected to node <1>.\nNode <1> is connected to nodes <5>, <4>.\nNode <4> is connected to nodes <0>, <2>, <3>.\nNode <0> is connected to nodes <5>, <3>.\nNode <2> is connected to node <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <4>, <0>, <3>, <1>, <5>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 194,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <6>.\nNode <1> is connected to nodes <2>, <0>.\nNode <6> is connected to nodes <2>, <3>.\nNode <0> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <6>, <0>, <4>.\nNode <4> is connected to nodes <3>, <5>.\nNode <5> is connected to node <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<6>, <2>, <1>, <0>, <3>, <4>, <5>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 195,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <6>, <1>, <5>.\nNode <3> is connected to node <1>.\nNode <6> is connected to node <5>.\nNode <1> is connected to nodes <2>, <0>.\nNode <5> is connected to nodes <0>, <6>.\nNode <0> is connected to node <1>.\nNode <2> is connected to nodes <3>, <1>, <6>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <3>, <1>, <2>, <6>, <5>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 196,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <2>, <3>.\nNode <0> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <1>, <0>, <4>.\nNode <3> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <2>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <3>, <4>, <2>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 197,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <2>, <5>.\nNode <0> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <3>, <0>.\nNode <5> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <5>, <1>.\nNode <1> is connected to node <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <4>, <5>, <3>, <2>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 198,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <4>.\nNode <1> is connected to node <0>.\nNode <4> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <4>, <3>.\nNode <3> is connected to node <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <2>, <4>, <0>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 199,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5>, <1>.\nNode <5> is connected to node <4>.\nNode <4> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <5>, <1>.\nNode <2> is connected to node <0>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <0>, <5>, <4>, <3>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 200,
        "question": "Given a directed graph:\nNode <1> is connected to node <4>.\nNode <4> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <4>, <0>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <0>, <3>, <2>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 201,
        "question": "Given a directed graph:\nNode <2> is connected to node <1>.\nNode <1> is connected to node <0>.\nNode <0> is connected to nodes <4>, <3>, <2>.\nNode <3> is connected to nodes <0>, <4>.\nNode <4> is connected to node <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <1>, <0>, <4>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 202,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5>, <1>.\nNode <5> is connected to node <3>.\nNode <3> is connected to node <2>.\nNode <2> is connected to nodes <4>, <0>.\nNode <4> is connected to node <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <5>, <3>, <2>, <0>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 203,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <2>, <4>.\nNode <3> is connected to nodes <2>, <5>.\nNode <4> is connected to nodes <1>, <6>, <5>.\nNode <6> is connected to nodes <4>, <5>.\nNode <5> is connected to nodes <4>, <3>, <0>, <6>.\nNode <0> is connected to node <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <5>, <3>, <2>, <1>, <4>, <6>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 204,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <0>, <5>.\nNode <1> is connected to nodes <0>, <4>, <3>.\nNode <0> is connected to node <6>.\nNode <5> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <0>, <1>.\nNode <6> is connected to nodes <1>, <2>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <1>, <3>, <5>, <0>, <6>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 205,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <5>, <0>.\nNode <3> is connected to nodes <1>, <4>, <0>.\nNode <5> is connected to nodes <1>, <2>.\nNode <0> is connected to nodes <1>, <3>, <4>.\nNode <4> is connected to nodes <3>, <0>.\nNode <2> is connected to node <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <5>, <1>, <0>, <3>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 206,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <3>, <5>.\nNode <4> is connected to node <0>.\nNode <3> is connected to nodes <1>, <2>, <0>.\nNode <1> is connected to nodes <2>, <3>, <5>, <0>, <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <4>, <0>, <3>, <1>, <5>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 207,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <2> is connected to node <4>.\nNode <3> is connected to node <2>.\nNode <4> is connected to nodes <5>, <0>.\nNode <5> is connected to node <6>.\nNode <6> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <6>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <3>, <2>, <4>, <5>, <6>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 208,
        "question": "Given a directed graph:\nNode <5> is connected to node <0>.\nNode <0> is connected to nodes <2>, <3>.\nNode <2> is connected to node <3>.\nNode <3> is connected to nodes <5>, <1>, <2>, <0>.\nNode <4> is connected to nodes <0>, <3>.\nNode <1> is connected to node <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <0>, <2>, <3>, <1>, <5>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 209,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <4>, <2>.\nNode <2> is connected to node <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <1>, <4>, <0>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 210,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <2>, <5>.\nNode <3> is connected to nodes <2>, <5>.\nNode <5> is connected to nodes <4>, <3>, <1>.\nNode <1> is connected to nodes <5>, <0>.\nNode <0> is connected to node <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <1>, <5>, <3>, <2>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 211,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <5>, <2>.\nNode <5> is connected to node <6>.\nNode <2> is connected to nodes <5>, <4>.\nNode <6> is connected to node <0>.\nNode <4> is connected to nodes <0>, <2>, <3>.\nNode <0> is connected to node <6>.\nNode <3> is connected to node <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <2>, <4>, <3>, <5>, <6>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 212,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <6>, <1>, <3>.\nNode <6> is connected to nodes <0>, <2>, <1>.\nNode <1> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <2>, <5>.\nNode <0> is connected to node <1>.\nNode <2> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <4>, <2>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<5>, <4>, <6>, <0>, <1>, <3>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 213,
        "question": "Given a directed graph:\nNode <4> is connected to node <1>.\nNode <1> is connected to nodes <2>, <0>.\nNode <2> is connected to node <3>.\nNode <0> is connected to node <4>.\nNode <3> is connected to node <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <4>, <1>, <2>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 214,
        "question": "Given a directed graph:\nNode <0> is connected to node <3>.\nNode <3> is connected to nodes <2>, <0>, <1>.\nNode <1> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <0>, <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <4>, <0>, <3>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 215,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <2>, <0>.\nNode <4> is connected to node <2>.\nNode <2> is connected to node <5>.\nNode <0> is connected to node <3>.\nNode <3> is connected to node <2>.\nNode <5> is connected to nodes <4>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <0>, <3>, <2>, <5>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 216,
        "question": "Given a directed graph:\nNode <4> is connected to node <3>.\nNode <3> is connected to node <0>.\nNode <0> is connected to node <1>.\nNode <1> is connected to nodes <5>, <3>.\nNode <5> is connected to node <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <3>, <0>, <1>, <5>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 217,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <5>, <1>.\nNode <4> is connected to nodes <2>, <5>, <3>.\nNode <5> is connected to nodes <2>, <4>, <1>, <0>.\nNode <1> is connected to nodes <2>, <5>, <0>.\nNode <3> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <5>, <1>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <5>, <4>, <3>, <0>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 218,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <1>, <5>.\nNode <2> is connected to nodes <0>, <3>, <1>.\nNode <1> is connected to nodes <0>, <2>, <5>.\nNode <5> is connected to nodes <0>, <3>, <1>.\nNode <3> is connected to nodes <2>, <6>, <5>, <4>.\nNode <6> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <3>, <6>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <5>, <1>, <2>, <3>, <4>, <6>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 219,
        "question": "Given a directed graph:\nNode <3> is connected to node <1>.\nNode <0> is connected to node <2>.\nNode <2> is connected to nodes <4>, <3>.\nNode <4> is connected to node <5>.\nNode <5> is connected to node <0>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <5>, <0>, <2>, <3>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 220,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <0>, <2>, <3>.\nNode <1> is connected to nodes <4>, <0>, <2>.\nNode <0> is connected to nodes <1>, <3>, <4>, <2>, <6>.\nNode <2> is connected to nodes <0>, <6>.\nNode <3> is connected to nodes <4>, <5>.\nNode <6> is connected to nodes <3>, <0>.\nNode <5> is connected to nodes <4>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <2>, <6>, <3>, <5>, <4>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 221,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <1>, <2>, <0>, <5>, <3>.\nNode <1> is connected to nodes <6>, <5>, <4>, <0>.\nNode <2> is connected to nodes <6>, <4>, <3>, <5>.\nNode <0> is connected to nodes <6>, <1>, <4>, <3>.\nNode <5> is connected to nodes <6>, <1>, <4>, <2>.\nNode <3> is connected to nodes <6>, <4>, <2>, <0>.\nNode <4> is connected to nodes <1>, <3>, <0>, <2>, <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<6>, <5>, <4>, <2>, <3>, <0>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 222,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <6>, <3>, <4>.\nNode <6> is connected to nodes <1>, <0>, <2>.\nNode <3> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <3>, <5>.\nNode <1> is connected to nodes <6>, <2>, <0>, <4>.\nNode <0> is connected to nodes <6>, <5>.\nNode <5> is connected to nodes <3>, <4>, <0>, <6>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <3>, <2>, <6>, <1>, <0>, <5>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 223,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <0>, <1>.\nNode <2> is connected to nodes <3>, <4>, <5>.\nNode <0> is connected to nodes <3>, <5>, <1>.\nNode <1> is connected to nodes <3>, <4>, <0>.\nNode <4> is connected to nodes <2>, <1>.\nNode <5> is connected to nodes <2>, <0>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<5>, <0>, <3>, <2>, <4>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 224,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <1>, <6>.\nNode <2> is connected to nodes <3>, <4>, <5>.\nNode <1> is connected to nodes <3>, <4>, <5>, <0>.\nNode <6> is connected to nodes <3>, <0>.\nNode <4> is connected to nodes <2>, <1>.\nNode <5> is connected to nodes <2>, <1>, <0>.\nNode <0> is connected to nodes <1>, <5>, <6>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <6>, <3>, <1>, <4>, <2>, <5>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 225,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <2>, <0>.\nNode <4> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <3>, <4>, <1>.\nNode <0> is connected to nodes <3>, <5>.\nNode <1> is connected to nodes <2>, <5>.\nNode <5> is connected to nodes <1>, <0>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<5>, <0>, <3>, <4>, <2>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 226,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <3>, <6>.\nNode <0> is connected to nodes <2>, <1>.\nNode <3> is connected to nodes <2>, <5>.\nNode <6> is connected to nodes <2>, <5>.\nNode <1> is connected to nodes <0>, <4>.\nNode <5> is connected to nodes <3>, <6>.\nNode <4> is connected to node <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <5>, <6>, <2>, <0>, <1>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 227,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <2>, <1>.\nNode <4> is connected to node <1>.\nNode <2> is connected to nodes <1>, <6>.\nNode <1> is connected to nodes <3>, <5>, <6>.\nNode <5> is connected to nodes <6>, <3>, <2>.\nNode <6> is connected to node <0>.\nNode <0> is connected to node <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <4>, <1>, <5>, <2>, <6>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 228,
        "question": "Given a directed graph:\nNode <4> is connected to node <3>.\nNode <3> is connected to node <1>.\nNode <1> is connected to nodes <2>, <4>.\nNode <0> is connected to node <1>.\nNode <2> is connected to node <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <1>, <2>, <4>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 229,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <4>, <0>.\nNode <1> is connected to nodes <3>, <4>, <2>, <0>.\nNode <4> is connected to nodes <3>, <1>, <5>.\nNode <0> is connected to nodes <3>, <1>.\nNode <2> is connected to nodes <1>, <5>.\nNode <5> is connected to nodes <4>, <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <3>, <0>, <1>, <2>, <5>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 230,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <3>.\nNode <5> is connected to nodes <0>, <6>.\nNode <3> is connected to nodes <0>, <4>.\nNode <6> is connected to nodes <5>, <2>.\nNode <4> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <4>, <1>, <6>.\nNode <1> is connected to node <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <2>, <4>, <3>, <0>, <5>, <6>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 231,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <2>, <1>, <0>.\nNode <3> is connected to nodes <5>, <6>, <0>.\nNode <2> is connected to node <5>.\nNode <1> is connected to nodes <5>, <0>, <4>, <6>.\nNode <0> is connected to nodes <5>, <3>, <1>.\nNode <6> is connected to nodes <3>, <1>.\nNode <4> is connected to node <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <5>, <0>, <3>, <6>, <1>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 232,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <4>, <6>, <2>, <1>.\nNode <1> is connected to nodes <4>, <0>, <5>.\nNode <6> is connected to nodes <0>, <2>, <3>.\nNode <2> is connected to nodes <0>, <6>, <5>, <3>.\nNode <3> is connected to nodes <6>, <2>.\nNode <5> is connected to nodes <2>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <5>, <1>, <4>, <0>, <6>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 233,
        "question": "Given a directed graph:\nNode <2> is connected to node <3>.\nNode <3> is connected to nodes <0>, <5>.\nNode <0> is connected to node <5>.\nNode <5> is connected to nodes <4>, <1>.\nNode <1> is connected to node <6>.\nNode <6> is connected to node <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <3>, <0>, <5>, <1>, <6>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 234,
        "question": "Given a directed graph:\nNode <5> is connected to node <2>.\nNode <2> is connected to node <3>.\nNode <3> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <4>, <3>.\nNode <6> is connected to nodes <2>, <0>, <5>, <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<6>, <5>, <2>, <3>, <1>, <0>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 235,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <0>, <5>.\nNode <0> is connected to nodes <1>, <4>.\nNode <5> is connected to nodes <1>, <2>.\nNode <3> is connected to nodes <4>, <5>.\nNode <2> is connected to nodes <3>, <5>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <3>, <4>, <5>, <1>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 236,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <3>, <5>, <0>, <4>.\nNode <0> is connected to nodes <3>, <2>, <4>, <5>, <1>.\nNode <5> is connected to nodes <2>, <0>, <1>.\nNode <4> is connected to nodes <2>, <0>, <1>.\nNode <1> is connected to nodes <4>, <0>, <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <2>, <5>, <1>, <4>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 237,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <2>.\nNode <5> is connected to node <0>.\nNode <2> is connected to nodes <0>, <4>.\nNode <3> is connected to node <1>.\nNode <1> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <1>, <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <1>, <4>, <2>, <0>, <5>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 238,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <6>, <5>.\nNode <6> is connected to node <5>.\nNode <5> is connected to node <0>.\nNode <0> is connected to nodes <3>, <4>.\nNode <4> is connected to node <1>.\nNode <1> is connected to node <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <1>, <2>, <6>, <5>, <0>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 239,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5>, <1>.\nNode <5> is connected to nodes <4>, <3>.\nNode <1> is connected to node <3>.\nNode <4> is connected to nodes <2>, <0>.\nNode <3> is connected to nodes <5>, <1>.\nNode <2> is connected to nodes <1>, <0>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <2>, <0>, <1>, <3>, <5>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 240,
        "question": "Given a directed graph:\nNode <1> is connected to node <3>.\nNode <3> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <0>, <3>, <2>.\nNode <5> is connected to node <0>.\nNode <0> is connected to node <3>.\nNode <2> is connected to node <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <3>, <4>, <2>, <5>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 241,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <2>, <3>.\nNode <0> is connected to nodes <1>, <4>.\nNode <2> is connected to nodes <1>, <4>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <1>, <2>, <4>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 242,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <6>, <0>, <2>.\nNode <1> is connected to nodes <4>, <6>, <0>.\nNode <6> is connected to nodes <4>, <1>, <5>, <3>.\nNode <0> is connected to nodes <4>, <1>, <2>.\nNode <2> is connected to nodes <4>, <5>, <0>.\nNode <5> is connected to nodes <2>, <6>.\nNode <3> is connected to node <6>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <6>, <5>, <2>, <0>, <4>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 243,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <5>, <2>, <0>.\nNode <5> is connected to nodes <1>, <0>.\nNode <2> is connected to node <5>.\nNode <4> is connected to node <1>.\nNode <3> is connected to node <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <4>, <1>, <2>, <5>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 244,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <5>, <0>.\nNode <2> is connected to nodes <3>, <1>, <0>.\nNode <5> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <4>, <2>, <3>.\nNode <1> is connected to nodes <2>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <4>, <5>, <2>, <1>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 245,
        "question": "Given an undirected graph:\nNode <1> is connected to node <2>.\nNode <2> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <0>, <3>.\nNode <0> is connected to node <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <2>, <3>, <4>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 246,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5>, <3>.\nNode <5> is connected to nodes <4>, <3>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <3>.\nNode <6> is connected to nodes <0>, <2>, <5>.\nNode <1> is connected to nodes <0>, <6>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <3>, <1>, <6>, <5>, <4>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 247,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <4>, <2>, <3>.\nNode <4> is connected to nodes <6>, <5>, <2>.\nNode <2> is connected to nodes <6>, <4>, <0>, <1>, <5>.\nNode <3> is connected to nodes <6>, <0>, <1>.\nNode <5> is connected to nodes <4>, <2>, <1>.\nNode <0> is connected to nodes <3>, <2>.\nNode <1> is connected to nodes <3>, <2>, <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<6>, <3>, <0>, <2>, <1>, <5>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 248,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <5>, <2>, <3>.\nNode <5> is connected to nodes <1>, <3>.\nNode <3> is connected to node <1>.\nNode <1> is connected to nodes <5>, <0>.\nNode <0> is connected to node <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <4>, <5>, <3>, <1>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 249,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <6>, <3>.\nNode <2> is connected to nodes <5>, <4>, <0>.\nNode <6> is connected to nodes <5>, <1>, <3>.\nNode <3> is connected to nodes <5>, <6>.\nNode <4> is connected to nodes <2>, <1>.\nNode <0> is connected to node <2>.\nNode <1> is connected to nodes <6>, <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<5>, <3>, <6>, <1>, <4>, <2>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 250,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <2>, <0>.\nNode <4> is connected to node <3>.\nNode <0> is connected to node <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <1>, <2>, <3>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 251,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <5>, <1>, <6>, <3>.\nNode <2> is connected to nodes <0>, <6>, <5>.\nNode <5> is connected to nodes <0>, <2>, <6>, <1>, <4>.\nNode <1> is connected to nodes <0>, <6>, <3>, <5>.\nNode <6> is connected to nodes <0>, <2>, <5>, <1>, <4>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <6>, <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <2>, <5>, <4>, <6>, <1>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 252,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <6>, <0>, <4>.\nNode <1> is connected to nodes <2>, <6>, <0>, <4>, <3>.\nNode <6> is connected to nodes <2>, <1>, <5>.\nNode <0> is connected to nodes <2>, <1>, <5>, <3>.\nNode <4> is connected to nodes <2>, <1>, <5>.\nNode <3> is connected to nodes <1>, <0>.\nNode <5> is connected to nodes <0>, <6>, <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <6>, <5>, <0>, <3>, <1>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 253,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <4>.\nNode <3> is connected to node <4>.\nNode <4> is connected to node <2>.\nNode <2> is connected to node <1>.\nNode <5> is connected to node <1>.\nNode <0> is connected to node <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <5>, <1>, <3>, <4>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 254,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <6>, <2>.\nNode <4> is connected to nodes <5>, <2>, <6>.\nNode <6> is connected to nodes <5>, <4>.\nNode <2> is connected to nodes <5>, <4>, <1>, <3>.\nNode <1> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <2>, <0>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <0>, <3>, <2>, <5>, <4>, <6>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 255,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <3>.\nNode <4> is connected to node <2>.\nNode <3> is connected to nodes <4>, <0>.\nNode <2> is connected to node <0>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <3>, <4>, <2>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 256,
        "question": "Given a directed graph:\nNode <0> is connected to node <3>.\nNode <3> is connected to node <1>.\nNode <1> is connected to node <2>.\nNode <5> is connected to node <0>.\nNode <2> is connected to node <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<5>, <0>, <3>, <1>, <2>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 257,
        "question": "Given a directed graph:\nNode <3> is connected to node <0>.\nNode <0> is connected to nodes <3>, <1>.\nNode <2> is connected to node <3>.\nNode <4> is connected to node <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <2>, <3>, <0>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 258,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <4>, <3>.\nNode <1> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <0>, <1>, <2>.\nNode <3> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <4>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <0>, <1>, <4>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 259,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <3>, <4>, <1>.\nNode <2> is connected to nodes <3>, <1>, <5>.\nNode <4> is connected to node <0>.\nNode <1> is connected to nodes <0>, <5>, <2>.\nNode <5> is connected to nodes <1>, <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <2>, <5>, <1>, <0>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 260,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <1>, <6>.\nNode <5> is connected to node <4>.\nNode <1> is connected to node <0>.\nNode <6> is connected to nodes <5>, <3>, <4>.\nNode <3> is connected to node <0>.\nNode <0> is connected to nodes <2>, <6>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<5>, <4>, <2>, <1>, <0>, <6>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 261,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <1>, <2>.\nNode <2> is connected to node <3>.\nNode <1> is connected to node <4>.\nNode <3> is connected to node <0>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <3>, <0>, <1>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 262,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <3>, <6>, <2>.\nNode <1> is connected to nodes <0>, <3>, <5>.\nNode <3> is connected to nodes <0>, <1>, <6>, <2>.\nNode <6> is connected to nodes <0>, <3>.\nNode <2> is connected to nodes <0>, <3>.\nNode <5> is connected to nodes <1>, <4>.\nNode <4> is connected to node <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <3>, <6>, <0>, <1>, <5>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 263,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <4>, <1>, <5>.\nNode <4> is connected to nodes <6>, <5>, <2>.\nNode <1> is connected to nodes <6>, <5>, <0>, <3>.\nNode <5> is connected to nodes <6>, <4>, <0>, <1>, <3>.\nNode <2> is connected to nodes <4>, <3>.\nNode <0> is connected to nodes <5>, <1>.\nNode <3> is connected to nodes <5>, <1>, <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<6>, <4>, <2>, <3>, <5>, <1>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 264,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <2>, <0>, <5>.\nNode <1> is connected to nodes <2>, <3>, <5>.\nNode <0> is connected to nodes <4>, <3>.\nNode <5> is connected to nodes <4>, <1>.\nNode <3> is connected to nodes <1>, <0>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <1>, <3>, <0>, <4>, <5>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 265,
        "question": "Given a directed graph:\nNode <4> is connected to node <5>.\nNode <5> is connected to node <1>.\nNode <1> is connected to node <0>.\nNode <0> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <1>, <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <4>, <5>, <1>, <0>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 266,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <1>.\nNode <3> is connected to node <0>.\nNode <1> is connected to nodes <0>, <4>, <2>.\nNode <4> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <4>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <2>, <1>, <0>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 267,
        "question": "Given an undirected graph:\nNode <1> is connected to node <2>.\nNode <2> is connected to nodes <1>, <3>, <5>.\nNode <3> is connected to nodes <2>, <0>, <4>.\nNode <5> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <5>, <3>, <4>.\nNode <4> is connected to nodes <0>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <2>, <5>, <0>, <4>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 268,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <1>, <4>.\nNode <0> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <2>, <0>, <3>, <1>.\nNode <3> is connected to node <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <4>, <1>, <2>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 269,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <3>, <2>, <0>, <6>, <1>.\nNode <3> is connected to nodes <5>, <4>.\nNode <2> is connected to nodes <1>, <0>, <6>, <4>.\nNode <0> is connected to nodes <3>, <2>, <4>.\nNode <6> is connected to nodes <4>, <2>.\nNode <1> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <5>, <2>, <6>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<6>, <2>, <1>, <4>, <5>, <0>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 270,
        "question": "Given a directed graph:\nNode <4> is connected to node <2>.\nNode <2> is connected to node <1>.\nNode <1> is connected to node <3>.\nNode <3> is connected to nodes <1>, <4>, <6>.\nNode <6> is connected to nodes <5>, <1>, <2>.\nNode <5> is connected to node <0>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <2>, <1>, <3>, <6>, <5>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 271,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <2>, <5>, <3>.\nNode <1> is connected to nodes <4>, <6>.\nNode <2> is connected to nodes <4>, <5>, <0>, <6>, <3>.\nNode <5> is connected to nodes <4>, <2>, <0>.\nNode <3> is connected to nodes <4>, <2>, <0>.\nNode <6> is connected to nodes <1>, <2>.\nNode <0> is connected to nodes <5>, <2>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <5>, <4>, <1>, <6>, <2>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 272,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <3>, <5>, <1>.\nNode <2> is connected to nodes <4>, <0>, <5>, <1>.\nNode <3> is connected to nodes <4>, <1>.\nNode <5> is connected to nodes <4>, <2>.\nNode <1> is connected to nodes <4>, <2>, <3>.\nNode <0> is connected to node <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<5>, <4>, <3>, <1>, <2>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 273,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <6>, <3>.\nNode <3> is connected to nodes <4>, <5>.\nNode <6> is connected to node <1>.\nNode <5> is connected to nodes <0>, <4>.\nNode <0> is connected to node <3>.\nNode <4> is connected to nodes <3>, <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <6>, <1>, <3>, <4>, <5>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 274,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <3>, <4>.\nNode <1> is connected to nodes <0>, <2>, <4>.\nNode <3> is connected to nodes <0>, <2>.\nNode <4> is connected to nodes <0>, <1>, <2>.\nNode <2> is connected to nodes <1>, <3>, <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <3>, <2>, <1>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 275,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <1>, <4>.\nNode <0> is connected to node <4>.\nNode <3> is connected to node <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <2>, <1>, <0>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 276,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <4>, <5>, <3>.\nNode <0> is connected to nodes <4>, <6>.\nNode <5> is connected to nodes <1>, <2>, <3>.\nNode <3> is connected to nodes <1>, <5>, <6>.\nNode <2> is connected to node <5>.\nNode <6> is connected to nodes <0>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <0>, <6>, <3>, <1>, <5>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 277,
        "question": "Given a directed graph:\nNode <3> is connected to node <2>.\nNode <2> is connected to node <4>.\nNode <4> is connected to node <5>.\nNode <5> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <4>, <2>, <1>.\nNode <1> is connected to nodes <2>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <2>, <4>, <5>, <1>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 278,
        "question": "Given a directed graph:\nNode <1> is connected to node <2>.\nNode <2> is connected to node <3>.\nNode <3> is connected to nodes <1>, <4>, <0>.\nNode <4> is connected to node <0>.\nNode <0> is connected to nodes <4>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <2>, <3>, <4>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 279,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <3>, <0>.\nNode <2> is connected to nodes <4>, <1>.\nNode <3> is connected to nodes <4>, <0>, <1>.\nNode <0> is connected to nodes <4>, <3>.\nNode <1> is connected to nodes <2>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <2>, <1>, <3>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 280,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <2>, <4>, <1>.\nNode <4> is connected to nodes <2>, <3>, <0>.\nNode <1> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <1>, <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <3>, <1>, <0>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 281,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <2>, <1>, <3>.\nNode <3> is connected to nodes <4>, <1>.\nNode <2> is connected to nodes <1>, <3>, <4>, <0>.\nNode <1> is connected to nodes <4>, <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <4>, <0>, <1>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 282,
        "question": "Given an undirected graph:\nNode <0> is connected to node <3>.\nNode <3> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to node <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <3>, <4>, <1>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 283,
        "question": "Given a directed graph:\nNode <4> is connected to node <3>.\nNode <3> is connected to nodes <4>, <2>, <0>.\nNode <2> is connected to node <4>.\nNode <0> is connected to nodes <5>, <2>.\nNode <5> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <3>, <2>, <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <3>, <0>, <5>, <2>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 284,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <1>, <0>.\nNode <4> is connected to nodes <1>, <2>.\nNode <0> is connected to node <3>.\nNode <2> is connected to node <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <4>, <1>, <3>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 285,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <6>, <3>.\nNode <6> is connected to nodes <5>, <4>.\nNode <4> is connected to nodes <1>, <3>, <6>.\nNode <1> is connected to nodes <5>, <6>, <2>.\nNode <2> is connected to node <0>.\nNode <0> is connected to nodes <4>, <6>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <1>, <2>, <0>, <6>, <5>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 286,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <1>, <5>.\nNode <3> is connected to node <6>.\nNode <1> is connected to nodes <3>, <2>.\nNode <5> is connected to node <4>.\nNode <6> is connected to node <1>.\nNode <2> is connected to nodes <1>, <0>.\nNode <4> is connected to nodes <1>, <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<5>, <4>, <1>, <2>, <0>, <3>, <6>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 287,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <4>, <2>.\nNode <1> is connected to nodes <0>, <3>.\nNode <4> is connected to node <0>.\nNode <2> is connected to nodes <4>, <0>, <1>.\nNode <0> is connected to node <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <2>, <1>, <0>, <4>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 288,
        "question": "Given a directed graph:\nNode <2> is connected to node <3>.\nNode <3> is connected to node <4>.\nNode <4> is connected to nodes <5>, <0>.\nNode <0> is connected to nodes <5>, <1>.\nNode <5> is connected to nodes <2>, <0>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<2>, <3>, <4>, <5>, <0>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 289,
        "question": "Given an undirected graph:\nNode <4> is connected to node <3>.\nNode <3> is connected to nodes <4>, <2>, <0>.\nNode <2> is connected to nodes <3>, <1>, <0>.\nNode <0> is connected to nodes <3>, <2>.\nNode <1> is connected to node <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <3>, <0>, <2>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 290,
        "question": "Given a directed graph:\nNode <4> is connected to node <0>.\nNode <3> is connected to nodes <0>, <2>.\nNode <2> is connected to node <5>.\nNode <5> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <5>, <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <2>, <5>, <1>, <4>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 291,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <0>, <3>.\nNode <4> is connected to nodes <1>, <5>, <3>, <2>, <0>.\nNode <3> is connected to nodes <2>, <6>, <4>.\nNode <1> is connected to nodes <6>, <0>.\nNode <5> is connected to node <4>.\nNode <6> is connected to nodes <2>, <5>, <1>, <3>, <0>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <6>, <5>, <4>, <3>, <2>, <0>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 292,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <3>, <4>, <2>.\nNode <2> is connected to nodes <0>, <1>.\nNode <1> is connected to node <3>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<3>, <4>, <0>, <2>, <1>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 293,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <6>, <0>, <4>, <5>, <1>.\nNode <2> is connected to nodes <5>, <1>, <4>.\nNode <6> is connected to nodes <3>, <5>, <2>, <0>.\nNode <0> is connected to nodes <1>, <5>.\nNode <4> is connected to node <0>.\nNode <5> is connected to nodes <3>, <0>, <6>.\nNode <1> is connected to node <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <0>, <5>, <6>, <3>, <1>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 294,
        "question": "Given a directed graph:\nNode <2> is connected to node <3>.\nNode <3> is connected to node <2>.\nNode <1> is connected to node <4>.\nNode <4> is connected to nodes <0>, <3>, <2>.\nNode <0> is connected to node <1>.\nNode <5> is connected to nodes <2>, <0>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<5>, <0>, <1>, <4>, <2>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 295,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <2>, <1>.\nNode <3> is connected to nodes <4>, <1>, <5>.\nNode <2> is connected to nodes <4>, <1>, <0>.\nNode <1> is connected to nodes <4>, <3>, <2>.\nNode <5> is connected to node <3>.\nNode <0> is connected to node <2>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <2>, <1>, <4>, <3>, <5>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 296,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <2>, <3>, <1>, <0>.\nNode <1> is connected to nodes <4>, <5>.\nNode <5> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <4>, <5>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <5>, <1>, <4>, <2>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 297,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <0>, <6>.\nNode <3> is connected to nodes <4>, <2>, <0>, <5>, <6>.\nNode <0> is connected to nodes <4>, <3>, <1>, <6>.\nNode <6> is connected to nodes <4>, <3>, <0>.\nNode <2> is connected to nodes <3>, <1>, <5>.\nNode <5> is connected to nodes <3>, <1>, <2>.\nNode <1> is connected to nodes <2>, <5>, <0>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<4>, <6>, <0>, <1>, <5>, <2>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 298,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <6>, <1>.\nNode <4> is connected to node <2>.\nNode <1> is connected to node <5>.\nNode <5> is connected to node <3>.\nNode <3> is connected to nodes <2>, <1>.\nNode <0> is connected to nodes <6>, <1>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<0>, <6>, <4>, <2>, <1>, <5>, <3>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 299,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <3>, <4>.\nNode <0> is connected to nodes <5>, <4>.\nNode <3> is connected to nodes <5>, <1>.\nNode <4> is connected to nodes <5>, <0>, <1>, <2>.\nNode <1> is connected to nodes <4>, <3>.\nNode <2> is connected to node <4>.\nFind a Hamiltonian path in this graph. A Hamiltonian path in a graph is a path that visits each node exactly once, traversing along edges, and the starting node and ending node may be different. \nAnswer:\n",
        "answer": "[<1>, <3>, <5>, <0>, <4>, <2>]",
        "type": "hamiltonian_path"
    },
    {
        "index": 0,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <3>, <0>, <1>.\nNode <0> is connected to nodes <1>, <4>, <2>, <3>.\nCalculate the Jaccard coefficient of node <2> and node <3>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 1,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <2>, <0>.\nNode <1> is connected to nodes <2>, <0>, <4>.\nNode <0> is connected to nodes <3>, <1>.\nNode <4> is connected to node <1>.\nCalculate the Jaccard coefficient of node <3> and node <1>.\nAnswer:\n",
        "answer": "0.6667",
        "type": "Jaccard"
    },
    {
        "index": 2,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <1>, <3>, <2>, <5>.\nNode <4> is connected to nodes <3>, <2>, <0>, <6>.\nNode <1> is connected to node <0>.\nNode <3> is connected to nodes <5>, <6>, <4>, <1>.\nNode <2> is connected to nodes <0>, <6>.\nNode <5> is connected to nodes <0>, <6>, <1>, <3>.\nNode <6> is connected to node <2>.\nCalculate the Jaccard coefficient of node <0> and node <5>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.2857",
        "type": "Jaccard"
    },
    {
        "index": 3,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <6>, <2>.\nNode <6> is connected to nodes <4>, <3>.\nNode <2> is connected to node <4>.\nNode <3> is connected to nodes <6>, <1>, <0>.\nNode <5> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <5>, <3>.\nNode <0> is connected to nodes <5>, <3>.\nCalculate the Jaccard coefficient of node <3> and node <4>.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 4,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <1>, <2>.\nNode <0> is connected to nodes <4>, <3>.\nNode <1> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <4>, <1>.\nNode <3> is connected to node <0>.\nCalculate the Jaccard coefficient of node <0> and node <4>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 5,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1>, <6>.\nNode <1> is connected to node <4>.\nNode <6> is connected to nodes <0>, <5>, <2>, <1>.\nNode <5> is connected to nodes <3>, <4>, <2>, <1>, <6>, <0>.\nNode <3> is connected to nodes <6>, <0>.\nNode <4> is connected to nodes <6>, <5>, <3>.\nNode <2> is connected to nodes <1>, <0>, <5>, <3>, <4>.\nCalculate the Jaccard coefficient of node <5> and node <0>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 6,
        "question": "Given a directed graph:\nNode <0> is connected to node <3>.\nNode <3> is connected to node <2>.\nNode <1> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <3>, <0>, <1>.\nNode <5> is connected to nodes <4>, <3>, <1>.\nNode <2> is connected to nodes <0>, <1>, <3>.\nCalculate the Jaccard coefficient of node <4> and node <0>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 7,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1>, <6>, <3>, <4>.\nNode <1> is connected to nodes <5>, <2>.\nNode <6> is connected to nodes <5>, <0>.\nNode <3> is connected to node <5>.\nNode <4> is connected to node <5>.\nNode <2> is connected to node <1>.\nNode <0> is connected to node <6>.\nCalculate the Jaccard coefficient of node <2> and node <5>.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 8,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <6>, <4>, <0>.\nNode <1> is connected to node <0>.\nNode <6> is connected to nodes <4>, <0>, <3>, <2>, <1>.\nNode <4> is connected to nodes <0>, <2>, <6>.\nNode <0> is connected to nodes <2>, <5>, <4>.\nNode <3> is connected to nodes <2>, <1>, <4>.\nNode <5> is connected to nodes <4>, <2>, <1>, <6>.\nCalculate the Jaccard coefficient of node <5> and node <0>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.4",
        "type": "Jaccard"
    },
    {
        "index": 9,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <1>, <5>.\nNode <0> is connected to node <4>.\nNode <1> is connected to nodes <4>, <2>.\nNode <5> is connected to nodes <4>, <3>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <5>.\nCalculate the Jaccard coefficient of node <3> and node <2>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 10,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <2>, <1>, <0>.\nNode <2> is connected to nodes <0>, <4>.\nNode <3> is connected to nodes <2>, <5>, <0>.\nNode <5> is connected to node <2>.\nCalculate the Jaccard coefficient of node <3> and node <4>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 11,
        "question": "Given a directed graph:\nNode <4> is connected to node <0>.\nNode <0> is connected to node <2>.\nNode <1> is connected to nodes <3>, <0>.\nNode <3> is connected to node <2>.\nNode <2> is connected to nodes <3>, <1>.\nCalculate the Jaccard coefficient of node <0> and node <3>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "1.0",
        "type": "Jaccard"
    },
    {
        "index": 12,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <3>, <0>, <1>.\nNode <3> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <4>, <3>, <2>.\nNode <2> is connected to node <3>.\nCalculate the Jaccard coefficient of node <2> and node <0>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 13,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <5>.\nNode <0> is connected to nodes <3>, <1>.\nNode <5> is connected to nodes <3>, <4>.\nNode <1> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <5>, <1>, <2>.\nNode <2> is connected to node <4>.\nCalculate the Jaccard coefficient of node <3> and node <4>.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 14,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <1>, <3>.\nNode <0> is connected to node <4>.\nNode <1> is connected to nodes <4>, <2>.\nNode <3> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <1>, <3>.\nCalculate the Jaccard coefficient of node <4> and node <0>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 15,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <5>, <1>.\nNode <4> is connected to nodes <3>, <2>.\nNode <5> is connected to nodes <1>, <2>, <0>, <4>.\nNode <0> is connected to nodes <5>, <2>.\nNode <3> is connected to nodes <1>, <0>, <4>.\nCalculate the Jaccard coefficient of node <2> and node <5>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.4",
        "type": "Jaccard"
    },
    {
        "index": 16,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <2>, <5>.\nNode <3> is connected to node <5>.\nNode <0> is connected to nodes <5>, <1>.\nNode <5> is connected to nodes <1>, <2>, <3>, <4>.\nNode <2> is connected to node <5>.\nCalculate the Jaccard coefficient of node <4> and node <0>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 17,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <0>, <2>, <5>.\nNode <1> is connected to node <4>.\nNode <0> is connected to node <4>.\nNode <2> is connected to nodes <4>, <3>.\nNode <5> is connected to node <4>.\nNode <3> is connected to node <2>.\nCalculate the Jaccard coefficient of node <5> and node <1>.\nAnswer:\n",
        "answer": "1.0",
        "type": "Jaccard"
    },
    {
        "index": 18,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <0>, <1>.\nNode <2> is connected to nodes <0>, <4>.\nNode <1> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <1>, <2>.\nCalculate the Jaccard coefficient of node <3> and node <0>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 19,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <0>.\nNode <1> is connected to node <3>.\nNode <0> is connected to nodes <1>, <5>.\nNode <4> is connected to node <5>.\nNode <5> is connected to node <4>.\nNode <2> is connected to nodes <5>, <0>, <3>.\nCalculate the Jaccard coefficient of node <1> and node <2>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 20,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <2>, <3>.\nNode <5> is connected to nodes <0>, <6>.\nNode <2> is connected to nodes <0>, <4>, <1>, <6>.\nNode <3> is connected to nodes <0>, <6>.\nNode <6> is connected to nodes <5>, <2>, <4>, <1>, <3>.\nNode <4> is connected to nodes <2>, <6>.\nNode <1> is connected to nodes <2>, <6>.\nCalculate the Jaccard coefficient of node <6> and node <4>.\nAnswer:\n",
        "answer": "0.1667",
        "type": "Jaccard"
    },
    {
        "index": 21,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <3>, <4>, <2>.\nNode <5> is connected to nodes <0>, <3>, <4>, <2>.\nNode <3> is connected to nodes <0>, <1>, <5>, <4>, <2>.\nNode <4> is connected to nodes <0>, <1>, <5>, <3>.\nNode <2> is connected to nodes <0>, <1>, <5>, <3>.\nNode <1> is connected to nodes <3>, <4>, <2>.\nCalculate the Jaccard coefficient of node <3> and node <2>.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 22,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <0>, <3>.\nNode <5> is connected to nodes <0>, <4>, <2>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <5>.\nNode <2> is connected to node <5>.\nCalculate the Jaccard coefficient of node <1> and node <5>.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 23,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <0>, <4>.\nNode <2> is connected to node <0>.\nNode <4> is connected to nodes <3>, <1>, <5>.\nNode <1> is connected to nodes <4>, <5>.\nNode <5> is connected to nodes <4>, <1>.\nCalculate the Jaccard coefficient of node <4> and node <5>.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 24,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <5>, <4>.\nNode <0> is connected to nodes <5>, <2>, <1>.\nNode <4> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <4>, <0>.\nNode <1> is connected to node <0>.\nCalculate the Jaccard coefficient of node <0> and node <5>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 25,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <5>, <3>.\nNode <1> is connected to nodes <4>, <3>, <0>, <2>.\nNode <5> is connected to nodes <4>, <3>, <2>.\nNode <3> is connected to nodes <4>, <1>, <5>, <0>.\nNode <0> is connected to nodes <1>, <3>, <2>.\nNode <2> is connected to nodes <1>, <5>, <0>.\nCalculate the Jaccard coefficient of node <1> and node <5>.\nAnswer:\n",
        "answer": "0.75",
        "type": "Jaccard"
    },
    {
        "index": 26,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <3>, <5>.\nNode <0> is connected to nodes <4>, <3>, <2>, <5>.\nNode <3> is connected to nodes <4>, <1>, <0>, <2>, <5>.\nNode <5> is connected to nodes <4>, <1>, <0>, <3>, <2>.\nNode <1> is connected to nodes <3>, <2>, <5>.\nNode <2> is connected to nodes <1>, <0>, <3>, <5>.\nCalculate the Jaccard coefficient of node <1> and node <5>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 27,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <0>, <5>.\nNode <0> is connected to node <6>.\nNode <5> is connected to nodes <6>, <4>, <2>, <3>.\nNode <4> is connected to node <5>.\nNode <2> is connected to node <5>.\nNode <3> is connected to nodes <5>, <1>.\nNode <1> is connected to node <3>.\nCalculate the Jaccard coefficient of node <6> and node <4>.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 28,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <3>.\nNode <2> is connected to node <5>.\nNode <3> is connected to nodes <5>, <1>, <4>.\nNode <1> is connected to nodes <3>, <0>.\nNode <0> is connected to node <1>.\nNode <4> is connected to node <3>.\nCalculate the Jaccard coefficient of node <5> and node <1>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 29,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <3>, <1>.\nNode <4> is connected to nodes <5>, <3>, <1>.\nNode <3> is connected to nodes <5>, <0>, <2>, <4>, <1>.\nNode <1> is connected to nodes <5>, <0>, <2>, <4>, <3>.\nNode <0> is connected to nodes <2>, <3>, <1>.\nNode <2> is connected to nodes <0>, <3>, <1>.\nCalculate the Jaccard coefficient of node <1> and node <3>.\nAnswer:\n",
        "answer": "0.6667",
        "type": "Jaccard"
    },
    {
        "index": 30,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <2>, <0>, <5>, <1>, <6>.\nNode <3> is connected to nodes <4>, <0>, <2>, <1>.\nNode <2> is connected to nodes <4>, <3>.\nNode <0> is connected to nodes <4>, <3>, <5>.\nNode <5> is connected to nodes <4>, <0>.\nNode <1> is connected to nodes <4>, <3>.\nNode <6> is connected to node <4>.\nCalculate the Jaccard coefficient of node <6> and node <2>.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 31,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <6>, <2>, <1>, <5>.\nNode <3> is connected to nodes <4>, <0>, <6>, <5>.\nNode <6> is connected to nodes <4>, <0>, <3>, <2>, <1>, <5>.\nNode <2> is connected to nodes <4>, <0>, <6>, <5>.\nNode <1> is connected to nodes <4>, <0>, <6>, <5>.\nNode <5> is connected to nodes <4>, <3>, <6>, <2>, <1>.\nNode <0> is connected to nodes <3>, <6>, <2>, <1>.\nCalculate the Jaccard coefficient of node <3> and node <1>.\nAnswer:\n",
        "answer": "1.0",
        "type": "Jaccard"
    },
    {
        "index": 32,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <3>, <1>.\nNode <5> is connected to nodes <0>, <4>, <2>, <3>.\nNode <3> is connected to nodes <0>, <2>, <5>.\nNode <1> is connected to nodes <0>, <2>.\nNode <4> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <4>, <5>, <3>, <1>.\nCalculate the Jaccard coefficient of node <2> and node <5>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 33,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <4>, <5>.\nNode <3> is connected to nodes <4>, <1>, <6>.\nNode <5> is connected to node <0>.\nNode <1> is connected to node <3>.\nNode <6> is connected to nodes <3>, <2>.\nNode <2> is connected to node <6>.\nCalculate the Jaccard coefficient of node <5> and node <3>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 34,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <1>, <0>, <3>.\nNode <1> is connected to nodes <6>, <4>.\nNode <0> is connected to nodes <6>, <4>, <3>, <5>.\nNode <3> is connected to nodes <6>, <4>, <0>, <5>.\nNode <2> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <2>, <1>, <0>, <3>.\nNode <5> is connected to nodes <2>, <0>, <3>.\nCalculate the Jaccard coefficient of node <1> and node <4>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 35,
        "question": "Given a directed graph:\nNode <0> is connected to node <1>.\nNode <1> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <4>, <0>, <1>.\nNode <4> is connected to node <3>.\nCalculate the Jaccard coefficient of node <0> and node <3>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 36,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <3> is connected to nodes <2>, <0>.\nNode <4> is connected to nodes <0>, <1>.\nNode <1> is connected to node <4>.\nCalculate the Jaccard coefficient of node <3> and node <0>.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 37,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <4>, <2>, <0>, <1>, <5>, <3>.\nNode <4> is connected to nodes <6>, <0>.\nNode <2> is connected to nodes <6>, <5>.\nNode <0> is connected to nodes <6>, <4>, <5>.\nNode <1> is connected to nodes <6>, <3>.\nNode <5> is connected to nodes <6>, <2>, <0>.\nNode <3> is connected to nodes <6>, <1>.\nCalculate the Jaccard coefficient of node <5> and node <2>.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 38,
        "question": "Given a directed graph:\nNode <1> is connected to node <2>.\nNode <2> is connected to nodes <1>, <3>, <0>.\nNode <3> is connected to nodes <4>, <2>, <1>.\nNode <4> is connected to nodes <0>, <2>, <3>.\nNode <0> is connected to nodes <2>, <4>.\nCalculate the Jaccard coefficient of node <0> and node <1>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 39,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <3>, <1>, <4>.\nNode <5> is connected to nodes <2>, <3>, <0>, <1>, <4>.\nNode <3> is connected to nodes <2>, <5>, <1>, <4>.\nNode <1> is connected to nodes <2>, <5>, <3>, <0>, <4>.\nNode <4> is connected to nodes <2>, <5>, <3>, <0>, <1>.\nNode <0> is connected to nodes <5>, <1>, <4>.\nCalculate the Jaccard coefficient of node <5> and node <3>.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 40,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <2>, <6>, <4>, <0>, <1>, <5>.\nNode <5> is connected to nodes <2>, <6>, <3>, <4>, <0>, <1>.\nNode <6> is connected to nodes <3>, <4>, <0>, <5>.\nNode <4> is connected to nodes <6>, <3>, <1>, <5>.\nNode <0> is connected to nodes <6>, <3>, <1>, <5>.\nNode <1> is connected to nodes <3>, <4>, <0>, <5>.\nCalculate the Jaccard coefficient of node <6> and node <2>.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 41,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <3>, <0>.\nNode <1> is connected to nodes <3>, <4>.\nNode <0> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <0>, <1>.\nCalculate the Jaccard coefficient of node <1> and node <4>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 42,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <3>, <1>.\nNode <2> is connected to node <3>.\nNode <1> is connected to nodes <4>, <0>.\nNode <0> is connected to node <1>.\nCalculate the Jaccard coefficient of node <2> and node <4>.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 43,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <2>, <1>, <0>, <3>.\nNode <0> is connected to node <3>.\nNode <3> is connected to nodes <2>, <0>.\nCalculate the Jaccard coefficient of node <4> and node <1>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.2",
        "type": "Jaccard"
    },
    {
        "index": 44,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1>, <0>, <4>.\nNode <1> is connected to nodes <5>, <6>, <4>.\nNode <0> is connected to nodes <5>, <2>, <4>.\nNode <4> is connected to nodes <5>, <1>, <6>, <2>, <0>.\nNode <6> is connected to nodes <1>, <4>.\nNode <2> is connected to nodes <0>, <4>, <3>.\nNode <3> is connected to node <2>.\nCalculate the Jaccard coefficient of node <6> and node <5>.\nAnswer:\n",
        "answer": "0.6667",
        "type": "Jaccard"
    },
    {
        "index": 45,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <1>, <3>, <2>.\nNode <4> is connected to nodes <1>, <2>.\nNode <3> is connected to node <0>.\nNode <2> is connected to nodes <0>, <4>.\nCalculate the Jaccard coefficient of node <0> and node <3>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 46,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <1>, <3>.\nNode <4> is connected to nodes <1>, <2>, <6>.\nNode <3> is connected to nodes <5>, <0>.\nNode <0> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <0>, <4>.\nNode <6> is connected to node <4>.\nCalculate the Jaccard coefficient of node <5> and node <0>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 47,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <2>, <3>.\nNode <5> is connected to nodes <2>, <0>, <6>.\nNode <3> is connected to node <1>.\nNode <0> is connected to nodes <5>, <4>.\nNode <6> is connected to node <5>.\nNode <4> is connected to node <0>.\nCalculate the Jaccard coefficient of node <3> and node <2>.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 48,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <1>, <3>, <4>.\nNode <0> is connected to node <2>.\nNode <1> is connected to node <2>.\nNode <3> is connected to nodes <2>, <5>.\nNode <4> is connected to node <2>.\nNode <5> is connected to node <3>.\nCalculate the Jaccard coefficient of node <1> and node <5>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 49,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <0>, <2>, <5>.\nNode <1> is connected to node <3>.\nNode <0> is connected to nodes <3>, <4>.\nNode <2> is connected to nodes <3>, <4>.\nNode <5> is connected to node <3>.\nNode <4> is connected to nodes <2>, <0>.\nCalculate the Jaccard coefficient of node <1> and node <0>.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 50,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <5>, <0>, <3>.\nNode <5> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <4>, <2>.\nNode <3> is connected to nodes <4>, <6>, <2>, <0>, <1>.\nNode <2> is connected to node <3>.\nNode <4> is connected to nodes <6>, <5>, <1>, <3>.\nNode <1> is connected to nodes <6>, <0>.\nCalculate the Jaccard coefficient of node <4> and node <2>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 51,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <6>, <2>.\nNode <4> is connected to nodes <3>, <1>, <5>, <6>, <2>, <0>.\nNode <6> is connected to nodes <3>, <1>, <4>, <5>.\nNode <2> is connected to nodes <3>, <4>, <5>, <0>.\nNode <1> is connected to nodes <4>, <5>, <6>.\nNode <5> is connected to nodes <1>, <4>, <6>, <2>, <0>.\nNode <0> is connected to nodes <4>, <5>, <2>.\nCalculate the Jaccard coefficient of node <0> and node <2>.\nAnswer:\n",
        "answer": "0.4",
        "type": "Jaccard"
    },
    {
        "index": 52,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <1>, <3>.\nNode <2> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <4>, <2>, <0>.\nNode <0> is connected to node <3>.\nCalculate the Jaccard coefficient of node <2> and node <4>.\nAnswer:\n",
        "answer": "1.0",
        "type": "Jaccard"
    },
    {
        "index": 53,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <5>, <1>.\nNode <5> is connected to nodes <0>, <3>.\nNode <1> is connected to nodes <3>, <5>, <0>.\nNode <0> is connected to nodes <3>, <5>.\nNode <2> is connected to nodes <4>, <0>, <3>.\nNode <4> is connected to nodes <0>, <3>, <2>.\nCalculate the Jaccard coefficient of node <2> and node <0>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 54,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <1>, <2>, <3>, <0>, <4>.\nNode <1> is connected to nodes <2>, <4>, <6>.\nNode <2> is connected to nodes <5>, <0>, <6>.\nNode <3> is connected to nodes <5>, <4>.\nNode <0> is connected to nodes <6>, <1>, <3>.\nNode <4> is connected to nodes <6>, <2>, <5>, <0>.\nNode <5> is connected to nodes <0>, <6>, <2>, <3>.\nCalculate the Jaccard coefficient of node <6> and node <1>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 55,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5>, <3>.\nNode <3> is connected to nodes <4>, <1>.\nNode <1> is connected to node <4>.\nNode <4> is connected to nodes <1>, <3>.\nNode <0> is connected to node <4>.\nCalculate the Jaccard coefficient of node <2> and node <0>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 56,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <3>, <5>.\nNode <4> is connected to node <2>.\nNode <3> is connected to nodes <2>, <1>, <0>.\nNode <5> is connected to node <2>.\nNode <1> is connected to node <3>.\nNode <0> is connected to node <3>.\nCalculate the Jaccard coefficient of node <0> and node <2>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 57,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <0>, <4>, <5>, <3>.\nNode <4> is connected to nodes <0>, <1>, <2>.\nNode <5> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <2> is connected to node <4>.\nCalculate the Jaccard coefficient of node <1> and node <4>.\nAnswer:\n",
        "answer": "0.1667",
        "type": "Jaccard"
    },
    {
        "index": 58,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <4>, <0>, <3>.\nNode <2> is connected to nodes <5>, <4>, <1>, <3>.\nNode <4> is connected to nodes <5>, <2>, <3>.\nNode <0> is connected to nodes <5>, <1>, <3>.\nNode <3> is connected to nodes <5>, <2>, <4>, <1>, <0>.\nNode <1> is connected to nodes <2>, <0>, <3>.\nCalculate the Jaccard coefficient of node <4> and node <3>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 59,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <4>, <0>.\nNode <3> is connected to node <4>.\nNode <4> is connected to nodes <0>, <2>, <3>.\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to node <4>.\nCalculate the Jaccard coefficient of node <1> and node <4>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 60,
        "question": "Given an undirected graph:\nNode <4> is connected to node <0>.\nNode <0> is connected to nodes <4>, <6>.\nNode <6> is connected to nodes <0>, <3>, <2>.\nNode <3> is connected to nodes <6>, <5>.\nNode <2> is connected to nodes <6>, <1>.\nNode <5> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <2>, <5>.\nCalculate the Jaccard coefficient of node <3> and node <0>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 61,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <4>, <0>.\nNode <1> is connected to nodes <4>, <5>, <0>, <3>.\nNode <4> is connected to nodes <5>, <2>.\nNode <0> is connected to nodes <1>, <2>, <4>.\nNode <5> is connected to node <1>.\nNode <2> is connected to nodes <4>, <5>, <0>, <1>.\nCalculate the Jaccard coefficient of node <2> and node <5>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 62,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <4>, <3>, <1>.\nNode <2> is connected to nodes <4>, <3>, <1>.\nNode <4> is connected to nodes <1>, <2>.\nNode <3> is connected to node <1>.\nNode <1> is connected to node <3>.\nCalculate the Jaccard coefficient of node <2> and node <1>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 63,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <6>, <3>, <2>, <1>, <4>.\nNode <6> is connected to nodes <0>, <3>, <2>, <1>.\nNode <3> is connected to nodes <0>, <6>, <2>, <4>.\nNode <2> is connected to nodes <0>, <6>, <3>, <1>, <5>, <4>.\nNode <1> is connected to nodes <0>, <6>, <2>.\nNode <4> is connected to nodes <0>, <3>, <2>, <5>.\nNode <5> is connected to nodes <2>, <4>.\nCalculate the Jaccard coefficient of node <4> and node <3>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 64,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <2>, <0>, <4>.\nNode <0> is connected to nodes <2>, <1>.\nNode <4> is connected to nodes <1>, <6>, <3>.\nNode <6> is connected to nodes <4>, <5>.\nNode <5> is connected to node <6>.\nNode <3> is connected to node <4>.\nCalculate the Jaccard coefficient of node <1> and node <4>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 65,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <5>, <0>.\nNode <5> is connected to nodes <0>, <1>.\nNode <0> is connected to node <4>.\nNode <2> is connected to nodes <4>, <5>, <1>, <3>.\nNode <4> is connected to nodes <0>, <1>, <2>.\nNode <1> is connected to nodes <3>, <5>.\nCalculate the Jaccard coefficient of node <4> and node <3>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 66,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <2>, <3>.\nNode <4> is connected to nodes <1>, <2>, <5>, <3>.\nNode <2> is connected to nodes <1>, <4>, <3>.\nNode <3> is connected to nodes <1>, <4>, <2>, <0>, <5>.\nNode <5> is connected to nodes <4>, <0>, <3>.\nNode <0> is connected to nodes <5>, <3>.\nCalculate the Jaccard coefficient of node <1> and node <5>.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 67,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <2>.\nNode <3> is connected to node <1>.\nNode <2> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <0>, <2>.\nNode <0> is connected to node <4>.\nCalculate the Jaccard coefficient of node <0> and node <2>.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 68,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <1>, <0>.\nNode <4> is connected to node <0>.\nNode <1> is connected to nodes <0>, <3>.\nNode <0> is connected to node <4>.\nNode <3> is connected to nodes <2>, <1>.\nCalculate the Jaccard coefficient of node <3> and node <2>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 69,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <0>.\nNode <4> is connected to node <2>.\nNode <0> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <3>, <0>.\nNode <3> is connected to node <1>.\nCalculate the Jaccard coefficient of node <1> and node <3>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 70,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <0>, <1>, <3>.\nNode <2> is connected to nodes <5>, <0>, <4>.\nNode <0> is connected to nodes <5>, <2>, <4>, <3>.\nNode <1> is connected to nodes <5>, <4>.\nNode <3> is connected to nodes <5>, <0>, <4>.\nNode <4> is connected to nodes <2>, <0>, <1>, <3>.\nCalculate the Jaccard coefficient of node <0> and node <3>.\nAnswer:\n",
        "answer": "0.4",
        "type": "Jaccard"
    },
    {
        "index": 71,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <3>, <4>, <0>.\nNode <2> is connected to nodes <5>, <1>, <3>.\nNode <3> is connected to nodes <5>, <1>, <2>, <4>, <0>.\nNode <4> is connected to nodes <5>, <1>, <3>, <0>.\nNode <0> is connected to nodes <5>, <1>, <3>, <4>.\nNode <1> is connected to nodes <2>, <3>, <4>, <0>.\nCalculate the Jaccard coefficient of node <3> and node <4>.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 72,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <4>, <0>.\nNode <3> is connected to nodes <1>, <2>, <0>.\nNode <4> is connected to nodes <1>, <5>, <0>.\nNode <0> is connected to nodes <1>, <3>, <2>, <4>, <5>.\nNode <2> is connected to nodes <3>, <5>, <0>.\nNode <5> is connected to nodes <2>, <4>, <0>.\nCalculate the Jaccard coefficient of node <0> and node <4>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 73,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <4>, <5>.\nNode <2> is connected to node <3>.\nNode <5> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <0>, <3>, <4>, <2>.\nCalculate the Jaccard coefficient of node <3> and node <1>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.2",
        "type": "Jaccard"
    },
    {
        "index": 74,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <4>, <3>, <5>.\nNode <2> is connected to nodes <1>, <0>.\nNode <4> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <5> is connected to node <1>.\nNode <0> is connected to node <2>.\nCalculate the Jaccard coefficient of node <0> and node <1>.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 75,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <0>.\nNode <5> is connected to nodes <1>, <4>.\nNode <0> is connected to nodes <1>, <2>, <3>.\nNode <4> is connected to node <5>.\nNode <2> is connected to nodes <6>, <0>.\nNode <6> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <6>, <0>.\nCalculate the Jaccard coefficient of node <4> and node <3>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 76,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <6>, <3>, <2>.\nNode <1> is connected to nodes <4>, <6>.\nNode <6> is connected to nodes <4>, <1>, <0>, <3>, <2>, <5>.\nNode <3> is connected to nodes <4>, <6>, <2>, <5>.\nNode <2> is connected to nodes <4>, <6>, <3>.\nNode <0> is connected to nodes <6>, <5>.\nNode <5> is connected to nodes <6>, <0>, <3>.\nCalculate the Jaccard coefficient of node <2> and node <5>.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 77,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <2>, <4>.\nNode <3> is connected to nodes <0>, <1>, <5>, <2>, <4>.\nNode <2> is connected to nodes <0>, <1>, <3>, <5>, <4>.\nNode <4> is connected to nodes <0>, <1>, <3>, <2>.\nNode <1> is connected to nodes <3>, <5>, <2>, <4>.\nNode <5> is connected to nodes <1>, <3>, <2>.\nCalculate the Jaccard coefficient of node <4> and node <5>.\nAnswer:\n",
        "answer": "0.75",
        "type": "Jaccard"
    },
    {
        "index": 78,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <1>, <0>.\nNode <3> is connected to nodes <4>, <2>.\nNode <1> is connected to node <4>.\nNode <0> is connected to node <4>.\nNode <2> is connected to node <3>.\nCalculate the Jaccard coefficient of node <0> and node <3>.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 79,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <2>, <1>.\nNode <3> is connected to nodes <2>, <5>.\nNode <1> is connected to nodes <4>, <5>.\nNode <5> is connected to nodes <1>, <3>, <0>.\nNode <0> is connected to node <5>.\nCalculate the Jaccard coefficient of node <2> and node <4>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 80,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <3>, <0>.\nNode <1> is connected to node <2>.\nNode <3> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <4> is connected to node <0>.\nCalculate the Jaccard coefficient of node <0> and node <1>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 81,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <5>, <1>.\nNode <3> is connected to nodes <4>, <2>, <0>.\nNode <5> is connected to node <4>.\nNode <1> is connected to node <4>.\nNode <2> is connected to node <3>.\nNode <0> is connected to node <3>.\nCalculate the Jaccard coefficient of node <5> and node <3>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 82,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <2>, <5>, <4>, <1>, <6>.\nNode <0> is connected to nodes <3>, <5>.\nNode <2> is connected to nodes <3>, <1>.\nNode <5> is connected to nodes <3>, <0>, <1>.\nNode <4> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <3>, <2>, <5>, <4>.\nNode <6> is connected to node <3>.\nCalculate the Jaccard coefficient of node <6> and node <4>.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 83,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <2>, <1>, <0>, <4>.\nNode <5> is connected to nodes <3>, <2>, <1>, <0>.\nNode <2> is connected to nodes <3>, <5>, <0>, <4>.\nNode <1> is connected to nodes <3>, <5>.\nNode <0> is connected to nodes <3>, <5>, <2>, <4>.\nNode <4> is connected to nodes <3>, <2>, <0>.\nCalculate the Jaccard coefficient of node <4> and node <3>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 84,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <6>.\nNode <3> is connected to nodes <2>, <6>, <4>.\nNode <6> is connected to node <0>.\nNode <2> is connected to nodes <5>, <0>, <1>.\nNode <4> is connected to node <3>.\nNode <1> is connected to nodes <6>, <0>, <3>.\nNode <5> is connected to nodes <3>, <2>, <4>.\nCalculate the Jaccard coefficient of node <4> and node <6>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 85,
        "question": "Given an undirected graph:\nNode <2> is connected to node <0>.\nNode <0> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <0>, <3>, <4>.\nNode <3> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <1>, <3>.\nCalculate the Jaccard coefficient of node <3> and node <1>.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 86,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <2>, <1>.\nNode <5> is connected to node <4>.\nNode <2> is connected to nodes <4>, <3>, <0>.\nNode <1> is connected to node <4>.\nNode <3> is connected to node <2>.\nNode <0> is connected to node <2>.\nCalculate the Jaccard coefficient of node <4> and node <3>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 87,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <2>, <1>, <4>.\nNode <1> is connected to nodes <2>, <0>, <3>.\nNode <4> is connected to node <0>.\nNode <3> is connected to node <1>.\nCalculate the Jaccard coefficient of node <4> and node <2>.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 88,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <1>, <4>, <2>.\nNode <3> is connected to nodes <5>, <4>, <0>, <2>.\nNode <1> is connected to nodes <5>, <0>, <2>.\nNode <4> is connected to nodes <5>, <3>, <0>, <2>.\nNode <2> is connected to nodes <5>, <3>, <1>, <4>, <0>.\nNode <0> is connected to nodes <3>, <1>, <4>, <2>.\nCalculate the Jaccard coefficient of node <2> and node <4>.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 89,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <1>, <5>.\nNode <3> is connected to node <2>.\nNode <1> is connected to nodes <2>, <5>, <4>, <3>.\nNode <5> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <5>, <3>, <1>.\nNode <4> is connected to node <0>.\nCalculate the Jaccard coefficient of node <1> and node <2>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.4",
        "type": "Jaccard"
    },
    {
        "index": 90,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to nodes <1>, <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <0> is connected to node <2>.\nCalculate the Jaccard coefficient of node <3> and node <2>.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 91,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <1>, <5>.\nNode <0> is connected to nodes <1>, <2>.\nNode <5> is connected to nodes <4>, <3>, <2>.\nNode <3> is connected to node <5>.\nNode <2> is connected to nodes <5>, <0>.\nCalculate the Jaccard coefficient of node <1> and node <4>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 92,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <3>, <6>.\nNode <0> is connected to nodes <4>, <1>, <5>.\nNode <3> is connected to node <4>.\nNode <6> is connected to nodes <4>, <2>.\nNode <1> is connected to nodes <0>, <5>.\nNode <5> is connected to nodes <0>, <1>.\nNode <2> is connected to node <6>.\nCalculate the Jaccard coefficient of node <4> and node <2>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 93,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <6>.\nNode <0> is connected to nodes <1>, <3>.\nNode <6> is connected to nodes <1>, <4>, <3>, <5>, <2>.\nNode <3> is connected to nodes <0>, <4>, <5>, <2>, <6>.\nNode <4> is connected to nodes <3>, <6>.\nNode <5> is connected to nodes <3>, <6>.\nNode <2> is connected to nodes <3>, <6>.\nCalculate the Jaccard coefficient of node <5> and node <0>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 94,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <0>, <4>.\nNode <2> is connected to nodes <1>, <4>.\nNode <0> is connected to node <1>.\nNode <4> is connected to nodes <1>, <2>, <3>.\nNode <3> is connected to node <4>.\nCalculate the Jaccard coefficient of node <0> and node <4>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 95,
        "question": "Given a directed graph:\nNode <2> is connected to node <3>.\nNode <3> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <4>, <1>.\nNode <4> is connected to node <0>.\nNode <0> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <5>, <2>, <0>.\nCalculate the Jaccard coefficient of node <4> and node <2>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 96,
        "question": "Given a directed graph:\nNode <5> is connected to node <0>.\nNode <0> is connected to nodes <3>, <5>.\nNode <1> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <4>, <0>.\nNode <2> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <5>, <2>.\nCalculate the Jaccard coefficient of node <5> and node <3>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 97,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <4>, <3>.\nNode <1> is connected to node <4>.\nNode <4> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <1>, <4>.\nNode <0> is connected to node <3>.\nCalculate the Jaccard coefficient of node <2> and node <0>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 98,
        "question": "Given a directed graph:\nNode <0> is connected to node <2>.\nNode <2> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <1>, <4>, <0>.\nNode <1> is connected to nodes <4>, <3>, <2>.\nNode <4> is connected to nodes <3>, <1>.\nCalculate the Jaccard coefficient of node <0> and node <1>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 99,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <1>, <2>.\nNode <0> is connected to nodes <1>, <4>.\nNode <2> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <2>, <0>.\nCalculate the Jaccard coefficient of node <3> and node <2>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 100,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <1>, <4>, <0>.\nNode <2> is connected to nodes <4>, <0>, <3>.\nNode <0> is connected to node <3>.\nNode <1> is connected to nodes <4>, <3>.\nCalculate the Jaccard coefficient of node <1> and node <4>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 101,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>, <3>, <4>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nCalculate the Jaccard coefficient of node <3> and node <1>.\nAnswer:\n",
        "answer": "1.0",
        "type": "Jaccard"
    },
    {
        "index": 102,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <3>, <0>.\nNode <2> is connected to nodes <3>, <5>.\nNode <0> is connected to nodes <1>, <4>.\nNode <5> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <0>, <5>.\nCalculate the Jaccard coefficient of node <2> and node <1>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 103,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <2>, <3>, <0>.\nNode <4> is connected to node <0>.\nNode <0> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <3>, <0>.\nCalculate the Jaccard coefficient of node <3> and node <1>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 104,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <3>, <1>, <2>, <0>.\nNode <2> is connected to nodes <3>, <4>.\nNode <1> is connected to nodes <4>, <5>.\nNode <0> is connected to node <4>.\nNode <5> is connected to node <1>.\nCalculate the Jaccard coefficient of node <3> and node <4>.\nAnswer:\n",
        "answer": "0.2",
        "type": "Jaccard"
    },
    {
        "index": 105,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <0>, <4>, <3>.\nNode <5> is connected to nodes <2>, <0>, <4>, <1>.\nNode <0> is connected to nodes <2>, <5>, <1>.\nNode <4> is connected to nodes <2>, <5>, <3>, <1>.\nNode <3> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <5>, <0>, <4>.\nCalculate the Jaccard coefficient of node <1> and node <4>.\nAnswer:\n",
        "answer": "0.1667",
        "type": "Jaccard"
    },
    {
        "index": 106,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <2>, <0>.\nNode <3> is connected to nodes <4>, <1>.\nNode <2> is connected to nodes <4>, <5>.\nNode <0> is connected to node <4>.\nNode <1> is connected to node <3>.\nNode <5> is connected to node <2>.\nCalculate the Jaccard coefficient of node <0> and node <3>.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 107,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <0>, <2>, <3>, <1>.\nNode <3> is connected to node <4>.\nNode <1> is connected to node <4>.\nCalculate the Jaccard coefficient of node <4> and node <0>.\nAnswer:\n",
        "answer": "0.2",
        "type": "Jaccard"
    },
    {
        "index": 108,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <6>, <1>.\nNode <6> is connected to nodes <0>, <4>, <1>.\nNode <1> is connected to nodes <0>, <6>.\nNode <4> is connected to nodes <6>, <5>.\nNode <5> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <5>, <3>.\nNode <3> is connected to node <2>.\nCalculate the Jaccard coefficient of node <2> and node <6>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 109,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <2>, <4>, <1>.\nNode <1> is connected to nodes <2>, <3>.\nNode <4> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <5>, <4>.\nNode <5> is connected to node <0>.\nCalculate the Jaccard coefficient of node <2> and node <3>.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 110,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <5>, <0>.\nNode <2> is connected to nodes <1>, <4>, <3>.\nNode <5> is connected to nodes <4>, <2>, <1>.\nNode <0> is connected to node <4>.\nNode <1> is connected to nodes <0>, <2>.\nNode <4> is connected to nodes <0>, <2>, <1>, <5>.\nCalculate the Jaccard coefficient of node <1> and node <4>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 111,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <5>, <2>.\nNode <0> is connected to nodes <4>, <1>, <3>, <5>.\nNode <5> is connected to nodes <4>, <1>, <0>, <3>, <2>.\nNode <2> is connected to nodes <4>, <1>, <5>.\nNode <1> is connected to nodes <0>, <3>, <5>, <2>.\nNode <3> is connected to nodes <1>, <0>, <5>.\nCalculate the Jaccard coefficient of node <5> and node <4>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 112,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <4>, <1>, <0>, <2>.\nNode <2> is connected to nodes <4>, <3>.\nNode <1> is connected to node <3>.\nNode <0> is connected to node <3>.\nCalculate the Jaccard coefficient of node <4> and node <3>.\nAnswer:\n",
        "answer": "0.2",
        "type": "Jaccard"
    },
    {
        "index": 113,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <6>, <4>, <0>, <3>.\nNode <6> is connected to nodes <1>, <0>.\nNode <4> is connected to nodes <1>, <5>.\nNode <0> is connected to nodes <1>, <6>, <3>.\nNode <3> is connected to nodes <1>, <2>, <5>, <0>.\nNode <2> is connected to nodes <3>, <5>.\nNode <5> is connected to nodes <3>, <2>, <4>.\nCalculate the Jaccard coefficient of node <0> and node <4>.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 114,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <3>, <5>.\nNode <4> is connected to node <2>.\nNode <3> is connected to nodes <0>, <5>, <1>, <2>, <4>.\nNode <5> is connected to node <3>.\nNode <0> is connected to nodes <5>, <2>, <3>.\nNode <1> is connected to nodes <2>, <4>, <5>.\nCalculate the Jaccard coefficient of node <3> and node <0>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 115,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <3>, <0>, <2>.\nNode <2> is connected to nodes <3>, <4>.\nNode <0> is connected to nodes <4>, <1>.\nNode <1> is connected to node <0>.\nCalculate the Jaccard coefficient of node <3> and node <0>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 116,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <3>, <6>, <5>, <2>.\nNode <0> is connected to node <4>.\nNode <3> is connected to nodes <4>, <1>.\nNode <6> is connected to node <4>.\nNode <5> is connected to node <4>.\nNode <2> is connected to node <4>.\nNode <1> is connected to node <3>.\nCalculate the Jaccard coefficient of node <0> and node <2>.\nAnswer:\n",
        "answer": "1.0",
        "type": "Jaccard"
    },
    {
        "index": 117,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <2>, <0>.\nNode <1> is connected to nodes <2>, <6>.\nNode <0> is connected to nodes <4>, <3>, <5>.\nNode <3> is connected to node <0>.\nNode <5> is connected to nodes <0>, <6>.\nNode <6> is connected to nodes <1>, <5>.\nCalculate the Jaccard coefficient of node <0> and node <5>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 118,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5>, <3>, <4>, <6>.\nNode <5> is connected to nodes <0>, <3>, <4>, <6>, <1>.\nNode <3> is connected to nodes <5>, <0>.\nNode <4> is connected to nodes <1>, <0>.\nNode <6> is connected to nodes <5>, <0>, <3>, <4>.\nNode <0> is connected to nodes <3>, <6>.\nNode <1> is connected to nodes <3>, <4>.\nCalculate the Jaccard coefficient of node <1> and node <5>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.4",
        "type": "Jaccard"
    },
    {
        "index": 119,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <5>, <1>, <2>, <4>.\nNode <5> is connected to nodes <6>, <4>.\nNode <1> is connected to nodes <6>, <0>, <3>.\nNode <2> is connected to nodes <6>, <0>.\nNode <4> is connected to nodes <6>, <5>, <0>, <3>.\nNode <0> is connected to nodes <1>, <4>, <2>.\nNode <3> is connected to nodes <1>, <4>.\nCalculate the Jaccard coefficient of node <5> and node <2>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 120,
        "question": "Given a directed graph:\nNode <3> is connected to node <0>.\nNode <1> is connected to node <2>.\nNode <2> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <3>, <1>, <2>.\nCalculate the Jaccard coefficient of node <2> and node <1>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 121,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <3>, <1>.\nNode <0> is connected to nodes <3>, <4>.\nNode <1> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <1>, <0>.\nCalculate the Jaccard coefficient of node <4> and node <2>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 122,
        "question": "Given a directed graph:\nNode <1> is connected to node <5>.\nNode <5> is connected to nodes <1>, <2>, <4>.\nNode <0> is connected to nodes <3>, <4>, <5>.\nNode <3> is connected to node <4>.\nNode <2> is connected to node <3>.\nNode <6> is connected to node <1>.\nCalculate the Jaccard coefficient of node <0> and node <5>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.2",
        "type": "Jaccard"
    },
    {
        "index": 123,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <2>, <3>.\nNode <4> is connected to nodes <2>, <0>.\nNode <3> is connected to node <1>.\nNode <0> is connected to node <4>.\nCalculate the Jaccard coefficient of node <1> and node <2>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 124,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <6>.\nNode <5> is connected to node <0>.\nNode <6> is connected to nodes <0>, <3>, <1>, <4>.\nNode <3> is connected to node <6>.\nNode <1> is connected to nodes <6>, <2>.\nNode <4> is connected to node <6>.\nNode <2> is connected to node <1>.\nCalculate the Jaccard coefficient of node <0> and node <3>.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 125,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <1>, <3>, <4>, <2>.\nNode <4> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <3>, <4>, <2>, <0>.\nNode <3> is connected to nodes <2>, <0>, <1>.\nCalculate the Jaccard coefficient of node <1> and node <0>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.6",
        "type": "Jaccard"
    },
    {
        "index": 126,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <4>.\nNode <1> is connected to node <0>.\nNode <4> is connected to nodes <0>, <2>, <3>.\nNode <2> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <4>, <2>.\nCalculate the Jaccard coefficient of node <3> and node <4>.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 127,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <4>, <0>, <3>, <5>, <2>.\nNode <4> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <2>, <1>, <4>.\nNode <3> is connected to nodes <5>, <2>, <1>, <0>.\nNode <5> is connected to nodes <1>, <3>.\nNode <2> is connected to nodes <0>, <3>, <5>.\nNode <1> is connected to nodes <5>, <6>.\nCalculate the Jaccard coefficient of node <3> and node <2>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.4",
        "type": "Jaccard"
    },
    {
        "index": 128,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <1>, <3>, <5>.\nNode <4> is connected to nodes <1>, <0>.\nNode <3> is connected to node <2>.\nNode <5> is connected to node <2>.\nNode <0> is connected to node <4>.\nCalculate the Jaccard coefficient of node <5> and node <0>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 129,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <5>, <3>, <4>.\nNode <2> is connected to nodes <0>, <1>, <5>, <3>, <4>.\nNode <5> is connected to nodes <0>, <1>, <2>, <3>, <4>.\nNode <3> is connected to nodes <0>, <2>, <5>.\nNode <4> is connected to nodes <0>, <1>, <2>, <5>.\nNode <1> is connected to nodes <2>, <5>, <4>.\nCalculate the Jaccard coefficient of node <2> and node <5>.\nAnswer:\n",
        "answer": "0.6667",
        "type": "Jaccard"
    },
    {
        "index": 130,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <5>, <0>.\nNode <3> is connected to nodes <2>, <4>, <5>, <0>.\nNode <5> is connected to nodes <2>, <3>, <4>, <1>, <0>.\nNode <0> is connected to nodes <2>, <3>, <4>, <5>.\nNode <4> is connected to nodes <3>, <5>, <0>.\nNode <1> is connected to node <5>.\nCalculate the Jaccard coefficient of node <0> and node <2>.\nAnswer:\n",
        "answer": "0.4",
        "type": "Jaccard"
    },
    {
        "index": 131,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <6>, <2>, <5>.\nNode <6> is connected to nodes <3>, <4>, <0>, <2>, <5>.\nNode <2> is connected to nodes <3>, <4>, <0>, <6>, <5>.\nNode <5> is connected to nodes <3>, <4>, <0>, <6>, <2>.\nNode <4> is connected to nodes <1>, <6>, <2>, <5>.\nNode <1> is connected to node <4>.\nNode <0> is connected to nodes <6>, <2>, <5>.\nCalculate the Jaccard coefficient of node <5> and node <0>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 132,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <1>, <6>.\nNode <0> is connected to nodes <4>, <3>.\nNode <1> is connected to nodes <6>, <2>, <3>.\nNode <2> is connected to nodes <3>, <0>, <1>, <4>, <5>.\nNode <4> is connected to nodes <5>, <0>, <1>.\nCalculate the Jaccard coefficient of node <5> and node <2>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 133,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <4>, <0>.\nNode <3> is connected to node <2>.\nNode <4> is connected to nodes <0>, <3>.\nNode <1> is connected to nodes <0>, <2>.\nCalculate the Jaccard coefficient of node <0> and node <4>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 134,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <0>, <5>, <2>, <6>.\nNode <4> is connected to nodes <0>, <1>, <3>.\nNode <0> is connected to nodes <5>, <1>, <6>, <4>.\nNode <5> is connected to nodes <2>, <1>, <6>, <3>, <0>.\nNode <2> is connected to nodes <6>, <3>, <4>, <0>, <5>.\nNode <6> is connected to nodes <0>, <5>, <1>.\nNode <1> is connected to nodes <4>, <0>, <2>.\nCalculate the Jaccard coefficient of node <3> and node <6>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 135,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <0>, <4>, <1>.\nNode <1> is connected to nodes <0>, <3>, <2>, <5>, <4>.\nNode <4> is connected to nodes <3>, <2>, <5>, <1>.\nNode <2> is connected to nodes <5>, <4>, <1>.\nNode <5> is connected to nodes <2>, <4>, <1>.\nCalculate the Jaccard coefficient of node <2> and node <1>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 136,
        "question": "Given a directed graph:\nNode <3> is connected to node <2>.\nNode <2> is connected to nodes <4>, <3>, <6>.\nNode <6> is connected to nodes <2>, <4>, <1>.\nNode <4> is connected to node <1>.\nNode <1> is connected to nodes <3>, <6>, <2>, <0>.\nNode <5> is connected to nodes <2>, <4>, <1>, <6>.\nNode <0> is connected to nodes <3>, <6>, <2>.\nCalculate the Jaccard coefficient of node <2> and node <1>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.4",
        "type": "Jaccard"
    },
    {
        "index": 137,
        "question": "Given a directed graph:\nNode <4> is connected to node <0>.\nNode <3> is connected to nodes <5>, <4>.\nNode <5> is connected to node <1>.\nNode <1> is connected to node <4>.\nNode <6> is connected to nodes <2>, <1>, <3>, <5>.\nNode <2> is connected to nodes <1>, <0>, <4>.\nCalculate the Jaccard coefficient of node <3> and node <6>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.2",
        "type": "Jaccard"
    },
    {
        "index": 138,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <6>, <1>, <2>.\nNode <6> is connected to node <0>.\nNode <1> is connected to node <0>.\nNode <2> is connected to nodes <0>, <5>, <4>.\nNode <5> is connected to node <2>.\nNode <4> is connected to nodes <2>, <3>.\nNode <3> is connected to node <4>.\nCalculate the Jaccard coefficient of node <0> and node <3>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 139,
        "question": "Given an undirected graph:\nNode <0> is connected to node <1>.\nNode <1> is connected to nodes <0>, <4>, <3>, <2>.\nNode <4> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <1>, <4>.\nNode <2> is connected to node <1>.\nCalculate the Jaccard coefficient of node <1> and node <4>.\nAnswer:\n",
        "answer": "0.2",
        "type": "Jaccard"
    },
    {
        "index": 140,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <5>, <6>.\nNode <1> is connected to nodes <2>, <3>.\nNode <5> is connected to nodes <2>, <3>.\nNode <6> is connected to nodes <2>, <0>.\nNode <3> is connected to nodes <1>, <4>, <5>.\nNode <0> is connected to node <6>.\nNode <4> is connected to node <3>.\nCalculate the Jaccard coefficient of node <4> and node <1>.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 141,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <4>, <1>.\nNode <3> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <2>, <3>, <0>.\nNode <1> is connected to node <2>.\nNode <0> is connected to node <4>.\nCalculate the Jaccard coefficient of node <4> and node <3>.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 142,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <3>, <2>, <1>, <0>, <6>.\nNode <5> is connected to nodes <4>, <2>, <1>, <0>.\nNode <3> is connected to nodes <4>, <2>, <1>, <0>.\nNode <2> is connected to nodes <4>, <5>, <3>, <1>, <0>.\nNode <1> is connected to nodes <4>, <5>, <3>, <2>, <0>.\nNode <0> is connected to nodes <4>, <5>, <3>, <2>, <1>, <6>.\nNode <6> is connected to nodes <4>, <0>.\nCalculate the Jaccard coefficient of node <3> and node <1>.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 143,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <0>, <4>.\nNode <2> is connected to node <1>.\nNode <0> is connected to nodes <1>, <3>.\nNode <4> is connected to node <1>.\nNode <3> is connected to node <0>.\nCalculate the Jaccard coefficient of node <2> and node <0>.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 144,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <3>, <5>, <1>.\nNode <4> is connected to nodes <0>, <5>, <1>, <2>.\nNode <3> is connected to nodes <0>, <5>, <1>, <2>.\nNode <5> is connected to nodes <0>, <4>, <3>, <1>.\nNode <1> is connected to nodes <0>, <4>, <3>, <5>, <2>.\nNode <2> is connected to nodes <4>, <3>, <1>.\nCalculate the Jaccard coefficient of node <2> and node <0>.\nAnswer:\n",
        "answer": "0.75",
        "type": "Jaccard"
    },
    {
        "index": 145,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <5>, <4>.\nNode <3> is connected to nodes <4>, <2>.\nNode <5> is connected to node <2>.\nNode <4> is connected to node <2>.\nNode <1> is connected to nodes <5>, <2>.\nNode <0> is connected to node <1>.\nCalculate the Jaccard coefficient of node <0> and node <4>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 146,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <3>, <0>.\nNode <4> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <1>, <4>.\nNode <0> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <0>, <5>.\nNode <6> is connected to node <5>.\nNode <5> is connected to nodes <6>, <2>.\nCalculate the Jaccard coefficient of node <2> and node <6>.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 147,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <2>, <1>.\nNode <3> is connected to nodes <4>, <1>.\nNode <5> is connected to nodes <0>, <4>.\nNode <2> is connected to nodes <1>, <3>, <4>, <5>.\nNode <1> is connected to nodes <0>, <5>, <2>.\nCalculate the Jaccard coefficient of node <1> and node <2>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.1667",
        "type": "Jaccard"
    },
    {
        "index": 148,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <3>, <2>, <4>, <0>.\nNode <4> is connected to node <2>.\nNode <1> is connected to node <2>.\nNode <2> is connected to nodes <0>, <5>, <3>.\nNode <3> is connected to nodes <2>, <4>, <1>.\nCalculate the Jaccard coefficient of node <2> and node <3>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 149,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <5>, <6>.\nNode <3> is connected to nodes <2>, <1>, <5>, <6>.\nNode <5> is connected to nodes <2>, <3>, <4>, <0>, <6>.\nNode <6> is connected to nodes <2>, <3>, <1>, <0>, <5>.\nNode <1> is connected to nodes <3>, <0>, <6>.\nNode <0> is connected to nodes <1>, <4>, <5>, <6>.\nNode <4> is connected to nodes <0>, <5>.\nCalculate the Jaccard coefficient of node <0> and node <5>.\nAnswer:\n",
        "answer": "0.2857",
        "type": "Jaccard"
    },
    {
        "index": 150,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <0>, <1>.\nNode <5> is connected to nodes <2>, <3>, <1>.\nNode <0> is connected to nodes <2>, <4>, <3>, <1>.\nNode <1> is connected to nodes <2>, <5>, <0>, <4>, <3>.\nNode <3> is connected to nodes <5>, <0>, <1>.\nNode <4> is connected to nodes <0>, <1>.\nCalculate the Jaccard coefficient of node <5> and node <0>.\nAnswer:\n",
        "answer": "0.75",
        "type": "Jaccard"
    },
    {
        "index": 151,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <2>, <1>, <4>.\nNode <0> is connected to node <3>.\nNode <2> is connected to node <3>.\nNode <1> is connected to node <3>.\nNode <4> is connected to node <3>.\nCalculate the Jaccard coefficient of node <4> and node <0>.\nAnswer:\n",
        "answer": "1.0",
        "type": "Jaccard"
    },
    {
        "index": 152,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1>, <4>, <6>, <2>.\nNode <1> is connected to nodes <3>, <4>, <6>, <2>.\nNode <6> is connected to node <0>.\nNode <2> is connected to node <3>.\nNode <3> is connected to nodes <4>, <0>, <1>.\nNode <5> is connected to nodes <3>, <4>.\nCalculate the Jaccard coefficient of node <0> and node <1>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.6",
        "type": "Jaccard"
    },
    {
        "index": 153,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <2>, <6>, <4>, <3>.\nNode <5> is connected to nodes <0>, <2>, <6>, <4>, <3>.\nNode <2> is connected to nodes <0>, <5>, <6>, <1>, <4>.\nNode <6> is connected to nodes <0>, <5>, <2>, <1>, <4>, <3>.\nNode <4> is connected to nodes <0>, <5>, <2>, <6>, <1>.\nNode <3> is connected to nodes <0>, <5>, <6>, <1>.\nNode <1> is connected to nodes <2>, <6>, <4>, <3>.\nCalculate the Jaccard coefficient of node <6> and node <3>.\nAnswer:\n",
        "answer": "0.4286",
        "type": "Jaccard"
    },
    {
        "index": 154,
        "question": "Given an undirected graph:\nNode <1> is connected to node <5>.\nNode <5> is connected to nodes <1>, <0>, <4>.\nNode <0> is connected to nodes <5>, <2>.\nNode <4> is connected to nodes <5>, <3>.\nNode <6> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <6>, <4>.\nNode <2> is connected to nodes <6>, <0>.\nCalculate the Jaccard coefficient of node <6> and node <3>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 155,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <2>.\nNode <2> is connected to node <3>.\nNode <3> is connected to nodes <4>, <0>.\nNode <1> is connected to nodes <0>, <3>.\nCalculate the Jaccard coefficient of node <1> and node <2>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 156,
        "question": "Given an undirected graph:\nNode <4> is connected to node <3>.\nNode <3> is connected to nodes <4>, <0>, <2>.\nNode <0> is connected to nodes <3>, <2>, <1>.\nNode <2> is connected to nodes <3>, <0>.\nNode <1> is connected to node <0>.\nCalculate the Jaccard coefficient of node <3> and node <0>.\nAnswer:\n",
        "answer": "0.2",
        "type": "Jaccard"
    },
    {
        "index": 157,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <2>, <1>, <3>.\nNode <0> is connected to node <5>.\nNode <2> is connected to nodes <5>, <6>.\nNode <1> is connected to nodes <5>, <4>.\nNode <3> is connected to node <5>.\nNode <6> is connected to node <2>.\nNode <4> is connected to node <1>.\nCalculate the Jaccard coefficient of node <5> and node <4>.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 158,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <5>, <2>.\nNode <4> is connected to nodes <1>, <3>.\nNode <5> is connected to nodes <3>, <0>.\nNode <2> is connected to nodes <0>, <5>.\nCalculate the Jaccard coefficient of node <3> and node <5>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 159,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <6>, <5>.\nNode <4> is connected to nodes <5>, <1>.\nNode <6> is connected to nodes <3>, <0>, <4>.\nNode <5> is connected to node <0>.\nNode <0> is connected to nodes <6>, <2>, <1>.\nNode <2> is connected to nodes <1>, <4>, <6>.\nNode <3> is connected to nodes <5>, <2>, <6>.\nCalculate the Jaccard coefficient of node <5> and node <6>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 160,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <4>, <2>, <5>, <3>.\nNode <0> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <2> is connected to node <1>.\nNode <5> is connected to node <1>.\nNode <3> is connected to node <1>.\nCalculate the Jaccard coefficient of node <2> and node <3>.\nAnswer:\n",
        "answer": "1.0",
        "type": "Jaccard"
    },
    {
        "index": 161,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <3>, <6>, <2>, <5>, <4>.\nNode <0> is connected to nodes <2>, <4>, <1>.\nNode <5> is connected to node <1>.\nNode <4> is connected to node <5>.\nNode <3> is connected to nodes <0>, <6>, <1>.\nNode <6> is connected to nodes <5>, <3>.\nCalculate the Jaccard coefficient of node <0> and node <2>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 162,
        "question": "Given an undirected graph:\nNode <0> is connected to node <2>.\nNode <2> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <2>, <5>, <4>, <3>.\nNode <5> is connected to node <1>.\nNode <4> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <1>, <6>, <4>.\nNode <6> is connected to node <3>.\nCalculate the Jaccard coefficient of node <2> and node <3>.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 163,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <0>, <2>, <4>.\nNode <5> is connected to nodes <3>, <0>, <2>, <4>, <6>.\nNode <0> is connected to nodes <3>, <5>, <2>, <4>, <6>.\nNode <2> is connected to nodes <3>, <5>, <0>, <1>, <4>, <6>.\nNode <4> is connected to nodes <3>, <5>, <0>, <2>, <1>, <6>.\nNode <6> is connected to nodes <5>, <0>, <2>, <1>, <4>.\nNode <1> is connected to nodes <2>, <4>, <6>.\nCalculate the Jaccard coefficient of node <2> and node <6>.\nAnswer:\n",
        "answer": "0.5714",
        "type": "Jaccard"
    },
    {
        "index": 164,
        "question": "Given a directed graph:\nNode <2> is connected to node <4>.\nNode <4> is connected to nodes <1>, <6>, <5>, <2>, <0>.\nNode <0> is connected to nodes <1>, <6>, <5>.\nNode <1> is connected to nodes <6>, <3>.\nNode <6> is connected to nodes <3>, <0>, <4>, <1>.\nNode <5> is connected to nodes <2>, <4>.\nNode <3> is connected to node <2>.\nCalculate the Jaccard coefficient of node <3> and node <1>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 165,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <3>, <5>, <1>.\nNode <3> is connected to nodes <1>, <4>.\nNode <5> is connected to nodes <2>, <1>, <6>, <4>, <0>.\nNode <1> is connected to nodes <6>, <4>, <0>, <2>.\nNode <4> is connected to nodes <3>, <5>, <1>.\nNode <0> is connected to nodes <3>, <1>, <6>, <4>.\nNode <2> is connected to nodes <1>, <6>, <0>, <3>, <5>.\nCalculate the Jaccard coefficient of node <5> and node <4>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.1429",
        "type": "Jaccard"
    },
    {
        "index": 166,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <6>, <1>.\nNode <2> is connected to nodes <3>, <1>.\nNode <6> is connected to nodes <3>, <0>, <5>.\nNode <1> is connected to nodes <3>, <2>.\nNode <0> is connected to nodes <6>, <4>.\nNode <5> is connected to node <6>.\nNode <4> is connected to node <0>.\nCalculate the Jaccard coefficient of node <2> and node <6>.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 167,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <1>.\nNode <4> is connected to node <3>.\nNode <1> is connected to nodes <3>, <2>, <0>.\nNode <2> is connected to nodes <5>, <1>.\nNode <5> is connected to node <2>.\nNode <0> is connected to node <1>.\nCalculate the Jaccard coefficient of node <3> and node <2>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 168,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <0>, <4>, <3>.\nNode <4> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <1>, <2>.\nNode <2> is connected to node <3>.\nCalculate the Jaccard coefficient of node <2> and node <1>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 169,
        "question": "Given a directed graph:\nNode <3> is connected to node <2>.\nNode <2> is connected to nodes <0>, <1>, <4>.\nNode <4> is connected to node <3>.\nNode <0> is connected to nodes <1>, <3>, <2>.\nNode <1> is connected to node <4>.\nCalculate the Jaccard coefficient of node <3> and node <4>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 170,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <1>, <5>.\nNode <2> is connected to nodes <3>, <4>.\nNode <1> is connected to nodes <5>, <3>.\nNode <4> is connected to nodes <2>, <0>, <1>.\nNode <0> is connected to nodes <5>, <6>.\nCalculate the Jaccard coefficient of node <2> and node <5>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 171,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <4>, <1>, <2>, <0>.\nNode <3> is connected to nodes <5>, <4>, <0>.\nNode <4> is connected to nodes <5>, <3>, <1>, <2>, <0>.\nNode <1> is connected to nodes <5>, <4>, <2>.\nNode <2> is connected to nodes <5>, <4>, <1>, <0>.\nNode <0> is connected to nodes <5>, <3>, <4>, <2>.\nCalculate the Jaccard coefficient of node <4> and node <0>.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 172,
        "question": "Given a directed graph:\nNode <3> is connected to node <0>.\nNode <0> is connected to nodes <4>, <5>, <1>, <2>.\nNode <4> is connected to nodes <2>, <0>.\nNode <5> is connected to node <4>.\nNode <1> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <4>, <5>, <1>.\nCalculate the Jaccard coefficient of node <0> and node <2>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.75",
        "type": "Jaccard"
    },
    {
        "index": 173,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <3>, <4>, <2>.\nNode <1> is connected to node <0>.\nNode <3> is connected to nodes <0>, <6>.\nNode <4> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <6> is connected to nodes <3>, <5>.\nNode <5> is connected to node <6>.\nCalculate the Jaccard coefficient of node <5> and node <0>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 174,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <6>, <4>, <5>, <0>, <3>.\nNode <1> is connected to nodes <2>, <6>.\nNode <6> is connected to nodes <2>, <1>, <0>.\nNode <4> is connected to nodes <2>, <3>, <0>.\nNode <5> is connected to node <2>.\nNode <0> is connected to nodes <2>, <6>, <4>.\nNode <3> is connected to nodes <2>, <4>.\nCalculate the Jaccard coefficient of node <3> and node <1>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 175,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <5>, <6>, <4>.\nNode <0> is connected to nodes <3>, <2>, <6>, <4>.\nNode <5> is connected to nodes <3>, <1>, <2>, <6>.\nNode <6> is connected to nodes <3>, <1>, <0>, <2>, <5>, <4>.\nNode <4> is connected to nodes <3>, <0>, <2>, <6>.\nNode <1> is connected to nodes <2>, <5>, <6>.\nNode <2> is connected to nodes <1>, <0>, <5>, <6>, <4>.\nCalculate the Jaccard coefficient of node <4> and node <2>.\nAnswer:\n",
        "answer": "0.2857",
        "type": "Jaccard"
    },
    {
        "index": 176,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <5>, <0>, <3>.\nNode <1> is connected to nodes <2>, <5>, <0>, <4>.\nNode <5> is connected to nodes <2>, <1>, <0>, <3>.\nNode <0> is connected to nodes <2>, <1>, <5>, <4>, <3>.\nNode <3> is connected to nodes <2>, <5>, <0>, <4>.\nNode <4> is connected to nodes <1>, <0>, <3>.\nCalculate the Jaccard coefficient of node <1> and node <4>.\nAnswer:\n",
        "answer": "0.1667",
        "type": "Jaccard"
    },
    {
        "index": 177,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <5>, <2>.\nNode <5> is connected to nodes <1>, <3>, <4>, <0>.\nNode <2> is connected to nodes <3>, <4>, <0>.\nNode <0> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <4>, <5>, <2>.\nCalculate the Jaccard coefficient of node <5> and node <2>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.75",
        "type": "Jaccard"
    },
    {
        "index": 178,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <2>, <5>, <0>.\nNode <1> is connected to nodes <2>, <3>.\nNode <5> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <4>, <5>.\nNode <3> is connected to nodes <1>, <6>.\nNode <6> is connected to node <3>.\nCalculate the Jaccard coefficient of node <0> and node <4>.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 179,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <5>, <2>, <0>.\nNode <1> is connected to nodes <2>, <4>.\nNode <5> is connected to nodes <2>, <3>.\nNode <2> is connected to node <4>.\nNode <0> is connected to nodes <3>, <1>, <5>.\nNode <4> is connected to node <0>.\nCalculate the Jaccard coefficient of node <3> and node <4>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 180,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <2>, <5>, <1>, <3>.\nNode <0> is connected to nodes <4>, <5>, <1>, <3>.\nNode <2> is connected to nodes <4>, <5>, <1>, <3>.\nNode <5> is connected to nodes <4>, <0>, <2>.\nNode <1> is connected to nodes <4>, <0>, <2>.\nNode <3> is connected to nodes <4>, <0>, <2>.\nCalculate the Jaccard coefficient of node <5> and node <4>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 181,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <1>.\nNode <2> is connected to node <4>.\nNode <1> is connected to nodes <4>, <6>, <5>, <3>.\nNode <6> is connected to node <1>.\nNode <5> is connected to node <1>.\nNode <3> is connected to nodes <1>, <0>.\nNode <0> is connected to node <3>.\nCalculate the Jaccard coefficient of node <6> and node <5>.\nAnswer:\n",
        "answer": "1.0",
        "type": "Jaccard"
    },
    {
        "index": 182,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <6>, <0>, <5>.\nNode <2> is connected to node <6>.\nNode <0> is connected to nodes <4>, <1>.\nNode <5> is connected to nodes <4>, <3>.\nNode <1> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <1>, <5>.\nCalculate the Jaccard coefficient of node <1> and node <6>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 183,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1>, <2>.\nNode <1> is connected to node <2>.\nNode <2> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <0>, <1>, <3>, <2>.\nCalculate the Jaccard coefficient of node <0> and node <3>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 184,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <3>, <2>.\nNode <1> is connected to nodes <0>, <5>.\nNode <3> is connected to nodes <0>, <5>, <4>.\nNode <2> is connected to node <0>.\nNode <5> is connected to nodes <1>, <3>.\nNode <4> is connected to node <3>.\nCalculate the Jaccard coefficient of node <2> and node <0>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 185,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <2>, <5>.\nNode <4> is connected to nodes <2>, <0>, <1>.\nNode <5> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <5>, <4>.\nNode <1> is connected to node <4>.\nCalculate the Jaccard coefficient of node <4> and node <3>.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 186,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <0>.\nNode <5> is connected to nodes <4>, <1>, <0>.\nNode <0> is connected to nodes <4>, <5>.\nNode <1> is connected to nodes <5>, <2>.\nNode <2> is connected to nodes <1>, <3>.\nNode <3> is connected to node <2>.\nCalculate the Jaccard coefficient of node <2> and node <5>.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 187,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <1>, <0>.\nNode <4> is connected to nodes <3>, <2>.\nNode <1> is connected to nodes <3>, <2>.\nNode <0> is connected to node <3>.\nNode <2> is connected to nodes <4>, <1>.\nCalculate the Jaccard coefficient of node <1> and node <0>.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 188,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <3>, <2>, <4>, <6>.\nNode <0> is connected to nodes <5>, <1>, <3>, <2>, <4>, <6>.\nNode <3> is connected to nodes <5>, <1>, <0>, <4>, <6>.\nNode <2> is connected to nodes <5>, <1>, <0>, <4>, <6>.\nNode <4> is connected to nodes <5>, <1>, <0>, <3>, <2>, <6>.\nNode <6> is connected to nodes <5>, <0>, <3>, <2>, <4>.\nNode <1> is connected to nodes <0>, <3>, <2>, <4>.\nCalculate the Jaccard coefficient of node <0> and node <2>.\nAnswer:\n",
        "answer": "0.5714",
        "type": "Jaccard"
    },
    {
        "index": 189,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <2>, <4>.\nNode <3> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <1>, <3>.\nNode <4> is connected to nodes <1>, <0>.\nNode <0> is connected to node <4>.\nCalculate the Jaccard coefficient of node <1> and node <4>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 190,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <2>, <6>, <3>, <4>.\nNode <5> is connected to nodes <0>, <2>, <6>.\nNode <2> is connected to nodes <0>, <5>, <4>, <1>.\nNode <6> is connected to nodes <0>, <5>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <2>, <1>.\nNode <1> is connected to nodes <2>, <4>.\nCalculate the Jaccard coefficient of node <0> and node <6>.\nAnswer:\n",
        "answer": "0.1667",
        "type": "Jaccard"
    },
    {
        "index": 191,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <1>, <4>.\nNode <5> is connected to nodes <2>, <3>, <1>.\nNode <1> is connected to nodes <2>, <5>.\nNode <4> is connected to nodes <2>, <0>.\nNode <3> is connected to node <5>.\nNode <0> is connected to node <4>.\nCalculate the Jaccard coefficient of node <2> and node <3>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 192,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <3>, <4>.\nNode <5> is connected to nodes <0>, <1>, <2>, <3>, <4>.\nNode <3> is connected to nodes <0>, <1>, <2>, <5>, <4>.\nNode <4> is connected to nodes <0>, <5>, <3>.\nNode <1> is connected to nodes <2>, <5>, <3>.\nNode <2> is connected to nodes <1>, <5>, <3>.\nCalculate the Jaccard coefficient of node <0> and node <4>.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 193,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <1>, <4>, <5>, <2>.\nNode <3> is connected to nodes <0>, <1>, <4>, <5>, <2>.\nNode <1> is connected to nodes <0>, <3>, <5>, <2>.\nNode <4> is connected to nodes <0>, <3>, <5>.\nNode <5> is connected to nodes <0>, <3>, <1>, <4>, <2>.\nNode <2> is connected to nodes <0>, <3>, <1>, <5>.\nCalculate the Jaccard coefficient of node <5> and node <3>.\nAnswer:\n",
        "answer": "0.6667",
        "type": "Jaccard"
    },
    {
        "index": 194,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <4>, <3>, <0>.\nNode <1> is connected to nodes <3>, <0>, <2>.\nCalculate the Jaccard coefficient of node <2> and node <1>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 195,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <2>, <3>.\nNode <0> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <5>, <1>.\nNode <1> is connected to node <3>.\nNode <4> is connected to node <5>.\nCalculate the Jaccard coefficient of node <5> and node <0>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 196,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <3>, <6>.\nNode <1> is connected to nodes <3>, <4>, <6>.\nNode <6> is connected to nodes <2>, <1>.\nNode <0> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to node <0>.\nCalculate the Jaccard coefficient of node <6> and node <4>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 197,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <2>, <4>.\nNode <0> is connected to nodes <2>, <5>.\nNode <4> is connected to nodes <3>, <1>.\nNode <5> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <5>, <4>.\nCalculate the Jaccard coefficient of node <4> and node <1>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 198,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <5>, <0>, <1>.\nNode <5> is connected to nodes <6>, <1>.\nNode <0> is connected to nodes <6>, <1>, <4>.\nNode <1> is connected to nodes <6>, <5>, <0>, <2>, <3>, <4>.\nNode <2> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <1>, <2>.\nNode <4> is connected to nodes <1>, <0>.\nCalculate the Jaccard coefficient of node <2> and node <5>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 199,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <5>, <0>.\nNode <2> is connected to nodes <1>, <4>.\nNode <5> is connected to node <1>.\nNode <0> is connected to nodes <1>, <3>.\nNode <4> is connected to node <2>.\nNode <3> is connected to node <0>.\nCalculate the Jaccard coefficient of node <5> and node <2>.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 200,
        "question": "Given an undirected graph:\nNode <2> is connected to node <3>.\nNode <3> is connected to nodes <2>, <4>, <0>.\nNode <4> is connected to nodes <3>, <1>, <0>.\nNode <0> is connected to nodes <3>, <4>.\nNode <1> is connected to node <4>.\nCalculate the Jaccard coefficient of node <4> and node <0>.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 201,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <2>.\nNode <5> is connected to nodes <3>, <1>.\nNode <2> is connected to nodes <3>, <0>.\nNode <1> is connected to nodes <5>, <4>.\nNode <0> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <0>, <1>.\nCalculate the Jaccard coefficient of node <5> and node <2>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 202,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <5>.\nNode <2> is connected to nodes <0>, <4>, <6>.\nNode <3> is connected to node <0>.\nNode <5> is connected to node <0>.\nNode <4> is connected to nodes <2>, <1>.\nNode <6> is connected to node <2>.\nNode <1> is connected to node <4>.\nCalculate the Jaccard coefficient of node <6> and node <1>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 203,
        "question": "Given a directed graph:\nNode <2> is connected to node <3>.\nNode <3> is connected to nodes <6>, <4>.\nNode <6> is connected to node <1>.\nNode <4> is connected to node <3>.\nNode <1> is connected to nodes <6>, <5>, <2>.\nNode <5> is connected to nodes <4>, <2>.\nNode <0> is connected to nodes <5>, <4>.\nCalculate the Jaccard coefficient of node <4> and node <2>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "1.0",
        "type": "Jaccard"
    },
    {
        "index": 204,
        "question": "Given a directed graph:\nNode <3> is connected to node <5>.\nNode <5> is connected to nodes <3>, <4>, <1>, <6>.\nNode <4> is connected to nodes <5>, <0>.\nNode <0> is connected to node <1>.\nNode <1> is connected to nodes <5>, <0>, <3>, <4>.\nNode <2> is connected to nodes <5>, <3>.\nNode <6> is connected to nodes <3>, <4>.\nCalculate the Jaccard coefficient of node <3> and node <0>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 205,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <4>, <5>.\nNode <3> is connected to node <5>.\nNode <4> is connected to node <6>.\nNode <5> is connected to nodes <0>, <6>, <2>, <4>.\nNode <2> is connected to nodes <4>, <5>, <6>.\nNode <1> is connected to nodes <2>, <4>.\nCalculate the Jaccard coefficient of node <1> and node <2>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 206,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <1>.\nNode <4> is connected to node <0>.\nNode <1> is connected to nodes <0>, <3>, <2>.\nNode <3> is connected to node <1>.\nNode <2> is connected to node <1>.\nCalculate the Jaccard coefficient of node <1> and node <4>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 207,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <4>, <1>, <6>.\nNode <2> is connected to node <3>.\nNode <4> is connected to nodes <3>, <5>, <0>.\nNode <1> is connected to node <3>.\nNode <6> is connected to node <3>.\nNode <5> is connected to node <4>.\nNode <0> is connected to node <4>.\nCalculate the Jaccard coefficient of node <2> and node <1>.\nAnswer:\n",
        "answer": "1.0",
        "type": "Jaccard"
    },
    {
        "index": 208,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <1>, <4>, <5>.\nNode <2> is connected to nodes <1>, <3>.\nNode <4> is connected to nodes <0>, <5>.\nNode <5> is connected to nodes <0>, <4>.\nNode <3> is connected to node <2>.\nCalculate the Jaccard coefficient of node <3> and node <2>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 209,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <1>, <4>, <0>, <3>.\nNode <4> is connected to node <2>.\nNode <1> is connected to nodes <0>, <3>, <2>.\nNode <0> is connected to nodes <3>, <1>, <4>.\nCalculate the Jaccard coefficient of node <2> and node <0>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.75",
        "type": "Jaccard"
    },
    {
        "index": 210,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <1>, <5>.\nNode <3> is connected to nodes <2>, <5>.\nNode <1> is connected to nodes <2>, <4>.\nNode <5> is connected to nodes <2>, <3>.\nNode <0> is connected to node <4>.\nNode <4> is connected to nodes <0>, <1>.\nCalculate the Jaccard coefficient of node <5> and node <1>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 211,
        "question": "Given a directed graph:\nNode <3> is connected to node <6>.\nNode <6> is connected to nodes <2>, <3>, <1>, <4>.\nNode <1> is connected to nodes <4>, <0>, <2>.\nNode <0> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <5>, <6>.\nNode <5> is connected to nodes <2>, <4>.\nCalculate the Jaccard coefficient of node <5> and node <6>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 212,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <1>, <0>.\nNode <4> is connected to nodes <1>, <5>.\nNode <0> is connected to nodes <3>, <2>.\nNode <5> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <0>, <5>.\nCalculate the Jaccard coefficient of node <2> and node <4>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 213,
        "question": "Given an undirected graph:\nNode <4> is connected to node <5>.\nNode <5> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <5>, <0>.\nNode <0> is connected to nodes <1>, <3>, <2>.\nNode <1> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <0>, <1>.\nCalculate the Jaccard coefficient of node <0> and node <1>.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 214,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <3>, <1>.\nNode <4> is connected to nodes <3>, <0>.\nNode <1> is connected to node <2>.\nNode <0> is connected to node <4>.\nCalculate the Jaccard coefficient of node <1> and node <4>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 215,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <6>, <3>, <0>, <4>, <2>.\nNode <6> is connected to nodes <1>, <5>, <4>, <2>.\nNode <3> is connected to nodes <1>, <5>, <0>, <2>.\nNode <0> is connected to nodes <1>, <3>, <2>.\nNode <4> is connected to nodes <1>, <6>, <2>.\nNode <2> is connected to nodes <1>, <6>, <3>, <5>, <0>, <4>.\nNode <5> is connected to nodes <6>, <3>, <2>.\nCalculate the Jaccard coefficient of node <1> and node <0>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 216,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <3>, <4>, <1>.\nNode <3> is connected to nodes <1>, <2>.\nNode <0> is connected to nodes <1>, <2>, <4>.\nNode <1> is connected to nodes <3>, <0>.\nCalculate the Jaccard coefficient of node <1> and node <2>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 217,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <5>, <2>.\nNode <3> is connected to nodes <4>, <0>, <1>.\nNode <5> is connected to nodes <4>, <6>.\nNode <2> is connected to node <4>.\nNode <0> is connected to nodes <3>, <6>.\nNode <1> is connected to node <3>.\nNode <6> is connected to nodes <5>, <0>.\nCalculate the Jaccard coefficient of node <0> and node <1>.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 218,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <3>, <6>, <4>.\nNode <5> is connected to nodes <1>, <0>, <4>.\nNode <3> is connected to nodes <1>, <4>.\nNode <6> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <1>, <5>, <3>, <0>, <6>, <2>.\nNode <0> is connected to nodes <5>, <4>.\nNode <2> is connected to node <4>.\nCalculate the Jaccard coefficient of node <1> and node <3>.\nAnswer:\n",
        "answer": "0.2",
        "type": "Jaccard"
    },
    {
        "index": 219,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <2>, <0>.\nNode <1> is connected to nodes <4>, <2>, <3>.\nNode <2> is connected to node <0>.\nNode <4> is connected to nodes <2>, <1>.\nCalculate the Jaccard coefficient of node <2> and node <1>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 220,
        "question": "Given an undirected graph:\nNode <4> is connected to node <6>.\nNode <6> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <6>, <2>.\nNode <2> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <5>, <2>, <3>.\nNode <5> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <1>, <5>.\nCalculate the Jaccard coefficient of node <3> and node <5>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 221,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <2>, <4>.\nNode <1> is connected to node <0>.\nNode <4> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <1>, <2>, <0>.\nCalculate the Jaccard coefficient of node <1> and node <2>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 222,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <6>, <2>, <4>, <3>, <0>.\nNode <5> is connected to nodes <6>, <4>, <0>.\nNode <2> is connected to nodes <4>, <1>, <3>.\nNode <4> is connected to nodes <2>, <1>, <5>, <0>.\nNode <3> is connected to nodes <2>, <1>.\nNode <0> is connected to nodes <4>, <1>, <5>.\nCalculate the Jaccard coefficient of node <3> and node <4>.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 223,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <5>, <2>, <3>.\nNode <1> is connected to node <0>.\nNode <5> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <4>.\nNode <4> is connected to node <3>.\nCalculate the Jaccard coefficient of node <5> and node <4>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 224,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <1>, <3>, <2>.\nNode <0> is connected to nodes <3>, <2>, <5>.\nNode <1> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <5>, <4>, <0>, <1>.\nNode <2> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <3>, <2>.\nCalculate the Jaccard coefficient of node <3> and node <1>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.2",
        "type": "Jaccard"
    },
    {
        "index": 225,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <3>.\nNode <1> is connected to node <0>.\nNode <3> is connected to nodes <0>, <2>, <4>.\nNode <2> is connected to node <3>.\nNode <4> is connected to node <3>.\nCalculate the Jaccard coefficient of node <4> and node <0>.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 226,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <3>, <2>, <4>, <1>.\nNode <2> is connected to nodes <1>, <0>, <3>.\nNode <1> is connected to nodes <3>, <2>, <4>.\nNode <3> is connected to nodes <2>, <1>.\nCalculate the Jaccard coefficient of node <1> and node <4>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 227,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <6>, <1>, <3>.\nNode <2> is connected to nodes <5>, <4>, <6>, <0>, <3>.\nNode <6> is connected to nodes <5>, <2>, <0>.\nNode <1> is connected to nodes <5>, <4>, <0>, <3>.\nNode <3> is connected to nodes <5>, <2>, <1>, <0>.\nNode <4> is connected to nodes <2>, <1>, <0>.\nNode <0> is connected to nodes <4>, <2>, <6>, <1>, <3>.\nCalculate the Jaccard coefficient of node <3> and node <0>.\nAnswer:\n",
        "answer": "0.2857",
        "type": "Jaccard"
    },
    {
        "index": 228,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <3>, <2>.\nNode <0> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <2>.\nCalculate the Jaccard coefficient of node <2> and node <0>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 229,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <1>, <2>.\nNode <0> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <4>, <0>, <3>.\nNode <3> is connected to node <2>.\nCalculate the Jaccard coefficient of node <3> and node <0>.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 230,
        "question": "Given an undirected graph:\nNode <1> is connected to node <3>.\nNode <3> is connected to nodes <1>, <0>, <2>.\nNode <0> is connected to nodes <3>, <4>.\nNode <2> is connected to node <3>.\nNode <4> is connected to node <0>.\nCalculate the Jaccard coefficient of node <1> and node <2>.\nAnswer:\n",
        "answer": "1.0",
        "type": "Jaccard"
    },
    {
        "index": 231,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <3>, <5>.\nNode <1> is connected to node <4>.\nNode <3> is connected to nodes <4>, <5>, <2>.\nNode <5> is connected to nodes <4>, <6>, <3>, <0>.\nNode <6> is connected to node <5>.\nNode <0> is connected to node <5>.\nNode <2> is connected to node <3>.\nCalculate the Jaccard coefficient of node <0> and node <3>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 232,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <4>, <3>.\nNode <0> is connected to nodes <3>, <1>.\nNode <4> is connected to nodes <2>, <1>.\nNode <3> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <1>, <4>.\nCalculate the Jaccard coefficient of node <1> and node <2>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 233,
        "question": "Given a directed graph:\nNode <2> is connected to node <5>.\nNode <5> is connected to nodes <1>, <2>, <3>.\nNode <4> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <1>, <2>.\nNode <1> is connected to node <0>.\nNode <0> is connected to node <2>.\nCalculate the Jaccard coefficient of node <3> and node <5>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.6667",
        "type": "Jaccard"
    },
    {
        "index": 234,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <3>, <1>.\nNode <2> is connected to node <4>.\nNode <3> is connected to node <4>.\nNode <1> is connected to nodes <4>, <0>, <5>.\nNode <0> is connected to node <1>.\nNode <5> is connected to node <1>.\nCalculate the Jaccard coefficient of node <3> and node <4>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 235,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <0>, <1>.\nNode <2> is connected to nodes <0>, <6>, <3>, <5>.\nNode <0> is connected to nodes <1>, <4>, <6>, <5>.\nNode <1> is connected to nodes <4>, <6>, <0>.\nNode <5> is connected to nodes <0>, <1>, <4>, <6>.\nNode <4> is connected to nodes <6>, <5>, <1>.\nNode <6> is connected to nodes <2>, <1>, <4>.\nCalculate the Jaccard coefficient of node <3> and node <2>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.1667",
        "type": "Jaccard"
    },
    {
        "index": 236,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <4>, <2>.\nNode <3> is connected to nodes <1>, <0>, <4>.\nNode <4> is connected to nodes <1>, <0>, <3>, <5>, <2>.\nNode <2> is connected to nodes <1>, <0>, <4>, <5>.\nNode <0> is connected to nodes <3>, <4>, <2>.\nNode <5> is connected to nodes <4>, <2>.\nCalculate the Jaccard coefficient of node <1> and node <5>.\nAnswer:\n",
        "answer": "0.6667",
        "type": "Jaccard"
    },
    {
        "index": 237,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <5>, <0>.\nNode <4> is connected to nodes <5>, <1>.\nNode <0> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <3>, <4>.\nCalculate the Jaccard coefficient of node <3> and node <2>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 238,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <2>, <3>.\nNode <4> is connected to node <1>.\nNode <2> is connected to node <1>.\nNode <3> is connected to nodes <1>, <0>.\nNode <0> is connected to node <3>.\nCalculate the Jaccard coefficient of node <4> and node <0>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 239,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <3>, <0>, <1>.\nNode <2> is connected to node <4>.\nNode <3> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <4>, <3>.\nNode <1> is connected to nodes <4>, <5>.\nNode <5> is connected to node <1>.\nCalculate the Jaccard coefficient of node <3> and node <1>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 240,
        "question": "Given a directed graph:\nNode <5> is connected to node <2>.\nNode <2> is connected to nodes <5>, <3>, <1>.\nNode <3> is connected to nodes <4>, <0>, <5>.\nNode <4> is connected to nodes <1>, <3>.\nNode <0> is connected to nodes <5>, <4>.\nNode <1> is connected to node <0>.\nCalculate the Jaccard coefficient of node <0> and node <2>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 241,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <5>, <0>, <4>, <1>.\nNode <5> is connected to nodes <4>, <1>, <3>.\nNode <0> is connected to node <2>.\nNode <4> is connected to nodes <3>, <5>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <4>.\nCalculate the Jaccard coefficient of node <2> and node <5>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 242,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <4>, <2>.\nNode <3> is connected to nodes <1>, <0>.\nNode <4> is connected to node <1>.\nNode <2> is connected to node <1>.\nNode <0> is connected to node <3>.\nCalculate the Jaccard coefficient of node <4> and node <3>.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 243,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <2>, <5>.\nNode <1> is connected to nodes <4>, <0>, <2>, <5>.\nNode <2> is connected to nodes <4>, <0>, <1>, <3>, <5>.\nNode <5> is connected to nodes <4>, <0>, <1>, <2>, <3>.\nNode <0> is connected to nodes <1>, <2>, <5>.\nNode <3> is connected to nodes <2>, <5>.\nCalculate the Jaccard coefficient of node <5> and node <3>.\nAnswer:\n",
        "answer": "0.1667",
        "type": "Jaccard"
    },
    {
        "index": 244,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <3>, <0>, <5>, <4>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <0> is connected to node <1>.\nNode <5> is connected to node <1>.\nNode <4> is connected to node <1>.\nCalculate the Jaccard coefficient of node <2> and node <5>.\nAnswer:\n",
        "answer": "1.0",
        "type": "Jaccard"
    },
    {
        "index": 245,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <4>, <2>.\nNode <0> is connected to nodes <3>, <5>.\nNode <4> is connected to nodes <2>, <3>, <6>, <0>, <1>.\nNode <2> is connected to nodes <3>, <6>, <5>.\nNode <6> is connected to nodes <5>, <0>, <4>.\nNode <5> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <4>, <6>, <5>.\nCalculate the Jaccard coefficient of node <2> and node <4>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 246,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <6>, <5>, <0>, <4>.\nNode <6> is connected to nodes <1>, <5>, <4>.\nNode <5> is connected to nodes <1>, <2>, <6>, <0>, <4>, <3>.\nNode <0> is connected to nodes <1>, <5>, <4>.\nNode <4> is connected to nodes <1>, <6>, <5>, <0>, <3>.\nNode <2> is connected to nodes <5>, <3>.\nNode <3> is connected to nodes <2>, <5>, <4>.\nCalculate the Jaccard coefficient of node <1> and node <0>.\nAnswer:\n",
        "answer": "0.4",
        "type": "Jaccard"
    },
    {
        "index": 247,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <1>, <3>.\nNode <4> is connected to nodes <2>, <0>, <5>, <1>, <3>.\nNode <1> is connected to nodes <2>, <0>, <5>, <4>, <3>.\nNode <3> is connected to nodes <2>, <0>, <5>, <4>, <1>.\nNode <0> is connected to nodes <5>, <4>, <1>, <3>.\nNode <5> is connected to nodes <0>, <4>, <1>, <3>.\nCalculate the Jaccard coefficient of node <3> and node <4>.\nAnswer:\n",
        "answer": "0.6667",
        "type": "Jaccard"
    },
    {
        "index": 248,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <1>, <5>.\nNode <0> is connected to nodes <1>, <6>, <4>, <2>.\nNode <5> is connected to node <3>.\nNode <6> is connected to node <0>.\nNode <4> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <0>, <4>.\nCalculate the Jaccard coefficient of node <0> and node <6>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 249,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <0>, <6>, <3>, <1>, <5>.\nNode <1> is connected to nodes <2>, <6>, <5>, <4>.\nNode <6> is connected to nodes <3>, <1>, <4>.\nNode <3> is connected to nodes <6>, <4>.\nNode <5> is connected to nodes <1>, <4>.\nCalculate the Jaccard coefficient of node <3> and node <4>.\nAnswer:\n",
        "answer": "0.1667",
        "type": "Jaccard"
    },
    {
        "index": 250,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <4>, <5>.\nNode <1> is connected to nodes <4>, <0>.\nNode <5> is connected to nodes <3>, <6>.\nNode <6> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <6>, <0>.\nNode <0> is connected to nodes <2>, <1>.\nCalculate the Jaccard coefficient of node <5> and node <4>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 251,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <1>.\nNode <2> is connected to node <0>.\nNode <1> is connected to node <4>.\nNode <0> is connected to nodes <5>, <1>, <2>.\nNode <5> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <5>, <6>, <0>.\nNode <6> is connected to node <5>.\nCalculate the Jaccard coefficient of node <6> and node <0>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 252,
        "question": "Given a directed graph:\nNode <3> is connected to node <4>.\nNode <4> is connected to nodes <2>, <3>, <1>, <0>.\nNode <1> is connected to node <3>.\nNode <0> is connected to nodes <4>, <3>, <1>.\nNode <2> is connected to node <3>.\nCalculate the Jaccard coefficient of node <0> and node <3>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 253,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <1>, <5>.\nNode <4> is connected to nodes <0>, <3>, <2>.\nNode <1> is connected to nodes <5>, <0>.\nNode <5> is connected to nodes <0>, <1>.\nNode <6> is connected to nodes <4>, <1>.\nNode <3> is connected to nodes <5>, <6>.\nCalculate the Jaccard coefficient of node <6> and node <0>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.6667",
        "type": "Jaccard"
    },
    {
        "index": 254,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <0>, <3>, <2>.\nNode <4> is connected to node <1>.\nNode <0> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <2> is connected to node <1>.\nCalculate the Jaccard coefficient of node <3> and node <1>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 255,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <3>, <4>, <2>.\nNode <0> is connected to node <3>.\nNode <4> is connected to node <1>.\nNode <2> is connected to node <1>.\nCalculate the Jaccard coefficient of node <4> and node <0>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 256,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <3>, <1>, <2>.\nNode <2> is connected to nodes <3>, <4>.\nNode <1> is connected to nodes <4>, <0>.\nNode <0> is connected to node <1>.\nCalculate the Jaccard coefficient of node <4> and node <2>.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 257,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <2>, <4>, <3>.\nNode <2> is connected to nodes <4>, <0>.\nNode <4> is connected to node <2>.\nCalculate the Jaccard coefficient of node <2> and node <1>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 258,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <5>, <3>.\nNode <0> is connected to nodes <2>, <1>.\nNode <5> is connected to nodes <2>, <1>.\nNode <3> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <0>, <5>.\nNode <4> is connected to node <3>.\nCalculate the Jaccard coefficient of node <0> and node <2>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 259,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <1>, <0>, <2>.\nNode <5> is connected to nodes <1>, <3>.\nNode <0> is connected to node <4>.\nNode <2> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <5>, <2>.\nCalculate the Jaccard coefficient of node <2> and node <5>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 260,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <4>, <3>, <0>.\nNode <2> is connected to nodes <1>, <5>, <4>, <3>.\nNode <4> is connected to nodes <1>, <2>, <3>.\nNode <3> is connected to nodes <1>, <5>, <2>, <4>, <0>.\nNode <0> is connected to nodes <1>, <3>.\nNode <5> is connected to nodes <2>, <3>.\nCalculate the Jaccard coefficient of node <1> and node <2>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 261,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <5>, <1>.\nNode <4> is connected to node <5>.\nNode <1> is connected to nodes <2>, <6>, <3>.\nNode <0> is connected to nodes <6>, <3>.\nNode <6> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <0>, <1>.\nCalculate the Jaccard coefficient of node <2> and node <6>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 262,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <4>.\nNode <1> is connected to node <2>.\nNode <4> is connected to nodes <2>, <1>, <3>.\nNode <3> is connected to nodes <0>, <2>, <1>.\nNode <0> is connected to nodes <2>, <1>, <3>.\nCalculate the Jaccard coefficient of node <0> and node <3>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 263,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <3>, <1>.\nNode <4> is connected to nodes <2>, <0>.\nNode <3> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <2>, <3>.\nNode <0> is connected to node <4>.\nCalculate the Jaccard coefficient of node <4> and node <2>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 264,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <4>, <2>.\nNode <3> is connected to nodes <5>, <1>, <0>.\nNode <4> is connected to node <5>.\nNode <2> is connected to node <5>.\nNode <1> is connected to node <3>.\nNode <0> is connected to node <3>.\nCalculate the Jaccard coefficient of node <2> and node <3>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 265,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <3>, <4>, <0>.\nNode <2> is connected to node <3>.\nNode <4> is connected to node <1>.\nNode <0> is connected to node <1>.\nCalculate the Jaccard coefficient of node <4> and node <0>.\nAnswer:\n",
        "answer": "1.0",
        "type": "Jaccard"
    },
    {
        "index": 266,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <3>, <4>, <1>.\nNode <4> is connected to node <2>.\nNode <1> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <4>, <2>, <1>, <0>.\nNode <0> is connected to nodes <4>, <1>.\nCalculate the Jaccard coefficient of node <2> and node <3>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.2",
        "type": "Jaccard"
    },
    {
        "index": 267,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <4>, <2>, <3>.\nNode <0> is connected to nodes <5>, <2>, <1>.\nNode <4> is connected to nodes <5>, <2>, <1>.\nNode <2> is connected to nodes <5>, <0>, <4>, <3>.\nNode <3> is connected to nodes <5>, <2>.\nNode <1> is connected to nodes <0>, <4>.\nCalculate the Jaccard coefficient of node <2> and node <4>.\nAnswer:\n",
        "answer": "0.1667",
        "type": "Jaccard"
    },
    {
        "index": 268,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <0>, <3>, <2>.\nNode <3> is connected to nodes <0>, <4>, <5>.\nNode <2> is connected to node <4>.\nNode <5> is connected to nodes <3>, <1>.\nNode <1> is connected to node <5>.\nCalculate the Jaccard coefficient of node <5> and node <3>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 269,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <3>.\nNode <2> is connected to node <4>.\nNode <3> is connected to nodes <4>, <1>, <0>.\nNode <1> is connected to node <3>.\nNode <0> is connected to node <3>.\nCalculate the Jaccard coefficient of node <0> and node <4>.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 270,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <3>, <5>, <0>.\nNode <4> is connected to nodes <2>, <5>, <0>, <1>.\nNode <3> is connected to nodes <2>, <5>, <1>.\nNode <5> is connected to nodes <2>, <4>, <3>, <0>.\nNode <0> is connected to nodes <2>, <4>, <5>, <1>.\nNode <1> is connected to nodes <4>, <3>, <0>.\nCalculate the Jaccard coefficient of node <4> and node <3>.\nAnswer:\n",
        "answer": "0.75",
        "type": "Jaccard"
    },
    {
        "index": 271,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <6>, <2>, <3>, <0>, <5>, <4>.\nNode <6> is connected to nodes <1>, <2>, <0>, <5>.\nNode <2> is connected to nodes <1>, <6>, <3>, <0>, <5>, <4>.\nNode <3> is connected to nodes <1>, <2>, <0>, <5>, <4>.\nNode <0> is connected to nodes <1>, <6>, <2>, <3>, <5>.\nNode <5> is connected to nodes <1>, <6>, <2>, <3>, <0>, <4>.\nNode <4> is connected to nodes <1>, <2>, <3>, <5>.\nCalculate the Jaccard coefficient of node <1> and node <5>.\nAnswer:\n",
        "answer": "0.7143",
        "type": "Jaccard"
    },
    {
        "index": 272,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <3>, <1>, <2>.\nNode <0> is connected to nodes <6>, <3>, <1>, <5>.\nNode <3> is connected to nodes <5>, <0>, <6>.\nNode <1> is connected to nodes <5>, <0>, <4>, <6>, <3>.\nNode <2> is connected to nodes <5>, <3>.\nNode <6> is connected to node <0>.\nNode <4> is connected to nodes <3>, <1>, <2>, <5>.\nCalculate the Jaccard coefficient of node <2> and node <5>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.2",
        "type": "Jaccard"
    },
    {
        "index": 273,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <1>, <2>, <3>.\nNode <4> is connected to node <1>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nCalculate the Jaccard coefficient of node <1> and node <4>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 274,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <4>, <6>, <3>.\nNode <2> is connected to nodes <4>, <0>.\nNode <6> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <0> is connected to nodes <5>, <2>.\nNode <5> is connected to node <0>.\nCalculate the Jaccard coefficient of node <2> and node <1>.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 275,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <1>, <2>, <4>.\nNode <3> is connected to nodes <5>, <4>, <0>.\nNode <1> is connected to nodes <5>, <2>, <0>.\nNode <2> is connected to nodes <5>, <1>, <4>, <0>.\nNode <4> is connected to nodes <5>, <3>, <2>, <0>.\nNode <0> is connected to nodes <3>, <1>, <2>, <4>.\nCalculate the Jaccard coefficient of node <5> and node <3>.\nAnswer:\n",
        "answer": "0.1667",
        "type": "Jaccard"
    },
    {
        "index": 276,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <6>, <3>.\nNode <2> is connected to nodes <1>, <4>, <5>.\nNode <6> is connected to node <1>.\nNode <3> is connected to nodes <1>, <0>.\nNode <4> is connected to nodes <2>, <5>.\nNode <5> is connected to nodes <2>, <4>.\nNode <0> is connected to node <3>.\nCalculate the Jaccard coefficient of node <4> and node <5>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 277,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <6>, <1>.\nNode <5> is connected to nodes <3>, <4>, <0>, <1>, <2>.\nNode <6> is connected to nodes <3>, <4>, <0>, <1>.\nNode <1> is connected to nodes <3>, <5>, <6>, <0>, <2>.\nNode <4> is connected to nodes <5>, <6>, <0>.\nNode <0> is connected to nodes <5>, <6>, <4>, <1>, <2>.\nNode <2> is connected to nodes <5>, <0>, <1>.\nCalculate the Jaccard coefficient of node <6> and node <4>.\nAnswer:\n",
        "answer": "0.1667",
        "type": "Jaccard"
    },
    {
        "index": 278,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <1>, <0>.\nNode <2> is connected to nodes <5>, <4>, <1>, <0>, <3>.\nNode <1> is connected to nodes <5>, <2>, <4>, <0>.\nNode <0> is connected to nodes <5>, <2>, <4>, <1>, <3>.\nNode <4> is connected to nodes <2>, <1>, <0>.\nNode <3> is connected to nodes <2>, <0>.\nCalculate the Jaccard coefficient of node <0> and node <3>.\nAnswer:\n",
        "answer": "0.1667",
        "type": "Jaccard"
    },
    {
        "index": 279,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <5>, <1>.\nNode <3> is connected to nodes <2>, <0>, <6>.\nNode <5> is connected to nodes <2>, <0>, <1>, <4>.\nNode <1> is connected to nodes <2>, <5>.\nNode <0> is connected to nodes <3>, <5>, <4>, <6>.\nNode <6> is connected to nodes <3>, <0>, <4>.\nNode <4> is connected to nodes <5>, <0>, <6>.\nCalculate the Jaccard coefficient of node <5> and node <2>.\nAnswer:\n",
        "answer": "0.1667",
        "type": "Jaccard"
    },
    {
        "index": 280,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <2>, <0>.\nNode <4> is connected to nodes <2>, <1>.\nNode <0> is connected to node <5>.\nNode <1> is connected to nodes <3>, <4>.\nNode <3> is connected to node <1>.\nCalculate the Jaccard coefficient of node <4> and node <5>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 281,
        "question": "Given a directed graph:\nNode <2> is connected to node <1>.\nNode <1> is connected to nodes <0>, <2>.\nNode <3> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <2>, <3>.\nNode <4> is connected to nodes <0>, <2>, <1>.\nCalculate the Jaccard coefficient of node <0> and node <4>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 282,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <1>, <0>, <3>, <2>.\nNode <5> is connected to node <1>.\nNode <0> is connected to node <4>.\nNode <3> is connected to node <4>.\nNode <2> is connected to node <4>.\nCalculate the Jaccard coefficient of node <5> and node <0>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 283,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <4>, <2>.\nNode <1> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <0>, <1>.\nNode <2> is connected to nodes <0>, <5>.\nNode <5> is connected to nodes <2>, <3>.\nNode <3> is connected to node <5>.\nCalculate the Jaccard coefficient of node <3> and node <1>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 284,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <0>, <2>, <3>, <6>, <5>.\nNode <2> is connected to nodes <4>, <3>, <6>, <5>, <1>.\nNode <3> is connected to nodes <6>, <5>, <1>, <0>.\nNode <6> is connected to nodes <5>, <1>, <0>, <4>.\nNode <5> is connected to nodes <1>, <0>, <2>, <6>.\nNode <0> is connected to nodes <2>, <4>, <3>, <6>, <5>, <1>.\nCalculate the Jaccard coefficient of node <4> and node <5>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.5",
        "type": "Jaccard"
    },
    {
        "index": 285,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <4>.\nNode <0> is connected to node <2>.\nNode <4> is connected to nodes <1>, <0>, <2>, <3>.\nNode <2> is connected to node <3>.\nNode <3> is connected to nodes <1>, <2>.\nCalculate the Jaccard coefficient of node <0> and node <4>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 286,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <4>, <0>, <2>.\nNode <5> is connected to nodes <3>, <4>, <1>, <2>.\nNode <4> is connected to nodes <3>, <5>, <0>.\nNode <0> is connected to nodes <3>, <4>, <1>.\nNode <2> is connected to nodes <3>, <5>, <1>.\nNode <1> is connected to nodes <5>, <0>, <2>.\nCalculate the Jaccard coefficient of node <3> and node <5>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 287,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <6>, <1>, <3>, <4>, <0>.\nNode <6> is connected to nodes <5>, <1>, <3>, <4>, <0>.\nNode <1> is connected to nodes <5>, <6>, <2>, <0>.\nNode <3> is connected to nodes <5>, <6>, <4>.\nNode <4> is connected to nodes <5>, <6>, <3>, <2>.\nNode <0> is connected to nodes <5>, <6>, <1>, <2>.\nNode <2> is connected to nodes <1>, <4>, <0>.\nCalculate the Jaccard coefficient of node <3> and node <0>.\nAnswer:\n",
        "answer": "0.4",
        "type": "Jaccard"
    },
    {
        "index": 288,
        "question": "Given an undirected graph:\nNode <3> is connected to node <0>.\nNode <0> is connected to nodes <3>, <6>.\nNode <6> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <5>, <4>, <6>.\nNode <5> is connected to nodes <1>, <2>.\nNode <4> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <5>, <4>.\nCalculate the Jaccard coefficient of node <0> and node <5>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 289,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <0>, <2>.\nNode <4> is connected to node <1>.\nNode <0> is connected to nodes <1>, <3>, <5>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <0>.\nNode <5> is connected to node <0>.\nCalculate the Jaccard coefficient of node <4> and node <2>.\nAnswer:\n",
        "answer": "1.0",
        "type": "Jaccard"
    },
    {
        "index": 290,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <2>, <4>, <1>.\nNode <0> is connected to node <3>.\nNode <2> is connected to node <3>.\nNode <4> is connected to node <3>.\nNode <1> is connected to node <3>.\nCalculate the Jaccard coefficient of node <0> and node <2>.\nAnswer:\n",
        "answer": "1.0",
        "type": "Jaccard"
    },
    {
        "index": 291,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <1>, <5>.\nNode <0> is connected to nodes <1>, <4>, <3>.\nNode <5> is connected to node <2>.\nNode <4> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <0>, <4>.\nCalculate the Jaccard coefficient of node <2> and node <0>.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 292,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <6>, <1>, <2>, <4>, <5>, <3>.\nNode <6> is connected to nodes <0>, <3>.\nNode <1> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <0>, <1>, <3>.\nNode <4> is connected to node <0>.\nNode <5> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <0>, <6>, <2>, <5>.\nCalculate the Jaccard coefficient of node <3> and node <5>.\nAnswer:\n",
        "answer": "0.2",
        "type": "Jaccard"
    },
    {
        "index": 293,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <2>, <4>.\nNode <2> is connected to node <1>.\nNode <4> is connected to nodes <5>, <3>, <0>, <2>.\nNode <1> is connected to node <0>.\nNode <5> is connected to node <2>.\nCalculate the Jaccard coefficient of node <2> and node <0>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 294,
        "question": "Given a directed graph:\nNode <4> is connected to node <1>.\nNode <1> is connected to node <5>.\nNode <5> is connected to nodes <0>, <2>, <3>.\nNode <0> is connected to nodes <3>, <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <4>, <1>, <5>, <0>.\nCalculate the Jaccard coefficient of node <3> and node <4>. For a directed graph, we consider a node's successors as its neighbors.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 295,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <0>, <1>.\nNode <5> is connected to nodes <4>, <1>, <2>.\nNode <0> is connected to nodes <4>, <3>, <6>.\nNode <1> is connected to nodes <4>, <5>.\nNode <2> is connected to node <5>.\nNode <3> is connected to node <0>.\nNode <6> is connected to node <0>.\nCalculate the Jaccard coefficient of node <1> and node <4>.\nAnswer:\n",
        "answer": "0.25",
        "type": "Jaccard"
    },
    {
        "index": 296,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <5>, <6>, <3>, <1>.\nNode <2> is connected to nodes <0>, <5>.\nNode <5> is connected to nodes <0>, <2>, <6>, <3>, <4>.\nNode <6> is connected to nodes <0>, <5>, <4>.\nNode <3> is connected to nodes <0>, <5>.\nNode <1> is connected to node <0>.\nNode <4> is connected to nodes <6>, <5>.\nCalculate the Jaccard coefficient of node <3> and node <2>.\nAnswer:\n",
        "answer": "1.0",
        "type": "Jaccard"
    },
    {
        "index": 297,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <1>, <0>, <3>.\nNode <0> is connected to nodes <1>, <2>.\nNode <3> is connected to nodes <2>, <4>.\nNode <4> is connected to node <3>.\nCalculate the Jaccard coefficient of node <3> and node <0>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 298,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <1>, <5>, <2>, <0>.\nNode <4> is connected to nodes <3>, <6>.\nNode <1> is connected to node <3>.\nNode <5> is connected to node <3>.\nNode <2> is connected to node <3>.\nNode <0> is connected to node <3>.\nNode <6> is connected to node <4>.\nCalculate the Jaccard coefficient of node <5> and node <3>.\nAnswer:\n",
        "answer": "0.0",
        "type": "Jaccard"
    },
    {
        "index": 299,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <4>, <2>, <1>, <5>.\nNode <0> is connected to nodes <3>, <4>, <1>, <5>.\nNode <4> is connected to nodes <3>, <0>, <5>.\nNode <2> is connected to nodes <3>, <1>, <5>.\nNode <1> is connected to nodes <3>, <0>, <2>, <5>.\nNode <5> is connected to nodes <3>, <0>, <4>, <2>, <1>.\nCalculate the Jaccard coefficient of node <4> and node <3>.\nAnswer:\n",
        "answer": "0.3333",
        "type": "Jaccard"
    },
    {
        "index": 0,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2> (weight: 10), <0> (weight: 7), <1> (weight: 1).\nNode <2> is connected to nodes <0> (weight: 4), <1> (weight: 3), <3> (weight: 5).\nNode <0> is connected to nodes <1> (weight: 8), <4> (weight: 3), <2> (weight: 9).\nNode <1> is connected to nodes <4> (weight: 8), <3> (weight: 2), <0> (weight: 0).\nNode <4> is connected to node <0> (weight: 4).\n\nCalculate the maximum flow between node <0> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "11",
        "type": "maximum_flow"
    },
    {
        "index": 1,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1> (weight: 7), <5> (weight: 8), <2> (weight: 4), <0> (weight: 0).\nNode <1> is connected to nodes <0> (weight: 1), <4> (weight: 0).\nNode <5> is connected to nodes <2> (weight: 7), <3> (weight: 5).\nNode <2> is connected to nodes <1> (weight: 5), <0> (weight: 10), <5> (weight: 10).\nNode <0> is connected to node <4> (weight: 2).\nNode <3> is connected to nodes <2> (weight: 8), <0> (weight: 9).\n\nCalculate the maximum flow between node <0> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "2",
        "type": "maximum_flow"
    },
    {
        "index": 2,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2> (weight: 3), <3> (weight: 3), <6> (weight: 0), <5> (weight: 0).\nNode <2> is connected to nodes <5> (weight: 4), <0> (weight: 5), <3> (weight: 7), <6> (weight: 4), <1> (weight: 2).\nNode <3> is connected to nodes <6> (weight: 4), <1> (weight: 2), <5> (weight: 3), <0> (weight: 5), <2> (weight: 0).\nNode <5> is connected to nodes <0> (weight: 2), <4> (weight: 7), <6> (weight: 8), <1> (weight: 5), <2> (weight: 2).\nNode <0> is connected to nodes <2> (weight: 9), <5> (weight: 1), <6> (weight: 0).\nNode <6> is connected to nodes <1> (weight: 4), <0> (weight: 9).\nNode <4> is connected to nodes <6> (weight: 10), <1> (weight: 7), <2> (weight: 9), <5> (weight: 2).\n\nCalculate the maximum flow between node <6> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "13",
        "type": "maximum_flow"
    },
    {
        "index": 3,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <4> (weight: 7), <0> (weight: 2), <6> (weight: 5), <2> (weight: 2).\nNode <4> is connected to nodes <1> (weight: 2), <6> (weight: 9), <5> (weight: 0), <2> (weight: 0), <3> (weight: 0).\nNode <0> is connected to nodes <3> (weight: 2), <5> (weight: 0).\nNode <6> is connected to nodes <2> (weight: 10), <5> (weight: 3), <3> (weight: 7), <1> (weight: 4).\nNode <2> is connected to nodes <5> (weight: 6), <4> (weight: 10), <0> (weight: 1), <1> (weight: 10), <6> (weight: 0).\nNode <1> is connected to nodes <6> (weight: 3), <2> (weight: 5), <5> (weight: 10).\nNode <3> is connected to nodes <2> (weight: 8), <5> (weight: 1), <4> (weight: 3), <0> (weight: 8).\n\nCalculate the maximum flow between node <5> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "16",
        "type": "maximum_flow"
    },
    {
        "index": 4,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <5> (weight: 9), <2> (weight: 6), <4> (weight: 0).\nNode <5> is connected to nodes <3> (weight: 2), <0> (weight: 0).\nNode <4> is connected to nodes <0> (weight: 10), <3> (weight: 6).\nNode <0> is connected to nodes <1> (weight: 10), <5> (weight: 4), <4> (weight: 0).\nNode <1> is connected to nodes <2> (weight: 7), <4> (weight: 6).\n\nCalculate the maximum flow between node <4> and node <5> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "10",
        "type": "maximum_flow"
    },
    {
        "index": 5,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1> (weight: 2), <3> (weight: 0).\nNode <1> is connected to nodes <2> (weight: 7), <3> (weight: 0), <4> (weight: 0).\nNode <2> is connected to nodes <0> (weight: 8), <3> (weight: 3), <1> (weight: 9).\nNode <0> is connected to nodes <3> (weight: 1), <4> (weight: 2), <2> (weight: 10).\nNode <3> is connected to nodes <1> (weight: 7), <4> (weight: 1).\n\nCalculate the maximum flow between node <3> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "8",
        "type": "maximum_flow"
    },
    {
        "index": 6,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2> (weight: 8), <0> (weight: 8), <6> (weight: 0), <3> (weight: 0).\nNode <2> is connected to nodes <0> (weight: 7), <5> (weight: 3), <6> (weight: 10), <3> (weight: 0).\nNode <0> is connected to nodes <5> (weight: 5), <6> (weight: 7), <4> (weight: 4), <2> (weight: 1), <1> (weight: 0).\nNode <5> is connected to nodes <6> (weight: 9), <1> (weight: 6), <3> (weight: 2), <0> (weight: 6).\nNode <6> is connected to nodes <3> (weight: 2), <4> (weight: 6), <5> (weight: 10).\nNode <1> is connected to nodes <3> (weight: 5), <4> (weight: 3), <0> (weight: 7), <6> (weight: 6), <5> (weight: 0).\nNode <3> is connected to nodes <4> (weight: 5), <2> (weight: 3), <5> (weight: 2), <6> (weight: 0).\n\nCalculate the maximum flow between node <5> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "22",
        "type": "maximum_flow"
    },
    {
        "index": 7,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0> (weight: 6), <4> (weight: 0), <1> (weight: 0).\nNode <2> is connected to node <0> (weight: 7).\nNode <5> is connected to nodes <0> (weight: 1), <3> (weight: 1), <2> (weight: 9).\nNode <1> is connected to nodes <0> (weight: 9), <3> (weight: 8), <2> (weight: 10), <5> (weight: 3), <4> (weight: 0).\nNode <4> is connected to nodes <0> (weight: 6), <3> (weight: 7), <1> (weight: 5).\n\nCalculate the maximum flow between node <4> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "12",
        "type": "maximum_flow"
    },
    {
        "index": 8,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4> (weight: 8), <0> (weight: 7), <2> (weight: 4), <1> (weight: 7).\nNode <4> is connected to nodes <0> (weight: 6), <2> (weight: 5), <1> (weight: 0).\nNode <0> is connected to nodes <2> (weight: 1), <4> (weight: 7).\nNode <2> is connected to nodes <1> (weight: 5), <0> (weight: 0).\nNode <1> is connected to nodes <4> (weight: 9), <2> (weight: 0).\n\nCalculate the maximum flow between node <0> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "8",
        "type": "maximum_flow"
    },
    {
        "index": 9,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3> (weight: 2), <2> (weight: 0), <0> (weight: 0).\nNode <3> is connected to nodes <2> (weight: 8), <0> (weight: 7).\nNode <2> is connected to nodes <4> (weight: 5), <0> (weight: 4).\nNode <0> is connected to nodes <3> (weight: 6), <2> (weight: 1), <4> (weight: 7).\nNode <1> is connected to node <0> (weight: 5).\n\nCalculate the maximum flow between node <2> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "9",
        "type": "maximum_flow"
    },
    {
        "index": 10,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2> (weight: 9), <5> (weight: 7), <3> (weight: 7).\nNode <2> is connected to nodes <4> (weight: 9), <6> (weight: 10), <0> (weight: 9).\nNode <5> is connected to nodes <2> (weight: 4), <4> (weight: 9), <1> (weight: 2), <6> (weight: 0), <0> (weight: 0).\nNode <3> is connected to nodes <2> (weight: 9), <4> (weight: 4), <1> (weight: 9), <6> (weight: 0), <0> (weight: 0).\nNode <4> is connected to nodes <1> (weight: 6), <5> (weight: 9), <3> (weight: 3), <6> (weight: 7), <0> (weight: 9), <2> (weight: 3).\nNode <6> is connected to nodes <0> (weight: 9), <2> (weight: 3), <4> (weight: 3), <5> (weight: 5), <3> (weight: 4).\nNode <1> is connected to nodes <5> (weight: 4), <3> (weight: 8).\n\nCalculate the maximum flow between node <2> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "25",
        "type": "maximum_flow"
    },
    {
        "index": 11,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0> (weight: 1), <1> (weight: 2).\nNode <0> is connected to node <5> (weight: 3).\nNode <1> is connected to nodes <2> (weight: 9), <0> (weight: 5), <4> (weight: 2), <5> (weight: 0).\nNode <2> is connected to nodes <5> (weight: 5), <0> (weight: 10), <4> (weight: 7).\nNode <4> is connected to nodes <1> (weight: 6), <2> (weight: 8), <3> (weight: 10), <5> (weight: 5).\nNode <3> is connected to nodes <5> (weight: 6), <0> (weight: 5), <1> (weight: 2), <2> (weight: 4), <4> (weight: 0).\n\nCalculate the maximum flow between node <5> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "2",
        "type": "maximum_flow"
    },
    {
        "index": 12,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <6> (weight: 10), <4> (weight: 8), <2> (weight: 4), <3> (weight: 1).\nNode <6> is connected to nodes <4> (weight: 1), <2> (weight: 9), <1> (weight: 9), <0> (weight: 3).\nNode <4> is connected to nodes <5> (weight: 4), <1> (weight: 4), <0> (weight: 3).\nNode <2> is connected to nodes <3> (weight: 10), <1> (weight: 1), <0> (weight: 0), <6> (weight: 0).\nNode <3> is connected to nodes <0> (weight: 0), <2> (weight: 0), <1> (weight: 0).\nNode <1> is connected to nodes <0> (weight: 6), <6> (weight: 8), <2> (weight: 6), <5> (weight: 8), <3> (weight: 10), <4> (weight: 0).\nNode <5> is connected to nodes <1> (weight: 9), <0> (weight: 2), <6> (weight: 5), <2> (weight: 2), <4> (weight: 0).\n\nCalculate the maximum flow between node <0> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "21",
        "type": "maximum_flow"
    },
    {
        "index": 13,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4> (weight: 3), <0> (weight: 3).\nNode <4> is connected to nodes <0> (weight: 4), <1> (weight: 6), <2> (weight: 4).\nNode <0> is connected to nodes <1> (weight: 6), <2> (weight: 4), <3> (weight: 0).\nNode <2> is connected to node <3> (weight: 10).\nNode <3> is connected to node <0> (weight: 10).\n\nCalculate the maximum flow between node <3> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "10",
        "type": "maximum_flow"
    },
    {
        "index": 14,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1> (weight: 3), <2> (weight: 7).\nNode <1> is connected to nodes <4> (weight: 5), <2> (weight: 8), <3> (weight: 7).\nNode <2> is connected to nodes <3> (weight: 7), <1> (weight: 3), <0> (weight: 3).\nNode <4> is connected to nodes <3> (weight: 5), <0> (weight: 3), <1> (weight: 0).\nNode <0> is connected to nodes <4> (weight: 7), <3> (weight: 4), <1> (weight: 1), <2> (weight: 0).\n\nCalculate the maximum flow between node <3> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "8",
        "type": "maximum_flow"
    },
    {
        "index": 15,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1> (weight: 2), <0> (weight: 5), <2> (weight: 2), <4> (weight: 2).\nNode <1> is connected to node <2> (weight: 1).\nNode <0> is connected to nodes <4> (weight: 9), <1> (weight: 8).\nNode <2> is connected to node <3> (weight: 4).\nNode <4> is connected to nodes <0> (weight: 5), <2> (weight: 8).\n\nCalculate the maximum flow between node <2> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "4",
        "type": "maximum_flow"
    },
    {
        "index": 16,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0> (weight: 6), <1> (weight: 10).\nNode <0> is connected to nodes <2> (weight: 9), <5> (weight: 1).\nNode <1> is connected to nodes <3> (weight: 10), <5> (weight: 8), <0> (weight: 8), <2> (weight: 1), <4> (weight: 3).\nNode <2> is connected to node <1> (weight: 4).\nNode <4> is connected to nodes <3> (weight: 4), <0> (weight: 5), <1> (weight: 0).\n\nCalculate the maximum flow between node <2> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "3",
        "type": "maximum_flow"
    },
    {
        "index": 17,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3> (weight: 5), <5> (weight: 3), <6> (weight: 0).\nNode <3> is connected to nodes <0> (weight: 5), <4> (weight: 2), <1> (weight: 0).\nNode <5> is connected to nodes <1> (weight: 10), <0> (weight: 10).\nNode <0> is connected to nodes <5> (weight: 2), <6> (weight: 5), <3> (weight: 5).\nNode <1> is connected to nodes <0> (weight: 9), <3> (weight: 3), <5> (weight: 0).\nNode <6> is connected to nodes <4> (weight: 10), <3> (weight: 7), <2> (weight: 2), <0> (weight: 0).\nNode <2> is connected to nodes <6> (weight: 5), <3> (weight: 9), <5> (weight: 4).\n\nCalculate the maximum flow between node <5> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "7",
        "type": "maximum_flow"
    },
    {
        "index": 18,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <6> (weight: 8), <5> (weight: 3), <0> (weight: 1).\nNode <6> is connected to nodes <5> (weight: 3), <0> (weight: 2), <3> (weight: 9), <1> (weight: 7), <4> (weight: 1).\nNode <5> is connected to nodes <0> (weight: 5), <2> (weight: 7).\nNode <0> is connected to node <6> (weight: 1).\nNode <3> is connected to nodes <1> (weight: 10), <2> (weight: 3).\nNode <1> is connected to nodes <0> (weight: 3), <2> (weight: 9), <6> (weight: 0).\nNode <2> is connected to node <3> (weight: 5).\n\nCalculate the maximum flow between node <0> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "1",
        "type": "maximum_flow"
    },
    {
        "index": 19,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2> (weight: 1), <0> (weight: 6), <1> (weight: 1).\nNode <2> is connected to node <1> (weight: 4).\nNode <0> is connected to nodes <1> (weight: 9), <3> (weight: 6), <2> (weight: 6).\nNode <1> is connected to nodes <3> (weight: 8), <2> (weight: 4), <4> (weight: 9), <0> (weight: 8).\nNode <4> is connected to nodes <1> (weight: 6), <3> (weight: 1).\n\nCalculate the maximum flow between node <2> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "4",
        "type": "maximum_flow"
    },
    {
        "index": 20,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3> (weight: 1), <0> (weight: 0).\nNode <3> is connected to nodes <6> (weight: 7), <1> (weight: 8), <5> (weight: 10), <2> (weight: 6).\nNode <6> is connected to nodes <1> (weight: 5), <4> (weight: 9).\nNode <5> is connected to nodes <2> (weight: 6), <1> (weight: 2), <3> (weight: 0).\nNode <2> is connected to nodes <6> (weight: 6), <1> (weight: 8), <4> (weight: 9).\nNode <4> is connected to node <0> (weight: 7).\nNode <0> is connected to node <1> (weight: 1).\n\nCalculate the maximum flow between node <0> and node <5> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "1",
        "type": "maximum_flow"
    },
    {
        "index": 21,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3> (weight: 2), <4> (weight: 8), <2> (weight: 6), <0> (weight: 7).\nNode <3> is connected to nodes <4> (weight: 8), <0> (weight: 6).\nNode <4> is connected to nodes <2> (weight: 1), <0> (weight: 4), <3> (weight: 0).\nNode <2> is connected to nodes <1> (weight: 8), <4> (weight: 7).\nNode <0> is connected to nodes <1> (weight: 5), <3> (weight: 9).\n\nCalculate the maximum flow between node <3> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "6",
        "type": "maximum_flow"
    },
    {
        "index": 22,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <5> (weight: 8), <4> (weight: 8), <6> (weight: 10), <3> (weight: 0).\nNode <5> is connected to nodes <1> (weight: 7), <0> (weight: 10), <3> (weight: 3).\nNode <4> is connected to nodes <0> (weight: 8), <5> (weight: 6), <1> (weight: 0), <2> (weight: 0).\nNode <6> is connected to nodes <3> (weight: 1), <2> (weight: 7).\nNode <0> is connected to nodes <3> (weight: 8), <5> (weight: 1), <2> (weight: 8).\nNode <3> is connected to nodes <5> (weight: 4), <1> (weight: 5), <0> (weight: 7).\nNode <2> is connected to nodes <0> (weight: 9), <4> (weight: 7).\n\nCalculate the maximum flow between node <3> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "15",
        "type": "maximum_flow"
    },
    {
        "index": 23,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3> (weight: 2), <1> (weight: 1), <2> (weight: 0).\nNode <3> is connected to node <1> (weight: 4).\nNode <1> is connected to nodes <2> (weight: 2), <0> (weight: 3), <3> (weight: 0).\nNode <2> is connected to nodes <4> (weight: 6), <1> (weight: 7), <0> (weight: 0).\nNode <0> is connected to nodes <2> (weight: 6), <1> (weight: 0).\n\nCalculate the maximum flow between node <3> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "4",
        "type": "maximum_flow"
    },
    {
        "index": 24,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5> (weight: 2), <2> (weight: 0).\nNode <5> is connected to nodes <4> (weight: 8), <6> (weight: 7), <3> (weight: 10), <0> (weight: 7).\nNode <4> is connected to nodes <6> (weight: 10), <5> (weight: 7).\nNode <6> is connected to nodes <1> (weight: 2), <2> (weight: 10).\nNode <3> is connected to nodes <0> (weight: 5), <5> (weight: 2), <4> (weight: 9), <6> (weight: 5), <2> (weight: 2), <1> (weight: 0).\nNode <1> is connected to nodes <3> (weight: 2), <6> (weight: 8), <2> (weight: 0).\nNode <2> is connected to nodes <3> (weight: 10), <0> (weight: 5), <6> (weight: 6), <1> (weight: 8).\n\nCalculate the maximum flow between node <2> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "14",
        "type": "maximum_flow"
    },
    {
        "index": 25,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4> (weight: 5), <2> (weight: 5).\nNode <4> is connected to nodes <1> (weight: 7), <6> (weight: 6), <0> (weight: 2).\nNode <2> is connected to nodes <0> (weight: 2), <3> (weight: 6), <6> (weight: 0).\nNode <6> is connected to nodes <2> (weight: 6), <1> (weight: 8).\nNode <0> is connected to node <6> (weight: 7).\nNode <3> is connected to nodes <1> (weight: 6), <0> (weight: 6), <2> (weight: 0).\nNode <5> is connected to nodes <0> (weight: 3), <3> (weight: 5), <2> (weight: 3), <6> (weight: 4).\n\nCalculate the maximum flow between node <6> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "6",
        "type": "maximum_flow"
    },
    {
        "index": 26,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0> (weight: 9), <1> (weight: 7).\nNode <0> is connected to nodes <3> (weight: 2), <4> (weight: 1).\nNode <1> is connected to node <3> (weight: 2).\nNode <3> is connected to nodes <4> (weight: 4), <0> (weight: 7), <1> (weight: 7).\nNode <2> is connected to node <1> (weight: 9).\n\nCalculate the maximum flow between node <1> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "2",
        "type": "maximum_flow"
    },
    {
        "index": 27,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0> (weight: 10), <2> (weight: 6), <1> (weight: 8), <3> (weight: 1).\nNode <0> is connected to node <2> (weight: 1).\nNode <2> is connected to nodes <1> (weight: 10), <3> (weight: 1).\nNode <1> is connected to nodes <3> (weight: 6), <4> (weight: 5), <0> (weight: 4).\n\nCalculate the maximum flow between node <1> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "5",
        "type": "maximum_flow"
    },
    {
        "index": 28,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1> (weight: 3), <4> (weight: 4), <0> (weight: 0).\nNode <1> is connected to nodes <4> (weight: 2), <2> (weight: 5), <5> (weight: 5), <3> (weight: 0).\nNode <2> is connected to nodes <3> (weight: 5), <1> (weight: 0).\nNode <5> is connected to node <4> (weight: 9).\nNode <0> is connected to node <3> (weight: 8).\n\nCalculate the maximum flow between node <0> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "3",
        "type": "maximum_flow"
    },
    {
        "index": 29,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <6> (weight: 3), <0> (weight: 10).\nNode <6> is connected to node <5> (weight: 10).\nNode <0> is connected to nodes <2> (weight: 7), <3> (weight: 10), <4> (weight: 0).\nNode <5> is connected to node <4> (weight: 6).\nNode <3> is connected to nodes <4> (weight: 7), <6> (weight: 6).\nNode <4> is connected to nodes <0> (weight: 6), <6> (weight: 1), <5> (weight: 0).\nNode <1> is connected to node <4> (weight: 10).\n\nCalculate the maximum flow between node <5> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "6",
        "type": "maximum_flow"
    },
    {
        "index": 30,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4> (weight: 6), <2> (weight: 6), <3> (weight: 6).\nNode <4> is connected to nodes <2> (weight: 2), <3> (weight: 4), <0> (weight: 6).\nNode <2> is connected to nodes <3> (weight: 3), <1> (weight: 10).\nNode <3> is connected to nodes <0> (weight: 2), <4> (weight: 8).\nNode <1> is connected to node <2> (weight: 0).\n\nCalculate the maximum flow between node <2> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "10",
        "type": "maximum_flow"
    },
    {
        "index": 31,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1> (weight: 3), <4> (weight: 4), <0> (weight: 0).\nNode <1> is connected to nodes <2> (weight: 1), <3> (weight: 3), <0> (weight: 2).\nNode <4> is connected to node <2> (weight: 4).\nNode <2> is connected to nodes <0> (weight: 8), <1> (weight: 2), <4> (weight: 10).\nNode <0> is connected to nodes <4> (weight: 1), <3> (weight: 5), <2> (weight: 0).\n\nCalculate the maximum flow between node <4> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "4",
        "type": "maximum_flow"
    },
    {
        "index": 32,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2> (weight: 3), <4> (weight: 6), <1> (weight: 10).\nNode <2> is connected to nodes <0> (weight: 6), <3> (weight: 3).\nNode <4> is connected to node <3> (weight: 10).\nNode <1> is connected to nodes <3> (weight: 9), <0> (weight: 10).\nNode <0> is connected to node <5> (weight: 7).\nNode <5> is connected to node <3> (weight: 10).\n\nCalculate the maximum flow between node <3> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "10",
        "type": "maximum_flow"
    },
    {
        "index": 33,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0> (weight: 4), <5> (weight: 6), <6> (weight: 10), <4> (weight: 0).\nNode <0> is connected to node <2> (weight: 5).\nNode <5> is connected to nodes <2> (weight: 10), <1> (weight: 5), <4> (weight: 3).\nNode <6> is connected to nodes <2> (weight: 4), <1> (weight: 0).\nNode <2> is connected to nodes <6> (weight: 9), <5> (weight: 0).\nNode <4> is connected to nodes <5> (weight: 1), <1> (weight: 2).\nNode <3> is connected to nodes <1> (weight: 5), <5> (weight: 10).\n\nCalculate the maximum flow between node <5> and node <6> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "16",
        "type": "maximum_flow"
    },
    {
        "index": 34,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3> (weight: 4), <5> (weight: 10).\nNode <3> is connected to nodes <6> (weight: 5), <2> (weight: 1), <0> (weight: 7).\nNode <5> is connected to nodes <0> (weight: 1), <4> (weight: 5), <6> (weight: 8).\nNode <0> is connected to nodes <4> (weight: 1), <6> (weight: 4), <5> (weight: 10).\nNode <4> is connected to nodes <5> (weight: 1), <0> (weight: 0).\nNode <1> is connected to nodes <3> (weight: 3), <5> (weight: 10), <0> (weight: 2).\n\nCalculate the maximum flow between node <0> and node <5> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "11",
        "type": "maximum_flow"
    },
    {
        "index": 35,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4> (weight: 5), <2> (weight: 2).\nNode <4> is connected to nodes <5> (weight: 9), <1> (weight: 7), <3> (weight: 0).\nNode <2> is connected to nodes <0> (weight: 3), <3> (weight: 0).\nNode <5> is connected to nodes <1> (weight: 4), <0> (weight: 2).\nNode <1> is connected to nodes <3> (weight: 7), <2> (weight: 5), <4> (weight: 0), <0> (weight: 0).\nNode <0> is connected to nodes <4> (weight: 3), <2> (weight: 4), <1> (weight: 5).\n\nCalculate the maximum flow between node <3> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "7",
        "type": "maximum_flow"
    },
    {
        "index": 36,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4> (weight: 3), <2> (weight: 7), <3> (weight: 1).\nNode <4> is connected to nodes <2> (weight: 1), <0> (weight: 3), <1> (weight: 2).\nNode <2> is connected to nodes <3> (weight: 4), <1> (weight: 6), <4> (weight: 0), <0> (weight: 0).\nNode <3> is connected to nodes <0> (weight: 5), <1> (weight: 1), <4> (weight: 2), <2> (weight: 5).\nNode <1> is connected to nodes <4> (weight: 4), <3> (weight: 8).\n\nCalculate the maximum flow between node <4> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "6",
        "type": "maximum_flow"
    },
    {
        "index": 37,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <1> (weight: 2), <4> (weight: 0).\nNode <1> is connected to nodes <2> (weight: 3), <0> (weight: 2), <5> (weight: 1).\nNode <2> is connected to nodes <3> (weight: 9), <1> (weight: 7).\nNode <0> is connected to nodes <2> (weight: 1), <4> (weight: 4), <1> (weight: 0).\nNode <3> is connected to node <2> (weight: 3).\nNode <4> is connected to nodes <5> (weight: 3), <1> (weight: 3), <0> (weight: 0).\n\nCalculate the maximum flow between node <2> and node <5> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "3",
        "type": "maximum_flow"
    },
    {
        "index": 38,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0> (weight: 10), <4> (weight: 7), <3> (weight: 0).\nNode <0> is connected to nodes <4> (weight: 8), <2> (weight: 8), <5> (weight: 0).\nNode <4> is connected to nodes <2> (weight: 1), <1> (weight: 5).\nNode <2> is connected to nodes <0> (weight: 3), <3> (weight: 2), <1> (weight: 0).\nNode <1> is connected to nodes <4> (weight: 8), <2> (weight: 10).\nNode <3> is connected to nodes <2> (weight: 3), <5> (weight: 5).\n\nCalculate the maximum flow between node <1> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "5",
        "type": "maximum_flow"
    },
    {
        "index": 39,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0> (weight: 1), <4> (weight: 3), <2> (weight: 2), <1> (weight: 0).\nNode <0> is connected to nodes <1> (weight: 6), <2> (weight: 8), <3> (weight: 4), <4> (weight: 0).\nNode <4> is connected to nodes <2> (weight: 3), <0> (weight: 4), <5> (weight: 8).\nNode <2> is connected to nodes <0> (weight: 9), <4> (weight: 1), <3> (weight: 0).\nNode <1> is connected to nodes <3> (weight: 10), <5> (weight: 0).\nNode <5> is connected to nodes <4> (weight: 7), <1> (weight: 5).\n\nCalculate the maximum flow between node <4> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "10",
        "type": "maximum_flow"
    },
    {
        "index": 40,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <6> (weight: 3), <4> (weight: 0).\nNode <6> is connected to nodes <2> (weight: 9), <1> (weight: 0), <5> (weight: 0).\nNode <2> is connected to nodes <0> (weight: 5), <1> (weight: 6), <5> (weight: 5).\nNode <0> is connected to node <1> (weight: 8).\nNode <1> is connected to nodes <4> (weight: 10), <0> (weight: 8), <6> (weight: 1).\nNode <4> is connected to nodes <5> (weight: 1), <1> (weight: 0).\nNode <3> is connected to nodes <6> (weight: 1), <1> (weight: 6), <4> (weight: 10).\n\nCalculate the maximum flow between node <0> and node <6> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "2",
        "type": "maximum_flow"
    },
    {
        "index": 41,
        "question": "Given a directed graph:\nNode <0> is connected to node <3> (weight: 5).\nNode <3> is connected to nodes <1> (weight: 3), <4> (weight: 7), <0> (weight: 3).\nNode <1> is connected to nodes <4> (weight: 2), <2> (weight: 3), <0> (weight: 1), <3> (weight: 0).\nNode <4> is connected to nodes <2> (weight: 2), <3> (weight: 6), <1> (weight: 8).\nNode <2> is connected to nodes <0> (weight: 4), <3> (weight: 7), <1> (weight: 0), <4> (weight: 0).\n\nCalculate the maximum flow between node <0> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "5",
        "type": "maximum_flow"
    },
    {
        "index": 42,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3> (weight: 9), <2> (weight: 8), <5> (weight: 0).\nNode <3> is connected to nodes <5> (weight: 1), <1> (weight: 7).\nNode <2> is connected to nodes <5> (weight: 0), <1> (weight: 0).\nNode <5> is connected to nodes <2> (weight: 2), <1> (weight: 6), <4> (weight: 0).\nNode <4> is connected to nodes <5> (weight: 7), <0> (weight: 0).\nNode <0> is connected to node <4> (weight: 6).\n\nCalculate the maximum flow between node <0> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "6",
        "type": "maximum_flow"
    },
    {
        "index": 43,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4> (weight: 6), <1> (weight: 5).\nNode <4> is connected to nodes <3> (weight: 1), <1> (weight: 1), <2> (weight: 3).\nNode <1> is connected to nodes <2> (weight: 7), <4> (weight: 1).\nNode <3> is connected to nodes <1> (weight: 3), <2> (weight: 1), <4> (weight: 3), <0> (weight: 8).\nNode <0> is connected to nodes <1> (weight: 4), <2> (weight: 10).\n\nCalculate the maximum flow between node <1> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "1",
        "type": "maximum_flow"
    },
    {
        "index": 44,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <6> (weight: 5), <2> (weight: 5), <1> (weight: 8), <4> (weight: 0).\nNode <6> is connected to nodes <2> (weight: 5), <4> (weight: 5), <5> (weight: 10), <3> (weight: 0).\nNode <2> is connected to nodes <1> (weight: 6), <4> (weight: 10), <6> (weight: 1).\nNode <1> is connected to nodes <4> (weight: 3), <2> (weight: 1), <3> (weight: 1).\nNode <4> is connected to nodes <5> (weight: 9), <6> (weight: 4), <2> (weight: 2), <3> (weight: 8), <1> (weight: 2).\nNode <3> is connected to nodes <1> (weight: 10), <6> (weight: 9).\nNode <0> is connected to nodes <3> (weight: 7), <5> (weight: 7), <6> (weight: 8).\n\nCalculate the maximum flow between node <2> and node <5> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "15",
        "type": "maximum_flow"
    },
    {
        "index": 45,
        "question": "Given a directed graph:\nNode <5> is connected to node <0> (weight: 2).\nNode <0> is connected to nodes <6> (weight: 8), <1> (weight: 6), <2> (weight: 6), <3> (weight: 5).\nNode <6> is connected to nodes <1> (weight: 1), <2> (weight: 7), <4> (weight: 4), <5> (weight: 5), <0> (weight: 0).\nNode <1> is connected to nodes <2> (weight: 7), <3> (weight: 3), <4> (weight: 1).\nNode <2> is connected to nodes <3> (weight: 3), <0> (weight: 2), <1> (weight: 0).\nNode <3> is connected to nodes <0> (weight: 9), <1> (weight: 0).\nNode <4> is connected to nodes <0> (weight: 10), <6> (weight: 10), <2> (weight: 7), <1> (weight: 0).\n\nCalculate the maximum flow between node <1> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "5",
        "type": "maximum_flow"
    },
    {
        "index": 46,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4> (weight: 9), <3> (weight: 1), <0> (weight: 2), <5> (weight: 0).\nNode <4> is connected to nodes <3> (weight: 3), <0> (weight: 2), <2> (weight: 3), <1> (weight: 3).\nNode <3> is connected to nodes <0> (weight: 9), <5> (weight: 1), <4> (weight: 10).\nNode <0> is connected to nodes <4> (weight: 4), <3> (weight: 0), <1> (weight: 0).\nNode <2> is connected to node <3> (weight: 7).\nNode <5> is connected to nodes <1> (weight: 6), <3> (weight: 0).\n\nCalculate the maximum flow between node <3> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "13",
        "type": "maximum_flow"
    },
    {
        "index": 47,
        "question": "Given a directed graph:\nNode <2> is connected to node <4> (weight: 1).\nNode <4> is connected to node <1> (weight: 10).\nNode <1> is connected to nodes <2> (weight: 4), <4> (weight: 0).\nNode <5> is connected to node <1> (weight: 9).\nNode <3> is connected to nodes <0> (weight: 1), <5> (weight: 6), <1> (weight: 5).\nNode <0> is connected to nodes <2> (weight: 6), <5> (weight: 8), <1> (weight: 10), <4> (weight: 9).\n\nCalculate the maximum flow between node <4> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "10",
        "type": "maximum_flow"
    },
    {
        "index": 48,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1> (weight: 5), <6> (weight: 4), <2> (weight: 4), <5> (weight: 5).\nNode <1> is connected to nodes <2> (weight: 5), <5> (weight: 8), <0> (weight: 2), <4> (weight: 2).\nNode <6> is connected to nodes <0> (weight: 6), <3> (weight: 5), <4> (weight: 7), <1> (weight: 5), <5> (weight: 0).\nNode <2> is connected to nodes <5> (weight: 3), <4> (weight: 8).\nNode <5> is connected to nodes <0> (weight: 1), <6> (weight: 5), <2> (weight: 0).\nNode <0> is connected to nodes <4> (weight: 6), <6> (weight: 1), <5> (weight: 0), <1> (weight: 0).\nNode <4> is connected to nodes <1> (weight: 6), <6> (weight: 3), <0> (weight: 3), <2> (weight: 0).\n\nCalculate the maximum flow between node <2> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "11",
        "type": "maximum_flow"
    },
    {
        "index": 49,
        "question": "Given a directed graph:\nNode <3> is connected to node <4> (weight: 3).\nNode <4> is connected to nodes <2> (weight: 1), <0> (weight: 10).\nNode <0> is connected to nodes <5> (weight: 3), <1> (weight: 10), <4> (weight: 0).\nNode <5> is connected to nodes <3> (weight: 8), <0> (weight: 7).\nNode <1> is connected to nodes <2> (weight: 10), <3> (weight: 7), <0> (weight: 1).\n\nCalculate the maximum flow between node <4> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "10",
        "type": "maximum_flow"
    },
    {
        "index": 50,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2> (weight: 7), <5> (weight: 9), <0> (weight: 4).\nNode <2> is connected to node <4> (weight: 0).\nNode <5> is connected to nodes <1> (weight: 2), <4> (weight: 8), <3> (weight: 4), <0> (weight: 0).\nNode <0> is connected to nodes <3> (weight: 6), <5> (weight: 3).\nNode <1> is connected to nodes <3> (weight: 9), <5> (weight: 2).\nNode <3> is connected to nodes <5> (weight: 7), <1> (weight: 3), <0> (weight: 0).\n\nCalculate the maximum flow between node <0> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "7",
        "type": "maximum_flow"
    },
    {
        "index": 51,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0> (weight: 2), <3> (weight: 8), <2> (weight: 1).\nNode <0> is connected to nodes <2> (weight: 6), <4> (weight: 5).\nNode <3> is connected to nodes <4> (weight: 5), <0> (weight: 6), <2> (weight: 0).\nNode <2> is connected to nodes <0> (weight: 2), <1> (weight: 4), <3> (weight: 7).\nNode <1> is connected to node <0> (weight: 5).\n\nCalculate the maximum flow between node <0> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "11",
        "type": "maximum_flow"
    },
    {
        "index": 52,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1> (weight: 7), <4> (weight: 4), <0> (weight: 10).\nNode <1> is connected to nodes <0> (weight: 6), <2> (weight: 5), <5> (weight: 0).\nNode <4> is connected to node <5> (weight: 10).\nNode <0> is connected to nodes <2> (weight: 7), <1> (weight: 7), <5> (weight: 6).\nNode <5> is connected to nodes <4> (weight: 7), <1> (weight: 3), <0> (weight: 0).\nNode <3> is connected to nodes <1> (weight: 6), <0> (weight: 1).\n\nCalculate the maximum flow between node <0> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "17",
        "type": "maximum_flow"
    },
    {
        "index": 53,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <5> (weight: 2), <2> (weight: 8), <0> (weight: 9), <1> (weight: 0).\nNode <5> is connected to nodes <0> (weight: 10), <4> (weight: 7).\nNode <2> is connected to nodes <0> (weight: 9), <3> (weight: 8), <5> (weight: 8).\nNode <0> is connected to nodes <3> (weight: 3), <1> (weight: 8), <5> (weight: 2).\nNode <3> is connected to nodes <5> (weight: 5), <2> (weight: 6), <0> (weight: 8).\nNode <1> is connected to nodes <5> (weight: 5), <2> (weight: 4), <4> (weight: 7), <0> (weight: 0).\n\nCalculate the maximum flow between node <5> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "14",
        "type": "maximum_flow"
    },
    {
        "index": 54,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <3> (weight: 8), <6> (weight: 9).\nNode <3> is connected to nodes <0> (weight: 1), <5> (weight: 2), <2> (weight: 1), <4> (weight: 2).\nNode <6> is connected to nodes <5> (weight: 2), <4> (weight: 6), <3> (weight: 8).\nNode <0> is connected to nodes <2> (weight: 4), <4> (weight: 2), <3> (weight: 2), <1> (weight: 2).\nNode <2> is connected to nodes <1> (weight: 7), <6> (weight: 1), <3> (weight: 0), <0> (weight: 0).\nNode <4> is connected to nodes <3> (weight: 1), <6> (weight: 10), <5> (weight: 9).\nNode <1> is connected to nodes <4> (weight: 6), <3> (weight: 6).\n\nCalculate the maximum flow between node <3> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "2",
        "type": "maximum_flow"
    },
    {
        "index": 55,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3> (weight: 4), <5> (weight: 8).\nNode <3> is connected to nodes <4> (weight: 4), <6> (weight: 1), <2> (weight: 0).\nNode <5> is connected to nodes <4> (weight: 5), <2> (weight: 10).\nNode <4> is connected to nodes <2> (weight: 5), <6> (weight: 5), <3> (weight: 6).\nNode <6> is connected to nodes <1> (weight: 8), <3> (weight: 7), <4> (weight: 0).\nNode <2> is connected to nodes <0> (weight: 2), <1> (weight: 7), <3> (weight: 7), <4> (weight: 8).\nNode <1> is connected to nodes <4> (weight: 8), <2> (weight: 5), <6> (weight: 10), <5> (weight: 7).\n\nCalculate the maximum flow between node <2> and node <6> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "13",
        "type": "maximum_flow"
    },
    {
        "index": 56,
        "question": "Given a directed graph:\nNode <4> is connected to node <0> (weight: 10).\nNode <0> is connected to nodes <3> (weight: 3), <2> (weight: 6), <1> (weight: 0).\nNode <3> is connected to nodes <1> (weight: 9), <2> (weight: 4), <4> (weight: 5), <0> (weight: 0).\nNode <2> is connected to nodes <0> (weight: 10), <4> (weight: 6), <1> (weight: 2).\nNode <1> is connected to nodes <2> (weight: 10), <0> (weight: 1), <4> (weight: 9), <3> (weight: 1).\n\nCalculate the maximum flow between node <1> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "4",
        "type": "maximum_flow"
    },
    {
        "index": 57,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0> (weight: 9), <3> (weight: 3), <1> (weight: 3).\nNode <0> is connected to nodes <3> (weight: 1), <1> (weight: 9).\nNode <3> is connected to nodes <2> (weight: 7), <4> (weight: 9), <0> (weight: 2).\nNode <1> is connected to nodes <2> (weight: 1), <0> (weight: 5), <3> (weight: 10).\nNode <4> is connected to nodes <0> (weight: 2), <1> (weight: 3).\n\nCalculate the maximum flow between node <0> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "10",
        "type": "maximum_flow"
    },
    {
        "index": 58,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4> (weight: 10), <2> (weight: 2), <1> (weight: 7), <3> (weight: 0).\nNode <4> is connected to nodes <3> (weight: 9), <2> (weight: 4), <0> (weight: 0).\nNode <2> is connected to nodes <1> (weight: 3), <0> (weight: 2), <3> (weight: 7), <4> (weight: 0).\nNode <1> is connected to nodes <0> (weight: 1), <3> (weight: 2), <2> (weight: 8).\nNode <3> is connected to nodes <1> (weight: 1), <0> (weight: 3).\n\nCalculate the maximum flow between node <3> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "4",
        "type": "maximum_flow"
    },
    {
        "index": 59,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2> (weight: 9), <1> (weight: 3), <0> (weight: 6), <4> (weight: 7).\nNode <2> is connected to nodes <0> (weight: 8), <3> (weight: 6), <5> (weight: 10).\nNode <1> is connected to node <0> (weight: 2).\nNode <0> is connected to nodes <4> (weight: 8), <2> (weight: 1), <1> (weight: 4).\nNode <4> is connected to nodes <3> (weight: 4), <5> (weight: 4), <2> (weight: 9), <1> (weight: 7).\nNode <3> is connected to nodes <0> (weight: 9), <2> (weight: 0), <4> (weight: 0).\n\nCalculate the maximum flow between node <5> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "10",
        "type": "maximum_flow"
    },
    {
        "index": 60,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4> (weight: 10), <2> (weight: 7), <0> (weight: 10), <3> (weight: 4).\nNode <4> is connected to nodes <3> (weight: 7), <5> (weight: 7), <2> (weight: 0).\nNode <2> is connected to nodes <5> (weight: 8), <4> (weight: 2).\nNode <0> is connected to nodes <2> (weight: 2), <3> (weight: 0).\nNode <3> is connected to nodes <0> (weight: 10), <5> (weight: 0), <4> (weight: 0).\nNode <5> is connected to nodes <3> (weight: 8), <2> (weight: 0).\n\nCalculate the maximum flow between node <2> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "10",
        "type": "maximum_flow"
    },
    {
        "index": 61,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0> (weight: 8), <2> (weight: 10).\nNode <0> is connected to nodes <3> (weight: 10), <4> (weight: 2), <5> (weight: 0).\nNode <2> is connected to nodes <5> (weight: 10), <4> (weight: 7), <0> (weight: 3), <3> (weight: 6).\nNode <3> is connected to nodes <2> (weight: 7), <0> (weight: 8).\nNode <4> is connected to nodes <1> (weight: 6), <5> (weight: 5).\nNode <1> is connected to nodes <5> (weight: 6), <0> (weight: 9).\n\nCalculate the maximum flow between node <5> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "17",
        "type": "maximum_flow"
    },
    {
        "index": 62,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2> (weight: 6), <1> (weight: 4), <5> (weight: 0).\nNode <2> is connected to nodes <6> (weight: 5), <1> (weight: 9), <3> (weight: 2), <5> (weight: 4), <4> (weight: 0).\nNode <1> is connected to nodes <3> (weight: 7), <5> (weight: 5), <6> (weight: 6), <0> (weight: 2), <4> (weight: 0), <2> (weight: 0).\nNode <6> is connected to nodes <0> (weight: 10), <1> (weight: 6), <4> (weight: 1), <5> (weight: 9).\nNode <3> is connected to nodes <4> (weight: 6), <5> (weight: 1), <6> (weight: 1), <2> (weight: 0), <0> (weight: 0), <1> (weight: 0).\nNode <5> is connected to nodes <2> (weight: 2), <6> (weight: 5), <4> (weight: 7).\nNode <0> is connected to nodes <3> (weight: 10), <5> (weight: 1), <2> (weight: 7), <6> (weight: 0).\n\nCalculate the maximum flow between node <5> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "14",
        "type": "maximum_flow"
    },
    {
        "index": 63,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <3> (weight: 4), <4> (weight: 3), <6> (weight: 5), <0> (weight: 8).\nNode <3> is connected to nodes <1> (weight: 4), <6> (weight: 6), <0> (weight: 8).\nNode <4> is connected to nodes <0> (weight: 6), <5> (weight: 5).\nNode <6> is connected to nodes <0> (weight: 2), <5> (weight: 5), <1> (weight: 2), <2> (weight: 0).\nNode <0> is connected to nodes <5> (weight: 1), <2> (weight: 2), <4> (weight: 0).\nNode <1> is connected to nodes <6> (weight: 9), <2> (weight: 3).\nNode <2> is connected to nodes <3> (weight: 5), <1> (weight: 5), <4> (weight: 5), <6> (weight: 7), <0> (weight: 0).\n\nCalculate the maximum flow between node <4> and node <5> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "8",
        "type": "maximum_flow"
    },
    {
        "index": 64,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0> (weight: 5), <1> (weight: 7), <3> (weight: 6).\nNode <0> is connected to nodes <1> (weight: 8), <3> (weight: 10).\nNode <1> is connected to nodes <4> (weight: 4), <0> (weight: 9).\nNode <3> is connected to nodes <0> (weight: 5), <4> (weight: 9).\nNode <4> is connected to nodes <2> (weight: 4), <0> (weight: 3), <1> (weight: 7), <3> (weight: 0).\n\nCalculate the maximum flow between node <1> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "13",
        "type": "maximum_flow"
    },
    {
        "index": 65,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <5> (weight: 4), <0> (weight: 2), <3> (weight: 0).\nNode <5> is connected to nodes <2> (weight: 8), <1> (weight: 7).\nNode <0> is connected to nodes <1> (weight: 7), <3> (weight: 2).\nNode <2> is connected to nodes <1> (weight: 8), <4> (weight: 8).\nNode <3> is connected to nodes <0> (weight: 1), <1> (weight: 9).\nNode <4> is connected to node <0> (weight: 10).\n\nCalculate the maximum flow between node <3> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "10",
        "type": "maximum_flow"
    },
    {
        "index": 66,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0> (weight: 9), <2> (weight: 3), <5> (weight: 3).\nNode <0> is connected to nodes <3> (weight: 2), <6> (weight: 9), <4> (weight: 8), <5> (weight: 0).\nNode <2> is connected to nodes <6> (weight: 7), <4> (weight: 9), <1> (weight: 10), <3> (weight: 6), <5> (weight: 0).\nNode <5> is connected to nodes <4> (weight: 4), <1> (weight: 7), <0> (weight: 1), <3> (weight: 7), <2> (weight: 7).\nNode <3> is connected to nodes <2> (weight: 5), <6> (weight: 9), <5> (weight: 9), <1> (weight: 2), <0> (weight: 0).\nNode <6> is connected to nodes <4> (weight: 6), <0> (weight: 7).\nNode <1> is connected to nodes <0> (weight: 4), <3> (weight: 10), <2> (weight: 1), <6> (weight: 5), <5> (weight: 6).\n\nCalculate the maximum flow between node <5> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "25",
        "type": "maximum_flow"
    },
    {
        "index": 67,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2> (weight: 6), <4> (weight: 3).\nNode <2> is connected to nodes <3> (weight: 9), <0> (weight: 9), <1> (weight: 4), <5> (weight: 0), <6> (weight: 0).\nNode <4> is connected to nodes <6> (weight: 8), <5> (weight: 0).\nNode <3> is connected to nodes <2> (weight: 10), <6> (weight: 6).\nNode <0> is connected to nodes <4> (weight: 9), <2> (weight: 0), <1> (weight: 0).\nNode <1> is connected to nodes <3> (weight: 1), <5> (weight: 3), <0> (weight: 2), <6> (weight: 0).\nNode <6> is connected to nodes <1> (weight: 7), <2> (weight: 10), <4> (weight: 0).\n\nCalculate the maximum flow between node <5> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "9",
        "type": "maximum_flow"
    },
    {
        "index": 68,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <5> (weight: 7), <3> (weight: 6), <4> (weight: 0), <2> (weight: 0).\nNode <5> is connected to nodes <4> (weight: 4), <2> (weight: 1), <1> (weight: 8).\nNode <3> is connected to nodes <4> (weight: 9), <2> (weight: 0), <1> (weight: 0).\nNode <4> is connected to nodes <2> (weight: 9), <3> (weight: 3), <0> (weight: 1), <1> (weight: 4).\nNode <2> is connected to nodes <3> (weight: 7), <0> (weight: 9), <1> (weight: 3), <4> (weight: 0).\nNode <0> is connected to node <5> (weight: 1).\n\nCalculate the maximum flow between node <4> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "16",
        "type": "maximum_flow"
    },
    {
        "index": 69,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4> (weight: 4), <1> (weight: 0).\nNode <4> is connected to nodes <5> (weight: 10), <3> (weight: 9).\nNode <5> is connected to nodes <3> (weight: 8), <2> (weight: 2).\nNode <3> is connected to nodes <4> (weight: 2), <5> (weight: 1), <1> (weight: 6).\nNode <1> is connected to nodes <3> (weight: 10), <4> (weight: 1), <0> (weight: 7).\n\nCalculate the maximum flow between node <3> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "6",
        "type": "maximum_flow"
    },
    {
        "index": 70,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5> (weight: 4), <2> (weight: 4), <3> (weight: 5), <1> (weight: 2), <4> (weight: 0).\nNode <5> is connected to nodes <4> (weight: 8), <2> (weight: 4).\nNode <2> is connected to nodes <1> (weight: 9), <0> (weight: 9), <5> (weight: 0), <4> (weight: 0).\nNode <3> is connected to nodes <0> (weight: 8), <5> (weight: 3).\nNode <1> is connected to node <5> (weight: 7).\nNode <4> is connected to nodes <2> (weight: 3), <3> (weight: 7), <0> (weight: 7), <5> (weight: 0).\n\nCalculate the maximum flow between node <5> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "11",
        "type": "maximum_flow"
    },
    {
        "index": 71,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3> (weight: 8), <5> (weight: 0).\nNode <3> is connected to nodes <1> (weight: 5), <4> (weight: 4), <6> (weight: 10), <0> (weight: 0).\nNode <1> is connected to node <2> (weight: 8).\nNode <6> is connected to nodes <5> (weight: 10), <1> (weight: 4), <2> (weight: 2), <0> (weight: 0), <3> (weight: 0).\nNode <5> is connected to nodes <1> (weight: 9), <2> (weight: 9), <4> (weight: 7).\nNode <2> is connected to nodes <0> (weight: 6), <5> (weight: 6), <1> (weight: 1).\nNode <0> is connected to nodes <3> (weight: 9), <1> (weight: 7), <6> (weight: 1), <2> (weight: 0).\n\nCalculate the maximum flow between node <1> and node <6> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "8",
        "type": "maximum_flow"
    },
    {
        "index": 72,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2> (weight: 5), <3> (weight: 5).\nNode <2> is connected to nodes <5> (weight: 6), <0> (weight: 3).\nNode <3> is connected to nodes <5> (weight: 5), <2> (weight: 4), <4> (weight: 2).\nNode <0> is connected to nodes <1> (weight: 10), <2> (weight: 0).\nNode <4> is connected to nodes <3> (weight: 2), <5> (weight: 10), <2> (weight: 6), <1> (weight: 0).\nNode <1> is connected to nodes <3> (weight: 3), <4> (weight: 2), <0> (weight: 0).\n\nCalculate the maximum flow between node <2> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "4",
        "type": "maximum_flow"
    },
    {
        "index": 73,
        "question": "Given a directed graph:\nNode <0> is connected to node <3> (weight: 9).\nNode <3> is connected to nodes <6> (weight: 9), <5> (weight: 6), <4> (weight: 0), <2> (weight: 0).\nNode <6> is connected to nodes <5> (weight: 9), <4> (weight: 7), <3> (weight: 5), <1> (weight: 7), <2> (weight: 5).\nNode <5> is connected to nodes <2> (weight: 8), <6> (weight: 10), <4> (weight: 0).\nNode <1> is connected to nodes <5> (weight: 1), <0> (weight: 8).\nNode <2> is connected to nodes <5> (weight: 3), <3> (weight: 3).\nNode <4> is connected to nodes <3> (weight: 8), <5> (weight: 7).\n\nCalculate the maximum flow between node <4> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "15",
        "type": "maximum_flow"
    },
    {
        "index": 74,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0> (weight: 10), <3> (weight: 0).\nNode <0> is connected to nodes <5> (weight: 10), <1> (weight: 9), <4> (weight: 0), <3> (weight: 0).\nNode <5> is connected to nodes <2> (weight: 9), <0> (weight: 0).\nNode <3> is connected to nodes <0> (weight: 1), <4> (weight: 8), <1> (weight: 10).\nNode <4> is connected to nodes <3> (weight: 3), <0> (weight: 1).\nNode <2> is connected to node <5> (weight: 0).\n\nCalculate the maximum flow between node <4> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "4",
        "type": "maximum_flow"
    },
    {
        "index": 75,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4> (weight: 8), <1> (weight: 6), <3> (weight: 0), <2> (weight: 0).\nNode <1> is connected to nodes <2> (weight: 5), <3> (weight: 0).\nNode <2> is connected to nodes <4> (weight: 9), <1> (weight: 4), <0> (weight: 5).\nNode <3> is connected to nodes <0> (weight: 7), <1> (weight: 8).\n\nCalculate the maximum flow between node <3> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "12",
        "type": "maximum_flow"
    },
    {
        "index": 76,
        "question": "Given a directed graph:\nNode <1> is connected to node <4> (weight: 9).\nNode <4> is connected to nodes <2> (weight: 3), <5> (weight: 4), <0> (weight: 0).\nNode <2> is connected to nodes <3> (weight: 8), <0> (weight: 2), <4> (weight: 1).\nNode <5> is connected to nodes <2> (weight: 3), <1> (weight: 4), <3> (weight: 5), <0> (weight: 2), <4> (weight: 0).\nNode <0> is connected to nodes <4> (weight: 9), <2> (weight: 4), <1> (weight: 2).\n\nCalculate the maximum flow between node <0> and node <5> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "4",
        "type": "maximum_flow"
    },
    {
        "index": 77,
        "question": "Given a directed graph:\nNode <2> is connected to node <3> (weight: 4).\nNode <3> is connected to nodes <2> (weight: 5), <0> (weight: 4), <4> (weight: 7).\nNode <0> is connected to nodes <4> (weight: 6), <1> (weight: 3), <3> (weight: 6), <2> (weight: 8).\nNode <4> is connected to nodes <1> (weight: 8), <2> (weight: 1), <0> (weight: 0), <3> (weight: 0).\nNode <1> is connected to nodes <2> (weight: 1), <0> (weight: 7), <4> (weight: 0).\n\nCalculate the maximum flow between node <0> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "11",
        "type": "maximum_flow"
    },
    {
        "index": 78,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1> (weight: 7), <4> (weight: 2), <3> (weight: 0).\nNode <1> is connected to nodes <3> (weight: 0), <0> (weight: 0), <4> (weight: 0).\nNode <4> is connected to nodes <1> (weight: 5), <2> (weight: 0).\nNode <3> is connected to nodes <2> (weight: 7), <0> (weight: 7), <1> (weight: 3).\nNode <2> is connected to nodes <4> (weight: 6), <3> (weight: 0).\n\nCalculate the maximum flow between node <3> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "15",
        "type": "maximum_flow"
    },
    {
        "index": 79,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5> (weight: 9), <4> (weight: 5).\nNode <5> is connected to nodes <3> (weight: 4), <2> (weight: 0).\nNode <4> is connected to nodes <1> (weight: 8), <5> (weight: 7).\nNode <3> is connected to nodes <5> (weight: 9), <0> (weight: 3), <1> (weight: 1).\nNode <1> is connected to nodes <2> (weight: 6), <5> (weight: 4).\nNode <0> is connected to nodes <4> (weight: 1), <3> (weight: 0).\n\nCalculate the maximum flow between node <2> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "3",
        "type": "maximum_flow"
    },
    {
        "index": 80,
        "question": "Given a directed graph:\nNode <5> is connected to node <1> (weight: 6).\nNode <1> is connected to nodes <4> (weight: 4), <2> (weight: 0), <0> (weight: 0).\nNode <4> is connected to node <2> (weight: 7).\nNode <3> is connected to node <2> (weight: 9).\nNode <2> is connected to nodes <0> (weight: 4), <5> (weight: 9), <3> (weight: 1), <4> (weight: 10), <1> (weight: 8).\nNode <0> is connected to nodes <5> (weight: 5), <1> (weight: 1), <2> (weight: 0).\n\nCalculate the maximum flow between node <3> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "9",
        "type": "maximum_flow"
    },
    {
        "index": 81,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <6> (weight: 9), <3> (weight: 7), <5> (weight: 0).\nNode <6> is connected to nodes <2> (weight: 4), <3> (weight: 6), <5> (weight: 7), <4> (weight: 9), <1> (weight: 0).\nNode <3> is connected to nodes <6> (weight: 0), <0> (weight: 0).\nNode <2> is connected to nodes <1> (weight: 2), <3> (weight: 6), <0> (weight: 8).\nNode <5> is connected to nodes <0> (weight: 10), <1> (weight: 0).\nNode <4> is connected to nodes <6> (weight: 4), <0> (weight: 9), <1> (weight: 0).\nNode <1> is connected to nodes <5> (weight: 4), <4> (weight: 1), <6> (weight: 1).\n\nCalculate the maximum flow between node <1> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "6",
        "type": "maximum_flow"
    },
    {
        "index": 82,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1> (weight: 7), <5> (weight: 7), <4> (weight: 1), <0> (weight: 10).\nNode <1> is connected to nodes <6> (weight: 9), <5> (weight: 2), <2> (weight: 4).\nNode <5> is connected to nodes <4> (weight: 5), <2> (weight: 2), <6> (weight: 1).\nNode <4> is connected to nodes <0> (weight: 2), <3> (weight: 2), <2> (weight: 6), <5> (weight: 0).\nNode <0> is connected to nodes <2> (weight: 1), <6> (weight: 3), <4> (weight: 1), <3> (weight: 0).\nNode <6> is connected to nodes <5> (weight: 8), <4> (weight: 1), <0> (weight: 4), <2> (weight: 10), <1> (weight: 9).\nNode <3> is connected to nodes <1> (weight: 1), <0> (weight: 8), <4> (weight: 0).\n\nCalculate the maximum flow between node <2> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "18",
        "type": "maximum_flow"
    },
    {
        "index": 83,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <6> (weight: 7), <1> (weight: 5), <3> (weight: 9).\nNode <6> is connected to nodes <0> (weight: 7), <2> (weight: 10), <5> (weight: 6).\nNode <3> is connected to nodes <5> (weight: 5), <4> (weight: 4).\nNode <0> is connected to nodes <3> (weight: 6), <6> (weight: 1), <4> (weight: 0).\nNode <2> is connected to nodes <4> (weight: 3), <6> (weight: 1), <0> (weight: 9).\nNode <4> is connected to nodes <0> (weight: 5), <3> (weight: 9).\n\nCalculate the maximum flow between node <4> and node <5> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "6",
        "type": "maximum_flow"
    },
    {
        "index": 84,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <3> (weight: 4), <2> (weight: 3), <0> (weight: 7), <6> (weight: 4).\nNode <3> is connected to nodes <0> (weight: 2), <1> (weight: 0).\nNode <2> is connected to nodes <0> (weight: 5), <5> (weight: 7), <1> (weight: 10).\nNode <0> is connected to nodes <6> (weight: 6), <3> (weight: 1), <4> (weight: 4).\nNode <6> is connected to nodes <4> (weight: 4), <0> (weight: 6).\nNode <1> is connected to node <3> (weight: 1).\nNode <4> is connected to nodes <0> (weight: 8), <6> (weight: 1), <1> (weight: 10), <3> (weight: 6).\n\nCalculate the maximum flow between node <1> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "1",
        "type": "maximum_flow"
    },
    {
        "index": 85,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0> (weight: 7), <1> (weight: 3).\nNode <0> is connected to node <1> (weight: 2).\nNode <1> is connected to nodes <5> (weight: 6), <4> (weight: 9), <6> (weight: 10), <0> (weight: 0).\nNode <5> is connected to nodes <4> (weight: 9), <3> (weight: 6), <1> (weight: 0).\nNode <4> is connected to node <0> (weight: 1).\nNode <6> is connected to nodes <1> (weight: 5), <2> (weight: 1), <5> (weight: 4), <4> (weight: 3).\nNode <3> is connected to nodes <5> (weight: 10), <4> (weight: 3).\n\nCalculate the maximum flow between node <0> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "2",
        "type": "maximum_flow"
    },
    {
        "index": 86,
        "question": "Given a directed graph:\nNode <0> is connected to node <4> (weight: 3).\nNode <4> is connected to node <1> (weight: 1).\nNode <1> is connected to nodes <4> (weight: 5), <2> (weight: 7), <3> (weight: 8).\nNode <3> is connected to nodes <1> (weight: 2), <2> (weight: 9).\nNode <2> is connected to nodes <0> (weight: 2), <3> (weight: 4), <1> (weight: 0).\n\nCalculate the maximum flow between node <1> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "15",
        "type": "maximum_flow"
    },
    {
        "index": 87,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0> (weight: 5), <2> (weight: 10), <1> (weight: 10), <4> (weight: 0).\nNode <0> is connected to nodes <2> (weight: 6), <5> (weight: 1), <4> (weight: 3).\nNode <2> is connected to nodes <1> (weight: 1), <4> (weight: 6).\nNode <1> is connected to nodes <5> (weight: 5), <3> (weight: 10), <4> (weight: 5), <0> (weight: 1), <2> (weight: 10).\nNode <4> is connected to nodes <1> (weight: 7), <6> (weight: 3), <5> (weight: 3).\nNode <3> is connected to nodes <4> (weight: 6), <1> (weight: 1), <6> (weight: 7).\nNode <6> is connected to node <0> (weight: 4).\n\nCalculate the maximum flow between node <4> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "10",
        "type": "maximum_flow"
    },
    {
        "index": 88,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3> (weight: 1), <6> (weight: 3), <2> (weight: 3), <0> (weight: 9).\nNode <3> is connected to nodes <5> (weight: 2), <2> (weight: 9), <1> (weight: 8), <0> (weight: 5).\nNode <6> is connected to node <3> (weight: 8).\nNode <2> is connected to nodes <4> (weight: 8), <6> (weight: 5), <5> (weight: 1), <3> (weight: 0).\nNode <0> is connected to nodes <4> (weight: 9), <2> (weight: 10), <1> (weight: 10).\nNode <5> is connected to nodes <1> (weight: 1), <0> (weight: 8), <3> (weight: 0), <2> (weight: 0).\nNode <1> is connected to nodes <6> (weight: 7), <5> (weight: 1), <2> (weight: 10), <3> (weight: 0).\n\nCalculate the maximum flow between node <3> and node <5> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "4",
        "type": "maximum_flow"
    },
    {
        "index": 89,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1> (weight: 5), <0> (weight: 5).\nNode <1> is connected to nodes <3> (weight: 10), <2> (weight: 5), <0> (weight: 0).\nNode <0> is connected to nodes <3> (weight: 7), <1> (weight: 6).\nNode <3> is connected to nodes <5> (weight: 5), <1> (weight: 7).\nNode <5> is connected to node <0> (weight: 10).\nNode <4> is connected to node <5> (weight: 1).\n\nCalculate the maximum flow between node <0> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "5",
        "type": "maximum_flow"
    },
    {
        "index": 90,
        "question": "Given a directed graph:\nNode <2> is connected to node <0> (weight: 4).\nNode <4> is connected to nodes <3> (weight: 10), <1> (weight: 8), <2> (weight: 2).\nNode <1> is connected to nodes <3> (weight: 9), <4> (weight: 0).\n\nCalculate the maximum flow between node <4> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "8",
        "type": "maximum_flow"
    },
    {
        "index": 91,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <5> (weight: 8), <6> (weight: 8), <3> (weight: 10), <0> (weight: 7), <4> (weight: 0).\nNode <5> is connected to nodes <6> (weight: 2), <4> (weight: 6), <3> (weight: 1), <0> (weight: 3), <1> (weight: 3), <2> (weight: 0).\nNode <6> is connected to nodes <4> (weight: 1), <1> (weight: 7), <2> (weight: 3).\nNode <3> is connected to nodes <0> (weight: 3), <2> (weight: 3), <6> (weight: 6), <4> (weight: 5).\nNode <0> is connected to node <3> (weight: 4).\nNode <4> is connected to nodes <1> (weight: 8), <2> (weight: 8).\nNode <2> is connected to nodes <5> (weight: 5), <3> (weight: 6), <0> (weight: 8), <4> (weight: 0).\n\nCalculate the maximum flow between node <4> and node <5> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "13",
        "type": "maximum_flow"
    },
    {
        "index": 92,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1> (weight: 6), <4> (weight: 4), <3> (weight: 8).\nNode <1> is connected to nodes <4> (weight: 1), <2> (weight: 5).\nNode <4> is connected to node <1> (weight: 10).\nNode <2> is connected to node <1> (weight: 0).\n\nCalculate the maximum flow between node <1> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "5",
        "type": "maximum_flow"
    },
    {
        "index": 93,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2> (weight: 4), <1> (weight: 10), <3> (weight: 7), <0> (weight: 5).\nNode <2> is connected to nodes <3> (weight: 2), <0> (weight: 1), <4> (weight: 2).\nNode <1> is connected to nodes <3> (weight: 9), <4> (weight: 5), <2> (weight: 8).\nNode <3> is connected to nodes <4> (weight: 1), <2> (weight: 4), <1> (weight: 6).\nNode <0> is connected to nodes <4> (weight: 6), <3> (weight: 4), <2> (weight: 0).\n\nCalculate the maximum flow between node <2> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "5",
        "type": "maximum_flow"
    },
    {
        "index": 94,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <3> (weight: 5), <4> (weight: 10), <0> (weight: 10), <2> (weight: 0).\nNode <3> is connected to nodes <4> (weight: 4), <2> (weight: 6), <5> (weight: 7).\nNode <4> is connected to nodes <1> (weight: 10), <3> (weight: 7), <2> (weight: 0), <5> (weight: 0).\nNode <0> is connected to nodes <5> (weight: 1), <1> (weight: 5), <2> (weight: 0).\nNode <2> is connected to nodes <0> (weight: 10), <5> (weight: 10), <4> (weight: 2).\nNode <1> is connected to nodes <0> (weight: 0), <4> (weight: 0).\n\nCalculate the maximum flow between node <2> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "15",
        "type": "maximum_flow"
    },
    {
        "index": 95,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2> (weight: 9), <6> (weight: 6), <4> (weight: 0).\nNode <2> is connected to nodes <0> (weight: 4), <6> (weight: 7), <1> (weight: 0), <3> (weight: 0).\nNode <6> is connected to nodes <5> (weight: 5), <1> (weight: 5).\nNode <0> is connected to node <6> (weight: 9).\nNode <5> is connected to nodes <0> (weight: 2), <6> (weight: 10).\nNode <1> is connected to nodes <6> (weight: 5), <2> (weight: 8), <4> (weight: 0).\nNode <4> is connected to nodes <1> (weight: 10), <3> (weight: 7), <5> (weight: 8).\n\nCalculate the maximum flow between node <4> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "15",
        "type": "maximum_flow"
    },
    {
        "index": 96,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <6> (weight: 3), <1> (weight: 1).\nNode <6> is connected to nodes <3> (weight: 5), <4> (weight: 0).\nNode <1> is connected to nodes <3> (weight: 2), <0> (weight: 5), <5> (weight: 9), <4> (weight: 0).\nNode <3> is connected to nodes <5> (weight: 7), <6> (weight: 8), <1> (weight: 0).\nNode <0> is connected to nodes <5> (weight: 4), <2> (weight: 3), <3> (weight: 1).\nNode <5> is connected to node <3> (weight: 4).\nNode <2> is connected to node <4> (weight: 6).\n\nCalculate the maximum flow between node <4> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "4",
        "type": "maximum_flow"
    },
    {
        "index": 97,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1> (weight: 2), <3> (weight: 0).\nNode <1> is connected to node <4> (weight: 0).\nNode <2> is connected to node <0> (weight: 9).\nNode <0> is connected to nodes <3> (weight: 7), <4> (weight: 9).\nNode <3> is connected to nodes <4> (weight: 6), <2> (weight: 3).\n\nCalculate the maximum flow between node <3> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "2",
        "type": "maximum_flow"
    },
    {
        "index": 98,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1> (weight: 4), <0> (weight: 5), <2> (weight: 2), <5> (weight: 10), <3> (weight: 10).\nNode <1> is connected to nodes <6> (weight: 6), <4> (weight: 0), <2> (weight: 0).\nNode <0> is connected to nodes <5> (weight: 9), <6> (weight: 8), <1> (weight: 4), <4> (weight: 0).\nNode <2> is connected to nodes <1> (weight: 4), <4> (weight: 0).\nNode <5> is connected to nodes <4> (weight: 3), <0> (weight: 6).\nNode <3> is connected to node <2> (weight: 3).\nNode <6> is connected to nodes <4> (weight: 9), <0> (weight: 2), <5> (weight: 8), <1> (weight: 0).\n\nCalculate the maximum flow between node <4> and node <6> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "14",
        "type": "maximum_flow"
    },
    {
        "index": 99,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3> (weight: 7), <2> (weight: 9), <4> (weight: 0).\nNode <3> is connected to node <0> (weight: 2).\nNode <2> is connected to nodes <3> (weight: 2), <0> (weight: 5).\nNode <0> is connected to nodes <2> (weight: 2), <5> (weight: 5).\nNode <5> is connected to nodes <0> (weight: 2), <4> (weight: 6), <2> (weight: 10), <3> (weight: 1).\nNode <4> is connected to node <1> (weight: 5).\n\nCalculate the maximum flow between node <4> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "5",
        "type": "maximum_flow"
    },
    {
        "index": 100,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0> (weight: 6), <6> (weight: 7), <4> (weight: 6).\nNode <0> is connected to nodes <6> (weight: 8), <2> (weight: 1), <3> (weight: 3).\nNode <6> is connected to nodes <4> (weight: 1), <3> (weight: 1), <5> (weight: 1), <2> (weight: 0).\nNode <4> is connected to nodes <0> (weight: 8), <1> (weight: 9).\nNode <2> is connected to node <6> (weight: 8).\nNode <5> is connected to nodes <1> (weight: 7), <6> (weight: 10).\nNode <1> is connected to nodes <2> (weight: 7), <4> (weight: 9), <3> (weight: 1), <5> (weight: 3), <0> (weight: 10).\n\nCalculate the maximum flow between node <2> and node <6> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "8",
        "type": "maximum_flow"
    },
    {
        "index": 101,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <1> (weight: 1), <0> (weight: 6), <6> (weight: 1), <2> (weight: 0).\nNode <1> is connected to nodes <3> (weight: 2), <2> (weight: 9), <5> (weight: 1).\nNode <0> is connected to nodes <3> (weight: 6), <2> (weight: 9), <6> (weight: 1), <1> (weight: 10).\nNode <6> is connected to nodes <5> (weight: 6), <4> (weight: 9), <2> (weight: 5), <0> (weight: 0), <3> (weight: 0).\nNode <3> is connected to nodes <2> (weight: 4), <6> (weight: 1), <1> (weight: 3), <0> (weight: 1).\nNode <2> is connected to nodes <5> (weight: 9), <1> (weight: 10), <0> (weight: 7), <4> (weight: 2).\nNode <4> is connected to nodes <2> (weight: 0), <6> (weight: 0).\n\nCalculate the maximum flow between node <0> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "5",
        "type": "maximum_flow"
    },
    {
        "index": 102,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <3> (weight: 1), <2> (weight: 1).\nNode <3> is connected to nodes <2> (weight: 9), <0> (weight: 5), <4> (weight: 4), <6> (weight: 0).\nNode <2> is connected to nodes <6> (weight: 1), <4> (weight: 2).\nNode <0> is connected to nodes <4> (weight: 7), <3> (weight: 9).\nNode <4> is connected to nodes <3> (weight: 10), <0> (weight: 8), <6> (weight: 8), <2> (weight: 0).\nNode <1> is connected to nodes <3> (weight: 5), <2> (weight: 2), <6> (weight: 10), <4> (weight: 10).\nNode <5> is connected to node <3> (weight: 9).\n\nCalculate the maximum flow between node <2> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "3",
        "type": "maximum_flow"
    },
    {
        "index": 103,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <6> (weight: 5), <5> (weight: 5).\nNode <6> is connected to node <4> (weight: 9).\nNode <5> is connected to nodes <2> (weight: 8), <4> (weight: 0).\nNode <2> is connected to nodes <0> (weight: 6), <4> (weight: 6), <3> (weight: 7), <5> (weight: 0).\nNode <1> is connected to node <0> (weight: 2).\nNode <0> is connected to nodes <6> (weight: 6), <3> (weight: 1), <2> (weight: 4).\nNode <3> is connected to nodes <0> (weight: 10), <5> (weight: 9), <4> (weight: 10), <6> (weight: 10).\n\nCalculate the maximum flow between node <6> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "5",
        "type": "maximum_flow"
    },
    {
        "index": 104,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3> (weight: 1), <4> (weight: 4), <0> (weight: 10).\nNode <3> is connected to nodes <4> (weight: 10), <2> (weight: 5).\nNode <4> is connected to node <3> (weight: 0).\nNode <0> is connected to nodes <4> (weight: 4), <2> (weight: 4).\n\nCalculate the maximum flow between node <3> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "10",
        "type": "maximum_flow"
    },
    {
        "index": 105,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1> (weight: 1), <4> (weight: 0).\nNode <1> is connected to nodes <0> (weight: 10), <2> (weight: 4), <4> (weight: 0), <3> (weight: 0).\nNode <2> is connected to nodes <4> (weight: 7), <1> (weight: 6), <3> (weight: 7), <0> (weight: 9).\nNode <4> is connected to nodes <1> (weight: 4), <3> (weight: 8), <0> (weight: 5), <2> (weight: 2).\nNode <3> is connected to nodes <2> (weight: 10), <1> (weight: 1), <4> (weight: 0).\n\nCalculate the maximum flow between node <4> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "12",
        "type": "maximum_flow"
    },
    {
        "index": 106,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3> (weight: 6), <0> (weight: 5), <4> (weight: 8).\nNode <3> is connected to nodes <2> (weight: 3), <5> (weight: 0).\nNode <0> is connected to nodes <4> (weight: 6), <1> (weight: 3), <3> (weight: 2), <2> (weight: 2).\nNode <4> is connected to nodes <1> (weight: 6), <3> (weight: 5).\nNode <2> is connected to nodes <0> (weight: 1), <3> (weight: 0).\nNode <5> is connected to node <3> (weight: 4).\n\nCalculate the maximum flow between node <5> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "1",
        "type": "maximum_flow"
    },
    {
        "index": 107,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4> (weight: 6), <6> (weight: 10), <5> (weight: 7), <1> (weight: 1), <2> (weight: 1), <3> (weight: 0).\nNode <4> is connected to nodes <5> (weight: 10), <2> (weight: 6).\nNode <6> is connected to nodes <3> (weight: 2), <1> (weight: 2), <2> (weight: 3), <0> (weight: 7), <5> (weight: 0).\nNode <5> is connected to nodes <4> (weight: 8), <6> (weight: 1), <3> (weight: 7).\nNode <1> is connected to nodes <2> (weight: 7), <0> (weight: 8), <4> (weight: 3), <3> (weight: 6).\nNode <2> is connected to nodes <4> (weight: 4), <6> (weight: 4), <3> (weight: 2), <5> (weight: 6).\nNode <3> is connected to nodes <0> (weight: 7), <5> (weight: 0).\n\nCalculate the maximum flow between node <4> and node <6> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "12",
        "type": "maximum_flow"
    },
    {
        "index": 108,
        "question": "Given a directed graph:\nNode <3> is connected to node <4> (weight: 7).\nNode <4> is connected to nodes <5> (weight: 1), <3> (weight: 10).\nNode <5> is connected to nodes <3> (weight: 1), <1> (weight: 5).\nNode <1> is connected to nodes <4> (weight: 9), <0> (weight: 8), <5> (weight: 0).\nNode <0> is connected to node <5> (weight: 8).\nNode <2> is connected to nodes <5> (weight: 4), <0> (weight: 10), <1> (weight: 2).\n\nCalculate the maximum flow between node <5> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "5",
        "type": "maximum_flow"
    },
    {
        "index": 109,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3> (weight: 8), <1> (weight: 5).\nNode <3> is connected to nodes <0> (weight: 10), <4> (weight: 9).\nNode <1> is connected to nodes <4> (weight: 6), <2> (weight: 0).\nNode <0> is connected to nodes <2> (weight: 8), <4> (weight: 5), <3> (weight: 9), <5> (weight: 3).\nNode <2> is connected to nodes <0> (weight: 5), <1> (weight: 7).\nNode <5> is connected to nodes <2> (weight: 10), <4> (weight: 2).\n\nCalculate the maximum flow between node <2> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "11",
        "type": "maximum_flow"
    },
    {
        "index": 110,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4> (weight: 8), <3> (weight: 8), <1> (weight: 2).\nNode <4> is connected to nodes <3> (weight: 6), <1> (weight: 6), <0> (weight: 3).\nNode <3> is connected to nodes <1> (weight: 1), <2> (weight: 8), <4> (weight: 9), <0> (weight: 0).\nNode <1> is connected to nodes <0> (weight: 9), <2> (weight: 6), <4> (weight: 4).\nNode <2> is connected to node <0> (weight: 5).\n\nCalculate the maximum flow between node <4> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "14",
        "type": "maximum_flow"
    },
    {
        "index": 111,
        "question": "Given a directed graph:\nNode <2> is connected to node <0> (weight: 4).\nNode <0> is connected to nodes <1> (weight: 9), <3> (weight: 1), <2> (weight: 8).\nNode <1> is connected to nodes <4> (weight: 10), <2> (weight: 6).\nNode <3> is connected to nodes <0> (weight: 9), <1> (weight: 6), <4> (weight: 2).\n\nCalculate the maximum flow between node <0> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "1",
        "type": "maximum_flow"
    },
    {
        "index": 112,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3> (weight: 8), <1> (weight: 8).\nNode <3> is connected to nodes <1> (weight: 10), <2> (weight: 9).\nNode <1> is connected to nodes <2> (weight: 2), <0> (weight: 1), <3> (weight: 3).\nNode <0> is connected to node <3> (weight: 1).\nNode <4> is connected to node <1> (weight: 8).\n\nCalculate the maximum flow between node <3> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "18",
        "type": "maximum_flow"
    },
    {
        "index": 113,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2> (weight: 4), <3> (weight: 10), <4> (weight: 1), <5> (weight: 0).\nNode <2> is connected to node <4> (weight: 4).\nNode <3> is connected to nodes <0> (weight: 5), <5> (weight: 9), <4> (weight: 0), <1> (weight: 0).\nNode <4> is connected to nodes <5> (weight: 6), <3> (weight: 1).\nNode <0> is connected to nodes <1> (weight: 1), <4> (weight: 9).\nNode <5> is connected to nodes <1> (weight: 4), <2> (weight: 3), <3> (weight: 2), <0> (weight: 5), <4> (weight: 0).\n\nCalculate the maximum flow between node <4> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "7",
        "type": "maximum_flow"
    },
    {
        "index": 114,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5> (weight: 2), <3> (weight: 6), <6> (weight: 1), <4> (weight: 4), <1> (weight: 2).\nNode <5> is connected to nodes <3> (weight: 8), <6> (weight: 5), <2> (weight: 3).\nNode <3> is connected to nodes <0> (weight: 4), <2> (weight: 1).\nNode <6> is connected to nodes <1> (weight: 3), <2> (weight: 5).\nNode <4> is connected to nodes <2> (weight: 2), <3> (weight: 3), <6> (weight: 2), <0> (weight: 0).\nNode <1> is connected to nodes <2> (weight: 4), <5> (weight: 6), <3> (weight: 2).\nNode <0> is connected to nodes <4> (weight: 2), <2> (weight: 7), <6> (weight: 5), <3> (weight: 0).\n\nCalculate the maximum flow between node <2> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "6",
        "type": "maximum_flow"
    },
    {
        "index": 115,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0> (weight: 1), <3> (weight: 6), <4> (weight: 0).\nNode <0> is connected to node <3> (weight: 3).\nNode <3> is connected to nodes <5> (weight: 4), <4> (weight: 6), <1> (weight: 6).\nNode <4> is connected to nodes <5> (weight: 5), <2> (weight: 0).\nNode <1> is connected to nodes <0> (weight: 5), <4> (weight: 6).\nNode <2> is connected to node <4> (weight: 5).\n\nCalculate the maximum flow between node <2> and node <5> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "5",
        "type": "maximum_flow"
    },
    {
        "index": 116,
        "question": "Given a directed graph:\nNode <4> is connected to node <2> (weight: 8).\nNode <2> is connected to nodes <1> (weight: 4), <3> (weight: 5), <4> (weight: 0).\nNode <1> is connected to nodes <2> (weight: 7), <3> (weight: 0).\nNode <3> is connected to nodes <1> (weight: 2), <4> (weight: 7), <0> (weight: 5), <2> (weight: 0).\n\nCalculate the maximum flow between node <4> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "6",
        "type": "maximum_flow"
    },
    {
        "index": 117,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0> (weight: 4), <2> (weight: 1), <6> (weight: 4).\nNode <0> is connected to nodes <5> (weight: 4), <2> (weight: 2), <3> (weight: 7), <1> (weight: 0), <4> (weight: 0), <6> (weight: 0).\nNode <2> is connected to nodes <3> (weight: 1), <1> (weight: 5), <4> (weight: 7), <5> (weight: 6).\nNode <6> is connected to nodes <4> (weight: 10), <0> (weight: 3), <2> (weight: 7), <1> (weight: 0).\nNode <5> is connected to nodes <2> (weight: 4), <6> (weight: 8), <0> (weight: 6), <3> (weight: 0).\nNode <3> is connected to nodes <5> (weight: 5), <2> (weight: 0), <0> (weight: 0).\nNode <4> is connected to nodes <0> (weight: 3), <2> (weight: 3), <6> (weight: 5).\n\nCalculate the maximum flow between node <2> and node <5> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "15",
        "type": "maximum_flow"
    },
    {
        "index": 118,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3> (weight: 10), <1> (weight: 4), <4> (weight: 9).\nNode <3> is connected to nodes <1> (weight: 3), <4> (weight: 8).\nNode <1> is connected to nodes <4> (weight: 9), <3> (weight: 8), <2> (weight: 6), <0> (weight: 0).\nNode <4> is connected to nodes <0> (weight: 10), <3> (weight: 4), <1> (weight: 5).\nNode <2> is connected to nodes <0> (weight: 3), <3> (weight: 8), <1> (weight: 0).\n\nCalculate the maximum flow between node <4> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "6",
        "type": "maximum_flow"
    },
    {
        "index": 119,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3> (weight: 6), <2> (weight: 3), <4> (weight: 0).\nNode <3> is connected to nodes <4> (weight: 1), <0> (weight: 5), <1> (weight: 0).\nNode <2> is connected to nodes <1> (weight: 6), <4> (weight: 5).\nNode <4> is connected to nodes <0> (weight: 1), <2> (weight: 0).\nNode <1> is connected to nodes <3> (weight: 6), <4> (weight: 10), <2> (weight: 0).\n\nCalculate the maximum flow between node <2> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "7",
        "type": "maximum_flow"
    },
    {
        "index": 120,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <5> (weight: 8), <2> (weight: 6), <4> (weight: 7), <0> (weight: 6).\nNode <5> is connected to node <1> (weight: 2).\nNode <2> is connected to node <1> (weight: 10).\nNode <4> is connected to nodes <3> (weight: 2), <1> (weight: 10), <5> (weight: 7).\nNode <0> is connected to nodes <3> (weight: 4), <1> (weight: 8), <2> (weight: 7), <4> (weight: 6).\nNode <1> is connected to node <5> (weight: 2).\n\nCalculate the maximum flow between node <4> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "2",
        "type": "maximum_flow"
    },
    {
        "index": 121,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2> (weight: 1), <5> (weight: 4).\nNode <2> is connected to node <0> (weight: 8).\nNode <5> is connected to node <0> (weight: 10).\nNode <0> is connected to nodes <4> (weight: 9), <3> (weight: 1), <1> (weight: 6).\nNode <3> is connected to node <1> (weight: 6).\nNode <1> is connected to nodes <0> (weight: 10), <5> (weight: 6), <4> (weight: 7), <3> (weight: 0).\n\nCalculate the maximum flow between node <3> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "6",
        "type": "maximum_flow"
    },
    {
        "index": 122,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1> (weight: 10), <3> (weight: 7), <2> (weight: 5).\nNode <1> is connected to nodes <3> (weight: 8), <2> (weight: 10), <4> (weight: 7), <0> (weight: 4).\nNode <3> is connected to nodes <2> (weight: 6), <0> (weight: 0), <1> (weight: 0).\nNode <2> is connected to nodes <0> (weight: 4), <1> (weight: 5).\nNode <0> is connected to nodes <3> (weight: 4), <2> (weight: 6), <4> (weight: 4).\n\nCalculate the maximum flow between node <2> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "9",
        "type": "maximum_flow"
    },
    {
        "index": 123,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0> (weight: 6), <1> (weight: 0).\nNode <0> is connected to nodes <6> (weight: 2), <3> (weight: 0).\nNode <6> is connected to nodes <5> (weight: 10), <1> (weight: 0), <0> (weight: 0).\nNode <1> is connected to nodes <4> (weight: 10), <6> (weight: 2), <3> (weight: 1).\nNode <4> is connected to node <2> (weight: 9).\nNode <2> is connected to node <1> (weight: 2).\nNode <5> is connected to nodes <3> (weight: 4), <4> (weight: 1), <6> (weight: 0).\n\nCalculate the maximum flow between node <1> and node <5> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "3",
        "type": "maximum_flow"
    },
    {
        "index": 124,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0> (weight: 7), <4> (weight: 5), <1> (weight: 9).\nNode <0> is connected to nodes <3> (weight: 9), <2> (weight: 10), <4> (weight: 0).\nNode <4> is connected to nodes <3> (weight: 4), <0> (weight: 8).\nNode <1> is connected to nodes <3> (weight: 2), <2> (weight: 1).\nNode <2> is connected to nodes <1> (weight: 8), <3> (weight: 3), <5> (weight: 7).\nNode <5> is connected to node <4> (weight: 1).\n\nCalculate the maximum flow between node <4> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "12",
        "type": "maximum_flow"
    },
    {
        "index": 125,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1> (weight: 6), <3> (weight: 1), <4> (weight: 0).\nNode <1> is connected to node <4> (weight: 9).\nNode <3> is connected to nodes <4> (weight: 3), <1> (weight: 9), <2> (weight: 4), <0> (weight: 0).\nNode <4> is connected to nodes <0> (weight: 8), <1> (weight: 5), <2> (weight: 1), <3> (weight: 7).\nNode <2> is connected to node <4> (weight: 7).\n\nCalculate the maximum flow between node <4> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "8",
        "type": "maximum_flow"
    },
    {
        "index": 126,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3> (weight: 3), <0> (weight: 5), <1> (weight: 0).\nNode <3> is connected to nodes <0> (weight: 4), <2> (weight: 6), <4> (weight: 3), <1> (weight: 10).\nNode <0> is connected to nodes <2> (weight: 8), <4> (weight: 5), <1> (weight: 3).\nNode <2> is connected to nodes <4> (weight: 8), <1> (weight: 10), <0> (weight: 6).\nNode <1> is connected to nodes <0> (weight: 4), <4> (weight: 1).\n\nCalculate the maximum flow between node <1> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "5",
        "type": "maximum_flow"
    },
    {
        "index": 127,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2> (weight: 8), <1> (weight: 3).\nNode <2> is connected to nodes <1> (weight: 1), <3> (weight: 6), <0> (weight: 7).\nNode <1> is connected to nodes <3> (weight: 9), <0> (weight: 2), <4> (weight: 4), <2> (weight: 0).\n\nCalculate the maximum flow between node <0> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "4",
        "type": "maximum_flow"
    },
    {
        "index": 128,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2> (weight: 9), <0> (weight: 3).\nNode <2> is connected to nodes <0> (weight: 7), <4> (weight: 1), <3> (weight: 1).\nNode <0> is connected to nodes <1> (weight: 6), <4> (weight: 3), <3> (weight: 9), <2> (weight: 5).\nNode <4> is connected to nodes <3> (weight: 4), <2> (weight: 3), <0> (weight: 2).\n\nCalculate the maximum flow between node <2> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "4",
        "type": "maximum_flow"
    },
    {
        "index": 129,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1> (weight: 8), <0> (weight: 4), <5> (weight: 7).\nNode <1> is connected to node <2> (weight: 9).\nNode <0> is connected to nodes <6> (weight: 5), <1> (weight: 6), <4> (weight: 0).\nNode <5> is connected to node <3> (weight: 4).\nNode <2> is connected to nodes <4> (weight: 1), <5> (weight: 6).\nNode <6> is connected to node <2> (weight: 1).\n\nCalculate the maximum flow between node <4> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "4",
        "type": "maximum_flow"
    },
    {
        "index": 130,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2> (weight: 5), <5> (weight: 2), <1> (weight: 1), <0> (weight: 3), <6> (weight: 2).\nNode <2> is connected to nodes <1> (weight: 5), <0> (weight: 3), <3> (weight: 2).\nNode <5> is connected to nodes <3> (weight: 10), <4> (weight: 5), <1> (weight: 0), <6> (weight: 0).\nNode <1> is connected to nodes <6> (weight: 5), <2> (weight: 6), <5> (weight: 5).\nNode <6> is connected to nodes <2> (weight: 1), <5> (weight: 1), <1> (weight: 0).\nNode <3> is connected to nodes <5> (weight: 10), <1> (weight: 9), <2> (weight: 0).\n\nCalculate the maximum flow between node <1> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "8",
        "type": "maximum_flow"
    },
    {
        "index": 131,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0> (weight: 10), <4> (weight: 0), <1> (weight: 0), <3> (weight: 0).\nNode <4> is connected to nodes <0> (weight: 10), <1> (weight: 7), <2> (weight: 5).\nNode <1> is connected to nodes <2> (weight: 5), <4> (weight: 10), <0> (weight: 9), <3> (weight: 9).\nNode <3> is connected to nodes <2> (weight: 8), <1> (weight: 0).\n\nCalculate the maximum flow between node <4> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "12",
        "type": "maximum_flow"
    },
    {
        "index": 132,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <3> (weight: 7), <1> (weight: 7), <5> (weight: 3), <4> (weight: 3).\nNode <3> is connected to nodes <1> (weight: 5), <2> (weight: 2), <0> (weight: 3), <4> (weight: 0).\nNode <1> is connected to nodes <2> (weight: 5), <5> (weight: 10), <4> (weight: 3), <6> (weight: 3), <0> (weight: 6), <3> (weight: 8).\nNode <5> is connected to nodes <4> (weight: 4), <6> (weight: 1), <0> (weight: 3), <2> (weight: 8).\nNode <4> is connected to nodes <6> (weight: 7), <0> (weight: 5), <3> (weight: 8), <1> (weight: 8).\nNode <2> is connected to nodes <5> (weight: 3), <4> (weight: 5).\nNode <0> is connected to nodes <3> (weight: 5), <2> (weight: 5), <4> (weight: 3), <6> (weight: 8).\n\nCalculate the maximum flow between node <4> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "20",
        "type": "maximum_flow"
    },
    {
        "index": 133,
        "question": "Given a directed graph:\nNode <2> is connected to node <3> (weight: 7).\nNode <3> is connected to node <4> (weight: 3).\nNode <4> is connected to nodes <3> (weight: 9), <6> (weight: 1).\nNode <0> is connected to node <3> (weight: 8).\nNode <6> is connected to nodes <3> (weight: 9), <4> (weight: 0).\nNode <5> is connected to nodes <3> (weight: 6), <1> (weight: 8), <6> (weight: 2), <4> (weight: 6).\nNode <1> is connected to nodes <2> (weight: 1), <0> (weight: 6), <6> (weight: 4), <5> (weight: 5), <3> (weight: 2).\n\nCalculate the maximum flow between node <3> and node <6> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "1",
        "type": "maximum_flow"
    },
    {
        "index": 134,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3> (weight: 6), <2> (weight: 1).\nNode <3> is connected to nodes <1> (weight: 10), <5> (weight: 8), <2> (weight: 1).\nNode <2> is connected to nodes <6> (weight: 9), <5> (weight: 3).\nNode <1> is connected to nodes <0> (weight: 10), <5> (weight: 6), <4> (weight: 6), <3> (weight: 9).\nNode <6> is connected to nodes <1> (weight: 6), <0> (weight: 6), <2> (weight: 0).\nNode <0> is connected to nodes <2> (weight: 8), <4> (weight: 3).\n\nCalculate the maximum flow between node <2> and node <6> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "9",
        "type": "maximum_flow"
    },
    {
        "index": 135,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5> (weight: 8), <1> (weight: 2).\nNode <5> is connected to nodes <4> (weight: 9), <3> (weight: 6), <2> (weight: 1), <1> (weight: 0).\nNode <1> is connected to nodes <3> (weight: 9), <0> (weight: 10), <2> (weight: 4), <5> (weight: 3), <4> (weight: 3).\nNode <4> is connected to nodes <3> (weight: 6), <5> (weight: 8), <1> (weight: 0), <0> (weight: 0), <6> (weight: 0).\nNode <3> is connected to nodes <5> (weight: 10), <4> (weight: 6), <1> (weight: 1), <6> (weight: 3).\nNode <0> is connected to nodes <2> (weight: 7), <4> (weight: 10), <1> (weight: 0).\nNode <6> is connected to nodes <3> (weight: 9), <0> (weight: 7), <5> (weight: 10), <4> (weight: 10), <1> (weight: 5).\n\nCalculate the maximum flow between node <1> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "29",
        "type": "maximum_flow"
    },
    {
        "index": 136,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1> (weight: 5), <2> (weight: 1), <4> (weight: 8).\nNode <1> is connected to nodes <4> (weight: 8), <0> (weight: 0), <3> (weight: 0).\nNode <2> is connected to node <4> (weight: 8).\nNode <4> is connected to nodes <3> (weight: 1), <2> (weight: 2), <0> (weight: 0).\nNode <3> is connected to nodes <4> (weight: 2), <1> (weight: 8).\n\nCalculate the maximum flow between node <0> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "6",
        "type": "maximum_flow"
    },
    {
        "index": 137,
        "question": "Given a directed graph:\nNode <4> is connected to node <3> (weight: 2).\nNode <3> is connected to nodes <4> (weight: 8), <2> (weight: 8), <5> (weight: 8).\nNode <2> is connected to nodes <5> (weight: 7), <1> (weight: 10), <4> (weight: 6).\nNode <5> is connected to nodes <0> (weight: 7), <6> (weight: 0).\nNode <0> is connected to nodes <1> (weight: 5), <2> (weight: 10), <5> (weight: 6).\nNode <6> is connected to node <5> (weight: 6).\n\nCalculate the maximum flow between node <6> and node <5> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "6",
        "type": "maximum_flow"
    },
    {
        "index": 138,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4> (weight: 5), <2> (weight: 0).\nNode <4> is connected to nodes <3> (weight: 10), <1> (weight: 2), <0> (weight: 0).\nNode <3> is connected to nodes <0> (weight: 7), <2> (weight: 7), <4> (weight: 0).\nNode <1> is connected to nodes <4> (weight: 7), <0> (weight: 4).\nNode <2> is connected to nodes <3> (weight: 2), <0> (weight: 5).\n\nCalculate the maximum flow between node <2> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "7",
        "type": "maximum_flow"
    },
    {
        "index": 139,
        "question": "Given a directed graph:\nNode <2> is connected to node <0> (weight: 10).\nNode <0> is connected to nodes <4> (weight: 1), <2> (weight: 3).\nNode <4> is connected to nodes <2> (weight: 5), <0> (weight: 5), <5> (weight: 7), <3> (weight: 7).\nNode <3> is connected to nodes <2> (weight: 4), <4> (weight: 0).\nNode <1> is connected to nodes <0> (weight: 4), <5> (weight: 5), <3> (weight: 4), <4> (weight: 9).\n\nCalculate the maximum flow between node <4> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "7",
        "type": "maximum_flow"
    },
    {
        "index": 140,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3> (weight: 8), <1> (weight: 4).\nNode <3> is connected to nodes <2> (weight: 1), <0> (weight: 10).\nNode <1> is connected to nodes <0> (weight: 10), <2> (weight: 0).\nNode <2> is connected to nodes <1> (weight: 3), <3> (weight: 3).\nNode <0> is connected to nodes <1> (weight: 8), <4> (weight: 6), <3> (weight: 10), <2> (weight: 8).\n\nCalculate the maximum flow between node <2> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "6",
        "type": "maximum_flow"
    },
    {
        "index": 141,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1> (weight: 3), <2> (weight: 7), <0> (weight: 0).\nNode <1> is connected to nodes <2> (weight: 2), <4> (weight: 3), <3> (weight: 1), <0> (weight: 0).\nNode <2> is connected to node <3> (weight: 9).\nNode <4> is connected to nodes <1> (weight: 4), <2> (weight: 1), <0> (weight: 7).\nNode <0> is connected to nodes <4> (weight: 8), <3> (weight: 6), <1> (weight: 8), <2> (weight: 7).\n\nCalculate the maximum flow between node <0> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "15",
        "type": "maximum_flow"
    },
    {
        "index": 142,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4> (weight: 8), <3> (weight: 10).\nNode <4> is connected to nodes <3> (weight: 1), <5> (weight: 0), <0> (weight: 0).\nNode <3> is connected to node <1> (weight: 6).\nNode <1> is connected to nodes <0> (weight: 9), <5> (weight: 6).\nNode <0> is connected to nodes <3> (weight: 6), <4> (weight: 8), <5> (weight: 0).\nNode <5> is connected to nodes <1> (weight: 3), <4> (weight: 5), <0> (weight: 9).\n\nCalculate the maximum flow between node <5> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "13",
        "type": "maximum_flow"
    },
    {
        "index": 143,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <1> (weight: 5), <4> (weight: 10), <2> (weight: 0).\nNode <1> is connected to nodes <2> (weight: 6), <5> (weight: 9), <0> (weight: 3), <3> (weight: 10), <4> (weight: 0).\nNode <4> is connected to nodes <2> (weight: 7), <1> (weight: 9).\nNode <2> is connected to nodes <5> (weight: 8), <3> (weight: 3), <1> (weight: 10), <4> (weight: 6).\nNode <0> is connected to nodes <3> (weight: 4), <2> (weight: 4).\nNode <3> is connected to nodes <1> (weight: 2), <4> (weight: 4), <5> (weight: 7), <0> (weight: 1).\n\nCalculate the maximum flow between node <4> and node <5> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "16",
        "type": "maximum_flow"
    },
    {
        "index": 144,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <3> (weight: 3), <1> (weight: 0).\nNode <3> is connected to nodes <1> (weight: 1), <2> (weight: 5), <5> (weight: 1), <4> (weight: 3).\nNode <1> is connected to nodes <5> (weight: 8), <0> (weight: 9).\nNode <2> is connected to nodes <5> (weight: 6), <1> (weight: 9).\nNode <4> is connected to nodes <0> (weight: 7), <5> (weight: 7).\nNode <0> is connected to node <5> (weight: 8).\n\nCalculate the maximum flow between node <1> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "3",
        "type": "maximum_flow"
    },
    {
        "index": 145,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0> (weight: 3), <1> (weight: 5).\nNode <0> is connected to nodes <2> (weight: 4), <4> (weight: 0), <3> (weight: 0).\nNode <1> is connected to nodes <3> (weight: 4), <2> (weight: 2), <4> (weight: 0).\nNode <2> is connected to nodes <3> (weight: 2), <4> (weight: 7), <1> (weight: 0).\nNode <3> is connected to nodes <4> (weight: 1), <0> (weight: 8), <1> (weight: 0), <2> (weight: 0).\n\nCalculate the maximum flow between node <4> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "8",
        "type": "maximum_flow"
    },
    {
        "index": 146,
        "question": "Given a directed graph:\nNode <4> is connected to node <0> (weight: 9).\nNode <0> is connected to nodes <4> (weight: 10), <5> (weight: 2), <3> (weight: 10), <1> (weight: 0).\nNode <5> is connected to nodes <3> (weight: 4), <1> (weight: 4), <0> (weight: 9), <4> (weight: 3).\nNode <3> is connected to nodes <1> (weight: 4), <2> (weight: 4), <4> (weight: 3), <5> (weight: 6), <0> (weight: 0).\nNode <1> is connected to node <0> (weight: 8).\nNode <2> is connected to node <4> (weight: 9).\n\nCalculate the maximum flow between node <1> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "8",
        "type": "maximum_flow"
    },
    {
        "index": 147,
        "question": "Given a directed graph:\nNode <4> is connected to node <1> (weight: 5).\nNode <1> is connected to nodes <2> (weight: 4), <5> (weight: 1), <4> (weight: 0).\nNode <2> is connected to nodes <3> (weight: 8), <0> (weight: 10), <4> (weight: 4), <1> (weight: 0).\nNode <3> is connected to node <2> (weight: 2).\nNode <0> is connected to nodes <1> (weight: 2), <5> (weight: 6).\n\nCalculate the maximum flow between node <4> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "4",
        "type": "maximum_flow"
    },
    {
        "index": 148,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2> (weight: 6), <4> (weight: 3), <3> (weight: 5).\nNode <4> is connected to nodes <3> (weight: 6), <2> (weight: 7).\nNode <3> is connected to nodes <2> (weight: 4), <0> (weight: 3), <4> (weight: 0).\nNode <0> is connected to nodes <2> (weight: 5), <3> (weight: 0).\n\nCalculate the maximum flow between node <4> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "3",
        "type": "maximum_flow"
    },
    {
        "index": 149,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4> (weight: 7), <2> (weight: 9), <3> (weight: 0).\nNode <4> is connected to nodes <2> (weight: 10), <3> (weight: 4).\nNode <2> is connected to nodes <0> (weight: 1), <1> (weight: 0).\nNode <3> is connected to node <1> (weight: 6).\nNode <0> is connected to nodes <1> (weight: 2), <3> (weight: 4).\n\nCalculate the maximum flow between node <3> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "6",
        "type": "maximum_flow"
    },
    {
        "index": 150,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0> (weight: 3), <3> (weight: 5), <2> (weight: 5), <6> (weight: 0).\nNode <0> is connected to nodes <2> (weight: 6), <1> (weight: 6), <4> (weight: 10), <6> (weight: 1).\nNode <3> is connected to node <5> (weight: 9).\nNode <2> is connected to nodes <5> (weight: 10), <6> (weight: 6), <0> (weight: 9), <3> (weight: 10).\nNode <1> is connected to nodes <6> (weight: 6), <0> (weight: 10), <3> (weight: 10), <2> (weight: 10).\nNode <6> is connected to nodes <0> (weight: 7), <2> (weight: 7), <4> (weight: 8).\nNode <5> is connected to nodes <6> (weight: 5), <0> (weight: 7), <3> (weight: 9).\n\nCalculate the maximum flow between node <6> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "18",
        "type": "maximum_flow"
    },
    {
        "index": 151,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4> (weight: 3), <1> (weight: 8), <0> (weight: 0).\nNode <4> is connected to nodes <0> (weight: 6), <1> (weight: 10), <3> (weight: 2).\nNode <1> is connected to nodes <3> (weight: 1), <4> (weight: 4), <0> (weight: 9).\nNode <0> is connected to nodes <2> (weight: 1), <4> (weight: 2).\n\nCalculate the maximum flow between node <4> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "1",
        "type": "maximum_flow"
    },
    {
        "index": 152,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5> (weight: 3), <3> (weight: 7).\nNode <5> is connected to nodes <3> (weight: 10), <2> (weight: 5).\nNode <3> is connected to nodes <5> (weight: 9), <1> (weight: 5), <0> (weight: 1), <4> (weight: 2), <2> (weight: 0).\nNode <1> is connected to nodes <0> (weight: 7), <5> (weight: 5).\nNode <0> is connected to nodes <2> (weight: 2), <5> (weight: 7).\nNode <4> is connected to nodes <3> (weight: 9), <6> (weight: 10), <2> (weight: 6), <5> (weight: 5), <1> (weight: 10), <0> (weight: 5).\nNode <6> is connected to node <5> (weight: 10).\n\nCalculate the maximum flow between node <2> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "2",
        "type": "maximum_flow"
    },
    {
        "index": 153,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2> (weight: 7), <0> (weight: 2).\nNode <2> is connected to nodes <4> (weight: 6), <1> (weight: 5), <3> (weight: 2).\nNode <0> is connected to nodes <1> (weight: 7), <2> (weight: 5).\nNode <4> is connected to nodes <2> (weight: 8), <1> (weight: 0).\nNode <1> is connected to nodes <3> (weight: 2), <2> (weight: 10), <0> (weight: 4), <4> (weight: 8).\n\nCalculate the maximum flow between node <1> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "14",
        "type": "maximum_flow"
    },
    {
        "index": 154,
        "question": "Given a directed graph:\nNode <1> is connected to node <4> (weight: 5).\nNode <4> is connected to nodes <3> (weight: 8), <1> (weight: 8).\nNode <3> is connected to nodes <2> (weight: 1), <0> (weight: 1), <4> (weight: 0).\nNode <0> is connected to node <4> (weight: 9).\nNode <5> is connected to nodes <2> (weight: 4), <0> (weight: 1).\n\nCalculate the maximum flow between node <1> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "5",
        "type": "maximum_flow"
    },
    {
        "index": 155,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <3> (weight: 1), <0> (weight: 10), <1> (weight: 3), <5> (weight: 0).\nNode <3> is connected to nodes <0> (weight: 1), <6> (weight: 2), <4> (weight: 2), <5> (weight: 0).\nNode <0> is connected to nodes <1> (weight: 6), <4> (weight: 6), <3> (weight: 9), <5> (weight: 0), <6> (weight: 0).\nNode <1> is connected to nodes <4> (weight: 6), <2> (weight: 6), <5> (weight: 0), <6> (weight: 0), <0> (weight: 0).\nNode <4> is connected to nodes <3> (weight: 9), <0> (weight: 8), <2> (weight: 7), <1> (weight: 7), <5> (weight: 2), <6> (weight: 10).\nNode <2> is connected to nodes <1> (weight: 8), <3> (weight: 7), <4> (weight: 0).\nNode <5> is connected to nodes <6> (weight: 6), <3> (weight: 7), <0> (weight: 9), <1> (weight: 4).\n\nCalculate the maximum flow between node <5> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "21",
        "type": "maximum_flow"
    },
    {
        "index": 156,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4> (weight: 1), <5> (weight: 0).\nNode <4> is connected to nodes <1> (weight: 3), <5> (weight: 8), <2> (weight: 3).\nNode <5> is connected to nodes <0> (weight: 10), <2> (weight: 8), <1> (weight: 8).\nNode <2> is connected to nodes <4> (weight: 9), <3> (weight: 9), <1> (weight: 7), <5> (weight: 0).\nNode <0> is connected to node <5> (weight: 2).\nNode <3> is connected to nodes <1> (weight: 10), <5> (weight: 2), <2> (weight: 0).\n\nCalculate the maximum flow between node <5> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "9",
        "type": "maximum_flow"
    },
    {
        "index": 157,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <3> (weight: 9), <2> (weight: 9), <5> (weight: 2), <1> (weight: 0), <0> (weight: 0).\nNode <3> is connected to nodes <0> (weight: 4), <5> (weight: 8).\nNode <2> is connected to nodes <1> (weight: 3), <4> (weight: 6), <6> (weight: 4), <3> (weight: 7).\nNode <5> is connected to node <0> (weight: 8).\nNode <0> is connected to nodes <5> (weight: 9), <6> (weight: 6), <3> (weight: 8), <1> (weight: 0).\nNode <1> is connected to nodes <6> (weight: 10), <0> (weight: 9).\nNode <4> is connected to nodes <5> (weight: 9), <0> (weight: 4).\n\nCalculate the maximum flow between node <1> and node <6> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "16",
        "type": "maximum_flow"
    },
    {
        "index": 158,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3> (weight: 5), <0> (weight: 6), <2> (weight: 0), <4> (weight: 0).\nNode <3> is connected to nodes <2> (weight: 5), <4> (weight: 5).\nNode <0> is connected to node <3> (weight: 2).\nNode <2> is connected to nodes <1> (weight: 3), <3> (weight: 3).\nNode <4> is connected to nodes <1> (weight: 1), <2> (weight: 4), <0> (weight: 1), <3> (weight: 0).\n\nCalculate the maximum flow between node <3> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "4",
        "type": "maximum_flow"
    },
    {
        "index": 159,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0> (weight: 6), <1> (weight: 2), <2> (weight: 5), <3> (weight: 0).\nNode <0> is connected to nodes <3> (weight: 3), <1> (weight: 10), <2> (weight: 7), <4> (weight: 6), <6> (weight: 0), <5> (weight: 0).\nNode <1> is connected to nodes <6> (weight: 5), <4> (weight: 1).\nNode <2> is connected to nodes <4> (weight: 4), <3> (weight: 1), <1> (weight: 1).\nNode <3> is connected to nodes <1> (weight: 3), <2> (weight: 3), <6> (weight: 8), <4> (weight: 9), <5> (weight: 2).\nNode <4> is connected to nodes <3> (weight: 3), <2> (weight: 8).\nNode <6> is connected to nodes <4> (weight: 4), <0> (weight: 1), <3> (weight: 8).\n\nCalculate the maximum flow between node <6> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "3",
        "type": "maximum_flow"
    },
    {
        "index": 160,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <0> (weight: 2), <2> (weight: 6), <4> (weight: 0).\nNode <0> is connected to nodes <2> (weight: 9), <5> (weight: 5), <4> (weight: 8), <3> (weight: 7).\nNode <2> is connected to nodes <5> (weight: 10), <4> (weight: 5), <6> (weight: 1), <0> (weight: 2), <1> (weight: 0).\nNode <5> is connected to nodes <4> (weight: 10), <0> (weight: 0).\nNode <4> is connected to nodes <3> (weight: 10), <6> (weight: 4), <0> (weight: 7), <5> (weight: 7), <1> (weight: 6).\nNode <3> is connected to nodes <0> (weight: 6), <4> (weight: 9).\nNode <1> is connected to nodes <4> (weight: 5), <6> (weight: 2), <2> (weight: 6), <5> (weight: 1).\n\nCalculate the maximum flow between node <0> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "19",
        "type": "maximum_flow"
    },
    {
        "index": 161,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4> (weight: 1), <2> (weight: 6).\nNode <4> is connected to nodes <5> (weight: 4), <3> (weight: 8), <6> (weight: 1), <0> (weight: 5).\nNode <2> is connected to nodes <3> (weight: 3), <6> (weight: 1), <0> (weight: 4).\nNode <5> is connected to nodes <2> (weight: 1), <3> (weight: 4).\nNode <6> is connected to nodes <0> (weight: 4), <1> (weight: 5), <3> (weight: 7), <2> (weight: 0), <4> (weight: 0).\nNode <0> is connected to nodes <5> (weight: 2), <2> (weight: 2), <1> (weight: 10).\nNode <1> is connected to nodes <0> (weight: 8), <4> (weight: 1), <2> (weight: 3), <6> (weight: 0).\n\nCalculate the maximum flow between node <2> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "6",
        "type": "maximum_flow"
    },
    {
        "index": 162,
        "question": "Given a directed graph:\nNode <4> is connected to node <3> (weight: 5).\nNode <3> is connected to nodes <4> (weight: 6), <2> (weight: 5).\nNode <2> is connected to nodes <3> (weight: 1), <0> (weight: 4).\nNode <0> is connected to nodes <1> (weight: 10), <2> (weight: 6), <3> (weight: 6), <4> (weight: 10).\nNode <1> is connected to nodes <5> (weight: 5), <2> (weight: 8), <3> (weight: 9), <4> (weight: 4), <0> (weight: 3).\nNode <5> is connected to nodes <2> (weight: 7), <0> (weight: 5).\n\nCalculate the maximum flow between node <4> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "4",
        "type": "maximum_flow"
    },
    {
        "index": 163,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2> (weight: 7), <4> (weight: 2).\nNode <2> is connected to nodes <4> (weight: 5), <3> (weight: 5), <6> (weight: 5), <5> (weight: 3).\nNode <4> is connected to nodes <3> (weight: 8), <1> (weight: 6), <0> (weight: 4), <6> (weight: 5), <5> (weight: 7), <2> (weight: 9).\nNode <3> is connected to nodes <0> (weight: 3), <6> (weight: 4), <5> (weight: 3), <4> (weight: 3).\nNode <6> is connected to nodes <4> (weight: 9), <3> (weight: 3).\nNode <5> is connected to nodes <2> (weight: 4), <4> (weight: 7), <3> (weight: 2), <1> (weight: 1), <0> (weight: 6), <6> (weight: 10).\nNode <1> is connected to nodes <0> (weight: 9), <6> (weight: 5), <5> (weight: 6), <2> (weight: 7), <3> (weight: 2).\n\nCalculate the maximum flow between node <6> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "12",
        "type": "maximum_flow"
    },
    {
        "index": 164,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <6> (weight: 10), <4> (weight: 0).\nNode <6> is connected to nodes <3> (weight: 1), <4> (weight: 9), <1> (weight: 6), <2> (weight: 8), <5> (weight: 0).\nNode <3> is connected to nodes <5> (weight: 9), <0> (weight: 9), <6> (weight: 6), <4> (weight: 0).\nNode <4> is connected to nodes <0> (weight: 1), <1> (weight: 8), <6> (weight: 1), <3> (weight: 4), <5> (weight: 5).\nNode <1> is connected to nodes <6> (weight: 2), <4> (weight: 7), <0> (weight: 5).\nNode <2> is connected to nodes <6> (weight: 3), <4> (weight: 2), <0> (weight: 8).\nNode <0> is connected to nodes <2> (weight: 10), <3> (weight: 7), <4> (weight: 9), <1> (weight: 0).\n\nCalculate the maximum flow between node <4> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "18",
        "type": "maximum_flow"
    },
    {
        "index": 165,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <1> (weight: 7), <0> (weight: 1).\nNode <1> is connected to node <0> (weight: 4).\nNode <0> is connected to nodes <5> (weight: 5), <3> (weight: 3), <1> (weight: 0).\nNode <3> is connected to node <0> (weight: 0).\nNode <2> is connected to nodes <1> (weight: 5), <5> (weight: 4), <3> (weight: 8).\nNode <4> is connected to node <3> (weight: 2).\n\nCalculate the maximum flow between node <1> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "3",
        "type": "maximum_flow"
    },
    {
        "index": 166,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <3> (weight: 8), <2> (weight: 6), <0> (weight: 10).\nNode <3> is connected to nodes <1> (weight: 2), <0> (weight: 8), <5> (weight: 10).\nNode <0> is connected to node <2> (weight: 5).\nNode <1> is connected to nodes <2> (weight: 6), <0> (weight: 10), <3> (weight: 0).\nNode <4> is connected to nodes <5> (weight: 2), <3> (weight: 9), <2> (weight: 2).\n\nCalculate the maximum flow between node <5> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "2",
        "type": "maximum_flow"
    },
    {
        "index": 167,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2> (weight: 5), <1> (weight: 1), <3> (weight: 2).\nNode <2> is connected to nodes <0> (weight: 4), <3> (weight: 4), <4> (weight: 6), <1> (weight: 0).\nNode <1> is connected to nodes <3> (weight: 2), <2> (weight: 6).\nNode <3> is connected to nodes <4> (weight: 5), <2> (weight: 5), <1> (weight: 0), <0> (weight: 0).\nNode <0> is connected to nodes <1> (weight: 3), <3> (weight: 2), <4> (weight: 6), <2> (weight: 0).\n\nCalculate the maximum flow between node <1> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "8",
        "type": "maximum_flow"
    },
    {
        "index": 168,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <6> (weight: 7), <5> (weight: 2), <4> (weight: 6), <1> (weight: 10).\nNode <6> is connected to nodes <3> (weight: 2), <5> (weight: 7).\nNode <5> is connected to nodes <4> (weight: 2), <0> (weight: 0).\nNode <4> is connected to nodes <0> (weight: 0), <5> (weight: 0).\nNode <1> is connected to node <6> (weight: 7).\nNode <3> is connected to nodes <0> (weight: 5), <6> (weight: 10).\nNode <2> is connected to nodes <0> (weight: 7), <5> (weight: 9).\n\nCalculate the maximum flow between node <0> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "8",
        "type": "maximum_flow"
    },
    {
        "index": 169,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0> (weight: 4), <3> (weight: 7), <2> (weight: 9).\nNode <0> is connected to nodes <3> (weight: 10), <2> (weight: 10), <1> (weight: 5).\nNode <3> is connected to nodes <1> (weight: 3), <0> (weight: 10), <4> (weight: 3).\nNode <2> is connected to nodes <1> (weight: 5), <0> (weight: 6).\nNode <4> is connected to nodes <2> (weight: 10), <0> (weight: 2).\n\nCalculate the maximum flow between node <1> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "17",
        "type": "maximum_flow"
    },
    {
        "index": 170,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <3> (weight: 6), <2> (weight: 1).\nNode <3> is connected to nodes <2> (weight: 1), <0> (weight: 3).\nNode <2> is connected to nodes <1> (weight: 1), <4> (weight: 7), <3> (weight: 2).\nNode <0> is connected to nodes <4> (weight: 3), <2> (weight: 8), <1> (weight: 10), <3> (weight: 0).\nNode <1> is connected to nodes <0> (weight: 4), <3> (weight: 4), <2> (weight: 0).\nNode <4> is connected to nodes <1> (weight: 4), <0> (weight: 9).\n\nCalculate the maximum flow between node <3> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "4",
        "type": "maximum_flow"
    },
    {
        "index": 171,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <5> (weight: 10), <0> (weight: 7), <3> (weight: 0).\nNode <5> is connected to nodes <0> (weight: 10), <3> (weight: 0), <4> (weight: 0).\nNode <0> is connected to nodes <3> (weight: 8), <1> (weight: 6).\nNode <3> is connected to nodes <5> (weight: 1), <1> (weight: 7), <6> (weight: 2), <4> (weight: 2), <0> (weight: 0).\nNode <1> is connected to node <6> (weight: 5).\nNode <2> is connected to node <0> (weight: 6).\nNode <6> is connected to node <2> (weight: 6).\n\nCalculate the maximum flow between node <0> and node <5> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "3",
        "type": "maximum_flow"
    },
    {
        "index": 172,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2> (weight: 2), <0> (weight: 10).\nNode <2> is connected to nodes <3> (weight: 6), <4> (weight: 0).\nNode <0> is connected to nodes <3> (weight: 5), <4> (weight: 0).\nNode <1> is connected to nodes <4> (weight: 3), <2> (weight: 1).\nNode <4> is connected to nodes <2> (weight: 2), <0> (weight: 7).\n\nCalculate the maximum flow between node <4> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "7",
        "type": "maximum_flow"
    },
    {
        "index": 173,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0> (weight: 3), <3> (weight: 9), <1> (weight: 1), <2> (weight: 5).\nNode <0> is connected to nodes <1> (weight: 8), <2> (weight: 9), <5> (weight: 7), <6> (weight: 8).\nNode <3> is connected to nodes <2> (weight: 10), <5> (weight: 4), <0> (weight: 4), <4> (weight: 1), <1> (weight: 0).\nNode <1> is connected to nodes <6> (weight: 1), <4> (weight: 1), <3> (weight: 9), <0> (weight: 0).\nNode <2> is connected to nodes <5> (weight: 5), <6> (weight: 6), <1> (weight: 8).\nNode <6> is connected to nodes <1> (weight: 1), <2> (weight: 7).\nNode <4> is connected to nodes <1> (weight: 8), <0> (weight: 2), <3> (weight: 0).\n\nCalculate the maximum flow between node <0> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "2",
        "type": "maximum_flow"
    },
    {
        "index": 174,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <6> (weight: 7), <1> (weight: 4), <4> (weight: 9), <3> (weight: 6).\nNode <6> is connected to nodes <0> (weight: 3), <4> (weight: 8), <2> (weight: 6), <3> (weight: 0).\nNode <1> is connected to nodes <4> (weight: 9), <2> (weight: 6).\nNode <4> is connected to nodes <3> (weight: 1), <6> (weight: 2), <0> (weight: 8), <5> (weight: 1), <1> (weight: 9), <2> (weight: 0).\nNode <3> is connected to nodes <6> (weight: 3), <0> (weight: 6), <5> (weight: 5), <2> (weight: 0).\nNode <0> is connected to nodes <4> (weight: 2), <3> (weight: 1), <2> (weight: 9).\nNode <5> is connected to node <2> (weight: 1).\n\nCalculate the maximum flow between node <2> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "23",
        "type": "maximum_flow"
    },
    {
        "index": 175,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <1> (weight: 4), <3> (weight: 7).\nNode <1> is connected to node <3> (weight: 1).\nNode <3> is connected to nodes <5> (weight: 2), <4> (weight: 6), <2> (weight: 1), <1> (weight: 2), <0> (weight: 0).\nNode <4> is connected to nodes <2> (weight: 5), <3> (weight: 4), <5> (weight: 7).\nNode <2> is connected to nodes <3> (weight: 10), <4> (weight: 7).\nNode <0> is connected to nodes <1> (weight: 2), <3> (weight: 8).\n\nCalculate the maximum flow between node <0> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "6",
        "type": "maximum_flow"
    },
    {
        "index": 176,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3> (weight: 2), <6> (weight: 10).\nNode <3> is connected to nodes <6> (weight: 3), <1> (weight: 9), <5> (weight: 0).\nNode <6> is connected to nodes <0> (weight: 5), <2> (weight: 8), <3> (weight: 9), <5> (weight: 10), <1> (weight: 0).\nNode <0> is connected to nodes <5> (weight: 10), <4> (weight: 7).\nNode <2> is connected to nodes <6> (weight: 6), <0> (weight: 8), <5> (weight: 0).\nNode <5> is connected to nodes <4> (weight: 7), <2> (weight: 3), <3> (weight: 9).\n\nCalculate the maximum flow between node <5> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "11",
        "type": "maximum_flow"
    },
    {
        "index": 177,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <5> (weight: 2), <4> (weight: 1), <2> (weight: 10).\nNode <5> is connected to nodes <0> (weight: 1), <3> (weight: 0).\nNode <4> is connected to nodes <2> (weight: 2), <5> (weight: 1), <3> (weight: 0).\nNode <2> is connected to nodes <4> (weight: 2), <1> (weight: 3), <3> (weight: 0), <0> (weight: 0).\nNode <0> is connected to nodes <2> (weight: 5), <5> (weight: 7), <1> (weight: 5).\n\nCalculate the maximum flow between node <3> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "12",
        "type": "maximum_flow"
    },
    {
        "index": 178,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3> (weight: 3), <2> (weight: 4), <0> (weight: 4).\nNode <3> is connected to nodes <2> (weight: 9), <4> (weight: 2).\nNode <5> is connected to nodes <0> (weight: 5), <4> (weight: 4).\nNode <1> is connected to nodes <0> (weight: 5), <4> (weight: 2), <5> (weight: 8).\n\nCalculate the maximum flow between node <4> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "3",
        "type": "maximum_flow"
    },
    {
        "index": 179,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4> (weight: 9), <3> (weight: 10), <0> (weight: 8).\nNode <4> is connected to nodes <0> (weight: 4), <1> (weight: 4), <3> (weight: 0).\nNode <3> is connected to nodes <0> (weight: 8), <2> (weight: 7), <4> (weight: 7).\nNode <0> is connected to nodes <1> (weight: 7), <3> (weight: 10), <4> (weight: 0).\n\nCalculate the maximum flow between node <3> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "15",
        "type": "maximum_flow"
    },
    {
        "index": 180,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3> (weight: 2), <4> (weight: 6), <0> (weight: 1).\nNode <3> is connected to nodes <4> (weight: 3), <1> (weight: 4), <2> (weight: 0).\nNode <4> is connected to nodes <2> (weight: 7), <3> (weight: 2).\nNode <0> is connected to nodes <1> (weight: 5), <2> (weight: 6), <3> (weight: 7).\nNode <1> is connected to nodes <2> (weight: 1), <3> (weight: 9), <4> (weight: 10), <0> (weight: 3).\n\nCalculate the maximum flow between node <4> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "4",
        "type": "maximum_flow"
    },
    {
        "index": 181,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4> (weight: 5), <3> (weight: 7), <2> (weight: 2).\nNode <4> is connected to nodes <0> (weight: 8), <1> (weight: 0), <2> (weight: 0).\nNode <3> is connected to nodes <2> (weight: 3), <1> (weight: 10), <0> (weight: 8).\nNode <2> is connected to nodes <4> (weight: 8), <3> (weight: 8), <1> (weight: 0).\nNode <0> is connected to nodes <3> (weight: 8), <1> (weight: 8).\n\nCalculate the maximum flow between node <1> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "10",
        "type": "maximum_flow"
    },
    {
        "index": 182,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3> (weight: 4), <1> (weight: 7).\nNode <3> is connected to nodes <2> (weight: 2), <5> (weight: 5), <0> (weight: 6), <4> (weight: 1).\nNode <1> is connected to nodes <2> (weight: 10), <3> (weight: 9), <0> (weight: 0), <4> (weight: 0).\nNode <2> is connected to nodes <5> (weight: 3), <0> (weight: 9), <3> (weight: 1).\nNode <4> is connected to nodes <1> (weight: 9), <3> (weight: 0).\n\nCalculate the maximum flow between node <0> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "8",
        "type": "maximum_flow"
    },
    {
        "index": 183,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0> (weight: 10), <4> (weight: 1), <3> (weight: 7), <2> (weight: 2).\nNode <0> is connected to nodes <4> (weight: 8), <1> (weight: 2), <3> (weight: 0).\nNode <4> is connected to nodes <1> (weight: 8), <0> (weight: 0).\nNode <3> is connected to node <0> (weight: 2).\nNode <2> is connected to nodes <5> (weight: 1), <4> (weight: 5).\nNode <1> is connected to nodes <4> (weight: 3), <3> (weight: 1).\n\nCalculate the maximum flow between node <3> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "2",
        "type": "maximum_flow"
    },
    {
        "index": 184,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2> (weight: 1), <1> (weight: 1), <5> (weight: 1), <6> (weight: 3), <0> (weight: 2).\nNode <2> is connected to nodes <6> (weight: 7), <0> (weight: 9), <4> (weight: 10), <5> (weight: 0).\nNode <1> is connected to nodes <6> (weight: 9), <4> (weight: 1), <2> (weight: 9).\nNode <5> is connected to nodes <0> (weight: 1), <4> (weight: 2), <2> (weight: 10).\nNode <6> is connected to nodes <2> (weight: 2), <1> (weight: 9).\nNode <0> is connected to nodes <1> (weight: 4), <5> (weight: 10), <4> (weight: 0), <2> (weight: 0).\nNode <3> is connected to nodes <1> (weight: 10), <6> (weight: 6), <0> (weight: 7).\n\nCalculate the maximum flow between node <5> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "12",
        "type": "maximum_flow"
    },
    {
        "index": 185,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4> (weight: 8), <1> (weight: 8), <5> (weight: 2), <0> (weight: 1), <2> (weight: 0).\nNode <4> is connected to nodes <6> (weight: 4), <0> (weight: 10), <5> (weight: 0), <3> (weight: 0).\nNode <1> is connected to nodes <5> (weight: 2), <2> (weight: 7), <3> (weight: 8), <4> (weight: 2).\nNode <5> is connected to nodes <2> (weight: 10), <3> (weight: 4), <4> (weight: 5).\nNode <0> is connected to nodes <2> (weight: 3), <3> (weight: 3), <4> (weight: 8), <5> (weight: 9).\nNode <6> is connected to nodes <5> (weight: 5), <0> (weight: 3), <4> (weight: 3).\nNode <2> is connected to nodes <3> (weight: 6), <1> (weight: 4), <0> (weight: 8), <5> (weight: 0).\n\nCalculate the maximum flow between node <5> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "19",
        "type": "maximum_flow"
    },
    {
        "index": 186,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2> (weight: 10), <1> (weight: 1), <3> (weight: 0).\nNode <2> is connected to nodes <1> (weight: 3), <3> (weight: 0).\nNode <1> is connected to nodes <0> (weight: 2), <4> (weight: 8), <2> (weight: 0).\nNode <0> is connected to nodes <4> (weight: 2), <3> (weight: 4), <2> (weight: 5), <1> (weight: 2).\nNode <3> is connected to nodes <2> (weight: 8), <4> (weight: 10).\n\nCalculate the maximum flow between node <3> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "13",
        "type": "maximum_flow"
    },
    {
        "index": 187,
        "question": "Given a directed graph:\nNode <2> is connected to node <3> (weight: 7).\nNode <3> is connected to node <4> (weight: 7).\nNode <4> is connected to nodes <1> (weight: 6), <3> (weight: 4), <5> (weight: 5).\nNode <1> is connected to nodes <5> (weight: 9), <4> (weight: 6).\nNode <5> is connected to nodes <0> (weight: 7), <4> (weight: 3), <3> (weight: 4), <1> (weight: 0).\nNode <0> is connected to nodes <2> (weight: 8), <4> (weight: 9), <3> (weight: 4), <5> (weight: 0).\n\nCalculate the maximum flow between node <1> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "7",
        "type": "maximum_flow"
    },
    {
        "index": 188,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0> (weight: 1), <6> (weight: 3).\nNode <0> is connected to nodes <3> (weight: 8), <4> (weight: 4), <1> (weight: 0).\nNode <6> is connected to nodes <3> (weight: 2), <4> (weight: 7), <1> (weight: 0).\nNode <3> is connected to nodes <1> (weight: 3), <2> (weight: 10), <4> (weight: 1), <0> (weight: 3), <6> (weight: 6).\nNode <4> is connected to nodes <0> (weight: 8), <6> (weight: 8), <1> (weight: 5), <5> (weight: 7).\nNode <2> is connected to nodes <5> (weight: 5), <6> (weight: 8), <3> (weight: 5).\nNode <5> is connected to nodes <4> (weight: 8), <6> (weight: 6), <3> (weight: 7), <1> (weight: 6).\n\nCalculate the maximum flow between node <1> and node <5> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "4",
        "type": "maximum_flow"
    },
    {
        "index": 189,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4> (weight: 1), <0> (weight: 2).\nNode <4> is connected to nodes <1> (weight: 5), <2> (weight: 10), <3> (weight: 2), <0> (weight: 0).\nNode <0> is connected to nodes <4> (weight: 9), <1> (weight: 4), <3> (weight: 0).\nNode <1> is connected to nodes <2> (weight: 5), <3> (weight: 3), <4> (weight: 3).\nNode <2> is connected to nodes <3> (weight: 8), <4> (weight: 1).\n\nCalculate the maximum flow between node <3> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "3",
        "type": "maximum_flow"
    },
    {
        "index": 190,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <4> (weight: 8), <2> (weight: 10).\nNode <4> is connected to nodes <0> (weight: 8), <2> (weight: 6), <6> (weight: 0), <3> (weight: 0).\nNode <2> is connected to nodes <6> (weight: 7), <5> (weight: 1).\nNode <0> is connected to nodes <6> (weight: 8), <5> (weight: 2), <4> (weight: 0).\nNode <5> is connected to nodes <2> (weight: 2), <3> (weight: 10).\nNode <3> is connected to nodes <4> (weight: 10), <1> (weight: 5), <6> (weight: 1), <5> (weight: 0).\nNode <1> is connected to nodes <0> (weight: 4), <6> (weight: 6), <3> (weight: 3).\n\nCalculate the maximum flow between node <2> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "8",
        "type": "maximum_flow"
    },
    {
        "index": 191,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0> (weight: 8), <1> (weight: 10), <3> (weight: 3).\nNode <0> is connected to nodes <1> (weight: 8), <3> (weight: 5), <4> (weight: 0).\nNode <1> is connected to node <4> (weight: 4).\nNode <3> is connected to node <4> (weight: 3).\nNode <2> is connected to nodes <1> (weight: 9), <3> (weight: 1), <4> (weight: 5).\n\nCalculate the maximum flow between node <1> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "4",
        "type": "maximum_flow"
    },
    {
        "index": 192,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4> (weight: 1), <2> (weight: 7), <0> (weight: 10).\nNode <4> is connected to nodes <2> (weight: 7), <1> (weight: 7), <0> (weight: 0).\nNode <2> is connected to nodes <1> (weight: 10), <0> (weight: 8), <4> (weight: 1).\nNode <0> is connected to nodes <4> (weight: 10), <2> (weight: 8).\nNode <1> is connected to node <4> (weight: 9).\n\nCalculate the maximum flow between node <0> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "15",
        "type": "maximum_flow"
    },
    {
        "index": 193,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4> (weight: 5), <1> (weight: 6), <3> (weight: 0).\nNode <4> is connected to nodes <3> (weight: 5), <1> (weight: 2), <0> (weight: 0).\nNode <1> is connected to nodes <0> (weight: 7), <2> (weight: 1).\nNode <3> is connected to nodes <0> (weight: 2), <4> (weight: 10), <2> (weight: 2).\nNode <2> is connected to node <3> (weight: 8).\n\nCalculate the maximum flow between node <3> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "12",
        "type": "maximum_flow"
    },
    {
        "index": 194,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4> (weight: 2), <0> (weight: 8), <3> (weight: 2).\nNode <4> is connected to node <3> (weight: 4).\nNode <0> is connected to nodes <3> (weight: 1), <1> (weight: 4), <4> (weight: 6), <2> (weight: 8).\nNode <3> is connected to nodes <1> (weight: 7), <4> (weight: 5), <0> (weight: 8).\nNode <2> is connected to nodes <0> (weight: 4), <3> (weight: 6), <1> (weight: 2), <4> (weight: 2).\n\nCalculate the maximum flow between node <0> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "8",
        "type": "maximum_flow"
    },
    {
        "index": 195,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3> (weight: 5), <0> (weight: 7).\nNode <3> is connected to node <0> (weight: 4).\nNode <0> is connected to nodes <4> (weight: 8), <2> (weight: 2), <3> (weight: 2).\nNode <4> is connected to nodes <1> (weight: 9), <0> (weight: 8).\nNode <1> is connected to node <4> (weight: 0).\n\nCalculate the maximum flow between node <4> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "9",
        "type": "maximum_flow"
    },
    {
        "index": 196,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5> (weight: 4), <1> (weight: 0).\nNode <5> is connected to nodes <1> (weight: 1), <0> (weight: 5), <3> (weight: 3).\nNode <1> is connected to nodes <2> (weight: 7), <3> (weight: 3), <4> (weight: 1).\nNode <0> is connected to nodes <3> (weight: 4), <5> (weight: 10).\nNode <3> is connected to node <4> (weight: 6).\nNode <4> is connected to node <1> (weight: 7).\n\nCalculate the maximum flow between node <1> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "7",
        "type": "maximum_flow"
    },
    {
        "index": 197,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0> (weight: 1), <3> (weight: 7), <2> (weight: 10), <4> (weight: 5).\nNode <0> is connected to node <1> (weight: 2).\nNode <3> is connected to nodes <1> (weight: 3), <4> (weight: 6).\nNode <2> is connected to nodes <4> (weight: 10), <0> (weight: 8), <1> (weight: 7).\nNode <4> is connected to nodes <5> (weight: 5), <3> (weight: 9), <1> (weight: 4).\nNode <1> is connected to nodes <2> (weight: 9), <4> (weight: 6), <0> (weight: 0).\n\nCalculate the maximum flow between node <0> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "2",
        "type": "maximum_flow"
    },
    {
        "index": 198,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2> (weight: 4), <0> (weight: 2), <1> (weight: 0).\nNode <2> is connected to nodes <5> (weight: 9), <0> (weight: 0), <4> (weight: 0).\nNode <0> is connected to nodes <2> (weight: 10), <1> (weight: 5), <4> (weight: 0).\nNode <5> is connected to nodes <4> (weight: 3), <0> (weight: 7), <1> (weight: 0), <2> (weight: 0).\nNode <1> is connected to nodes <0> (weight: 4), <3> (weight: 9), <5> (weight: 10), <4> (weight: 8).\nNode <3> is connected to node <1> (weight: 7).\n\nCalculate the maximum flow between node <1> and node <5> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "19",
        "type": "maximum_flow"
    },
    {
        "index": 199,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1> (weight: 3), <3> (weight: 9).\nNode <1> is connected to nodes <0> (weight: 10), <3> (weight: 10), <2> (weight: 6).\nNode <3> is connected to nodes <4> (weight: 7), <1> (weight: 6), <0> (weight: 6), <2> (weight: 0).\nNode <0> is connected to nodes <3> (weight: 7), <1> (weight: 0).\nNode <4> is connected to nodes <2> (weight: 2), <1> (weight: 4).\n\nCalculate the maximum flow between node <2> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "12",
        "type": "maximum_flow"
    },
    {
        "index": 200,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3> (weight: 9), <4> (weight: 10).\nNode <3> is connected to nodes <4> (weight: 7), <2> (weight: 9), <0> (weight: 2), <1> (weight: 10), <5> (weight: 0).\nNode <4> is connected to nodes <5> (weight: 2), <1> (weight: 1).\nNode <5> is connected to nodes <3> (weight: 7), <4> (weight: 6), <0> (weight: 9).\n\nCalculate the maximum flow between node <5> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "8",
        "type": "maximum_flow"
    },
    {
        "index": 201,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0> (weight: 2), <4> (weight: 6).\nNode <0> is connected to nodes <2> (weight: 6), <4> (weight: 10), <1> (weight: 2).\nNode <4> is connected to nodes <1> (weight: 8), <0> (weight: 1), <2> (weight: 1), <3> (weight: 0).\nNode <2> is connected to node <3> (weight: 1).\nNode <3> is connected to nodes <0> (weight: 5), <4> (weight: 9), <2> (weight: 0).\n\nCalculate the maximum flow between node <2> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "1",
        "type": "maximum_flow"
    },
    {
        "index": 202,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2> (weight: 9), <4> (weight: 10), <1> (weight: 0).\nNode <2> is connected to nodes <5> (weight: 4), <1> (weight: 5).\nNode <4> is connected to nodes <5> (weight: 10), <3> (weight: 10), <6> (weight: 7).\nNode <5> is connected to nodes <3> (weight: 9), <2> (weight: 3), <0> (weight: 2), <6> (weight: 9), <4> (weight: 9).\nNode <1> is connected to node <3> (weight: 6).\nNode <6> is connected to nodes <5> (weight: 4), <2> (weight: 7).\nNode <0> is connected to nodes <4> (weight: 3), <1> (weight: 2), <2> (weight: 3).\n\nCalculate the maximum flow between node <1> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "6",
        "type": "maximum_flow"
    },
    {
        "index": 203,
        "question": "Given a directed graph:\nNode <0> is connected to node <2> (weight: 6).\nNode <2> is connected to nodes <1> (weight: 8), <4> (weight: 2).\nNode <1> is connected to nodes <3> (weight: 3), <0> (weight: 5), <2> (weight: 0).\nNode <4> is connected to nodes <2> (weight: 6), <1> (weight: 7).\nNode <3> is connected to nodes <0> (weight: 1), <1> (weight: 8), <2> (weight: 5).\n\nCalculate the maximum flow between node <2> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "3",
        "type": "maximum_flow"
    },
    {
        "index": 204,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <5> (weight: 7), <2> (weight: 1), <3> (weight: 0).\nNode <5> is connected to nodes <2> (weight: 8), <0> (weight: 2), <4> (weight: 1).\nNode <2> is connected to nodes <0> (weight: 10), <3> (weight: 3), <4> (weight: 0), <5> (weight: 0).\nNode <0> is connected to nodes <2> (weight: 5), <3> (weight: 0), <1> (weight: 0), <5> (weight: 0).\nNode <3> is connected to nodes <4> (weight: 5), <1> (weight: 6), <2> (weight: 7), <0> (weight: 2).\nNode <1> is connected to nodes <5> (weight: 7), <0> (weight: 7), <3> (weight: 6), <4> (weight: 8).\n\nCalculate the maximum flow between node <3> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "20",
        "type": "maximum_flow"
    },
    {
        "index": 205,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <5> (weight: 1), <2> (weight: 9).\nNode <5> is connected to nodes <2> (weight: 8), <6> (weight: 9).\nNode <2> is connected to nodes <3> (weight: 4), <0> (weight: 6).\nNode <3> is connected to nodes <0> (weight: 7), <5> (weight: 4), <6> (weight: 9), <2> (weight: 0), <4> (weight: 0), <1> (weight: 0).\nNode <0> is connected to nodes <2> (weight: 8), <6> (weight: 9), <4> (weight: 3), <3> (weight: 2).\nNode <1> is connected to nodes <4> (weight: 3), <3> (weight: 2), <0> (weight: 9), <2> (weight: 9).\nNode <4> is connected to nodes <3> (weight: 1), <5> (weight: 4), <6> (weight: 5), <1> (weight: 2), <0> (weight: 0).\n\nCalculate the maximum flow between node <0> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "9",
        "type": "maximum_flow"
    },
    {
        "index": 206,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2> (weight: 10), <0> (weight: 7), <4> (weight: 3), <3> (weight: 6), <1> (weight: 6).\nNode <2> is connected to nodes <0> (weight: 9), <4> (weight: 7), <1> (weight: 5), <3> (weight: 0).\nNode <0> is connected to nodes <4> (weight: 5), <3> (weight: 5), <1> (weight: 6), <5> (weight: 6), <6> (weight: 6), <2> (weight: 1).\nNode <4> is connected to nodes <3> (weight: 1), <5> (weight: 9), <0> (weight: 4).\nNode <3> is connected to nodes <5> (weight: 5), <2> (weight: 8), <4> (weight: 10).\nNode <1> is connected to nodes <5> (weight: 6), <4> (weight: 7), <3> (weight: 7), <2> (weight: 0), <0> (weight: 0).\nNode <6> is connected to nodes <3> (weight: 5), <1> (weight: 9), <5> (weight: 7).\n\nCalculate the maximum flow between node <3> and node <5> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "23",
        "type": "maximum_flow"
    },
    {
        "index": 207,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1> (weight: 8), <2> (weight: 8), <3> (weight: 9).\nNode <1> is connected to nodes <0> (weight: 9), <3> (weight: 7), <4> (weight: 0).\nNode <2> is connected to nodes <0> (weight: 9), <4> (weight: 0).\nNode <3> is connected to nodes <2> (weight: 5), <0> (weight: 10), <4> (weight: 0).\nNode <0> is connected to nodes <3> (weight: 7), <4> (weight: 2), <2> (weight: 2), <1> (weight: 0).\n\nCalculate the maximum flow between node <4> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "25",
        "type": "maximum_flow"
    },
    {
        "index": 208,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2> (weight: 4), <0> (weight: 0), <1> (weight: 0).\nNode <2> is connected to nodes <5> (weight: 5), <4> (weight: 9), <3> (weight: 0).\nNode <4> is connected to nodes <2> (weight: 5), <0> (weight: 3).\nNode <0> is connected to nodes <3> (weight: 1), <4> (weight: 5), <1> (weight: 5), <5> (weight: 2).\nNode <3> is connected to nodes <1> (weight: 2), <2> (weight: 7), <5> (weight: 10), <0> (weight: 0).\nNode <1> is connected to nodes <5> (weight: 3), <0> (weight: 1).\n\nCalculate the maximum flow between node <0> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "10",
        "type": "maximum_flow"
    },
    {
        "index": 209,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1> (weight: 7), <3> (weight: 9), <5> (weight: 2).\nNode <1> is connected to nodes <3> (weight: 1), <4> (weight: 2), <2> (weight: 0).\nNode <3> is connected to nodes <5> (weight: 8), <2> (weight: 5), <1> (weight: 7).\nNode <5> is connected to nodes <6> (weight: 6), <1> (weight: 6), <3> (weight: 7), <2> (weight: 0).\nNode <4> is connected to node <2> (weight: 5).\nNode <6> is connected to node <3> (weight: 7).\nNode <0> is connected to nodes <5> (weight: 5), <2> (weight: 1), <4> (weight: 8), <6> (weight: 1).\n\nCalculate the maximum flow between node <2> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "12",
        "type": "maximum_flow"
    },
    {
        "index": 210,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <4> (weight: 2), <2> (weight: 8), <1> (weight: 9).\nNode <4> is connected to nodes <1> (weight: 2), <0> (weight: 7), <3> (weight: 8).\nNode <2> is connected to nodes <5> (weight: 8), <4> (weight: 1), <1> (weight: 0), <0> (weight: 0).\nNode <1> is connected to nodes <0> (weight: 8), <3> (weight: 6), <2> (weight: 7), <4> (weight: 0).\nNode <0> is connected to nodes <3> (weight: 4), <2> (weight: 4), <4> (weight: 0).\nNode <3> is connected to nodes <4> (weight: 10), <0> (weight: 7).\n\nCalculate the maximum flow between node <4> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "6",
        "type": "maximum_flow"
    },
    {
        "index": 211,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <1> (weight: 9), <3> (weight: 10), <0> (weight: 0), <2> (weight: 0).\nNode <1> is connected to nodes <4> (weight: 2), <0> (weight: 8).\nNode <3> is connected to nodes <4> (weight: 7), <2> (weight: 9), <1> (weight: 6), <0> (weight: 0), <6> (weight: 0), <5> (weight: 0).\nNode <4> is connected to node <2> (weight: 8).\nNode <0> is connected to nodes <2> (weight: 6), <6> (weight: 3), <5> (weight: 9), <1> (weight: 8), <3> (weight: 10), <4> (weight: 7).\nNode <2> is connected to nodes <6> (weight: 2), <5> (weight: 6), <3> (weight: 3), <4> (weight: 9), <0> (weight: 10).\nNode <6> is connected to nodes <1> (weight: 10), <3> (weight: 4), <4> (weight: 2), <0> (weight: 6), <2> (weight: 1).\n\nCalculate the maximum flow between node <0> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "27",
        "type": "maximum_flow"
    },
    {
        "index": 212,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <6> (weight: 2), <2> (weight: 9), <1> (weight: 10), <5> (weight: 0), <0> (weight: 0).\nNode <6> is connected to nodes <2> (weight: 8), <5> (weight: 3), <0> (weight: 6).\nNode <2> is connected to nodes <5> (weight: 3), <4> (weight: 6), <6> (weight: 5), <0> (weight: 0).\nNode <1> is connected to nodes <3> (weight: 7), <4> (weight: 2), <6> (weight: 9), <5> (weight: 0).\nNode <5> is connected to nodes <3> (weight: 10), <2> (weight: 2), <1> (weight: 3), <4> (weight: 0), <6> (weight: 0).\nNode <0> is connected to nodes <2> (weight: 4), <3> (weight: 1), <4> (weight: 0).\nNode <4> is connected to nodes <2> (weight: 4), <5> (weight: 5), <0> (weight: 4).\n\nCalculate the maximum flow between node <4> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "12",
        "type": "maximum_flow"
    },
    {
        "index": 213,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <1> (weight: 7), <0> (weight: 9), <6> (weight: 8), <3> (weight: 8).\nNode <1> is connected to node <5> (weight: 0).\nNode <0> is connected to nodes <6> (weight: 8), <5> (weight: 3).\nNode <6> is connected to nodes <2> (weight: 3), <0> (weight: 9).\nNode <3> is connected to nodes <5> (weight: 1), <0> (weight: 1).\nNode <2> is connected to node <0> (weight: 2).\nNode <4> is connected to nodes <1> (weight: 7), <0> (weight: 3), <6> (weight: 8), <5> (weight: 9).\n\nCalculate the maximum flow between node <5> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "7",
        "type": "maximum_flow"
    },
    {
        "index": 214,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3> (weight: 4), <0> (weight: 10).\nNode <3> is connected to nodes <2> (weight: 6), <1> (weight: 0).\nNode <0> is connected to nodes <1> (weight: 1), <3> (weight: 3).\nNode <2> is connected to nodes <4> (weight: 5), <1> (weight: 9), <3> (weight: 6).\nNode <1> is connected to nodes <3> (weight: 6), <0> (weight: 8), <4> (weight: 10).\n\nCalculate the maximum flow between node <1> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "6",
        "type": "maximum_flow"
    },
    {
        "index": 215,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3> (weight: 1), <0> (weight: 4), <4> (weight: 0).\nNode <3> is connected to nodes <1> (weight: 2), <4> (weight: 6).\nNode <0> is connected to nodes <2> (weight: 5), <1> (weight: 5).\nNode <1> is connected to nodes <3> (weight: 2), <0> (weight: 1).\nNode <4> is connected to nodes <2> (weight: 6), <3> (weight: 0).\n\nCalculate the maximum flow between node <0> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "7",
        "type": "maximum_flow"
    },
    {
        "index": 216,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1> (weight: 3), <2> (weight: 8).\nNode <1> is connected to nodes <4> (weight: 7), <3> (weight: 7).\nNode <2> is connected to nodes <5> (weight: 0), <4> (weight: 0).\nNode <4> is connected to nodes <2> (weight: 2), <1> (weight: 8), <5> (weight: 0).\nNode <5> is connected to nodes <4> (weight: 10), <2> (weight: 10).\n\nCalculate the maximum flow between node <5> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "12",
        "type": "maximum_flow"
    },
    {
        "index": 217,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <0> (weight: 2), <1> (weight: 4), <5> (weight: 5), <4> (weight: 0).\nNode <0> is connected to node <4> (weight: 2).\nNode <1> is connected to nodes <6> (weight: 1), <0> (weight: 6), <3> (weight: 2).\nNode <5> is connected to nodes <6> (weight: 3), <2> (weight: 3), <3> (weight: 9).\nNode <4> is connected to nodes <6> (weight: 3), <0> (weight: 9), <2> (weight: 0).\nNode <2> is connected to nodes <4> (weight: 10), <3> (weight: 9), <5> (weight: 0).\n\nCalculate the maximum flow between node <5> and node <6> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "6",
        "type": "maximum_flow"
    },
    {
        "index": 218,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2> (weight: 9), <3> (weight: 3).\nNode <2> is connected to nodes <0> (weight: 4), <3> (weight: 10), <4> (weight: 5), <1> (weight: 0).\nNode <3> is connected to nodes <4> (weight: 1), <0> (weight: 9).\nNode <0> is connected to nodes <3> (weight: 2), <1> (weight: 4), <2> (weight: 8).\nNode <1> is connected to nodes <2> (weight: 6), <0> (weight: 0).\n\nCalculate the maximum flow between node <0> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "13",
        "type": "maximum_flow"
    },
    {
        "index": 219,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3> (weight: 10), <4> (weight: 2), <0> (weight: 0).\nNode <3> is connected to nodes <4> (weight: 2), <1> (weight: 0).\nNode <4> is connected to nodes <2> (weight: 6), <1> (weight: 0), <3> (weight: 0).\nNode <2> is connected to nodes <5> (weight: 9), <4> (weight: 0).\nNode <0> is connected to node <1> (weight: 9).\nNode <5> is connected to nodes <0> (weight: 10), <3> (weight: 7), <2> (weight: 0).\n\nCalculate the maximum flow between node <0> and node <5> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "4",
        "type": "maximum_flow"
    },
    {
        "index": 220,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1> (weight: 7), <3> (weight: 10).\nNode <1> is connected to nodes <0> (weight: 10), <4> (weight: 1).\nNode <3> is connected to nodes <4> (weight: 3), <1> (weight: 8), <0> (weight: 5), <2> (weight: 7).\nNode <0> is connected to nodes <3> (weight: 6), <4> (weight: 4), <1> (weight: 1).\nNode <2> is connected to nodes <4> (weight: 7), <1> (weight: 8), <3> (weight: 0).\n\nCalculate the maximum flow between node <1> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "7",
        "type": "maximum_flow"
    },
    {
        "index": 221,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3> (weight: 1), <0> (weight: 3), <4> (weight: 7).\nNode <3> is connected to nodes <4> (weight: 2), <1> (weight: 9), <5> (weight: 0).\nNode <0> is connected to nodes <2> (weight: 6), <1> (weight: 1).\nNode <4> is connected to nodes <1> (weight: 4), <5> (weight: 1), <0> (weight: 3).\nNode <2> is connected to nodes <5> (weight: 1), <0> (weight: 1).\nNode <5> is connected to nodes <2> (weight: 6), <1> (weight: 3), <3> (weight: 7).\n\nCalculate the maximum flow between node <0> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "2",
        "type": "maximum_flow"
    },
    {
        "index": 222,
        "question": "Given a directed graph:\nNode <2> is connected to node <3> (weight: 8).\nNode <3> is connected to nodes <2> (weight: 3), <5> (weight: 8), <0> (weight: 5), <4> (weight: 1).\nNode <5> is connected to nodes <4> (weight: 10), <0> (weight: 0).\nNode <0> is connected to nodes <4> (weight: 4), <3> (weight: 1), <5> (weight: 9).\nNode <4> is connected to nodes <2> (weight: 10), <5> (weight: 6), <0> (weight: 0), <3> (weight: 0).\nNode <1> is connected to node <5> (weight: 6).\n\nCalculate the maximum flow between node <0> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "14",
        "type": "maximum_flow"
    },
    {
        "index": 223,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <6> (weight: 3), <2> (weight: 4), <0> (weight: 9), <4> (weight: 6), <5> (weight: 8).\nNode <6> is connected to nodes <2> (weight: 6), <4> (weight: 5), <5> (weight: 8), <3> (weight: 8), <0> (weight: 0).\nNode <2> is connected to nodes <0> (weight: 8), <1> (weight: 6), <4> (weight: 6), <3> (weight: 5), <6> (weight: 0).\nNode <0> is connected to nodes <4> (weight: 7), <5> (weight: 4), <6> (weight: 10), <2> (weight: 2).\nNode <4> is connected to nodes <5> (weight: 9), <6> (weight: 5), <0> (weight: 9).\nNode <5> is connected to nodes <3> (weight: 2), <6> (weight: 3), <0> (weight: 0).\nNode <1> is connected to nodes <4> (weight: 6), <5> (weight: 8), <6> (weight: 3).\n\nCalculate the maximum flow between node <0> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "15",
        "type": "maximum_flow"
    },
    {
        "index": 224,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0> (weight: 8), <2> (weight: 5), <3> (weight: 0).\nNode <0> is connected to nodes <2> (weight: 2), <1> (weight: 4).\nNode <2> is connected to nodes <3> (weight: 2), <1> (weight: 7).\nNode <3> is connected to nodes <1> (weight: 9), <2> (weight: 6).\nNode <4> is connected to nodes <0> (weight: 10), <3> (weight: 9).\n\nCalculate the maximum flow between node <3> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "15",
        "type": "maximum_flow"
    },
    {
        "index": 225,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <6> (weight: 7), <5> (weight: 1), <3> (weight: 2), <4> (weight: 0).\nNode <6> is connected to nodes <2> (weight: 3), <1> (weight: 8).\nNode <5> is connected to nodes <2> (weight: 5), <3> (weight: 6), <0> (weight: 10), <1> (weight: 0).\nNode <3> is connected to nodes <5> (weight: 3), <2> (weight: 4), <0> (weight: 0), <4> (weight: 0).\nNode <2> is connected to nodes <0> (weight: 7), <1> (weight: 2), <6> (weight: 7), <4> (weight: 7).\nNode <0> is connected to nodes <4> (weight: 6), <3> (weight: 1).\nNode <4> is connected to nodes <3> (weight: 4), <0> (weight: 5), <1> (weight: 6).\n\nCalculate the maximum flow between node <0> and node <5> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "4",
        "type": "maximum_flow"
    },
    {
        "index": 226,
        "question": "Given a directed graph:\nNode <3> is connected to node <2> (weight: 5).\nNode <2> is connected to nodes <0> (weight: 3), <1> (weight: 4), <3> (weight: 8).\nNode <0> is connected to nodes <3> (weight: 4), <4> (weight: 9), <2> (weight: 0).\nNode <1> is connected to nodes <3> (weight: 3), <2> (weight: 0), <4> (weight: 0).\nNode <4> is connected to nodes <2> (weight: 9), <0> (weight: 6), <1> (weight: 4).\n\nCalculate the maximum flow between node <3> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "5",
        "type": "maximum_flow"
    },
    {
        "index": 227,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3> (weight: 10), <5> (weight: 10), <2> (weight: 4), <4> (weight: 6).\nNode <3> is connected to nodes <5> (weight: 8), <2> (weight: 1), <4> (weight: 5).\nNode <5> is connected to nodes <0> (weight: 7), <1> (weight: 2), <3> (weight: 2).\nNode <2> is connected to nodes <6> (weight: 2), <0> (weight: 3).\nNode <4> is connected to nodes <5> (weight: 1), <2> (weight: 6).\nNode <1> is connected to nodes <5> (weight: 2), <2> (weight: 5).\nNode <6> is connected to nodes <5> (weight: 10), <2> (weight: 0).\n\nCalculate the maximum flow between node <0> and node <6> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "2",
        "type": "maximum_flow"
    },
    {
        "index": 228,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0> (weight: 8), <5> (weight: 2), <3> (weight: 7).\nNode <0> is connected to nodes <5> (weight: 2), <2> (weight: 9).\nNode <3> is connected to node <4> (weight: 2).\nNode <4> is connected to node <1> (weight: 10).\n\nCalculate the maximum flow between node <2> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "8",
        "type": "maximum_flow"
    },
    {
        "index": 229,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1> (weight: 4), <5> (weight: 10), <0> (weight: 9), <2> (weight: 8).\nNode <1> is connected to node <3> (weight: 2).\nNode <5> is connected to nodes <4> (weight: 8), <3> (weight: 10), <1> (weight: 9).\nNode <0> is connected to nodes <3> (weight: 1), <1> (weight: 9).\nNode <2> is connected to nodes <1> (weight: 5), <0> (weight: 8).\nNode <4> is connected to nodes <0> (weight: 5), <2> (weight: 6), <1> (weight: 2), <5> (weight: 1).\n\nCalculate the maximum flow between node <1> and node <5> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "2",
        "type": "maximum_flow"
    },
    {
        "index": 230,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <3> (weight: 1), <1> (weight: 8), <5> (weight: 7), <4> (weight: 0), <0> (weight: 0).\nNode <3> is connected to nodes <5> (weight: 10), <0> (weight: 8).\nNode <1> is connected to nodes <6> (weight: 10), <3> (weight: 4), <2> (weight: 7).\nNode <5> is connected to nodes <0> (weight: 7), <6> (weight: 1), <3> (weight: 1), <2> (weight: 7).\nNode <0> is connected to nodes <6> (weight: 10), <5> (weight: 2), <4> (weight: 0).\nNode <2> is connected to nodes <1> (weight: 3), <4> (weight: 7), <5> (weight: 0).\nNode <4> is connected to nodes <0> (weight: 6), <6> (weight: 7), <2> (weight: 3).\n\nCalculate the maximum flow between node <4> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "16",
        "type": "maximum_flow"
    },
    {
        "index": 231,
        "question": "Given a directed graph:\nNode <4> is connected to node <1> (weight: 7).\nNode <1> is connected to nodes <3> (weight: 9), <2> (weight: 4).\nNode <3> is connected to nodes <2> (weight: 4), <1> (weight: 2).\nNode <2> is connected to nodes <1> (weight: 7), <3> (weight: 1), <4> (weight: 9).\nNode <0> is connected to nodes <1> (weight: 4), <4> (weight: 4).\n\nCalculate the maximum flow between node <1> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "10",
        "type": "maximum_flow"
    },
    {
        "index": 232,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0> (weight: 6), <3> (weight: 7).\nNode <0> is connected to nodes <4> (weight: 8), <1> (weight: 1), <2> (weight: 3), <3> (weight: 0).\nNode <3> is connected to nodes <2> (weight: 8), <0> (weight: 9), <1> (weight: 7).\nNode <4> is connected to nodes <1> (weight: 7), <2> (weight: 4).\nNode <1> is connected to nodes <3> (weight: 9), <0> (weight: 5), <4> (weight: 5).\n\nCalculate the maximum flow between node <3> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "20",
        "type": "maximum_flow"
    },
    {
        "index": 233,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <4> (weight: 9), <2> (weight: 2).\nNode <4> is connected to nodes <2> (weight: 5), <3> (weight: 4), <0> (weight: 2).\nNode <2> is connected to nodes <3> (weight: 8), <0> (weight: 1), <1> (weight: 7), <4> (weight: 1).\nNode <0> is connected to nodes <1> (weight: 5), <4> (weight: 1), <5> (weight: 1).\nNode <1> is connected to nodes <3> (weight: 4), <2> (weight: 0), <0> (weight: 0).\n\nCalculate the maximum flow between node <4> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "7",
        "type": "maximum_flow"
    },
    {
        "index": 234,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4> (weight: 3), <1> (weight: 0).\nNode <4> is connected to nodes <3> (weight: 3), <1> (weight: 10), <0> (weight: 0), <2> (weight: 0).\nNode <1> is connected to nodes <3> (weight: 8), <2> (weight: 6), <0> (weight: 9).\nNode <2> is connected to nodes <1> (weight: 10), <4> (weight: 5), <0> (weight: 0).\nNode <0> is connected to nodes <4> (weight: 2), <2> (weight: 9).\n\nCalculate the maximum flow between node <0> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "11",
        "type": "maximum_flow"
    },
    {
        "index": 235,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4> (weight: 9), <5> (weight: 1), <1> (weight: 5).\nNode <4> is connected to nodes <5> (weight: 4), <3> (weight: 5), <2> (weight: 0).\nNode <5> is connected to node <1> (weight: 4).\nNode <1> is connected to nodes <2> (weight: 9), <5> (weight: 4), <0> (weight: 3).\nNode <3> is connected to nodes <4> (weight: 2), <5> (weight: 5), <1> (weight: 4), <0> (weight: 0).\nNode <0> is connected to nodes <1> (weight: 8), <3> (weight: 5).\n\nCalculate the maximum flow between node <2> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "11",
        "type": "maximum_flow"
    },
    {
        "index": 236,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2> (weight: 1), <0> (weight: 9).\nNode <2> is connected to nodes <0> (weight: 1), <1> (weight: 10), <3> (weight: 1), <4> (weight: 7).\nNode <0> is connected to nodes <1> (weight: 3), <3> (weight: 6), <2> (weight: 6), <4> (weight: 0).\nNode <1> is connected to nodes <3> (weight: 10), <0> (weight: 5), <2> (weight: 0).\nNode <3> is connected to nodes <2> (weight: 10), <0> (weight: 5).\n\nCalculate the maximum flow between node <3> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "15",
        "type": "maximum_flow"
    },
    {
        "index": 237,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <6> (weight: 10), <5> (weight: 2), <3> (weight: 1).\nNode <6> is connected to nodes <3> (weight: 2), <1> (weight: 8), <0> (weight: 2).\nNode <5> is connected to node <3> (weight: 3).\nNode <3> is connected to nodes <4> (weight: 8), <5> (weight: 0).\nNode <1> is connected to node <2> (weight: 7).\nNode <0> is connected to nodes <6> (weight: 4), <5> (weight: 8).\nNode <4> is connected to nodes <0> (weight: 5), <2> (weight: 7), <3> (weight: 6).\n\nCalculate the maximum flow between node <5> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "3",
        "type": "maximum_flow"
    },
    {
        "index": 238,
        "question": "Given a directed graph:\nNode <4> is connected to node <5> (weight: 9).\nNode <5> is connected to nodes <1> (weight: 8), <3> (weight: 6).\nNode <1> is connected to nodes <6> (weight: 10), <2> (weight: 4), <0> (weight: 3).\nNode <0> is connected to nodes <6> (weight: 1), <2> (weight: 4), <3> (weight: 5).\nNode <6> is connected to nodes <5> (weight: 8), <0> (weight: 0), <1> (weight: 0).\nNode <2> is connected to nodes <3> (weight: 7), <1> (weight: 1), <0> (weight: 0).\n\nCalculate the maximum flow between node <0> and node <6> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "2",
        "type": "maximum_flow"
    },
    {
        "index": 239,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3> (weight: 2), <1> (weight: 10).\nNode <3> is connected to nodes <1> (weight: 9), <4> (weight: 9), <0> (weight: 4), <2> (weight: 0).\nNode <1> is connected to nodes <0> (weight: 9), <2> (weight: 0), <3> (weight: 0).\nNode <4> is connected to nodes <0> (weight: 9), <1> (weight: 9), <2> (weight: 2).\nNode <0> is connected to nodes <1> (weight: 6), <2> (weight: 3), <4> (weight: 5).\n\nCalculate the maximum flow between node <2> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "12",
        "type": "maximum_flow"
    },
    {
        "index": 240,
        "question": "Given a directed graph:\nNode <1> is connected to node <4> (weight: 8).\nNode <4> is connected to nodes <0> (weight: 6), <2> (weight: 0).\nNode <0> is connected to nodes <3> (weight: 8), <4> (weight: 4).\nNode <3> is connected to nodes <4> (weight: 4), <1> (weight: 4), <0> (weight: 0).\nNode <2> is connected to node <4> (weight: 2).\n\nCalculate the maximum flow between node <2> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "2",
        "type": "maximum_flow"
    },
    {
        "index": 241,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3> (weight: 9), <0> (weight: 8), <4> (weight: 1), <2> (weight: 0).\nNode <3> is connected to nodes <2> (weight: 6), <0> (weight: 7), <4> (weight: 3), <1> (weight: 0).\nNode <0> is connected to nodes <4> (weight: 9), <2> (weight: 3).\nNode <4> is connected to nodes <2> (weight: 10), <0> (weight: 3).\nNode <2> is connected to nodes <4> (weight: 10), <1> (weight: 8).\n\nCalculate the maximum flow between node <4> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "8",
        "type": "maximum_flow"
    },
    {
        "index": 242,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2> (weight: 9), <3> (weight: 4).\nNode <2> is connected to nodes <3> (weight: 8), <0> (weight: 9), <1> (weight: 7), <4> (weight: 0).\nNode <3> is connected to nodes <0> (weight: 6), <4> (weight: 0).\nNode <0> is connected to nodes <1> (weight: 9), <2> (weight: 0), <3> (weight: 0).\nNode <1> is connected to nodes <4> (weight: 2), <2> (weight: 0), <0> (weight: 0).\n\nCalculate the maximum flow between node <4> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "13",
        "type": "maximum_flow"
    },
    {
        "index": 243,
        "question": "Given a directed graph:\nNode <1> is connected to node <2> (weight: 3).\nNode <2> is connected to nodes <5> (weight: 2), <1> (weight: 7).\nNode <5> is connected to node <1> (weight: 1).\nNode <4> is connected to nodes <5> (weight: 5), <1> (weight: 10), <3> (weight: 0).\nNode <3> is connected to nodes <0> (weight: 8), <1> (weight: 10), <4> (weight: 2).\nNode <0> is connected to nodes <5> (weight: 2), <1> (weight: 7).\n\nCalculate the maximum flow between node <3> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "2",
        "type": "maximum_flow"
    },
    {
        "index": 244,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <6> (weight: 6), <2> (weight: 6).\nNode <6> is connected to nodes <1> (weight: 7), <5> (weight: 8), <4> (weight: 0).\nNode <2> is connected to nodes <5> (weight: 2), <6> (weight: 4).\nNode <1> is connected to nodes <0> (weight: 5), <5> (weight: 5), <3> (weight: 4), <6> (weight: 0).\nNode <0> is connected to nodes <4> (weight: 6), <3> (weight: 9), <6> (weight: 3), <2> (weight: 7), <1> (weight: 0).\nNode <4> is connected to nodes <5> (weight: 2), <6> (weight: 6), <2> (weight: 8).\n\nCalculate the maximum flow between node <4> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "5",
        "type": "maximum_flow"
    },
    {
        "index": 245,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3> (weight: 7), <2> (weight: 3), <0> (weight: 8), <6> (weight: 0).\nNode <3> is connected to nodes <5> (weight: 2), <4> (weight: 1).\nNode <2> is connected to nodes <1> (weight: 5), <6> (weight: 3), <5> (weight: 3), <4> (weight: 3), <3> (weight: 10).\nNode <0> is connected to nodes <5> (weight: 8), <3> (weight: 2).\nNode <5> is connected to nodes <3> (weight: 6), <0> (weight: 10).\nNode <1> is connected to node <0> (weight: 8).\nNode <6> is connected to node <4> (weight: 3).\n\nCalculate the maximum flow between node <6> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "3",
        "type": "maximum_flow"
    },
    {
        "index": 246,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <6> (weight: 7), <3> (weight: 8), <4> (weight: 3), <2> (weight: 9).\nNode <6> is connected to nodes <2> (weight: 8), <1> (weight: 9), <5> (weight: 8).\nNode <3> is connected to nodes <4> (weight: 4), <5> (weight: 9).\nNode <4> is connected to node <5> (weight: 2).\nNode <2> is connected to nodes <5> (weight: 4), <3> (weight: 2).\nNode <1> is connected to nodes <4> (weight: 9), <2> (weight: 10), <0> (weight: 4).\nNode <0> is connected to nodes <1> (weight: 1), <3> (weight: 5), <4> (weight: 3), <2> (weight: 1).\n\nCalculate the maximum flow between node <3> and node <6> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "7",
        "type": "maximum_flow"
    },
    {
        "index": 247,
        "question": "Given a directed graph:\nNode <3> is connected to node <0> (weight: 4).\nNode <0> is connected to node <6> (weight: 3).\nNode <6> is connected to nodes <2> (weight: 1), <1> (weight: 9).\nNode <2> is connected to nodes <1> (weight: 1), <3> (weight: 9).\nNode <1> is connected to nodes <2> (weight: 4), <0> (weight: 4).\nNode <5> is connected to nodes <0> (weight: 2), <1> (weight: 4), <4> (weight: 7).\nNode <4> is connected to nodes <6> (weight: 9), <2> (weight: 1), <1> (weight: 7), <5> (weight: 0).\n\nCalculate the maximum flow between node <5> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "7",
        "type": "maximum_flow"
    },
    {
        "index": 248,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <6> (weight: 9), <0> (weight: 4).\nNode <6> is connected to nodes <4> (weight: 8), <0> (weight: 1), <3> (weight: 6).\nNode <0> is connected to nodes <1> (weight: 10), <3> (weight: 1), <5> (weight: 4).\nNode <4> is connected to nodes <1> (weight: 8), <6> (weight: 9), <5> (weight: 0).\nNode <5> is connected to nodes <4> (weight: 7), <0> (weight: 2), <1> (weight: 9).\nNode <2> is connected to node <1> (weight: 4).\n\nCalculate the maximum flow between node <5> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "8",
        "type": "maximum_flow"
    },
    {
        "index": 249,
        "question": "Given a directed graph:\nNode <0> is connected to node <1> (weight: 4).\nNode <1> is connected to nodes <0> (weight: 5), <3> (weight: 7).\nNode <3> is connected to nodes <1> (weight: 8), <2> (weight: 4), <0> (weight: 4).\nNode <2> is connected to nodes <3> (weight: 5), <1> (weight: 5).\nNode <4> is connected to node <1> (weight: 4).\n\nCalculate the maximum flow between node <0> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "4",
        "type": "maximum_flow"
    },
    {
        "index": 250,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1> (weight: 1), <3> (weight: 9).\nNode <3> is connected to nodes <1> (weight: 7), <4> (weight: 5), <2> (weight: 6).\nNode <4> is connected to nodes <2> (weight: 8), <3> (weight: 4), <1> (weight: 7).\n\nCalculate the maximum flow between node <3> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "5",
        "type": "maximum_flow"
    },
    {
        "index": 251,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0> (weight: 6), <2> (weight: 4), <1> (weight: 0), <3> (weight: 0).\nNode <0> is connected to nodes <3> (weight: 6), <4> (weight: 8), <2> (weight: 0).\nNode <2> is connected to nodes <1> (weight: 1), <0> (weight: 8), <3> (weight: 2).\nNode <3> is connected to nodes <1> (weight: 2), <4> (weight: 7), <2> (weight: 0).\nNode <1> is connected to nodes <4> (weight: 9), <2> (weight: 0).\n\nCalculate the maximum flow between node <2> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "11",
        "type": "maximum_flow"
    },
    {
        "index": 252,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4> (weight: 4), <0> (weight: 1), <1> (weight: 0).\nNode <0> is connected to nodes <4> (weight: 8), <2> (weight: 6), <3> (weight: 0).\nNode <2> is connected to nodes <3> (weight: 9), <4> (weight: 1), <1> (weight: 8), <0> (weight: 0).\nNode <1> is connected to nodes <3> (weight: 7), <4> (weight: 1).\nNode <5> is connected to node <4> (weight: 8).\n\nCalculate the maximum flow between node <1> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "1",
        "type": "maximum_flow"
    },
    {
        "index": 253,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <5> (weight: 7), <0> (weight: 8), <6> (weight: 1), <2> (weight: 4).\nNode <5> is connected to nodes <6> (weight: 4), <3> (weight: 8), <1> (weight: 0), <2> (weight: 0).\nNode <0> is connected to nodes <6> (weight: 3), <3> (weight: 8), <1> (weight: 10), <4> (weight: 3).\nNode <6> is connected to nodes <3> (weight: 2), <1> (weight: 4), <4> (weight: 5).\nNode <2> is connected to nodes <5> (weight: 7), <1> (weight: 0).\nNode <4> is connected to node <0> (weight: 9).\n\nCalculate the maximum flow between node <1> and node <5> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "11",
        "type": "maximum_flow"
    },
    {
        "index": 254,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1> (weight: 8), <3> (weight: 10).\nNode <1> is connected to nodes <2> (weight: 8), <3> (weight: 4), <0> (weight: 8), <4> (weight: 0).\nNode <3> is connected to node <2> (weight: 7).\nNode <2> is connected to node <1> (weight: 5).\nNode <0> is connected to nodes <2> (weight: 3), <3> (weight: 6), <4> (weight: 7), <1> (weight: 0).\n\nCalculate the maximum flow between node <4> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "8",
        "type": "maximum_flow"
    },
    {
        "index": 255,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4> (weight: 9), <5> (weight: 6), <2> (weight: 3), <0> (weight: 4), <6> (weight: 0).\nNode <4> is connected to nodes <2> (weight: 6), <0> (weight: 3), <1> (weight: 6), <6> (weight: 0), <3> (weight: 0).\nNode <5> is connected to nodes <2> (weight: 1), <6> (weight: 1).\nNode <2> is connected to nodes <0> (weight: 3), <3> (weight: 1), <4> (weight: 10), <6> (weight: 3), <5> (weight: 10).\nNode <0> is connected to nodes <3> (weight: 1), <6> (weight: 1), <2> (weight: 8), <4> (weight: 0).\nNode <1> is connected to nodes <4> (weight: 4), <0> (weight: 2), <3> (weight: 4).\nNode <6> is connected to nodes <3> (weight: 7), <4> (weight: 2).\n\nCalculate the maximum flow between node <6> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "9",
        "type": "maximum_flow"
    },
    {
        "index": 256,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0> (weight: 9), <2> (weight: 5).\nNode <0> is connected to node <1> (weight: 4).\nNode <2> is connected to nodes <5> (weight: 3), <1> (weight: 9), <3> (weight: 2), <4> (weight: 7).\nNode <3> is connected to nodes <0> (weight: 3), <4> (weight: 7), <1> (weight: 7), <2> (weight: 0).\nNode <4> is connected to nodes <1> (weight: 4), <0> (weight: 7), <2> (weight: 0), <3> (weight: 0).\n\nCalculate the maximum flow between node <2> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "9",
        "type": "maximum_flow"
    },
    {
        "index": 257,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1> (weight: 10), <5> (weight: 6).\nNode <1> is connected to nodes <5> (weight: 8), <3> (weight: 2), <4> (weight: 7).\nNode <5> is connected to nodes <3> (weight: 3), <1> (weight: 5), <0> (weight: 10).\nNode <4> is connected to nodes <0> (weight: 9), <5> (weight: 3), <3> (weight: 5), <2> (weight: 5), <1> (weight: 0).\nNode <0> is connected to nodes <5> (weight: 8), <4> (weight: 1), <1> (weight: 9).\nNode <2> is connected to nodes <4> (weight: 5), <1> (weight: 3).\n\nCalculate the maximum flow between node <1> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "5",
        "type": "maximum_flow"
    },
    {
        "index": 258,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3> (weight: 8), <0> (weight: 4), <2> (weight: 6).\nNode <3> is connected to nodes <0> (weight: 5), <4> (weight: 5).\nNode <0> is connected to node <2> (weight: 10).\nNode <2> is connected to nodes <4> (weight: 8), <0> (weight: 5).\nNode <1> is connected to nodes <2> (weight: 9), <4> (weight: 4), <3> (weight: 6).\n\nCalculate the maximum flow between node <2> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "8",
        "type": "maximum_flow"
    },
    {
        "index": 259,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0> (weight: 9), <4> (weight: 1), <1> (weight: 8), <2> (weight: 3).\nNode <0> is connected to nodes <4> (weight: 1), <1> (weight: 6), <2> (weight: 4).\nNode <4> is connected to nodes <2> (weight: 6), <0> (weight: 5).\nNode <1> is connected to nodes <2> (weight: 9), <3> (weight: 1), <0> (weight: 0).\nNode <2> is connected to nodes <3> (weight: 10), <0> (weight: 6), <4> (weight: 3).\n\nCalculate the maximum flow between node <4> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "11",
        "type": "maximum_flow"
    },
    {
        "index": 260,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1> (weight: 5), <0> (weight: 7), <4> (weight: 4).\nNode <1> is connected to nodes <4> (weight: 2), <5> (weight: 0).\nNode <0> is connected to nodes <4> (weight: 3), <2> (weight: 9).\nNode <4> is connected to nodes <2> (weight: 10), <1> (weight: 10), <5> (weight: 9).\nNode <5> is connected to nodes <2> (weight: 2), <1> (weight: 10).\n\nCalculate the maximum flow between node <5> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "2",
        "type": "maximum_flow"
    },
    {
        "index": 261,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3> (weight: 9), <0> (weight: 1).\nNode <3> is connected to nodes <0> (weight: 9), <2> (weight: 8), <1> (weight: 0).\nNode <0> is connected to nodes <2> (weight: 7), <3> (weight: 2).\nNode <2> is connected to nodes <0> (weight: 2), <1> (weight: 2).\nNode <1> is connected to nodes <2> (weight: 5), <3> (weight: 3).\n\nCalculate the maximum flow between node <0> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "4",
        "type": "maximum_flow"
    },
    {
        "index": 262,
        "question": "Given a directed graph:\nNode <2> is connected to node <1> (weight: 8).\nNode <1> is connected to nodes <0> (weight: 5), <3> (weight: 3), <4> (weight: 5).\nNode <0> is connected to nodes <3> (weight: 6), <4> (weight: 6), <1> (weight: 0).\nNode <4> is connected to nodes <1> (weight: 2), <2> (weight: 6), <0> (weight: 0).\n\nCalculate the maximum flow between node <1> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "10",
        "type": "maximum_flow"
    },
    {
        "index": 263,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0> (weight: 7), <3> (weight: 7), <2> (weight: 8), <6> (weight: 0), <5> (weight: 0).\nNode <0> is connected to nodes <3> (weight: 7), <6> (weight: 5), <2> (weight: 3), <4> (weight: 6).\nNode <3> is connected to nodes <2> (weight: 9), <1> (weight: 7), <0> (weight: 7).\nNode <2> is connected to nodes <1> (weight: 7), <0> (weight: 10), <3> (weight: 6), <6> (weight: 0).\nNode <6> is connected to nodes <2> (weight: 4), <1> (weight: 1), <0> (weight: 10), <3> (weight: 1).\nNode <4> is connected to nodes <0> (weight: 8), <5> (weight: 9), <3> (weight: 5).\nNode <5> is connected to nodes <3> (weight: 10), <2> (weight: 6), <1> (weight: 8), <4> (weight: 8), <0> (weight: 5).\n\nCalculate the maximum flow between node <0> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "21",
        "type": "maximum_flow"
    },
    {
        "index": 264,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0> (weight: 1), <2> (weight: 1), <6> (weight: 5).\nNode <0> is connected to nodes <6> (weight: 3), <4> (weight: 9).\nNode <2> is connected to nodes <6> (weight: 5), <1> (weight: 2), <0> (weight: 8), <4> (weight: 0), <5> (weight: 0).\nNode <6> is connected to nodes <1> (weight: 5), <4> (weight: 6), <3> (weight: 3).\nNode <1> is connected to nodes <4> (weight: 6), <3> (weight: 7), <0> (weight: 6).\nNode <3> is connected to nodes <5> (weight: 8), <6> (weight: 10), <4> (weight: 3).\nNode <5> is connected to nodes <0> (weight: 7), <2> (weight: 3), <3> (weight: 0).\n\nCalculate the maximum flow between node <4> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "4",
        "type": "maximum_flow"
    },
    {
        "index": 265,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0> (weight: 10), <1> (weight: 4), <3> (weight: 3), <5> (weight: 0), <4> (weight: 0).\nNode <0> is connected to nodes <1> (weight: 10), <3> (weight: 1), <5> (weight: 7), <2> (weight: 5).\nNode <1> is connected to nodes <5> (weight: 7), <4> (weight: 9), <0> (weight: 1).\nNode <3> is connected to node <4> (weight: 3).\nNode <5> is connected to nodes <2> (weight: 2), <0> (weight: 9), <3> (weight: 6).\nNode <4> is connected to nodes <5> (weight: 5), <2> (weight: 8), <1> (weight: 0).\n\nCalculate the maximum flow between node <0> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "15",
        "type": "maximum_flow"
    },
    {
        "index": 266,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4> (weight: 4), <1> (weight: 6).\nNode <4> is connected to nodes <5> (weight: 3), <3> (weight: 4), <1> (weight: 6), <2> (weight: 7), <0> (weight: 0).\nNode <1> is connected to nodes <6> (weight: 3), <5> (weight: 1), <3> (weight: 7), <0> (weight: 0).\nNode <5> is connected to nodes <3> (weight: 3), <1> (weight: 3), <2> (weight: 9), <6> (weight: 8), <4> (weight: 1).\nNode <3> is connected to nodes <6> (weight: 1), <5> (weight: 1), <0> (weight: 0).\nNode <6> is connected to nodes <4> (weight: 5), <0> (weight: 10).\nNode <0> is connected to nodes <3> (weight: 2), <1> (weight: 4), <4> (weight: 3).\n\nCalculate the maximum flow between node <0> and node <5> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "5",
        "type": "maximum_flow"
    },
    {
        "index": 267,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3> (weight: 9), <4> (weight: 5).\nNode <3> is connected to nodes <4> (weight: 2), <5> (weight: 7), <0> (weight: 0).\nNode <4> is connected to nodes <1> (weight: 9), <2> (weight: 5), <3> (weight: 0).\nNode <5> is connected to node <0> (weight: 8).\nNode <1> is connected to node <2> (weight: 8).\nNode <0> is connected to nodes <3> (weight: 5), <5> (weight: 0).\n\nCalculate the maximum flow between node <5> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "2",
        "type": "maximum_flow"
    },
    {
        "index": 268,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1> (weight: 3), <0> (weight: 6).\nNode <1> is connected to nodes <5> (weight: 5), <0> (weight: 6).\nNode <0> is connected to node <1> (weight: 0).\nNode <5> is connected to node <1> (weight: 7).\nNode <4> is connected to node <5> (weight: 5).\nNode <2> is connected to node <3> (weight: 5).\n\nCalculate the maximum flow between node <1> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "6",
        "type": "maximum_flow"
    },
    {
        "index": 269,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4> (weight: 5), <1> (weight: 2).\nNode <4> is connected to nodes <0> (weight: 7), <2> (weight: 3).\nNode <1> is connected to nodes <2> (weight: 3), <3> (weight: 10).\nNode <0> is connected to nodes <4> (weight: 3), <3> (weight: 8).\nNode <3> is connected to nodes <0> (weight: 1), <4> (weight: 10).\n\nCalculate the maximum flow between node <2> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "2",
        "type": "maximum_flow"
    },
    {
        "index": 270,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3> (weight: 2), <4> (weight: 5), <5> (weight: 1), <2> (weight: 6).\nNode <3> is connected to nodes <1> (weight: 8), <2> (weight: 6), <4> (weight: 0), <0> (weight: 0).\nNode <4> is connected to nodes <5> (weight: 4), <0> (weight: 3), <3> (weight: 5), <1> (weight: 0), <2> (weight: 0).\nNode <5> is connected to nodes <0> (weight: 1), <4> (weight: 2), <1> (weight: 0).\nNode <2> is connected to nodes <3> (weight: 2), <4> (weight: 7), <1> (weight: 0).\nNode <1> is connected to nodes <2> (weight: 9), <4> (weight: 2), <5> (weight: 4).\n\nCalculate the maximum flow between node <1> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "9",
        "type": "maximum_flow"
    },
    {
        "index": 271,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0> (weight: 7), <4> (weight: 2), <1> (weight: 8), <2> (weight: 4).\nNode <0> is connected to nodes <4> (weight: 6), <2> (weight: 1), <3> (weight: 0).\nNode <1> is connected to nodes <3> (weight: 8), <4> (weight: 2).\nNode <2> is connected to nodes <3> (weight: 0), <0> (weight: 0).\n\nCalculate the maximum flow between node <1> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "5",
        "type": "maximum_flow"
    },
    {
        "index": 272,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <5> (weight: 10), <2> (weight: 9).\nNode <5> is connected to nodes <2> (weight: 3), <3> (weight: 4).\nNode <2> is connected to nodes <1> (weight: 6), <0> (weight: 0).\nNode <1> is connected to nodes <4> (weight: 8), <2> (weight: 7).\nNode <4> is connected to nodes <2> (weight: 6), <1> (weight: 0).\nNode <0> is connected to nodes <5> (weight: 1), <2> (weight: 6), <3> (weight: 5).\n\nCalculate the maximum flow between node <0> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "6",
        "type": "maximum_flow"
    },
    {
        "index": 273,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4> (weight: 1), <1> (weight: 8), <2> (weight: 0).\nNode <4> is connected to nodes <1> (weight: 9), <3> (weight: 9), <2> (weight: 0).\nNode <1> is connected to nodes <3> (weight: 6), <0> (weight: 3), <4> (weight: 5), <2> (weight: 7).\nNode <0> is connected to node <1> (weight: 2).\nNode <2> is connected to nodes <3> (weight: 5), <4> (weight: 10).\n\nCalculate the maximum flow between node <2> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "15",
        "type": "maximum_flow"
    },
    {
        "index": 274,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3> (weight: 2), <4> (weight: 8), <1> (weight: 1).\nNode <3> is connected to nodes <4> (weight: 4), <0> (weight: 7).\nNode <4> is connected to nodes <1> (weight: 6), <3> (weight: 0).\nNode <1> is connected to nodes <0> (weight: 7), <4> (weight: 0).\nNode <0> is connected to nodes <3> (weight: 5), <4> (weight: 8), <1> (weight: 2).\n\nCalculate the maximum flow between node <3> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "11",
        "type": "maximum_flow"
    },
    {
        "index": 275,
        "question": "Given a directed graph:\nNode <5> is connected to node <2> (weight: 1).\nNode <2> is connected to nodes <1> (weight: 5), <0> (weight: 8), <4> (weight: 8), <5> (weight: 3).\nNode <1> is connected to nodes <0> (weight: 4), <5> (weight: 2), <3> (weight: 3).\nNode <0> is connected to nodes <5> (weight: 10), <3> (weight: 6), <2> (weight: 7).\nNode <4> is connected to nodes <5> (weight: 5), <3> (weight: 3), <2> (weight: 1).\nNode <3> is connected to node <2> (weight: 2).\n\nCalculate the maximum flow between node <5> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "1",
        "type": "maximum_flow"
    },
    {
        "index": 276,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4> (weight: 8), <0> (weight: 9), <2> (weight: 9), <6> (weight: 0), <3> (weight: 0).\nNode <4> is connected to nodes <6> (weight: 4), <5> (weight: 5).\nNode <0> is connected to nodes <1> (weight: 6), <3> (weight: 9), <4> (weight: 9), <2> (weight: 0).\nNode <2> is connected to nodes <5> (weight: 2), <0> (weight: 5).\nNode <6> is connected to nodes <3> (weight: 8), <1> (weight: 1), <5> (weight: 0).\nNode <5> is connected to nodes <4> (weight: 9), <2> (weight: 5), <6> (weight: 8).\nNode <3> is connected to nodes <1> (weight: 1), <6> (weight: 7).\n\nCalculate the maximum flow between node <5> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "7",
        "type": "maximum_flow"
    },
    {
        "index": 277,
        "question": "Given a directed graph:\nNode <5> is connected to node <1> (weight: 5).\nNode <1> is connected to nodes <3> (weight: 3), <2> (weight: 1).\nNode <3> is connected to nodes <5> (weight: 9), <2> (weight: 10), <4> (weight: 2), <1> (weight: 10).\nNode <2> is connected to nodes <1> (weight: 3), <0> (weight: 10), <3> (weight: 0).\nNode <0> is connected to nodes <3> (weight: 8), <4> (weight: 5), <2> (weight: 0).\nNode <4> is connected to nodes <5> (weight: 7), <3> (weight: 0), <0> (weight: 0).\n\nCalculate the maximum flow between node <3> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "7",
        "type": "maximum_flow"
    },
    {
        "index": 278,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2> (weight: 6), <4> (weight: 10), <1> (weight: 8), <3> (weight: 5).\nNode <2> is connected to nodes <4> (weight: 1), <0> (weight: 3), <1> (weight: 0).\nNode <4> is connected to nodes <0> (weight: 1), <2> (weight: 6).\nNode <1> is connected to nodes <3> (weight: 7), <0> (weight: 4), <2> (weight: 7).\n\nCalculate the maximum flow between node <1> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "8",
        "type": "maximum_flow"
    },
    {
        "index": 279,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3> (weight: 9), <2> (weight: 10), <0> (weight: 1).\nNode <3> is connected to nodes <0> (weight: 8), <1> (weight: 2).\nNode <2> is connected to nodes <1> (weight: 1), <3> (weight: 6).\nNode <0> is connected to nodes <3> (weight: 8), <2> (weight: 6), <4> (weight: 2), <1> (weight: 0).\nNode <4> is connected to node <0> (weight: 0).\n\nCalculate the maximum flow between node <1> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "2",
        "type": "maximum_flow"
    },
    {
        "index": 280,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2> (weight: 8), <4> (weight: 6), <0> (weight: 1), <1> (weight: 4), <3> (weight: 0).\nNode <2> is connected to nodes <4> (weight: 1), <5> (weight: 10).\nNode <4> is connected to nodes <3> (weight: 7), <0> (weight: 9), <5> (weight: 7), <2> (weight: 7).\nNode <0> is connected to nodes <1> (weight: 5), <5> (weight: 9), <2> (weight: 3), <4> (weight: 4).\nNode <1> is connected to nodes <4> (weight: 1), <3> (weight: 8), <5> (weight: 0), <0> (weight: 0).\nNode <3> is connected to node <5> (weight: 6).\n\nCalculate the maximum flow between node <3> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "6",
        "type": "maximum_flow"
    },
    {
        "index": 281,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0> (weight: 5), <3> (weight: 6), <4> (weight: 6).\nNode <0> is connected to nodes <3> (weight: 10), <1> (weight: 8), <2> (weight: 9).\nNode <3> is connected to nodes <1> (weight: 7), <2> (weight: 6), <4> (weight: 0).\nNode <4> is connected to nodes <2> (weight: 5), <3> (weight: 9).\nNode <1> is connected to nodes <2> (weight: 6), <3> (weight: 8), <4> (weight: 6), <0> (weight: 0).\n\nCalculate the maximum flow between node <2> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "12",
        "type": "maximum_flow"
    },
    {
        "index": 282,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4> (weight: 5), <3> (weight: 4).\nNode <4> is connected to nodes <3> (weight: 6), <2> (weight: 3), <1> (weight: 9), <0> (weight: 7).\nNode <3> is connected to node <1> (weight: 2).\nNode <2> is connected to nodes <1> (weight: 1), <0> (weight: 1), <4> (weight: 4).\nNode <0> is connected to nodes <3> (weight: 10), <1> (weight: 2), <4> (weight: 0).\n\nCalculate the maximum flow between node <3> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "2",
        "type": "maximum_flow"
    },
    {
        "index": 283,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2> (weight: 7), <3> (weight: 2), <5> (weight: 8), <0> (weight: 4).\nNode <2> is connected to nodes <3> (weight: 1), <5> (weight: 7), <4> (weight: 2), <0> (weight: 8), <1> (weight: 0), <6> (weight: 0).\nNode <3> is connected to nodes <5> (weight: 2), <0> (weight: 6), <1> (weight: 5), <2> (weight: 2), <6> (weight: 9).\nNode <5> is connected to nodes <4> (weight: 9), <0> (weight: 9), <1> (weight: 8), <3> (weight: 6).\nNode <0> is connected to nodes <1> (weight: 7), <6> (weight: 4), <5> (weight: 4), <3> (weight: 0).\nNode <4> is connected to nodes <1> (weight: 8), <2> (weight: 8), <6> (weight: 10), <5> (weight: 9).\nNode <6> is connected to nodes <3> (weight: 6), <1> (weight: 10), <2> (weight: 10), <0> (weight: 0).\n\nCalculate the maximum flow between node <3> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "24",
        "type": "maximum_flow"
    },
    {
        "index": 284,
        "question": "Given a directed graph:\nNode <5> is connected to node <0> (weight: 1).\nNode <0> is connected to nodes <4> (weight: 6), <2> (weight: 10), <6> (weight: 5), <3> (weight: 9), <5> (weight: 0).\nNode <4> is connected to nodes <6> (weight: 7), <3> (weight: 7), <0> (weight: 0).\nNode <2> is connected to nodes <1> (weight: 2), <3> (weight: 5).\nNode <6> is connected to nodes <0> (weight: 2), <2> (weight: 2), <1> (weight: 8).\nNode <3> is connected to nodes <0> (weight: 7), <6> (weight: 10).\nNode <1> is connected to nodes <6> (weight: 3), <5> (weight: 1), <0> (weight: 5), <4> (weight: 4), <2> (weight: 2).\n\nCalculate the maximum flow between node <5> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "1",
        "type": "maximum_flow"
    },
    {
        "index": 285,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3> (weight: 3), <0> (weight: 1), <1> (weight: 3), <2> (weight: 0).\nNode <3> is connected to node <2> (weight: 5).\nNode <0> is connected to nodes <2> (weight: 8), <1> (weight: 10), <3> (weight: 10), <4> (weight: 0).\nNode <1> is connected to nodes <2> (weight: 1), <4> (weight: 0), <0> (weight: 0).\nNode <2> is connected to nodes <4> (weight: 8), <0> (weight: 1), <3> (weight: 0).\n\nCalculate the maximum flow between node <3> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "5",
        "type": "maximum_flow"
    },
    {
        "index": 286,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <5> (weight: 2), <2> (weight: 1), <1> (weight: 5).\nNode <5> is connected to nodes <1> (weight: 1), <4> (weight: 7).\nNode <2> is connected to nodes <0> (weight: 2), <4> (weight: 7), <3> (weight: 10).\nNode <1> is connected to nodes <0> (weight: 3), <4> (weight: 8), <3> (weight: 2), <6> (weight: 9), <5> (weight: 0).\nNode <0> is connected to nodes <4> (weight: 5), <5> (weight: 10), <1> (weight: 5), <2> (weight: 0).\nNode <3> is connected to nodes <6> (weight: 2), <1> (weight: 9).\nNode <6> is connected to node <4> (weight: 9).\n\nCalculate the maximum flow between node <5> and node <0> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "4",
        "type": "maximum_flow"
    },
    {
        "index": 287,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2> (weight: 3), <3> (weight: 6), <1> (weight: 0).\nNode <2> is connected to nodes <1> (weight: 4), <0> (weight: 3), <4> (weight: 0).\nNode <3> is connected to nodes <1> (weight: 5), <0> (weight: 0).\nNode <1> is connected to nodes <0> (weight: 9), <4> (weight: 6), <2> (weight: 4).\nNode <4> is connected to nodes <2> (weight: 2), <1> (weight: 9).\n\nCalculate the maximum flow between node <4> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "6",
        "type": "maximum_flow"
    },
    {
        "index": 288,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1> (weight: 4), <3> (weight: 4), <4> (weight: 6).\nNode <1> is connected to nodes <4> (weight: 5), <0> (weight: 0).\nNode <4> is connected to nodes <2> (weight: 5), <0> (weight: 10), <1> (weight: 3).\nNode <2> is connected to nodes <0> (weight: 5), <3> (weight: 3).\n\nCalculate the maximum flow between node <4> and node <1> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "7",
        "type": "maximum_flow"
    },
    {
        "index": 289,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4> (weight: 10), <3> (weight: 5), <2> (weight: 8).\nNode <4> is connected to nodes <5> (weight: 7), <3> (weight: 8), <2> (weight: 8), <0> (weight: 0).\nNode <3> is connected to nodes <1> (weight: 9), <0> (weight: 0).\nNode <2> is connected to nodes <1> (weight: 1), <0> (weight: 4), <4> (weight: 8), <5> (weight: 6).\nNode <5> is connected to nodes <2> (weight: 9), <4> (weight: 4), <0> (weight: 0).\nNode <0> is connected to nodes <4> (weight: 7), <5> (weight: 6), <3> (weight: 2), <2> (weight: 5).\n\nCalculate the maximum flow between node <0> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "20",
        "type": "maximum_flow"
    },
    {
        "index": 290,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2> (weight: 6), <1> (weight: 7).\nNode <2> is connected to nodes <1> (weight: 8), <0> (weight: 7), <3> (weight: 2), <4> (weight: 9).\nNode <1> is connected to nodes <0> (weight: 10), <2> (weight: 1).\nNode <0> is connected to nodes <2> (weight: 8), <1> (weight: 0).\nNode <3> is connected to nodes <4> (weight: 1), <2> (weight: 4), <0> (weight: 2).\n\nCalculate the maximum flow between node <1> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "9",
        "type": "maximum_flow"
    },
    {
        "index": 291,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2> (weight: 8), <0> (weight: 3).\nNode <2> is connected to nodes <0> (weight: 1), <1> (weight: 5), <3> (weight: 5).\nNode <0> is connected to nodes <3> (weight: 2), <2> (weight: 6), <1> (weight: 0).\nNode <3> is connected to nodes <4> (weight: 10), <0> (weight: 8), <2> (weight: 0).\nNode <4> is connected to node <3> (weight: 9).\n\nCalculate the maximum flow between node <1> and node <4> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "7",
        "type": "maximum_flow"
    },
    {
        "index": 292,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <1> (weight: 5), <3> (weight: 7), <2> (weight: 8), <0> (weight: 0), <4> (weight: 0).\nNode <3> is connected to nodes <6> (weight: 2), <5> (weight: 5).\nNode <2> is connected to nodes <6> (weight: 8), <4> (weight: 5), <5> (weight: 6), <1> (weight: 1).\nNode <5> is connected to nodes <0> (weight: 8), <1> (weight: 6).\nNode <4> is connected to nodes <5> (weight: 3), <6> (weight: 1), <0> (weight: 0).\nNode <0> is connected to nodes <6> (weight: 6), <4> (weight: 2), <5> (weight: 0).\n\nCalculate the maximum flow between node <5> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "7",
        "type": "maximum_flow"
    },
    {
        "index": 293,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4> (weight: 10), <2> (weight: 6), <0> (weight: 0), <1> (weight: 0).\nNode <4> is connected to nodes <1> (weight: 10), <2> (weight: 9), <0> (weight: 0).\nNode <2> is connected to nodes <3> (weight: 9), <4> (weight: 6), <1> (weight: 5), <0> (weight: 0).\nNode <1> is connected to nodes <2> (weight: 2), <3> (weight: 7), <4> (weight: 1).\nNode <0> is connected to nodes <2> (weight: 9), <3> (weight: 6), <4> (weight: 7).\n\nCalculate the maximum flow between node <0> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "22",
        "type": "maximum_flow"
    },
    {
        "index": 294,
        "question": "Given a directed graph:\nNode <1> is connected to node <5> (weight: 6).\nNode <5> is connected to nodes <4> (weight: 9), <2> (weight: 10).\nNode <4> is connected to node <0> (weight: 4).\nNode <2> is connected to nodes <3> (weight: 2), <5> (weight: 0).\nNode <0> is connected to nodes <4> (weight: 2), <5> (weight: 1).\nNode <3> is connected to nodes <2> (weight: 6), <5> (weight: 1), <1> (weight: 4).\n\nCalculate the maximum flow between node <5> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "10",
        "type": "maximum_flow"
    },
    {
        "index": 295,
        "question": "Given a directed graph:\nNode <0> is connected to node <3> (weight: 8).\nNode <3> is connected to nodes <4> (weight: 8), <0> (weight: 4), <1> (weight: 9).\nNode <4> is connected to nodes <0> (weight: 4), <1> (weight: 9), <3> (weight: 10).\nNode <1> is connected to node <2> (weight: 5).\nNode <2> is connected to nodes <0> (weight: 7), <1> (weight: 0).\n\nCalculate the maximum flow between node <1> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "5",
        "type": "maximum_flow"
    },
    {
        "index": 296,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3> (weight: 1), <4> (weight: 6), <2> (weight: 1).\nNode <3> is connected to nodes <2> (weight: 10), <0> (weight: 8), <5> (weight: 4).\nNode <4> is connected to nodes <2> (weight: 8), <5> (weight: 4).\nNode <2> is connected to node <4> (weight: 0).\nNode <0> is connected to node <3> (weight: 9).\nNode <5> is connected to node <4> (weight: 9).\n\nCalculate the maximum flow between node <5> and node <2> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "8",
        "type": "maximum_flow"
    },
    {
        "index": 297,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5> (weight: 9), <3> (weight: 10), <2> (weight: 4), <1> (weight: 1), <4> (weight: 0).\nNode <5> is connected to node <0> (weight: 0).\nNode <3> is connected to nodes <4> (weight: 6), <0> (weight: 8), <2> (weight: 0).\nNode <2> is connected to nodes <3> (weight: 10), <4> (weight: 1).\nNode <1> is connected to nodes <3> (weight: 2), <2> (weight: 10).\nNode <4> is connected to nodes <0> (weight: 6), <2> (weight: 0).\n\nCalculate the maximum flow between node <2> and node <5> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "9",
        "type": "maximum_flow"
    },
    {
        "index": 298,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5> (weight: 5), <3> (weight: 1), <0> (weight: 1).\nNode <5> is connected to nodes <3> (weight: 5), <6> (weight: 6), <0> (weight: 0).\nNode <3> is connected to node <1> (weight: 7).\nNode <0> is connected to nodes <1> (weight: 5), <5> (weight: 1).\nNode <6> is connected to nodes <4> (weight: 5), <1> (weight: 0), <5> (weight: 0).\nNode <1> is connected to nodes <6> (weight: 4), <0> (weight: 7).\n\nCalculate the maximum flow between node <0> and node <6> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "5",
        "type": "maximum_flow"
    },
    {
        "index": 299,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1> (weight: 1), <3> (weight: 1).\nNode <1> is connected to nodes <0> (weight: 10), <2> (weight: 3).\nNode <3> is connected to nodes <0> (weight: 10), <2> (weight: 0).\nNode <0> is connected to nodes <3> (weight: 9), <2> (weight: 1), <1> (weight: 4), <4> (weight: 10).\nNode <4> is connected to node <3> (weight: 2).\n\nCalculate the maximum flow between node <2> and node <3> in this graph. Given a directed graph with capacities assigned to its edges, the maximum flow from a source node to a sink node is the maximum amount of flow that can be sent from the source to the sink, respecting the capacity constraints on each edge. The goal is to find the optimal way to route flow through the network to maximize the flow from source to sink.\nAnswer:\n",
        "answer": "2",
        "type": "maximum_flow"
    },
    {
        "index": 0,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <4>, <6>.\nNode <0> is connected to node <5>.\nNode <4> is connected to nodes <5>, <2>.\nNode <6> is connected to node <5>.\nNode <2> is connected to nodes <4>, <3>, <1>.\nNode <3> is connected to node <2>.\nNode <1> is connected to node <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "25",
        "type": "MST"
    },
    {
        "index": 1,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <5>, <1>.\nNode <3> is connected to nodes <5>, <2>, <0>.\nNode <1> is connected to nodes <4>, <0>.\nNode <2> is connected to node <3>.\nNode <0> is connected to nodes <3>, <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "28",
        "type": "MST"
    },
    {
        "index": 2,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <1>, <2>, <0>.\nNode <3> is connected to node <4>.\nNode <1> is connected to node <4>.\nNode <2> is connected to node <4>.\nNode <0> is connected to node <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "31",
        "type": "MST"
    },
    {
        "index": 3,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <5>, <6>, <1>.\nNode <0> is connected to nodes <3>, <2>.\nNode <5> is connected to node <3>.\nNode <6> is connected to nodes <3>, <4>.\nNode <1> is connected to node <3>.\nNode <2> is connected to node <0>.\nNode <4> is connected to node <6>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "41",
        "type": "MST"
    },
    {
        "index": 4,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <1>.\nNode <5> is connected to nodes <4>, <0>.\nNode <1> is connected to nodes <4>, <2>.\nNode <0> is connected to nodes <5>, <3>.\nNode <2> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <0>, <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "29",
        "type": "MST"
    },
    {
        "index": 5,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <3>, <5>, <4>, <2>.\nNode <1> is connected to nodes <0>, <3>, <5>, <2>.\nNode <3> is connected to nodes <0>, <1>, <4>, <2>.\nNode <5> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <0>, <3>.\nNode <2> is connected to nodes <0>, <1>, <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "22",
        "type": "MST"
    },
    {
        "index": 6,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <1>, <5>.\nNode <2> is connected to nodes <0>, <3>, <1>, <5>.\nNode <3> is connected to nodes <0>, <2>, <4>, <1>, <5>.\nNode <1> is connected to nodes <0>, <2>, <3>, <4>.\nNode <5> is connected to nodes <0>, <2>, <3>, <4>.\nNode <4> is connected to nodes <3>, <1>, <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "19",
        "type": "MST"
    },
    {
        "index": 7,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <2>, <3>.\nNode <0> is connected to nodes <5>, <1>.\nNode <2> is connected to nodes <5>, <4>, <1>.\nNode <3> is connected to node <5>.\nNode <1> is connected to nodes <0>, <2>.\nNode <4> is connected to node <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "32",
        "type": "MST"
    },
    {
        "index": 8,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <0>, <5>.\nNode <2> is connected to nodes <1>, <4>.\nNode <0> is connected to nodes <1>, <4>.\nNode <5> is connected to nodes <1>, <3>.\nNode <4> is connected to nodes <2>, <0>.\nNode <3> is connected to node <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "20",
        "type": "MST"
    },
    {
        "index": 9,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <5>.\nNode <0> is connected to nodes <1>, <4>, <2>, <5>, <3>.\nNode <5> is connected to nodes <1>, <0>, <4>, <2>, <3>.\nNode <4> is connected to nodes <0>, <5>, <2>, <3>.\nNode <2> is connected to nodes <0>, <5>, <4>.\nNode <3> is connected to nodes <0>, <5>, <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "23",
        "type": "MST"
    },
    {
        "index": 10,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <2>, <4>, <0>, <5>.\nNode <2> is connected to nodes <6>, <3>, <1>.\nNode <4> is connected to nodes <6>, <5>.\nNode <0> is connected to nodes <6>, <1>.\nNode <5> is connected to nodes <6>, <4>, <3>.\nNode <3> is connected to nodes <2>, <5>, <1>.\nNode <1> is connected to nodes <2>, <0>, <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "39",
        "type": "MST"
    },
    {
        "index": 11,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <0>, <6>, <2>.\nNode <4> is connected to nodes <5>, <0>, <3>.\nNode <0> is connected to nodes <5>, <4>, <2>, <6>.\nNode <6> is connected to nodes <5>, <0>, <1>, <3>.\nNode <2> is connected to nodes <5>, <0>.\nNode <3> is connected to nodes <4>, <6>.\nNode <1> is connected to node <6>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "25",
        "type": "MST"
    },
    {
        "index": 12,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <5>.\nNode <4> is connected to node <2>.\nNode <5> is connected to nodes <2>, <1>, <3>.\nNode <1> is connected to nodes <5>, <0>.\nNode <3> is connected to node <5>.\nNode <0> is connected to node <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "28",
        "type": "MST"
    },
    {
        "index": 13,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <5>, <0>.\nNode <5> is connected to nodes <6>, <1>, <4>.\nNode <0> is connected to node <6>.\nNode <1> is connected to nodes <5>, <2>.\nNode <4> is connected to nodes <5>, <3>.\nNode <2> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <4>, <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "27",
        "type": "MST"
    },
    {
        "index": 14,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <0>.\nNode <2> is connected to node <3>.\nNode <0> is connected to nodes <3>, <1>, <4>.\nNode <1> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <0>, <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "20",
        "type": "MST"
    },
    {
        "index": 15,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <4>, <3>.\nNode <5> is connected to nodes <2>, <0>, <4>.\nNode <4> is connected to nodes <2>, <5>.\nNode <3> is connected to nodes <2>, <1>.\nNode <0> is connected to node <5>.\nNode <1> is connected to node <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "27",
        "type": "MST"
    },
    {
        "index": 16,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <5>, <3>.\nNode <1> is connected to nodes <5>, <2>.\nNode <3> is connected to nodes <4>, <0>.\nNode <2> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <3>, <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "29",
        "type": "MST"
    },
    {
        "index": 17,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>, <5>, <1>.\nNode <2> is connected to nodes <0>, <3>, <6>.\nNode <4> is connected to nodes <0>, <3>, <5>, <6>, <1>.\nNode <5> is connected to nodes <0>, <4>, <6>, <1>.\nNode <1> is connected to nodes <0>, <4>, <5>, <3>, <6>.\nNode <3> is connected to nodes <2>, <4>, <1>, <6>.\nNode <6> is connected to nodes <2>, <4>, <5>, <1>, <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "11",
        "type": "MST"
    },
    {
        "index": 18,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <0>, <3>, <6>.\nNode <4> is connected to nodes <0>, <6>.\nNode <3> is connected to nodes <5>, <2>.\nNode <6> is connected to nodes <5>, <4>.\nNode <2> is connected to nodes <3>, <1>.\nNode <1> is connected to node <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "23",
        "type": "MST"
    },
    {
        "index": 19,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <5>, <6>, <4>, <1>.\nNode <0> is connected to nodes <2>, <6>, <4>, <1>.\nNode <5> is connected to nodes <2>, <3>, <6>, <4>, <1>.\nNode <6> is connected to nodes <2>, <0>, <5>, <3>, <4>.\nNode <4> is connected to nodes <2>, <0>, <5>, <6>, <1>.\nNode <1> is connected to nodes <2>, <0>, <5>, <4>, <3>.\nNode <3> is connected to nodes <5>, <6>, <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "12",
        "type": "MST"
    },
    {
        "index": 20,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <2>, <0>.\nNode <4> is connected to nodes <2>, <1>.\nNode <0> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <4>, <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "28",
        "type": "MST"
    },
    {
        "index": 21,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <1>, <0>.\nNode <4> is connected to node <2>.\nNode <1> is connected to nodes <2>, <3>.\nNode <0> is connected to node <2>.\nNode <3> is connected to node <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "23",
        "type": "MST"
    },
    {
        "index": 22,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <5>, <4>, <3>, <0>.\nNode <2> is connected to nodes <1>, <5>, <4>, <0>.\nNode <5> is connected to nodes <1>, <2>, <4>, <3>, <6>, <0>.\nNode <4> is connected to nodes <1>, <2>, <5>, <3>, <6>, <0>.\nNode <3> is connected to nodes <1>, <5>, <4>, <6>.\nNode <0> is connected to nodes <1>, <2>, <5>, <4>, <6>.\nNode <6> is connected to nodes <5>, <4>, <3>, <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "12",
        "type": "MST"
    },
    {
        "index": 23,
        "question": "Given an undirected graph:\nNode <0> is connected to node <5>.\nNode <5> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <5>, <1>.\nNode <1> is connected to nodes <3>, <4>, <2>.\nNode <4> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <1>, <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "30",
        "type": "MST"
    },
    {
        "index": 24,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <4>, <1>, <3>.\nNode <0> is connected to nodes <2>, <4>, <5>, <1>.\nNode <4> is connected to nodes <2>, <0>, <5>, <1>, <3>.\nNode <1> is connected to nodes <2>, <0>, <4>, <5>, <3>.\nNode <3> is connected to nodes <2>, <4>, <1>.\nNode <5> is connected to nodes <0>, <4>, <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "15",
        "type": "MST"
    },
    {
        "index": 25,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <3>, <5>, <1>.\nNode <0> is connected to nodes <2>, <3>, <5>, <1>, <4>.\nNode <3> is connected to nodes <2>, <0>, <5>, <1>, <4>.\nNode <5> is connected to nodes <2>, <0>, <3>.\nNode <1> is connected to nodes <2>, <0>, <3>, <4>.\nNode <4> is connected to nodes <0>, <3>, <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "19",
        "type": "MST"
    },
    {
        "index": 26,
        "question": "Given an undirected graph:\nNode <0> is connected to node <2>.\nNode <2> is connected to nodes <0>, <4>, <3>.\nNode <4> is connected to nodes <2>, <1>.\nNode <3> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <4>, <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "19",
        "type": "MST"
    },
    {
        "index": 27,
        "question": "Given an undirected graph:\nNode <0> is connected to node <3>.\nNode <3> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <3>, <2>, <1>.\nNode <2> is connected to node <4>.\nNode <1> is connected to node <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "21",
        "type": "MST"
    },
    {
        "index": 28,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <4>, <0>.\nNode <3> is connected to nodes <4>, <1>.\nNode <0> is connected to node <2>.\nNode <1> is connected to node <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "23",
        "type": "MST"
    },
    {
        "index": 29,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <3>, <0>.\nNode <5> is connected to nodes <1>, <3>, <4>, <2>, <0>.\nNode <3> is connected to nodes <1>, <5>, <4>, <2>, <0>.\nNode <0> is connected to nodes <1>, <5>, <3>, <2>.\nNode <4> is connected to nodes <5>, <3>, <2>.\nNode <2> is connected to nodes <5>, <3>, <0>, <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "15",
        "type": "MST"
    },
    {
        "index": 30,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <2>.\nNode <5> is connected to nodes <0>, <4>.\nNode <2> is connected to nodes <0>, <3>.\nNode <4> is connected to nodes <5>, <1>.\nNode <3> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <4>, <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "25",
        "type": "MST"
    },
    {
        "index": 31,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <1>, <0>.\nNode <5> is connected to nodes <3>, <2>.\nNode <1> is connected to node <3>.\nNode <0> is connected to nodes <3>, <4>.\nNode <2> is connected to node <5>.\nNode <4> is connected to node <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "31",
        "type": "MST"
    },
    {
        "index": 32,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <1>, <2>, <0>.\nNode <5> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <4>, <5>, <0>, <3>.\nNode <2> is connected to nodes <4>, <6>, <0>, <3>.\nNode <0> is connected to nodes <4>, <1>, <2>, <3>.\nNode <3> is connected to nodes <1>, <2>, <0>, <6>.\nNode <6> is connected to nodes <2>, <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "19",
        "type": "MST"
    },
    {
        "index": 33,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <5>, <2>, <3>.\nNode <1> is connected to nodes <0>, <5>, <2>, <3>, <4>.\nNode <5> is connected to nodes <0>, <1>, <2>, <3>, <4>.\nNode <2> is connected to nodes <0>, <1>, <5>, <4>.\nNode <3> is connected to nodes <0>, <1>, <5>, <4>.\nNode <4> is connected to nodes <1>, <5>, <2>, <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "16",
        "type": "MST"
    },
    {
        "index": 34,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <5>, <1>, <0>.\nNode <4> is connected to nodes <2>, <5>, <3>, <1>, <0>.\nNode <5> is connected to nodes <2>, <4>, <1>, <0>.\nNode <1> is connected to nodes <2>, <4>, <5>, <3>, <0>.\nNode <0> is connected to nodes <2>, <4>, <5>, <1>, <3>.\nNode <3> is connected to nodes <4>, <1>, <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "18",
        "type": "MST"
    },
    {
        "index": 35,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>, <3>, <1>.\nNode <2> is connected to nodes <0>, <3>.\nNode <4> is connected to node <0>.\nNode <3> is connected to nodes <0>, <2>.\nNode <1> is connected to node <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "23",
        "type": "MST"
    },
    {
        "index": 36,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <3>, <0>, <4>, <6>.\nNode <5> is connected to nodes <2>, <0>, <4>, <6>, <1>.\nNode <3> is connected to nodes <2>, <4>, <6>, <1>.\nNode <0> is connected to nodes <2>, <5>, <4>, <1>.\nNode <4> is connected to nodes <2>, <5>, <3>, <0>, <6>, <1>.\nNode <6> is connected to nodes <2>, <5>, <3>, <4>.\nNode <1> is connected to nodes <5>, <3>, <0>, <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "15",
        "type": "MST"
    },
    {
        "index": 37,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <6>, <3>, <2>, <0>, <4>, <5>.\nNode <6> is connected to nodes <1>, <3>, <2>, <4>, <5>.\nNode <3> is connected to nodes <1>, <6>, <2>, <0>.\nNode <2> is connected to nodes <1>, <6>, <3>, <4>.\nNode <0> is connected to nodes <1>, <3>, <5>.\nNode <4> is connected to nodes <1>, <6>, <2>, <5>.\nNode <5> is connected to nodes <1>, <6>, <0>, <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "10",
        "type": "MST"
    },
    {
        "index": 38,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <2>.\nNode <0> is connected to node <4>.\nNode <2> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <2>, <1>, <5>.\nNode <1> is connected to node <3>.\nNode <5> is connected to node <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "25",
        "type": "MST"
    },
    {
        "index": 39,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <3>, <1>, <2>.\nNode <4> is connected to nodes <5>, <0>, <3>, <1>.\nNode <3> is connected to nodes <5>, <4>, <0>, <2>.\nNode <1> is connected to nodes <5>, <4>, <0>, <2>.\nNode <2> is connected to nodes <5>, <3>, <1>, <0>.\nNode <0> is connected to nodes <4>, <3>, <1>, <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "15",
        "type": "MST"
    },
    {
        "index": 40,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <3>, <5>, <4>.\nNode <4> is connected to nodes <3>, <2>, <0>, <5>, <6>.\nNode <5> is connected to nodes <2>, <4>, <0>, <1>, <6>.\nNode <0> is connected to nodes <4>, <5>, <1>, <6>.\nNode <6> is connected to nodes <4>, <0>, <5>, <1>.\nNode <1> is connected to nodes <0>, <5>, <6>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "20",
        "type": "MST"
    },
    {
        "index": 41,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <5>, <1>, <2>.\nNode <3> is connected to node <4>.\nNode <5> is connected to nodes <4>, <0>.\nNode <1> is connected to node <4>.\nNode <2> is connected to node <4>.\nNode <0> is connected to node <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "29",
        "type": "MST"
    },
    {
        "index": 42,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <5>, <0>, <1>.\nNode <3> is connected to nodes <4>, <5>, <2>, <0>.\nNode <5> is connected to nodes <4>, <3>, <2>, <0>, <1>.\nNode <0> is connected to nodes <4>, <3>, <5>, <2>, <1>.\nNode <1> is connected to nodes <4>, <5>, <0>, <2>.\nNode <2> is connected to nodes <3>, <5>, <0>, <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "13",
        "type": "MST"
    },
    {
        "index": 43,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <3>, <0>, <5>.\nNode <1> is connected to node <3>.\nNode <0> is connected to nodes <4>, <2>.\nNode <5> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <0>, <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "20",
        "type": "MST"
    },
    {
        "index": 44,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <4>, <1>.\nNode <2> is connected to nodes <4>, <3>.\nNode <1> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <2>, <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "21",
        "type": "MST"
    },
    {
        "index": 45,
        "question": "Given an undirected graph:\nNode <6> is connected to node <1>.\nNode <1> is connected to nodes <6>, <2>.\nNode <2> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <2>, <5>, <4>.\nNode <5> is connected to nodes <0>, <3>, <4>.\nNode <4> is connected to nodes <0>, <5>.\nNode <3> is connected to node <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "21",
        "type": "MST"
    },
    {
        "index": 46,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <2>, <4>.\nNode <0> is connected to node <1>.\nNode <2> is connected to nodes <1>, <5>, <3>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <2>.\nNode <3> is connected to node <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "31",
        "type": "MST"
    },
    {
        "index": 47,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <1>, <3>.\nNode <2> is connected to nodes <0>, <4>.\nNode <1> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "28",
        "type": "MST"
    },
    {
        "index": 48,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <3>, <2>, <5>.\nNode <0> is connected to nodes <1>, <2>, <4>, <5>.\nNode <3> is connected to nodes <1>, <2>, <4>, <5>.\nNode <2> is connected to nodes <1>, <0>, <3>, <4>.\nNode <5> is connected to nodes <1>, <0>, <3>.\nNode <4> is connected to nodes <0>, <3>, <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "17",
        "type": "MST"
    },
    {
        "index": 49,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <6>.\nNode <3> is connected to nodes <2>, <4>, <0>.\nNode <6> is connected to nodes <2>, <1>.\nNode <4> is connected to nodes <3>, <5>.\nNode <0> is connected to nodes <3>, <5>.\nNode <1> is connected to node <6>.\nNode <5> is connected to nodes <4>, <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "33",
        "type": "MST"
    },
    {
        "index": 50,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>, <1>, <3>.\nNode <4> is connected to nodes <0>, <2>, <1>, <3>.\nNode <5> is connected to nodes <0>, <2>, <1>, <3>.\nNode <1> is connected to nodes <0>, <4>, <5>, <2>, <3>.\nNode <3> is connected to nodes <0>, <4>, <5>, <1>.\nNode <2> is connected to nodes <4>, <5>, <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "9",
        "type": "MST"
    },
    {
        "index": 51,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <2>, <1>, <4>.\nNode <4> is connected to nodes <2>, <0>, <3>.\nNode <1> is connected to node <0>.\nNode <3> is connected to node <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "23",
        "type": "MST"
    },
    {
        "index": 52,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <0>, <4>, <1>.\nNode <1> is connected to nodes <2>, <5>.\nNode <5> is connected to nodes <1>, <3>.\nNode <3> is connected to node <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "23",
        "type": "MST"
    },
    {
        "index": 53,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <3>, <5>, <0>.\nNode <4> is connected to nodes <1>, <2>, <5>.\nNode <3> is connected to nodes <1>, <5>.\nNode <5> is connected to nodes <1>, <4>, <3>, <2>, <6>, <0>.\nNode <0> is connected to nodes <1>, <5>, <6>.\nNode <2> is connected to nodes <4>, <5>, <6>.\nNode <6> is connected to nodes <5>, <0>, <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "13",
        "type": "MST"
    },
    {
        "index": 54,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <1>, <2>.\nNode <0> is connected to nodes <4>, <3>.\nNode <1> is connected to node <4>.\nNode <2> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <0>, <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "21",
        "type": "MST"
    },
    {
        "index": 55,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <0>, <1>.\nNode <3> is connected to nodes <4>, <2>, <1>, <5>.\nNode <0> is connected to nodes <4>, <2>, <1>, <5>.\nNode <1> is connected to nodes <4>, <3>, <0>, <2>, <5>.\nNode <2> is connected to nodes <3>, <0>, <1>, <5>.\nNode <5> is connected to nodes <3>, <0>, <1>, <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "16",
        "type": "MST"
    },
    {
        "index": 56,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <0>, <1>, <3>.\nNode <5> is connected to nodes <2>, <0>, <1>, <3>, <4>.\nNode <0> is connected to nodes <2>, <5>, <1>, <3>.\nNode <1> is connected to nodes <2>, <5>, <0>, <3>, <4>.\nNode <3> is connected to nodes <2>, <5>, <0>, <1>, <4>.\nNode <4> is connected to nodes <5>, <1>, <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "11",
        "type": "MST"
    },
    {
        "index": 57,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <4>, <1>, <0>.\nNode <2> is connected to nodes <5>, <3>, <4>, <1>.\nNode <4> is connected to nodes <5>, <2>, <3>, <1>, <0>.\nNode <1> is connected to nodes <5>, <2>, <4>, <3>, <0>.\nNode <0> is connected to nodes <5>, <4>, <1>, <3>.\nNode <3> is connected to nodes <2>, <4>, <1>, <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "21",
        "type": "MST"
    },
    {
        "index": 58,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <1>, <5>, <2>.\nNode <4> is connected to nodes <0>, <3>, <1>, <2>.\nNode <1> is connected to nodes <0>, <4>, <3>, <5>, <2>.\nNode <5> is connected to nodes <0>, <1>, <3>, <2>.\nNode <2> is connected to nodes <0>, <4>, <1>, <5>, <3>.\nNode <3> is connected to nodes <4>, <1>, <5>, <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "9",
        "type": "MST"
    },
    {
        "index": 59,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <4>, <0>, <2>.\nNode <2> is connected to nodes <3>, <5>.\nNode <5> is connected to nodes <2>, <1>.\nNode <1> is connected to node <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "19",
        "type": "MST"
    },
    {
        "index": 60,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <5>, <0>, <1>.\nNode <2> is connected to nodes <4>, <5>, <0>.\nNode <5> is connected to nodes <4>, <2>, <0>, <1>.\nNode <0> is connected to nodes <4>, <2>, <5>, <3>, <1>.\nNode <1> is connected to nodes <4>, <5>, <0>, <3>.\nNode <3> is connected to nodes <0>, <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "25",
        "type": "MST"
    },
    {
        "index": 61,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <4>, <0>.\nNode <2> is connected to nodes <3>, <0>, <1>.\nNode <4> is connected to node <3>.\nNode <0> is connected to nodes <3>, <2>.\nNode <1> is connected to node <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "6",
        "type": "MST"
    },
    {
        "index": 62,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <6>, <1>, <4>.\nNode <6> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <2>, <0>.\nNode <4> is connected to nodes <2>, <6>.\nNode <0> is connected to nodes <1>, <5>.\nNode <5> is connected to nodes <0>, <3>.\nNode <3> is connected to node <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "24",
        "type": "MST"
    },
    {
        "index": 63,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <1>, <4>.\nNode <2> is connected to nodes <0>, <5>.\nNode <1> is connected to nodes <0>, <3>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <2>.\nNode <3> is connected to node <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "26",
        "type": "MST"
    },
    {
        "index": 64,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <5>, <0>, <1>.\nNode <2> is connected to nodes <3>, <4>.\nNode <5> is connected to node <3>.\nNode <0> is connected to node <3>.\nNode <1> is connected to node <3>.\nNode <4> is connected to node <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "24",
        "type": "MST"
    },
    {
        "index": 65,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <0>.\nNode <3> is connected to node <1>.\nNode <0> is connected to nodes <1>, <5>.\nNode <5> is connected to nodes <0>, <4>, <2>.\nNode <4> is connected to nodes <5>, <6>.\nNode <2> is connected to node <5>.\nNode <6> is connected to node <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "28",
        "type": "MST"
    },
    {
        "index": 66,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <0>.\nNode <5> is connected to nodes <2>, <1>.\nNode <0> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <5>, <6>.\nNode <4> is connected to nodes <0>, <6>, <3>.\nNode <6> is connected to nodes <1>, <4>.\nNode <3> is connected to node <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "27",
        "type": "MST"
    },
    {
        "index": 67,
        "question": "Given an undirected graph:\nNode <2> is connected to node <0>.\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <3> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <0>, <3>, <1>.\nNode <1> is connected to node <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "9",
        "type": "MST"
    },
    {
        "index": 68,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <3>, <5>, <1>, <2>.\nNode <4> is connected to nodes <3>, <2>.\nNode <5> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <0>, <5>, <2>.\nNode <2> is connected to nodes <0>, <4>, <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "27",
        "type": "MST"
    },
    {
        "index": 69,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <4>, <3>, <5>, <1>, <2>.\nNode <4> is connected to nodes <6>, <3>, <5>, <2>.\nNode <3> is connected to nodes <6>, <4>, <0>, <1>, <2>.\nNode <5> is connected to nodes <6>, <4>, <0>, <1>, <2>.\nNode <1> is connected to nodes <6>, <3>, <5>.\nNode <2> is connected to nodes <6>, <4>, <3>, <5>.\nNode <0> is connected to nodes <3>, <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "20",
        "type": "MST"
    },
    {
        "index": 70,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <0>, <3>.\nNode <2> is connected to nodes <1>, <4>.\nNode <0> is connected to nodes <1>, <4>.\nNode <3> is connected to nodes <1>, <6>.\nNode <4> is connected to nodes <2>, <0>.\nNode <6> is connected to nodes <3>, <5>.\nNode <5> is connected to node <6>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "28",
        "type": "MST"
    },
    {
        "index": 71,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <2>, <3>.\nNode <0> is connected to nodes <2>, <1>, <5>.\nNode <3> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <0>, <3>.\nNode <5> is connected to node <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "24",
        "type": "MST"
    },
    {
        "index": 72,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <0>, <2>.\nNode <1> is connected to nodes <4>, <2>.\nNode <0> is connected to nodes <4>, <3>.\nNode <2> is connected to nodes <4>, <1>.\nNode <3> is connected to node <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "16",
        "type": "MST"
    },
    {
        "index": 73,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <6>, <0>, <3>.\nNode <5> is connected to node <1>.\nNode <6> is connected to nodes <1>, <2>.\nNode <0> is connected to nodes <1>, <4>.\nNode <3> is connected to nodes <1>, <4>.\nNode <2> is connected to node <6>.\nNode <4> is connected to nodes <0>, <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "21",
        "type": "MST"
    },
    {
        "index": 74,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <6>, <1>, <2>, <5>.\nNode <6> is connected to nodes <0>, <5>, <2>, <3>.\nNode <1> is connected to node <0>.\nNode <2> is connected to nodes <0>, <6>, <3>.\nNode <5> is connected to nodes <0>, <6>, <4>.\nNode <3> is connected to nodes <6>, <2>, <4>.\nNode <4> is connected to nodes <5>, <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "32",
        "type": "MST"
    },
    {
        "index": 75,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <6>, <2>, <3>, <4>, <1>.\nNode <6> is connected to node <5>.\nNode <2> is connected to node <5>.\nNode <3> is connected to nodes <5>, <0>.\nNode <4> is connected to node <5>.\nNode <1> is connected to node <5>.\nNode <0> is connected to node <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "28",
        "type": "MST"
    },
    {
        "index": 76,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <3>, <0>, <4>.\nNode <5> is connected to nodes <2>, <1>, <0>, <4>.\nNode <3> is connected to nodes <2>, <1>.\nNode <0> is connected to nodes <2>, <5>, <4>.\nNode <4> is connected to nodes <2>, <5>, <0>, <1>.\nNode <1> is connected to nodes <5>, <3>, <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "10",
        "type": "MST"
    },
    {
        "index": 77,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <0>, <2>, <1>.\nNode <1> is connected to nodes <3>, <5>.\nNode <5> is connected to nodes <1>, <4>.\nNode <4> is connected to node <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "18",
        "type": "MST"
    },
    {
        "index": 78,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <3>, <0>, <2>.\nNode <1> is connected to node <3>.\nNode <0> is connected to node <4>.\nNode <2> is connected to nodes <4>, <6>, <5>.\nNode <6> is connected to nodes <2>, <5>.\nNode <5> is connected to nodes <2>, <6>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "26",
        "type": "MST"
    },
    {
        "index": 79,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <4>, <1>.\nNode <0> is connected to nodes <3>, <2>.\nNode <4> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to node <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "24",
        "type": "MST"
    },
    {
        "index": 80,
        "question": "Given an undirected graph:\nNode <0> is connected to node <4>.\nNode <4> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <4>, <2>, <5>.\nNode <2> is connected to nodes <1>, <3>.\nNode <5> is connected to node <1>.\nNode <3> is connected to node <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "31",
        "type": "MST"
    },
    {
        "index": 81,
        "question": "Given an undirected graph:\nNode <0> is connected to node <2>.\nNode <2> is connected to nodes <0>, <6>, <4>, <3>, <1>.\nNode <6> is connected to nodes <2>, <5>.\nNode <4> is connected to node <2>.\nNode <3> is connected to node <2>.\nNode <1> is connected to node <2>.\nNode <5> is connected to node <6>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "25",
        "type": "MST"
    },
    {
        "index": 82,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <3>, <4>, <1>, <5>.\nNode <5> is connected to nodes <3>, <2>, <6>.\nNode <4> is connected to node <2>.\nNode <1> is connected to nodes <2>, <0>.\nNode <6> is connected to node <5>.\nNode <0> is connected to node <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "33",
        "type": "MST"
    },
    {
        "index": 83,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <0>, <6>, <4>, <2>.\nNode <3> is connected to node <1>.\nNode <0> is connected to node <1>.\nNode <6> is connected to node <1>.\nNode <4> is connected to nodes <1>, <5>.\nNode <2> is connected to node <1>.\nNode <5> is connected to node <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "34",
        "type": "MST"
    },
    {
        "index": 84,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <5>, <3>.\nNode <2> is connected to nodes <5>, <6>.\nNode <3> is connected to nodes <0>, <4>.\nNode <6> is connected to nodes <2>, <1>.\nNode <4> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <6>, <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "26",
        "type": "MST"
    },
    {
        "index": 85,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <1>, <6>, <2>, <4>.\nNode <3> is connected to node <0>.\nNode <1> is connected to node <0>.\nNode <6> is connected to nodes <0>, <5>.\nNode <2> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <6>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "38",
        "type": "MST"
    },
    {
        "index": 86,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <3>, <2>.\nNode <0> is connected to node <4>.\nNode <3> is connected to nodes <4>, <1>.\nNode <2> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <3>, <2>, <5>.\nNode <5> is connected to nodes <1>, <6>.\nNode <6> is connected to node <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "28",
        "type": "MST"
    },
    {
        "index": 87,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <1>, <0>.\nNode <5> is connected to nodes <2>, <1>, <4>, <0>, <3>.\nNode <1> is connected to nodes <2>, <5>, <4>, <0>, <3>.\nNode <0> is connected to nodes <2>, <5>, <1>, <3>.\nNode <4> is connected to nodes <5>, <1>, <3>.\nNode <3> is connected to nodes <5>, <1>, <0>, <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "10",
        "type": "MST"
    },
    {
        "index": 88,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <0>.\nNode <5> is connected to nodes <3>, <1>, <4>.\nNode <0> is connected to node <3>.\nNode <1> is connected to nodes <5>, <2>.\nNode <4> is connected to node <5>.\nNode <2> is connected to node <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "29",
        "type": "MST"
    },
    {
        "index": 89,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <0>, <2>, <4>.\nNode <1> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <3>, <1>.\nNode <2> is connected to nodes <3>, <5>.\nNode <4> is connected to node <3>.\nNode <5> is connected to node <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "24",
        "type": "MST"
    },
    {
        "index": 90,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <3>, <0>, <2>.\nNode <0> is connected to nodes <3>, <1>.\nNode <2> is connected to nodes <1>, <4>.\nNode <4> is connected to node <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "25",
        "type": "MST"
    },
    {
        "index": 91,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <3>, <0>.\nNode <5> is connected to nodes <2>, <1>, <0>, <6>.\nNode <3> is connected to nodes <2>, <1>, <0>.\nNode <0> is connected to nodes <2>, <5>, <3>, <4>, <1>, <6>.\nNode <1> is connected to nodes <5>, <3>, <0>, <4>.\nNode <6> is connected to nodes <5>, <0>.\nNode <4> is connected to nodes <0>, <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "23",
        "type": "MST"
    },
    {
        "index": 92,
        "question": "Given an undirected graph:\nNode <1> is connected to node <3>.\nNode <3> is connected to nodes <1>, <0>, <4>, <2>.\nNode <0> is connected to node <3>.\nNode <4> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <3>, <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "17",
        "type": "MST"
    },
    {
        "index": 93,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <3>, <4>.\nNode <1> is connected to nodes <3>, <2>.\nNode <4> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <1>, <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "26",
        "type": "MST"
    },
    {
        "index": 94,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <3>.\nNode <5> is connected to nodes <1>, <3>, <0>.\nNode <3> is connected to nodes <1>, <5>.\nNode <0> is connected to nodes <5>, <4>.\nNode <4> is connected to nodes <0>, <6>.\nNode <2> is connected to node <6>.\nNode <6> is connected to nodes <2>, <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "42",
        "type": "MST"
    },
    {
        "index": 95,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <6>, <0>, <2>, <5>, <3>.\nNode <6> is connected to nodes <1>, <0>, <2>, <5>, <3>.\nNode <0> is connected to nodes <1>, <6>, <2>, <4>, <5>, <3>.\nNode <2> is connected to nodes <1>, <6>, <0>, <5>, <3>.\nNode <5> is connected to nodes <1>, <6>, <0>, <2>.\nNode <3> is connected to nodes <1>, <6>, <0>, <2>.\nNode <4> is connected to node <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "16",
        "type": "MST"
    },
    {
        "index": 96,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <1>.\nNode <5> is connected to node <0>.\nNode <1> is connected to nodes <0>, <4>, <3>.\nNode <4> is connected to nodes <1>, <2>, <3>.\nNode <3> is connected to nodes <1>, <4>.\nNode <2> is connected to node <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "20",
        "type": "MST"
    },
    {
        "index": 97,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <5>, <1>.\nNode <1> is connected to nodes <5>, <3>, <4>.\nNode <4> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <4>, <2>.\nNode <2> is connected to node <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "22",
        "type": "MST"
    },
    {
        "index": 98,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <1>, <5>, <3>.\nNode <4> is connected to nodes <2>, <0>, <5>, <3>.\nNode <1> is connected to nodes <2>, <0>, <5>, <3>.\nNode <5> is connected to nodes <2>, <4>, <1>, <0>, <3>.\nNode <3> is connected to nodes <2>, <4>, <1>, <5>, <0>.\nNode <0> is connected to nodes <4>, <1>, <5>, <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "18",
        "type": "MST"
    },
    {
        "index": 99,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <3>, <6>.\nNode <5> is connected to nodes <2>, <0>.\nNode <3> is connected to nodes <2>, <1>.\nNode <6> is connected to nodes <2>, <4>.\nNode <0> is connected to node <5>.\nNode <1> is connected to node <3>.\nNode <4> is connected to node <6>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "19",
        "type": "MST"
    },
    {
        "index": 100,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <2>, <1>, <4>, <3>.\nNode <5> is connected to nodes <0>, <2>, <1>.\nNode <2> is connected to nodes <0>, <5>, <1>, <4>, <3>.\nNode <1> is connected to nodes <0>, <5>, <2>.\nNode <4> is connected to nodes <0>, <2>, <3>.\nNode <3> is connected to nodes <0>, <2>, <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "10",
        "type": "MST"
    },
    {
        "index": 101,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <0>, <4>.\nNode <1> is connected to nodes <2>, <3>, <5>, <0>.\nNode <0> is connected to nodes <2>, <1>, <3>, <5>, <4>.\nNode <4> is connected to nodes <2>, <0>, <3>, <5>.\nNode <3> is connected to nodes <1>, <0>, <4>.\nNode <5> is connected to nodes <1>, <0>, <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "17",
        "type": "MST"
    },
    {
        "index": 102,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <5>, <1>, <4>.\nNode <3> is connected to nodes <2>, <5>, <1>, <4>.\nNode <5> is connected to nodes <2>, <3>, <1>, <4>.\nNode <1> is connected to nodes <2>, <3>, <5>, <0>.\nNode <4> is connected to nodes <2>, <3>, <5>, <0>.\nNode <0> is connected to nodes <1>, <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "20",
        "type": "MST"
    },
    {
        "index": 103,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <1>, <6>, <4>.\nNode <3> is connected to nodes <0>, <2>, <6>.\nNode <1> is connected to node <0>.\nNode <6> is connected to nodes <0>, <3>, <4>, <5>.\nNode <4> is connected to nodes <0>, <6>, <5>, <2>.\nNode <2> is connected to nodes <3>, <4>.\nNode <5> is connected to nodes <6>, <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "36",
        "type": "MST"
    },
    {
        "index": 104,
        "question": "Given an undirected graph:\nNode <4> is connected to node <0>.\nNode <0> is connected to nodes <4>, <3>, <5>, <2>.\nNode <3> is connected to node <0>.\nNode <5> is connected to node <0>.\nNode <2> is connected to nodes <0>, <1>.\nNode <1> is connected to node <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "30",
        "type": "MST"
    },
    {
        "index": 105,
        "question": "Given an undirected graph:\nNode <3> is connected to node <4>.\nNode <4> is connected to nodes <3>, <1>, <2>.\nNode <1> is connected to nodes <4>, <0>.\nNode <2> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <1>, <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "16",
        "type": "MST"
    },
    {
        "index": 106,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <0>, <3>.\nNode <4> is connected to nodes <1>, <0>, <3>.\nNode <0> is connected to nodes <1>, <4>, <3>.\nNode <3> is connected to nodes <1>, <4>, <0>, <5>, <2>.\nNode <5> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <3>, <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "24",
        "type": "MST"
    },
    {
        "index": 107,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <0>, <4>, <1>.\nNode <0> is connected to nodes <6>, <2>.\nNode <4> is connected to node <6>.\nNode <1> is connected to nodes <6>, <5>.\nNode <2> is connected to nodes <0>, <5>.\nNode <5> is connected to nodes <1>, <2>, <3>.\nNode <3> is connected to node <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "29",
        "type": "MST"
    },
    {
        "index": 108,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <5>, <4>.\nNode <2> is connected to node <1>.\nNode <5> is connected to node <1>.\nNode <4> is connected to nodes <1>, <3>, <0>.\nNode <3> is connected to node <4>.\nNode <0> is connected to node <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "27",
        "type": "MST"
    },
    {
        "index": 109,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <3>, <1>.\nNode <2> is connected to nodes <3>, <5>.\nNode <1> is connected to nodes <0>, <4>.\nNode <5> is connected to nodes <2>, <6>.\nNode <4> is connected to nodes <1>, <6>.\nNode <6> is connected to nodes <4>, <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "21",
        "type": "MST"
    },
    {
        "index": 110,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>, <6>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <6> is connected to nodes <0>, <4>, <1>.\nNode <5> is connected to node <0>.\nNode <4> is connected to node <6>.\nNode <1> is connected to node <6>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "37",
        "type": "MST"
    },
    {
        "index": 111,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <6>, <2>.\nNode <4> is connected to nodes <5>, <6>, <3>, <1>, <2>.\nNode <6> is connected to nodes <5>, <4>, <3>, <0>, <1>, <2>.\nNode <2> is connected to nodes <5>, <4>, <6>, <3>, <0>, <1>.\nNode <3> is connected to nodes <4>, <6>, <2>, <0>.\nNode <1> is connected to nodes <4>, <6>, <2>, <0>.\nNode <0> is connected to nodes <6>, <2>, <3>, <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "13",
        "type": "MST"
    },
    {
        "index": 112,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <5>, <4>, <1>, <3>.\nNode <4> is connected to nodes <5>, <2>.\nNode <1> is connected to nodes <2>, <0>.\nNode <3> is connected to node <2>.\nNode <0> is connected to node <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "25",
        "type": "MST"
    },
    {
        "index": 113,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <6>, <3>, <2>, <1>.\nNode <6> is connected to nodes <5>, <0>, <2>.\nNode <3> is connected to nodes <5>, <4>, <0>, <2>.\nNode <2> is connected to nodes <5>, <6>, <3>, <4>, <0>, <1>.\nNode <1> is connected to nodes <5>, <2>, <4>, <0>.\nNode <0> is connected to nodes <6>, <3>, <2>, <1>, <4>.\nNode <4> is connected to nodes <3>, <2>, <1>, <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "23",
        "type": "MST"
    },
    {
        "index": 114,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <2>, <3>.\nNode <4> is connected to nodes <2>, <3>, <0>.\nNode <3> is connected to nodes <1>, <4>.\nNode <0> is connected to node <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "24",
        "type": "MST"
    },
    {
        "index": 115,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <4>, <1>.\nNode <0> is connected to nodes <2>, <3>.\nNode <4> is connected to node <2>.\nNode <1> is connected to node <2>.\nNode <3> is connected to node <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "17",
        "type": "MST"
    },
    {
        "index": 116,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <6>, <0>, <3>.\nNode <2> is connected to nodes <6>, <3>.\nNode <0> is connected to nodes <1>, <5>.\nNode <3> is connected to nodes <1>, <2>.\nNode <5> is connected to nodes <0>, <4>.\nNode <4> is connected to node <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "35",
        "type": "MST"
    },
    {
        "index": 117,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <4>, <3>, <0>.\nNode <0> is connected to nodes <4>, <1>.\nNode <3> is connected to nodes <1>, <2>.\nNode <2> is connected to node <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "7",
        "type": "MST"
    },
    {
        "index": 118,
        "question": "Given an undirected graph:\nNode <0> is connected to node <4>.\nNode <4> is connected to nodes <0>, <1>, <3>, <2>.\nNode <1> is connected to nodes <4>, <2>.\nNode <3> is connected to node <4>.\nNode <2> is connected to nodes <4>, <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "6",
        "type": "MST"
    },
    {
        "index": 119,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <3>, <1>, <4>, <2>.\nNode <4> is connected to nodes <3>, <0>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "19",
        "type": "MST"
    },
    {
        "index": 120,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <1>.\nNode <3> is connected to node <5>.\nNode <1> is connected to nodes <5>, <2>, <4>.\nNode <2> is connected to nodes <1>, <0>.\nNode <4> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <2>, <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "30",
        "type": "MST"
    },
    {
        "index": 121,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <6>, <4>, <5>, <0>.\nNode <6> is connected to nodes <1>, <4>, <3>, <2>, <5>, <0>.\nNode <4> is connected to nodes <1>, <6>, <2>, <5>, <0>.\nNode <5> is connected to nodes <1>, <6>, <4>, <3>, <2>.\nNode <0> is connected to nodes <1>, <6>, <4>, <3>.\nNode <3> is connected to nodes <6>, <5>, <0>.\nNode <2> is connected to nodes <6>, <4>, <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "16",
        "type": "MST"
    },
    {
        "index": 122,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <4>, <6>.\nNode <0> is connected to nodes <5>, <1>.\nNode <4> is connected to nodes <5>, <2>, <3>.\nNode <6> is connected to nodes <5>, <2>.\nNode <1> is connected to node <0>.\nNode <2> is connected to nodes <4>, <6>.\nNode <3> is connected to node <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "30",
        "type": "MST"
    },
    {
        "index": 123,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <0>.\nNode <5> is connected to nodes <2>, <4>, <0>, <3>.\nNode <0> is connected to nodes <2>, <5>.\nNode <4> is connected to nodes <5>, <1>.\nNode <3> is connected to nodes <5>, <6>.\nNode <1> is connected to node <4>.\nNode <6> is connected to node <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "29",
        "type": "MST"
    },
    {
        "index": 124,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <3>, <2>.\nNode <5> is connected to nodes <0>, <1>, <4>.\nNode <3> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <0>, <3>, <1>, <4>.\nNode <1> is connected to nodes <5>, <2>.\nNode <4> is connected to nodes <5>, <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "25",
        "type": "MST"
    },
    {
        "index": 125,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <4>, <0>.\nNode <2> is connected to nodes <5>, <3>, <1>.\nNode <4> is connected to node <5>.\nNode <0> is connected to node <5>.\nNode <3> is connected to node <2>.\nNode <1> is connected to node <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "35",
        "type": "MST"
    },
    {
        "index": 126,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <4>, <2>, <1>.\nNode <5> is connected to nodes <3>, <4>, <2>, <0>.\nNode <4> is connected to nodes <3>, <5>, <2>.\nNode <2> is connected to nodes <3>, <5>, <4>, <1>, <0>.\nNode <1> is connected to nodes <3>, <2>, <0>.\nNode <0> is connected to nodes <5>, <2>, <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "17",
        "type": "MST"
    },
    {
        "index": 127,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <4>, <1>, <2>.\nNode <1> is connected to nodes <4>, <0>.\nNode <2> is connected to nodes <0>, <3>.\nNode <3> is connected to node <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "18",
        "type": "MST"
    },
    {
        "index": 128,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to node <1>.\nNode <4> is connected to nodes <1>, <0>, <5>, <3>.\nNode <0> is connected to node <4>.\nNode <5> is connected to node <4>.\nNode <3> is connected to node <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "17",
        "type": "MST"
    },
    {
        "index": 129,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <2>.\nNode <5> is connected to nodes <4>, <1>, <3>.\nNode <2> is connected to node <4>.\nNode <1> is connected to nodes <5>, <0>, <3>.\nNode <3> is connected to nodes <5>, <1>.\nNode <0> is connected to node <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "25",
        "type": "MST"
    },
    {
        "index": 130,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <1>, <3>, <4>, <2>.\nNode <0> is connected to nodes <5>, <1>, <4>, <2>.\nNode <1> is connected to nodes <5>, <0>, <3>, <2>.\nNode <3> is connected to nodes <5>, <1>, <4>, <2>.\nNode <4> is connected to nodes <5>, <0>, <3>.\nNode <2> is connected to nodes <5>, <0>, <1>, <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "21",
        "type": "MST"
    },
    {
        "index": 131,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <0>, <2>.\nNode <1> is connected to nodes <0>, <3>.\nNode <2> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <1>, <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "16",
        "type": "MST"
    },
    {
        "index": 132,
        "question": "Given an undirected graph:\nNode <5> is connected to node <2>.\nNode <2> is connected to nodes <5>, <4>.\nNode <4> is connected to nodes <2>, <0>, <1>.\nNode <0> is connected to nodes <4>, <3>.\nNode <1> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <0>, <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "25",
        "type": "MST"
    },
    {
        "index": 133,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <1>, <2>, <4>.\nNode <0> is connected to nodes <3>, <5>, <1>, <2>.\nNode <1> is connected to nodes <3>, <0>, <5>, <2>, <4>.\nNode <2> is connected to nodes <3>, <0>, <1>, <5>, <4>.\nNode <4> is connected to nodes <3>, <1>, <2>, <5>.\nNode <5> is connected to nodes <0>, <1>, <2>, <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "8",
        "type": "MST"
    },
    {
        "index": 134,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <0>, <3>, <4>, <5>.\nNode <1> is connected to nodes <2>, <3>, <4>, <5>.\nNode <0> is connected to nodes <2>, <4>.\nNode <3> is connected to nodes <2>, <1>, <4>, <5>.\nNode <4> is connected to nodes <2>, <1>, <0>, <3>, <5>.\nNode <5> is connected to nodes <2>, <1>, <3>, <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "8",
        "type": "MST"
    },
    {
        "index": 135,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <1>, <6>, <0>, <5>.\nNode <4> is connected to node <3>.\nNode <1> is connected to node <3>.\nNode <6> is connected to node <3>.\nNode <0> is connected to node <3>.\nNode <5> is connected to nodes <3>, <2>.\nNode <2> is connected to node <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "45",
        "type": "MST"
    },
    {
        "index": 136,
        "question": "Given an undirected graph:\nNode <5> is connected to node <1>.\nNode <1> is connected to nodes <5>, <6>, <2>.\nNode <6> is connected to node <1>.\nNode <2> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <2>, <0>, <4>.\nNode <0> is connected to node <3>.\nNode <4> is connected to node <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "37",
        "type": "MST"
    },
    {
        "index": 137,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <2>, <4>.\nNode <0> is connected to nodes <2>, <1>.\nNode <4> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <0>, <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "15",
        "type": "MST"
    },
    {
        "index": 138,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <1>, <4>, <2>.\nNode <5> is connected to nodes <3>, <4>, <0>, <2>.\nNode <1> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <3>, <5>, <1>, <0>, <2>.\nNode <2> is connected to nodes <3>, <5>, <4>, <0>.\nNode <0> is connected to nodes <5>, <4>, <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "7",
        "type": "MST"
    },
    {
        "index": 139,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <3>, <1>, <2>.\nNode <4> is connected to nodes <3>, <2>.\nNode <1> is connected to node <0>.\nNode <2> is connected to nodes <0>, <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "22",
        "type": "MST"
    },
    {
        "index": 140,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <1>, <5>, <4>.\nNode <5> is connected to nodes <1>, <2>.\nNode <4> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <4>, <3>.\nNode <3> is connected to node <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "17",
        "type": "MST"
    },
    {
        "index": 141,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <0>, <4>.\nNode <5> is connected to nodes <2>, <6>, <1>.\nNode <0> is connected to node <2>.\nNode <4> is connected to nodes <2>, <3>.\nNode <6> is connected to node <5>.\nNode <1> is connected to nodes <5>, <3>.\nNode <3> is connected to nodes <4>, <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "30",
        "type": "MST"
    },
    {
        "index": 142,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <1>, <2>, <4>, <5>.\nNode <0> is connected to node <1>.\nNode <2> is connected to node <3>.\nNode <4> is connected to node <3>.\nNode <5> is connected to node <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "23",
        "type": "MST"
    },
    {
        "index": 143,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <4>, <1>, <3>.\nNode <5> is connected to nodes <2>, <0>, <1>, <3>.\nNode <4> is connected to nodes <2>, <0>, <3>.\nNode <1> is connected to nodes <2>, <5>, <0>, <3>.\nNode <3> is connected to nodes <2>, <5>, <4>, <1>.\nNode <0> is connected to nodes <5>, <4>, <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "14",
        "type": "MST"
    },
    {
        "index": 144,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <3>, <4>, <0>.\nNode <0> is connected to nodes <1>, <2>.\nNode <2> is connected to node <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "23",
        "type": "MST"
    },
    {
        "index": 145,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <4>, <3>, <0>, <1>.\nNode <2> is connected to nodes <5>, <4>.\nNode <4> is connected to nodes <5>, <2>, <3>, <6>.\nNode <3> is connected to nodes <5>, <4>.\nNode <0> is connected to nodes <5>, <1>.\nNode <1> is connected to nodes <5>, <0>, <6>.\nNode <6> is connected to nodes <4>, <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "26",
        "type": "MST"
    },
    {
        "index": 146,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <5>, <0>.\nNode <1> is connected to nodes <3>, <2>, <5>, <0>.\nNode <5> is connected to nodes <3>, <1>, <4>, <0>.\nNode <0> is connected to nodes <3>, <1>, <5>, <2>, <4>.\nNode <2> is connected to nodes <1>, <0>, <4>.\nNode <4> is connected to nodes <5>, <0>, <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "13",
        "type": "MST"
    },
    {
        "index": 147,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <2>, <4>, <1>.\nNode <0> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <3>, <0>.\nNode <1> is connected to node <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "22",
        "type": "MST"
    },
    {
        "index": 148,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <5>, <0>, <2>.\nNode <1> is connected to node <5>.\nNode <0> is connected to nodes <4>, <3>.\nNode <2> is connected to node <4>.\nNode <3> is connected to node <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "34",
        "type": "MST"
    },
    {
        "index": 149,
        "question": "Given an undirected graph:\nNode <6> is connected to node <1>.\nNode <1> is connected to nodes <6>, <0>, <4>.\nNode <0> is connected to node <1>.\nNode <4> is connected to nodes <1>, <2>, <3>.\nNode <2> is connected to node <4>.\nNode <3> is connected to nodes <4>, <5>.\nNode <5> is connected to node <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "31",
        "type": "MST"
    },
    {
        "index": 150,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <1>, <5>.\nNode <2> is connected to node <4>.\nNode <1> is connected to node <4>.\nNode <5> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <5>, <0>.\nNode <0> is connected to node <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "22",
        "type": "MST"
    },
    {
        "index": 151,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <3>, <4>.\nNode <0> is connected to node <2>.\nNode <3> is connected to nodes <2>, <1>.\nNode <4> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <3>, <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "26",
        "type": "MST"
    },
    {
        "index": 152,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <1>.\nNode <5> is connected to nodes <3>, <0>.\nNode <1> is connected to nodes <3>, <2>.\nNode <0> is connected to nodes <5>, <4>.\nNode <2> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <0>, <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "30",
        "type": "MST"
    },
    {
        "index": 153,
        "question": "Given an undirected graph:\nNode <2> is connected to node <0>.\nNode <0> is connected to nodes <2>, <4>, <6>, <3>.\nNode <4> is connected to node <0>.\nNode <6> is connected to nodes <0>, <5>, <1>.\nNode <3> is connected to node <0>.\nNode <5> is connected to node <6>.\nNode <1> is connected to node <6>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "39",
        "type": "MST"
    },
    {
        "index": 154,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <4>, <0>, <2>, <5>, <1>.\nNode <4> is connected to nodes <6>, <3>, <2>, <1>.\nNode <0> is connected to node <6>.\nNode <2> is connected to nodes <6>, <4>, <3>, <1>.\nNode <5> is connected to nodes <6>, <1>.\nNode <1> is connected to nodes <6>, <4>, <2>, <5>.\nNode <3> is connected to nodes <4>, <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "20",
        "type": "MST"
    },
    {
        "index": 155,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <3>, <4>, <1>.\nNode <3> is connected to node <6>.\nNode <4> is connected to nodes <6>, <0>, <2>.\nNode <1> is connected to nodes <6>, <5>.\nNode <0> is connected to node <4>.\nNode <2> is connected to node <4>.\nNode <5> is connected to node <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "22",
        "type": "MST"
    },
    {
        "index": 156,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <0>, <1>, <2>.\nNode <3> is connected to nodes <4>, <5>.\nNode <0> is connected to nodes <4>, <5>, <2>.\nNode <1> is connected to nodes <4>, <5>, <2>.\nNode <2> is connected to nodes <4>, <0>, <1>, <5>.\nNode <5> is connected to nodes <3>, <0>, <1>, <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "22",
        "type": "MST"
    },
    {
        "index": 157,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <1>, <4>, <2>.\nNode <3> is connected to node <0>.\nNode <1> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <2> is connected to node <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "21",
        "type": "MST"
    },
    {
        "index": 158,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <3>, <4>, <0>.\nNode <1> is connected to nodes <2>, <0>, <5>.\nNode <3> is connected to node <2>.\nNode <4> is connected to node <2>.\nNode <0> is connected to nodes <2>, <1>.\nNode <5> is connected to node <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "27",
        "type": "MST"
    },
    {
        "index": 159,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <5>, <2>, <3>, <6>, <4>.\nNode <0> is connected to nodes <1>, <3>.\nNode <5> is connected to nodes <1>, <4>, <2>.\nNode <2> is connected to nodes <1>, <5>.\nNode <3> is connected to nodes <1>, <0>, <6>.\nNode <6> is connected to nodes <1>, <3>.\nNode <4> is connected to nodes <1>, <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "16",
        "type": "MST"
    },
    {
        "index": 160,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1>, <3>, <4>.\nNode <1> is connected to nodes <5>, <4>.\nNode <3> is connected to node <5>.\nNode <4> is connected to nodes <5>, <1>, <0>.\nNode <0> is connected to nodes <4>, <2>.\nNode <2> is connected to node <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "15",
        "type": "MST"
    },
    {
        "index": 161,
        "question": "Given an undirected graph:\nNode <1> is connected to node <4>.\nNode <4> is connected to nodes <1>, <2>, <3>.\nNode <2> is connected to nodes <4>, <3>, <0>.\nNode <3> is connected to nodes <4>, <2>.\nNode <0> is connected to node <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "20",
        "type": "MST"
    },
    {
        "index": 162,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <3>, <1>.\nNode <5> is connected to node <4>.\nNode <3> is connected to node <4>.\nNode <1> is connected to nodes <4>, <2>, <0>.\nNode <2> is connected to node <1>.\nNode <0> is connected to node <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "23",
        "type": "MST"
    },
    {
        "index": 163,
        "question": "Given an undirected graph:\nNode <5> is connected to node <1>.\nNode <1> is connected to nodes <5>, <3>, <4>, <0>, <2>.\nNode <3> is connected to nodes <1>, <0>, <2>.\nNode <4> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <1>, <3>, <4>, <2>.\nNode <2> is connected to nodes <1>, <3>, <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "9",
        "type": "MST"
    },
    {
        "index": 164,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <6>, <3>, <1>.\nNode <5> is connected to nodes <2>, <4>, <0>, <1>.\nNode <6> is connected to nodes <2>, <4>, <3>, <1>.\nNode <3> is connected to nodes <2>, <6>, <4>.\nNode <1> is connected to nodes <2>, <5>, <6>, <4>, <0>.\nNode <4> is connected to nodes <5>, <6>, <3>, <1>, <0>.\nNode <0> is connected to nodes <5>, <1>, <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "20",
        "type": "MST"
    },
    {
        "index": 165,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <1>, <2>.\nNode <4> is connected to nodes <3>, <5>, <1>, <2>.\nNode <1> is connected to nodes <3>, <4>, <0>, <5>, <2>.\nNode <2> is connected to nodes <3>, <4>, <1>.\nNode <5> is connected to nodes <4>, <1>.\nNode <0> is connected to node <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "18",
        "type": "MST"
    },
    {
        "index": 166,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <2>.\nNode <3> is connected to node <4>.\nNode <2> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <2>, <5>, <0>.\nNode <5> is connected to node <1>.\nNode <0> is connected to node <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "30",
        "type": "MST"
    },
    {
        "index": 167,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <0>, <1>, <4>.\nNode <3> is connected to node <2>.\nNode <0> is connected to node <2>.\nNode <1> is connected to node <2>.\nNode <4> is connected to node <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "26",
        "type": "MST"
    },
    {
        "index": 168,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <0>, <2>.\nNode <3> is connected to node <1>.\nNode <0> is connected to nodes <1>, <4>.\nNode <2> is connected to node <1>.\nNode <4> is connected to node <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "28",
        "type": "MST"
    },
    {
        "index": 169,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <6>, <3>, <4>.\nNode <1> is connected to node <6>.\nNode <3> is connected to nodes <2>, <0>.\nNode <4> is connected to nodes <2>, <5>.\nNode <0> is connected to nodes <3>, <5>.\nNode <5> is connected to nodes <4>, <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "34",
        "type": "MST"
    },
    {
        "index": 170,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <6>.\nNode <3> is connected to nodes <2>, <5>, <6>.\nNode <6> is connected to nodes <2>, <3>.\nNode <5> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <5>, <0>.\nNode <0> is connected to nodes <4>, <1>.\nNode <1> is connected to node <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "22",
        "type": "MST"
    },
    {
        "index": 171,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <5>, <3>, <2>.\nNode <0> is connected to nodes <5>, <2>, <1>.\nNode <3> is connected to node <4>.\nNode <2> is connected to nodes <4>, <0>.\nNode <1> is connected to node <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "30",
        "type": "MST"
    },
    {
        "index": 172,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <2>, <5>, <0>.\nNode <3> is connected to nodes <4>, <1>, <2>, <0>.\nNode <2> is connected to nodes <4>, <3>, <1>, <5>, <0>.\nNode <5> is connected to nodes <4>, <2>, <1>, <0>.\nNode <0> is connected to nodes <4>, <3>, <2>, <5>, <1>.\nNode <1> is connected to nodes <3>, <2>, <5>, <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "7",
        "type": "MST"
    },
    {
        "index": 173,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <4>, <3>.\nNode <2> is connected to nodes <4>, <6>.\nNode <3> is connected to nodes <0>, <5>.\nNode <6> is connected to nodes <2>, <5>.\nNode <5> is connected to nodes <3>, <6>, <1>.\nNode <1> is connected to node <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "16",
        "type": "MST"
    },
    {
        "index": 174,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <6>, <1>, <2>.\nNode <6> is connected to nodes <5>, <3>, <0>, <1>, <2>.\nNode <1> is connected to nodes <5>, <6>, <4>, <3>, <0>, <2>.\nNode <2> is connected to nodes <5>, <6>, <1>, <4>, <3>, <0>.\nNode <3> is connected to nodes <6>, <1>, <2>, <4>.\nNode <0> is connected to nodes <6>, <1>, <2>.\nNode <4> is connected to nodes <1>, <2>, <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "35",
        "type": "MST"
    },
    {
        "index": 175,
        "question": "Given an undirected graph:\nNode <0> is connected to node <2>.\nNode <2> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <2>, <4>, <3>.\nNode <4> is connected to node <1>.\nNode <3> is connected to node <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "10",
        "type": "MST"
    },
    {
        "index": 176,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <0>, <1>, <5>, <4>.\nNode <0> is connected to nodes <6>, <1>.\nNode <1> is connected to nodes <6>, <0>.\nNode <5> is connected to node <6>.\nNode <4> is connected to nodes <6>, <2>.\nNode <2> is connected to nodes <4>, <3>.\nNode <3> is connected to node <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "28",
        "type": "MST"
    },
    {
        "index": 177,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <0>, <5>.\nNode <1> is connected to nodes <0>, <3>.\nNode <5> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <1>, <5>, <4>.\nNode <4> is connected to node <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "19",
        "type": "MST"
    },
    {
        "index": 178,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <4>, <6>, <1>.\nNode <2> is connected to nodes <5>, <3>, <4>, <0>.\nNode <4> is connected to nodes <5>, <2>, <3>, <1>, <0>.\nNode <6> is connected to nodes <5>, <3>, <0>.\nNode <1> is connected to nodes <5>, <4>, <3>.\nNode <3> is connected to nodes <2>, <4>, <6>, <1>, <0>.\nNode <0> is connected to nodes <2>, <4>, <6>, <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "12",
        "type": "MST"
    },
    {
        "index": 179,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <3>, <1>, <0>.\nNode <2> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <4>, <2>.\nNode <0> is connected to node <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "21",
        "type": "MST"
    },
    {
        "index": 180,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <0>, <2>, <3>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <1>, <4>.\nNode <4> is connected to node <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "24",
        "type": "MST"
    },
    {
        "index": 181,
        "question": "Given an undirected graph:\nNode <1> is connected to node <5>.\nNode <5> is connected to nodes <1>, <2>, <3>.\nNode <2> is connected to nodes <5>, <4>.\nNode <3> is connected to node <5>.\nNode <4> is connected to nodes <2>, <0>.\nNode <0> is connected to node <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "15",
        "type": "MST"
    },
    {
        "index": 182,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <1>, <6>, <5>, <0>.\nNode <2> is connected to nodes <4>, <3>, <1>, <6>, <5>, <0>.\nNode <1> is connected to nodes <4>, <2>, <3>, <5>.\nNode <6> is connected to nodes <4>, <2>, <3>, <5>, <0>.\nNode <5> is connected to nodes <4>, <2>, <1>, <6>, <3>, <0>.\nNode <0> is connected to nodes <4>, <2>, <6>, <5>.\nNode <3> is connected to nodes <2>, <1>, <6>, <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "18",
        "type": "MST"
    },
    {
        "index": 183,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>, <4>.\nNode <1> is connected to nodes <0>, <3>, <5>, <2>, <4>.\nNode <2> is connected to nodes <0>, <1>, <3>, <5>, <4>.\nNode <4> is connected to nodes <0>, <1>, <2>, <3>, <5>.\nNode <3> is connected to nodes <1>, <2>, <4>.\nNode <5> is connected to nodes <1>, <2>, <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "10",
        "type": "MST"
    },
    {
        "index": 184,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <0>, <2>, <3>.\nNode <2> is connected to nodes <0>, <4>.\nNode <3> is connected to nodes <4>, <1>.\nNode <1> is connected to node <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "26",
        "type": "MST"
    },
    {
        "index": 185,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <1>, <5>, <2>, <6>.\nNode <3> is connected to nodes <4>, <5>, <6>, <0>.\nNode <1> is connected to nodes <4>, <5>, <2>, <6>, <0>.\nNode <5> is connected to nodes <4>, <3>, <1>, <0>.\nNode <2> is connected to nodes <4>, <1>, <0>.\nNode <6> is connected to nodes <4>, <3>, <1>, <0>.\nNode <0> is connected to nodes <3>, <1>, <5>, <2>, <6>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "14",
        "type": "MST"
    },
    {
        "index": 186,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <5>, <2>, <0>, <4>.\nNode <3> is connected to nodes <1>, <5>, <2>, <4>.\nNode <5> is connected to nodes <1>, <3>, <2>, <0>, <4>.\nNode <2> is connected to nodes <1>, <3>, <5>, <4>.\nNode <0> is connected to nodes <1>, <5>.\nNode <4> is connected to nodes <1>, <3>, <5>, <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "14",
        "type": "MST"
    },
    {
        "index": 187,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <6>, <0>.\nNode <5> is connected to node <1>.\nNode <6> is connected to nodes <1>, <3>.\nNode <0> is connected to nodes <1>, <2>.\nNode <3> is connected to nodes <6>, <2>, <4>.\nNode <2> is connected to nodes <0>, <3>.\nNode <4> is connected to node <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "29",
        "type": "MST"
    },
    {
        "index": 188,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <6>, <1>, <2>, <5>.\nNode <6> is connected to nodes <0>, <1>, <3>, <5>.\nNode <1> is connected to nodes <0>, <6>, <3>, <5>, <4>.\nNode <2> is connected to nodes <0>, <3>, <5>, <4>.\nNode <5> is connected to nodes <0>, <6>, <1>, <2>, <3>, <4>.\nNode <3> is connected to nodes <6>, <1>, <2>, <5>, <4>.\nNode <4> is connected to nodes <1>, <2>, <5>, <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "12",
        "type": "MST"
    },
    {
        "index": 189,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <5>, <4>.\nNode <2> is connected to node <3>.\nNode <5> is connected to nodes <3>, <0>, <1>.\nNode <4> is connected to nodes <3>, <1>.\nNode <0> is connected to node <5>.\nNode <1> is connected to nodes <5>, <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "18",
        "type": "MST"
    },
    {
        "index": 190,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <4>, <0>, <2>.\nNode <1> is connected to node <4>.\nNode <0> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <3>, <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "21",
        "type": "MST"
    },
    {
        "index": 191,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <3>.\nNode <1> is connected to node <2>.\nNode <3> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <3>, <5>, <0>.\nNode <5> is connected to node <4>.\nNode <0> is connected to node <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "34",
        "type": "MST"
    },
    {
        "index": 192,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <0>, <5>, <1>.\nNode <3> is connected to nodes <0>, <5>.\nNode <5> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <1>, <6>.\nNode <6> is connected to node <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "35",
        "type": "MST"
    },
    {
        "index": 193,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <1>, <5>.\nNode <0> is connected to node <4>.\nNode <1> is connected to nodes <4>, <2>.\nNode <5> is connected to nodes <4>, <3>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "22",
        "type": "MST"
    },
    {
        "index": 194,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <4>.\nNode <1> is connected to node <2>.\nNode <4> is connected to nodes <2>, <3>, <0>.\nNode <3> is connected to node <4>.\nNode <0> is connected to node <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "20",
        "type": "MST"
    },
    {
        "index": 195,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <4>, <1>.\nNode <5> is connected to nodes <0>, <3>, <2>.\nNode <4> is connected to node <0>.\nNode <1> is connected to nodes <0>, <6>.\nNode <3> is connected to node <5>.\nNode <2> is connected to node <5>.\nNode <6> is connected to node <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "31",
        "type": "MST"
    },
    {
        "index": 196,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <2>, <5>, <4>, <1>.\nNode <0> is connected to node <3>.\nNode <2> is connected to node <3>.\nNode <5> is connected to node <3>.\nNode <4> is connected to node <3>.\nNode <1> is connected to node <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "29",
        "type": "MST"
    },
    {
        "index": 197,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <0>, <2>, <4>.\nNode <3> is connected to nodes <1>, <0>, <2>, <4>.\nNode <0> is connected to nodes <1>, <3>, <5>.\nNode <2> is connected to nodes <1>, <3>, <4>.\nNode <4> is connected to nodes <1>, <3>, <2>, <5>.\nNode <5> is connected to nodes <0>, <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "10",
        "type": "MST"
    },
    {
        "index": 198,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <5>, <2>, <0>, <4>.\nNode <5> is connected to nodes <6>, <3>, <0>, <1>.\nNode <2> is connected to node <6>.\nNode <0> is connected to nodes <6>, <5>, <1>, <4>.\nNode <4> is connected to nodes <6>, <0>.\nNode <3> is connected to nodes <5>, <1>.\nNode <1> is connected to nodes <5>, <0>, <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "22",
        "type": "MST"
    },
    {
        "index": 199,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <2>, <3>, <4>.\nNode <5> is connected to nodes <0>, <3>.\nNode <2> is connected to nodes <0>, <1>, <3>, <4>.\nNode <3> is connected to nodes <0>, <5>, <2>, <1>, <6>.\nNode <4> is connected to nodes <0>, <2>.\nNode <1> is connected to nodes <2>, <3>.\nNode <6> is connected to node <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "20",
        "type": "MST"
    },
    {
        "index": 200,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <4>, <2>, <3>.\nNode <0> is connected to nodes <1>, <4>, <2>, <3>, <5>.\nNode <4> is connected to nodes <1>, <0>, <2>, <3>.\nNode <2> is connected to nodes <1>, <0>, <4>, <3>, <5>.\nNode <3> is connected to nodes <1>, <0>, <4>, <2>.\nNode <5> is connected to nodes <0>, <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "14",
        "type": "MST"
    },
    {
        "index": 201,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <0>, <3>.\nNode <5> is connected to nodes <2>, <1>.\nNode <0> is connected to nodes <2>, <4>.\nNode <3> is connected to node <2>.\nNode <1> is connected to node <5>.\nNode <4> is connected to node <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "29",
        "type": "MST"
    },
    {
        "index": 202,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <6>, <3>, <0>, <2>.\nNode <5> is connected to nodes <4>, <6>, <3>, <0>.\nNode <6> is connected to nodes <4>, <5>, <2>.\nNode <3> is connected to nodes <4>, <5>, <1>.\nNode <0> is connected to nodes <4>, <5>, <2>.\nNode <2> is connected to nodes <4>, <6>, <0>, <1>.\nNode <1> is connected to nodes <3>, <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "18",
        "type": "MST"
    },
    {
        "index": 203,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <2>, <5>, <6>, <0>, <4>.\nNode <1> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <3>, <1>, <0>, <6>.\nNode <5> is connected to nodes <3>, <6>.\nNode <6> is connected to nodes <3>, <2>, <5>.\nNode <0> is connected to nodes <3>, <2>.\nNode <4> is connected to node <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "19",
        "type": "MST"
    },
    {
        "index": 204,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <2>.\nNode <1> is connected to node <3>.\nNode <2> is connected to nodes <3>, <4>, <0>.\nNode <4> is connected to node <2>.\nNode <0> is connected to node <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "10",
        "type": "MST"
    },
    {
        "index": 205,
        "question": "Given an undirected graph:\nNode <0> is connected to node <2>.\nNode <2> is connected to nodes <0>, <3>, <5>.\nNode <3> is connected to nodes <2>, <1>.\nNode <5> is connected to nodes <2>, <4>, <1>.\nNode <1> is connected to nodes <3>, <5>.\nNode <4> is connected to node <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "18",
        "type": "MST"
    },
    {
        "index": 206,
        "question": "Given an undirected graph:\nNode <1> is connected to node <4>.\nNode <4> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <4>, <2>, <0>, <5>.\nNode <2> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <3>, <2>.\nNode <5> is connected to node <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "35",
        "type": "MST"
    },
    {
        "index": 207,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <2>, <0>.\nNode <3> is connected to nodes <4>, <1>.\nNode <2> is connected to node <4>.\nNode <0> is connected to node <4>.\nNode <1> is connected to node <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "26",
        "type": "MST"
    },
    {
        "index": 208,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <5>, <0>, <4>.\nNode <1> is connected to nodes <2>, <5>, <0>, <4>.\nNode <5> is connected to nodes <2>, <1>, <3>, <4>.\nNode <0> is connected to nodes <2>, <1>, <3>, <4>.\nNode <4> is connected to nodes <2>, <1>, <5>, <0>, <3>.\nNode <3> is connected to nodes <5>, <0>, <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "22",
        "type": "MST"
    },
    {
        "index": 209,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <0>, <3>.\nNode <1> is connected to nodes <4>, <3>.\nNode <0> is connected to nodes <4>, <2>.\nNode <3> is connected to nodes <4>, <1>.\nNode <2> is connected to node <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "19",
        "type": "MST"
    },
    {
        "index": 210,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <5>, <3>.\nNode <1> is connected to nodes <2>, <5>, <0>.\nNode <5> is connected to nodes <2>, <1>, <4>, <0>, <3>, <6>.\nNode <3> is connected to nodes <2>, <5>.\nNode <0> is connected to nodes <1>, <5>, <6>.\nNode <4> is connected to node <5>.\nNode <6> is connected to nodes <5>, <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "33",
        "type": "MST"
    },
    {
        "index": 211,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <1>, <3>.\nNode <2> is connected to node <0>.\nNode <1> is connected to nodes <0>, <4>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "15",
        "type": "MST"
    },
    {
        "index": 212,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <0>, <3>, <1>.\nNode <5> is connected to nodes <4>, <0>, <3>, <1>.\nNode <0> is connected to nodes <4>, <5>, <2>.\nNode <3> is connected to nodes <4>, <5>, <2>, <1>.\nNode <1> is connected to nodes <4>, <5>, <3>, <2>.\nNode <2> is connected to nodes <0>, <3>, <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "17",
        "type": "MST"
    },
    {
        "index": 213,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <4>, <3>, <6>.\nNode <2> is connected to nodes <5>, <6>.\nNode <4> is connected to nodes <5>, <6>, <3>, <1>, <0>.\nNode <3> is connected to nodes <5>, <4>, <1>.\nNode <6> is connected to nodes <5>, <2>, <4>.\nNode <1> is connected to nodes <4>, <3>.\nNode <0> is connected to node <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "19",
        "type": "MST"
    },
    {
        "index": 214,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <5>, <6>.\nNode <2> is connected to nodes <3>, <1>.\nNode <5> is connected to nodes <3>, <0>.\nNode <6> is connected to nodes <3>, <4>.\nNode <1> is connected to nodes <2>, <4>.\nNode <0> is connected to node <5>.\nNode <4> is connected to nodes <6>, <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "32",
        "type": "MST"
    },
    {
        "index": 215,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <4>, <2>.\nNode <0> is connected to node <3>.\nNode <4> is connected to nodes <3>, <1>.\nNode <2> is connected to node <3>.\nNode <1> is connected to node <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "17",
        "type": "MST"
    },
    {
        "index": 216,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <5>, <0>.\nNode <4> is connected to node <1>.\nNode <5> is connected to nodes <1>, <2>.\nNode <0> is connected to node <1>.\nNode <2> is connected to nodes <5>, <3>.\nNode <3> is connected to node <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "25",
        "type": "MST"
    },
    {
        "index": 217,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <4>, <1>.\nNode <0> is connected to nodes <3>, <4>, <2>, <1>, <5>.\nNode <4> is connected to nodes <3>, <0>, <1>, <5>.\nNode <1> is connected to nodes <3>, <0>, <4>, <2>, <5>.\nNode <2> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <0>, <4>, <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "8",
        "type": "MST"
    },
    {
        "index": 218,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <0>, <2>, <1>.\nNode <5> is connected to node <4>.\nNode <0> is connected to node <4>.\nNode <2> is connected to nodes <4>, <3>.\nNode <1> is connected to node <4>.\nNode <3> is connected to node <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "27",
        "type": "MST"
    },
    {
        "index": 219,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <5>, <0>, <6>, <2>, <3>.\nNode <1> is connected to nodes <4>, <5>, <6>.\nNode <5> is connected to nodes <4>, <1>.\nNode <0> is connected to node <4>.\nNode <6> is connected to nodes <4>, <1>, <2>, <3>.\nNode <2> is connected to nodes <4>, <6>.\nNode <3> is connected to nodes <4>, <6>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "27",
        "type": "MST"
    },
    {
        "index": 220,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <3>, <1>, <4>.\nNode <0> is connected to node <2>.\nNode <3> is connected to node <2>.\nNode <1> is connected to node <2>.\nNode <4> is connected to node <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "20",
        "type": "MST"
    },
    {
        "index": 221,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <0>, <5>.\nNode <4> is connected to node <3>.\nNode <0> is connected to node <3>.\nNode <5> is connected to nodes <3>, <2>, <1>.\nNode <2> is connected to node <5>.\nNode <1> is connected to node <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "19",
        "type": "MST"
    },
    {
        "index": 222,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <1>.\nNode <4> is connected to node <5>.\nNode <1> is connected to nodes <5>, <3>, <0>.\nNode <3> is connected to nodes <1>, <2>.\nNode <0> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <3>, <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "17",
        "type": "MST"
    },
    {
        "index": 223,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <4>, <2>, <0>, <5>.\nNode <1> is connected to nodes <3>, <4>, <0>, <5>.\nNode <4> is connected to nodes <3>, <1>, <5>.\nNode <2> is connected to nodes <3>, <0>, <5>.\nNode <0> is connected to nodes <3>, <1>, <2>, <5>.\nNode <5> is connected to nodes <3>, <1>, <4>, <2>, <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "14",
        "type": "MST"
    },
    {
        "index": 224,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <5>, <4>, <0>.\nNode <2> is connected to node <1>.\nNode <5> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <0> is connected to nodes <1>, <3>.\nNode <3> is connected to node <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "32",
        "type": "MST"
    },
    {
        "index": 225,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <3>, <1>, <0>.\nNode <2> is connected to node <5>.\nNode <3> is connected to nodes <5>, <4>.\nNode <1> is connected to node <5>.\nNode <0> is connected to node <5>.\nNode <4> is connected to node <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "16",
        "type": "MST"
    },
    {
        "index": 226,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <6>, <4>, <2>, <5>, <0>.\nNode <6> is connected to nodes <3>, <2>, <5>, <0>.\nNode <4> is connected to nodes <3>, <1>, <5>, <0>.\nNode <2> is connected to nodes <3>, <6>, <1>, <0>.\nNode <5> is connected to nodes <3>, <6>, <4>, <1>, <0>.\nNode <0> is connected to nodes <3>, <6>, <4>, <2>, <5>.\nNode <1> is connected to nodes <4>, <2>, <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "29",
        "type": "MST"
    },
    {
        "index": 227,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <3>, <2>.\nNode <4> is connected to nodes <3>, <1>.\nNode <2> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <4>, <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "28",
        "type": "MST"
    },
    {
        "index": 228,
        "question": "Given an undirected graph:\nNode <5> is connected to node <4>.\nNode <4> is connected to nodes <5>, <0>.\nNode <0> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <0>, <2>, <1>.\nNode <6> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <6>, <3>.\nNode <1> is connected to nodes <6>, <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "42",
        "type": "MST"
    },
    {
        "index": 229,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <5>, <3>.\nNode <0> is connected to nodes <1>, <4>, <3>.\nNode <5> is connected to node <1>.\nNode <3> is connected to nodes <1>, <0>.\nNode <4> is connected to nodes <0>, <2>.\nNode <2> is connected to node <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "25",
        "type": "MST"
    },
    {
        "index": 230,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <1>, <4>, <3>, <2>.\nNode <4> is connected to nodes <1>, <5>, <3>, <2>, <0>.\nNode <3> is connected to nodes <5>, <4>, <0>.\nNode <2> is connected to nodes <5>, <4>, <0>.\nNode <0> is connected to nodes <4>, <3>, <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "19",
        "type": "MST"
    },
    {
        "index": 231,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <0>, <5>.\nNode <0> is connected to nodes <6>, <1>.\nNode <5> is connected to nodes <6>, <2>.\nNode <1> is connected to nodes <0>, <3>.\nNode <2> is connected to nodes <5>, <4>.\nNode <3> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <3>, <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "24",
        "type": "MST"
    },
    {
        "index": 232,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <0>, <3>, <1>.\nNode <5> is connected to nodes <0>, <2>, <1>.\nNode <3> is connected to node <4>.\nNode <1> is connected to nodes <4>, <5>.\nNode <2> is connected to node <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "35",
        "type": "MST"
    },
    {
        "index": 233,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <6>, <4>.\nNode <6> is connected to nodes <5>, <2>.\nNode <4> is connected to node <5>.\nNode <2> is connected to nodes <6>, <0>, <1>.\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <0>, <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "25",
        "type": "MST"
    },
    {
        "index": 234,
        "question": "Given an undirected graph:\nNode <6> is connected to node <2>.\nNode <2> is connected to nodes <6>, <4>.\nNode <4> is connected to nodes <2>, <5>.\nNode <5> is connected to nodes <4>, <3>, <0>.\nNode <3> is connected to nodes <5>, <1>.\nNode <1> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <5>, <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "28",
        "type": "MST"
    },
    {
        "index": 235,
        "question": "Given an undirected graph:\nNode <0> is connected to node <2>.\nNode <2> is connected to nodes <0>, <3>, <4>, <1>.\nNode <3> is connected to node <2>.\nNode <4> is connected to node <2>.\nNode <1> is connected to node <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "17",
        "type": "MST"
    },
    {
        "index": 236,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <5>, <2>, <0>.\nNode <1> is connected to nodes <4>, <5>, <3>, <0>.\nNode <5> is connected to nodes <4>, <1>, <3>, <2>, <0>.\nNode <2> is connected to nodes <4>, <5>, <3>, <0>.\nNode <0> is connected to nodes <4>, <1>, <5>, <2>.\nNode <3> is connected to nodes <1>, <5>, <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "13",
        "type": "MST"
    },
    {
        "index": 237,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <0>, <1>, <5>, <4>.\nNode <3> is connected to nodes <2>, <0>, <1>, <5>, <4>.\nNode <0> is connected to nodes <2>, <3>, <1>, <5>, <4>.\nNode <1> is connected to nodes <2>, <3>, <0>, <5>.\nNode <5> is connected to nodes <2>, <3>, <0>, <1>.\nNode <4> is connected to nodes <2>, <3>, <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "13",
        "type": "MST"
    },
    {
        "index": 238,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <6>, <3>.\nNode <4> is connected to node <1>.\nNode <6> is connected to nodes <1>, <0>.\nNode <3> is connected to nodes <1>, <5>, <0>.\nNode <0> is connected to nodes <6>, <3>.\nNode <5> is connected to nodes <3>, <2>.\nNode <2> is connected to node <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "32",
        "type": "MST"
    },
    {
        "index": 239,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <5>, <0>, <4>, <1>.\nNode <3> is connected to nodes <2>, <0>, <4>.\nNode <5> is connected to nodes <2>, <0>, <4>, <1>.\nNode <0> is connected to nodes <2>, <3>, <5>, <4>, <1>.\nNode <4> is connected to nodes <2>, <3>, <5>, <0>, <1>.\nNode <1> is connected to nodes <2>, <5>, <0>, <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "7",
        "type": "MST"
    },
    {
        "index": 240,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <0>, <1>, <5>.\nNode <0> is connected to nodes <6>, <2>.\nNode <1> is connected to node <6>.\nNode <5> is connected to nodes <6>, <3>.\nNode <2> is connected to nodes <0>, <4>, <3>.\nNode <3> is connected to nodes <5>, <2>.\nNode <4> is connected to node <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "25",
        "type": "MST"
    },
    {
        "index": 241,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <4>, <5>.\nNode <1> is connected to nodes <3>, <4>, <0>, <2>.\nNode <4> is connected to nodes <3>, <1>, <5>, <0>.\nNode <5> is connected to nodes <3>, <4>, <0>, <2>.\nNode <0> is connected to nodes <1>, <4>, <5>, <2>.\nNode <2> is connected to nodes <1>, <5>, <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "12",
        "type": "MST"
    },
    {
        "index": 242,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <2>, <3>, <4>, <1>.\nNode <5> is connected to nodes <0>, <2>, <3>, <4>, <1>.\nNode <2> is connected to nodes <0>, <5>, <3>, <4>.\nNode <3> is connected to nodes <0>, <5>, <2>, <1>.\nNode <4> is connected to nodes <0>, <5>, <2>, <1>.\nNode <1> is connected to nodes <0>, <5>, <3>, <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "11",
        "type": "MST"
    },
    {
        "index": 243,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <2>, <0>, <5>.\nNode <3> is connected to nodes <4>, <1>.\nNode <2> is connected to node <4>.\nNode <0> is connected to node <4>.\nNode <5> is connected to node <4>.\nNode <1> is connected to node <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "23",
        "type": "MST"
    },
    {
        "index": 244,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <0>.\nNode <5> is connected to nodes <3>, <4>, <2>, <1>.\nNode <0> is connected to node <3>.\nNode <4> is connected to nodes <5>, <2>.\nNode <2> is connected to nodes <5>, <4>.\nNode <1> is connected to node <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "26",
        "type": "MST"
    },
    {
        "index": 245,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <4>, <5>, <2>.\nNode <0> is connected to nodes <3>, <4>, <1>, <5>, <2>.\nNode <4> is connected to nodes <3>, <0>, <5>, <2>.\nNode <5> is connected to nodes <3>, <0>, <4>, <1>, <2>.\nNode <2> is connected to nodes <3>, <0>, <4>, <5>.\nNode <1> is connected to nodes <0>, <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "12",
        "type": "MST"
    },
    {
        "index": 246,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <3>, <1>.\nNode <4> is connected to nodes <5>, <0>, <2>.\nNode <3> is connected to node <5>.\nNode <1> is connected to nodes <5>, <0>.\nNode <0> is connected to nodes <4>, <1>.\nNode <2> is connected to node <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "29",
        "type": "MST"
    },
    {
        "index": 247,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <2>, <1>, <4>.\nNode <0> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <3>, <0>.\nNode <4> is connected to node <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "8",
        "type": "MST"
    },
    {
        "index": 248,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <0>, <3>, <4>.\nNode <1> is connected to node <2>.\nNode <0> is connected to node <2>.\nNode <3> is connected to node <2>.\nNode <4> is connected to node <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "23",
        "type": "MST"
    },
    {
        "index": 249,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <0>, <4>.\nNode <3> is connected to nodes <1>, <2>.\nNode <0> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <2> is connected to node <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "24",
        "type": "MST"
    },
    {
        "index": 250,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <5>, <1>.\nNode <5> is connected to nodes <6>, <3>, <0>.\nNode <1> is connected to nodes <6>, <3>, <2>, <0>, <4>.\nNode <3> is connected to nodes <5>, <1>, <2>, <4>.\nNode <0> is connected to nodes <5>, <1>, <2>, <4>.\nNode <2> is connected to nodes <1>, <3>, <0>.\nNode <4> is connected to nodes <1>, <3>, <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "15",
        "type": "MST"
    },
    {
        "index": 251,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <4>, <2>, <1>.\nNode <2> is connected to nodes <4>, <3>, <5>.\nNode <1> is connected to node <3>.\nNode <5> is connected to nodes <2>, <6>.\nNode <6> is connected to nodes <5>, <0>.\nNode <0> is connected to node <6>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "24",
        "type": "MST"
    },
    {
        "index": 252,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <2>, <1>, <3>.\nNode <4> is connected to nodes <0>, <2>, <5>, <3>.\nNode <2> is connected to nodes <0>, <4>, <5>, <1>, <3>.\nNode <1> is connected to nodes <0>, <2>, <5>, <3>.\nNode <3> is connected to nodes <0>, <4>, <2>, <1>.\nNode <5> is connected to nodes <4>, <2>, <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "12",
        "type": "MST"
    },
    {
        "index": 253,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <2>, <3>, <0>, <4>.\nNode <5> is connected to node <1>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <0> is connected to node <1>.\nNode <4> is connected to node <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "27",
        "type": "MST"
    },
    {
        "index": 254,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <1>, <0>.\nNode <2> is connected to nodes <4>, <0>.\nNode <1> is connected to node <4>.\nNode <0> is connected to nodes <4>, <2>, <5>.\nNode <5> is connected to nodes <0>, <3>.\nNode <3> is connected to node <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "26",
        "type": "MST"
    },
    {
        "index": 255,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <5>, <3>.\nNode <1> is connected to nodes <5>, <4>, <0>.\nNode <3> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <1>, <3>.\nNode <0> is connected to node <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "22",
        "type": "MST"
    },
    {
        "index": 256,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <3>.\nNode <2> is connected to node <5>.\nNode <3> is connected to nodes <5>, <0>, <4>, <1>.\nNode <0> is connected to node <3>.\nNode <4> is connected to node <3>.\nNode <1> is connected to node <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "28",
        "type": "MST"
    },
    {
        "index": 257,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <0>, <6>, <2>.\nNode <5> is connected to nodes <1>, <6>, <4>, <2>.\nNode <0> is connected to nodes <1>, <3>, <2>.\nNode <6> is connected to nodes <1>, <5>, <3>, <4>, <2>.\nNode <2> is connected to nodes <1>, <5>, <0>, <6>, <4>.\nNode <4> is connected to nodes <5>, <6>, <2>, <3>.\nNode <3> is connected to nodes <0>, <6>, <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "17",
        "type": "MST"
    },
    {
        "index": 258,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <0>, <2>.\nNode <1> is connected to nodes <0>, <3>.\nNode <2> is connected to node <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "22",
        "type": "MST"
    },
    {
        "index": 259,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <3>, <0>.\nNode <1> is connected to node <2>.\nNode <3> is connected to node <2>.\nNode <0> is connected to nodes <2>, <5>, <4>.\nNode <5> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <0>, <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "30",
        "type": "MST"
    },
    {
        "index": 260,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <4>, <3>, <1>, <2>.\nNode <4> is connected to nodes <6>, <5>, <3>, <1>, <0>.\nNode <3> is connected to nodes <6>, <4>, <5>, <1>, <2>, <0>.\nNode <1> is connected to nodes <6>, <4>, <3>.\nNode <2> is connected to nodes <6>, <3>.\nNode <5> is connected to nodes <4>, <3>, <0>.\nNode <0> is connected to nodes <4>, <3>, <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "16",
        "type": "MST"
    },
    {
        "index": 261,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <5>, <1>, <2>, <0>.\nNode <4> is connected to node <3>.\nNode <5> is connected to node <3>.\nNode <1> is connected to node <3>.\nNode <2> is connected to node <3>.\nNode <0> is connected to node <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "29",
        "type": "MST"
    },
    {
        "index": 262,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <5>, <1>.\nNode <3> is connected to nodes <5>, <4>, <0>, <6>.\nNode <1> is connected to node <2>.\nNode <4> is connected to node <3>.\nNode <0> is connected to node <3>.\nNode <6> is connected to node <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "39",
        "type": "MST"
    },
    {
        "index": 263,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <2>, <5>, <3>.\nNode <1> is connected to node <4>.\nNode <2> is connected to node <4>.\nNode <5> is connected to nodes <4>, <0>.\nNode <3> is connected to node <4>.\nNode <0> is connected to node <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "21",
        "type": "MST"
    },
    {
        "index": 264,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <1>.\nNode <0> is connected to node <3>.\nNode <1> is connected to nodes <3>, <4>, <2>.\nNode <4> is connected to node <1>.\nNode <2> is connected to node <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "33",
        "type": "MST"
    },
    {
        "index": 265,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <5>, <1>.\nNode <2> is connected to nodes <4>, <5>, <0>, <1>, <3>.\nNode <5> is connected to nodes <4>, <2>, <1>.\nNode <1> is connected to nodes <4>, <2>, <5>, <3>.\nNode <0> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <2>, <1>, <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "12",
        "type": "MST"
    },
    {
        "index": 266,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <1>, <0>, <4>.\nNode <2> is connected to nodes <1>, <5>.\nNode <0> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <3>, <0>.\nNode <5> is connected to node <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "25",
        "type": "MST"
    },
    {
        "index": 267,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <4>, <3>.\nNode <2> is connected to nodes <0>, <1>.\nNode <4> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <1> is connected to node <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "31",
        "type": "MST"
    },
    {
        "index": 268,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <1>, <3>, <5>.\nNode <2> is connected to nodes <4>, <0>.\nNode <1> is connected to node <4>.\nNode <3> is connected to nodes <4>, <0>.\nNode <5> is connected to node <4>.\nNode <0> is connected to nodes <2>, <3>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "24",
        "type": "MST"
    },
    {
        "index": 269,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <3>, <4>, <1>.\nNode <0> is connected to node <2>.\nNode <3> is connected to node <2>.\nNode <4> is connected to nodes <2>, <5>.\nNode <1> is connected to node <2>.\nNode <5> is connected to node <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "23",
        "type": "MST"
    },
    {
        "index": 270,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <6>, <3>, <5>, <1>, <2>.\nNode <6> is connected to nodes <4>, <3>, <1>, <2>.\nNode <3> is connected to nodes <4>, <6>, <1>, <0>.\nNode <5> is connected to nodes <4>, <1>, <2>.\nNode <1> is connected to nodes <4>, <6>, <3>, <5>, <0>, <2>.\nNode <2> is connected to nodes <4>, <6>, <5>, <1>, <0>.\nNode <0> is connected to nodes <3>, <1>, <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "19",
        "type": "MST"
    },
    {
        "index": 271,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <2>, <1>, <0>.\nNode <4> is connected to nodes <5>, <1>, <0>.\nNode <2> is connected to nodes <5>, <3>, <1>, <0>.\nNode <1> is connected to nodes <5>, <4>, <2>, <0>.\nNode <0> is connected to nodes <5>, <4>, <2>, <1>.\nNode <3> is connected to node <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "21",
        "type": "MST"
    },
    {
        "index": 272,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <6>, <3>.\nNode <5> is connected to nodes <6>, <3>, <0>.\nNode <3> is connected to nodes <2>, <5>.\nNode <0> is connected to nodes <5>, <4>.\nNode <4> is connected to nodes <0>, <1>.\nNode <1> is connected to node <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "27",
        "type": "MST"
    },
    {
        "index": 273,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <4>, <6>, <3>.\nNode <2> is connected to nodes <5>, <0>, <6>, <3>.\nNode <4> is connected to nodes <5>, <0>, <6>, <3>.\nNode <6> is connected to nodes <5>, <2>, <4>, <3>.\nNode <3> is connected to nodes <5>, <2>, <4>, <6>, <1>.\nNode <0> is connected to nodes <2>, <4>, <1>.\nNode <1> is connected to nodes <3>, <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "17",
        "type": "MST"
    },
    {
        "index": 274,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <1>, <3>.\nNode <2> is connected to node <0>.\nNode <1> is connected to nodes <0>, <4>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "32",
        "type": "MST"
    },
    {
        "index": 275,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <4>, <3>, <2>.\nNode <1> is connected to nodes <0>, <5>, <4>, <3>, <2>.\nNode <4> is connected to nodes <0>, <1>, <3>.\nNode <3> is connected to nodes <0>, <1>, <4>, <5>.\nNode <2> is connected to nodes <0>, <1>, <5>.\nNode <5> is connected to nodes <1>, <3>, <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "18",
        "type": "MST"
    },
    {
        "index": 276,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <0>, <5>.\nNode <1> is connected to nodes <3>, <6>.\nNode <0> is connected to nodes <3>, <4>.\nNode <5> is connected to nodes <3>, <2>.\nNode <6> is connected to nodes <1>, <2>.\nNode <4> is connected to node <0>.\nNode <2> is connected to nodes <5>, <6>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "32",
        "type": "MST"
    },
    {
        "index": 277,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <5>, <0>, <1>.\nNode <3> is connected to nodes <2>, <5>, <0>.\nNode <5> is connected to nodes <2>, <3>, <0>, <4>, <1>.\nNode <0> is connected to nodes <2>, <3>, <5>, <4>.\nNode <1> is connected to nodes <2>, <5>, <4>.\nNode <4> is connected to nodes <5>, <0>, <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "15",
        "type": "MST"
    },
    {
        "index": 278,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <5>, <6>, <0>, <2>.\nNode <3> is connected to node <4>.\nNode <5> is connected to nodes <4>, <1>.\nNode <6> is connected to node <4>.\nNode <0> is connected to node <4>.\nNode <2> is connected to node <4>.\nNode <1> is connected to node <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "28",
        "type": "MST"
    },
    {
        "index": 279,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <1>, <5>, <2>.\nNode <3> is connected to nodes <0>, <4>, <1>, <5>, <2>.\nNode <4> is connected to nodes <0>, <3>, <1>, <5>.\nNode <1> is connected to nodes <0>, <3>, <4>, <5>.\nNode <5> is connected to nodes <0>, <3>, <4>, <1>, <2>.\nNode <2> is connected to nodes <0>, <3>, <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "17",
        "type": "MST"
    },
    {
        "index": 280,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <2>, <5>.\nNode <4> is connected to nodes <0>, <2>, <1>, <5>, <3>.\nNode <2> is connected to nodes <0>, <4>, <1>, <5>.\nNode <5> is connected to nodes <0>, <4>, <2>, <1>, <3>.\nNode <1> is connected to nodes <4>, <2>, <5>, <3>.\nNode <3> is connected to nodes <4>, <5>, <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "15",
        "type": "MST"
    },
    {
        "index": 281,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <4>, <1>, <0>, <5>.\nNode <4> is connected to nodes <6>, <0>.\nNode <1> is connected to nodes <6>, <2>.\nNode <0> is connected to nodes <6>, <4>, <3>, <5>.\nNode <5> is connected to nodes <6>, <0>, <2>.\nNode <2> is connected to nodes <1>, <5>, <3>.\nNode <3> is connected to nodes <0>, <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "30",
        "type": "MST"
    },
    {
        "index": 282,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <2>, <1>, <4>.\nNode <5> is connected to nodes <0>, <1>, <2>.\nNode <2> is connected to nodes <0>, <5>.\nNode <1> is connected to nodes <0>, <5>, <6>, <3>.\nNode <4> is connected to nodes <0>, <6>, <3>.\nNode <6> is connected to nodes <1>, <4>.\nNode <3> is connected to nodes <1>, <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "25",
        "type": "MST"
    },
    {
        "index": 283,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <0>, <2>.\nNode <1> is connected to nodes <4>, <3>, <5>.\nNode <0> is connected to node <4>.\nNode <2> is connected to node <4>.\nNode <3> is connected to node <1>.\nNode <5> is connected to node <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "33",
        "type": "MST"
    },
    {
        "index": 284,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <1>, <0>.\nNode <3> is connected to nodes <1>, <0>, <5>.\nNode <0> is connected to nodes <4>, <3>.\nNode <5> is connected to nodes <3>, <2>.\nNode <2> is connected to node <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "27",
        "type": "MST"
    },
    {
        "index": 285,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <2>, <1>, <3>.\nNode <4> is connected to node <2>.\nNode <1> is connected to node <0>.\nNode <3> is connected to node <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "27",
        "type": "MST"
    },
    {
        "index": 286,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <3>, <2>.\nNode <5> is connected to nodes <1>, <4>.\nNode <3> is connected to nodes <1>, <4>.\nNode <2> is connected to nodes <1>, <0>.\nNode <4> is connected to nodes <5>, <3>.\nNode <0> is connected to node <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "32",
        "type": "MST"
    },
    {
        "index": 287,
        "question": "Given an undirected graph:\nNode <1> is connected to node <0>.\nNode <0> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <0>, <2>, <3>.\nNode <2> is connected to nodes <4>, <5>, <3>.\nNode <3> is connected to nodes <4>, <2>.\nNode <5> is connected to node <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "21",
        "type": "MST"
    },
    {
        "index": 288,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <4>, <3>.\nNode <2> is connected to nodes <4>, <0>.\nNode <3> is connected to nodes <1>, <5>.\nNode <0> is connected to nodes <2>, <5>.\nNode <5> is connected to nodes <3>, <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "18",
        "type": "MST"
    },
    {
        "index": 289,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <1>, <4>, <0>, <5>.\nNode <2> is connected to nodes <3>, <1>, <5>.\nNode <1> is connected to nodes <3>, <2>, <4>, <0>, <5>.\nNode <4> is connected to nodes <3>, <1>, <0>.\nNode <0> is connected to nodes <3>, <1>, <4>, <5>.\nNode <5> is connected to nodes <3>, <2>, <1>, <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "12",
        "type": "MST"
    },
    {
        "index": 290,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <1>, <5>, <2>.\nNode <3> is connected to node <1>.\nNode <5> is connected to nodes <0>, <4>.\nNode <2> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <5>, <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "20",
        "type": "MST"
    },
    {
        "index": 291,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <6>, <3>.\nNode <6> is connected to nodes <4>, <0>.\nNode <3> is connected to nodes <4>, <2>.\nNode <0> is connected to nodes <6>, <2>, <1>.\nNode <2> is connected to nodes <3>, <0>.\nNode <1> is connected to nodes <0>, <5>.\nNode <5> is connected to node <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "33",
        "type": "MST"
    },
    {
        "index": 292,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1>, <4>, <2>, <0>, <3>.\nNode <1> is connected to node <5>.\nNode <4> is connected to node <5>.\nNode <2> is connected to node <5>.\nNode <0> is connected to node <5>.\nNode <3> is connected to node <5>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "33",
        "type": "MST"
    },
    {
        "index": 293,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <2>, <4>.\nNode <0> is connected to nodes <1>, <5>.\nNode <2> is connected to nodes <1>, <3>, <5>.\nNode <4> is connected to nodes <1>, <6>.\nNode <5> is connected to nodes <0>, <2>.\nNode <3> is connected to node <2>.\nNode <6> is connected to node <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "32",
        "type": "MST"
    },
    {
        "index": 294,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <5>, <3>, <4>, <2>, <0>.\nNode <5> is connected to nodes <6>, <1>, <3>, <4>, <0>.\nNode <3> is connected to nodes <6>, <5>, <1>, <4>, <0>.\nNode <4> is connected to nodes <6>, <5>, <3>, <2>.\nNode <2> is connected to nodes <6>, <4>, <1>, <0>.\nNode <0> is connected to nodes <6>, <5>, <3>, <2>, <1>.\nNode <1> is connected to nodes <5>, <3>, <2>, <0>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "12",
        "type": "MST"
    },
    {
        "index": 295,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <5>, <1>, <4>.\nNode <3> is connected to nodes <2>, <0>, <5>, <1>, <4>.\nNode <5> is connected to nodes <2>, <3>, <0>, <1>, <4>.\nNode <1> is connected to nodes <2>, <3>, <5>, <0>, <4>.\nNode <4> is connected to nodes <2>, <3>, <5>, <1>.\nNode <0> is connected to nodes <3>, <5>, <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "8",
        "type": "MST"
    },
    {
        "index": 296,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <3>, <5>, <0>.\nNode <4> is connected to nodes <1>, <2>, <0>, <6>.\nNode <3> is connected to nodes <1>, <2>, <5>.\nNode <5> is connected to nodes <1>, <3>.\nNode <0> is connected to nodes <1>, <4>.\nNode <2> is connected to nodes <4>, <3>, <6>.\nNode <6> is connected to nodes <4>, <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "25",
        "type": "MST"
    },
    {
        "index": 297,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <6>, <1>.\nNode <0> is connected to nodes <6>, <2>, <4>.\nNode <1> is connected to nodes <3>, <5>.\nNode <2> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <0>, <2>.\nNode <5> is connected to node <1>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "28",
        "type": "MST"
    },
    {
        "index": 298,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <5>, <2>, <0>, <6>.\nNode <3> is connected to nodes <4>, <5>, <6>.\nNode <5> is connected to nodes <4>, <3>, <1>, <2>, <0>, <6>.\nNode <2> is connected to nodes <4>, <5>, <1>, <0>, <6>.\nNode <0> is connected to nodes <4>, <5>, <2>, <6>.\nNode <6> is connected to nodes <4>, <3>, <5>, <2>, <0>.\nNode <1> is connected to nodes <5>, <2>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "19",
        "type": "MST"
    },
    {
        "index": 299,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <2>, <1>.\nNode <4> is connected to nodes <2>, <0>.\nNode <1> is connected to node <3>.\nNode <0> is connected to node <4>.\nOutput the total weight of the minimum spanning tree (MST) for this graph.\nAnswer:\n",
        "answer": "30",
        "type": "MST"
    },
    {
        "index": 0,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <3>, <2>.\nNode <0> is connected to nodes <3>, <4>, <5>.\nNode <2> is connected to node <1>.\nNode <4> is connected to node <0>.\nNode <5> is connected to node <0>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<3>, <4>, <5>]",
        "type": "neighbor"
    },
    {
        "index": 1,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <4>, <3>, <2>.\nNode <0> is connected to nodes <4>, <5>.\nNode <3> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <1>, <3>.\nNode <5> is connected to node <0>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<1>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 2,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <5>, <2>.\nNode <2> is connected to nodes <5>, <1>, <4>.\nNode <4> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <4>, <6>.\nNode <6> is connected to nodes <3>, <0>.\nNode <0> is connected to node <6>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<6>]",
        "type": "neighbor"
    },
    {
        "index": 3,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <0>, <2>.\nNode <4> is connected to nodes <0>, <2>, <3>.\nNode <2> is connected to nodes <1>, <3>, <4>, <0>.\nNode <1> is connected to nodes <4>, <0>, <2>.\nWhich are the neighbor nodes of node <0>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[]",
        "type": "neighbor"
    },
    {
        "index": 4,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <4>, <5>.\nNode <0> is connected to nodes <4>, <3>, <1>.\nNode <5> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <0>, <5>.\nNode <1> is connected to node <0>.\nWhich are the neighbor nodes of node <5>? \nAnswer:\n",
        "answer": "[<2>, <3>]",
        "type": "neighbor"
    },
    {
        "index": 5,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <5>, <4>.\nNode <2> is connected to nodes <0>, <5>, <4>, <1>.\nNode <5> is connected to nodes <1>, <2>, <6>, <3>.\nNode <4> is connected to nodes <1>, <2>.\nNode <0> is connected to nodes <3>, <5>, <4>, <2>.\nNode <6> is connected to nodes <0>, <4>, <1>.\nNode <3> is connected to nodes <5>, <1>, <6>, <0>.\nWhich are the neighbor nodes of node <2>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<0>, <5>, <4>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 6,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <5>, <6>, <1>.\nNode <2> is connected to nodes <5>, <6>.\nNode <5> is connected to nodes <3>, <0>, <2>.\nNode <6> is connected to nodes <0>, <2>, <3>.\nNode <1> is connected to nodes <0>, <5>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <2>, <5>, <3>.\nWhich are the neighbor nodes of node <0>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<2>, <5>, <6>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 7,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <2>, <5>.\nNode <4> is connected to node <2>.\nNode <5> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <0>, <5>.\nNode <0> is connected to node <1>.\nWhich are the neighbor nodes of node <5>? \nAnswer:\n",
        "answer": "[<3>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 8,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <4>, <3>, <0>, <1>.\nNode <2> is connected to nodes <5>, <3>.\nNode <4> is connected to nodes <5>, <6>, <0>.\nNode <3> is connected to nodes <5>, <2>.\nNode <0> is connected to nodes <5>, <1>, <4>.\nNode <1> is connected to nodes <5>, <6>, <0>.\nNode <6> is connected to nodes <1>, <4>.\nWhich are the neighbor nodes of node <1>? \nAnswer:\n",
        "answer": "[<5>, <6>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 9,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <0>, <3>.\nNode <1> is connected to node <4>.\nNode <0> is connected to nodes <1>, <5>, <3>, <2>.\nNode <5> is connected to nodes <4>, <1>.\nNode <4> is connected to node <1>.\nWhich are the neighbor nodes of node <4>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<1>]",
        "type": "neighbor"
    },
    {
        "index": 10,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <3>, <5>, <2>, <0>.\nNode <1> is connected to node <4>.\nNode <3> is connected to node <4>.\nNode <5> is connected to node <4>.\nNode <2> is connected to node <4>.\nNode <0> is connected to node <4>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<4>]",
        "type": "neighbor"
    },
    {
        "index": 11,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <0>, <3>.\nNode <2> is connected to nodes <0>, <3>, <4>.\nNode <3> is connected to nodes <1>, <2>.\nNode <4> is connected to node <2>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<0>, <3>, <4>]",
        "type": "neighbor"
    },
    {
        "index": 12,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <5>.\nNode <5> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <5>, <4>.\nNode <2> is connected to nodes <3>, <5>, <0>, <1>.\nNode <0> is connected to nodes <4>, <2>, <3>.\nWhich are the neighbor nodes of node <3>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[]",
        "type": "neighbor"
    },
    {
        "index": 13,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <6>, <3>.\nNode <0> is connected to nodes <5>, <2>, <6>, <3>.\nNode <6> is connected to nodes <3>, <0>, <2>.\nNode <3> is connected to nodes <0>, <2>.\nNode <5> is connected to nodes <6>, <0>.\nNode <2> is connected to nodes <6>, <1>, <5>.\nNode <4> is connected to nodes <6>, <0>.\nWhich are the neighbor nodes of node <6>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<3>, <0>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 14,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <5>, <1>.\nNode <0> is connected to nodes <5>, <4>.\nNode <1> is connected to nodes <3>, <6>.\nNode <4> is connected to nodes <0>, <6>.\nNode <6> is connected to nodes <2>, <4>, <1>.\nNode <2> is connected to node <6>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<5>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 15,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <0>.\nNode <5> is connected to node <1>.\nNode <0> is connected to nodes <1>, <3>, <2>.\nNode <3> is connected to node <0>.\nNode <2> is connected to nodes <0>, <4>.\nNode <4> is connected to node <2>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<2>]",
        "type": "neighbor"
    },
    {
        "index": 16,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <1>, <5>, <2>, <0>, <4>.\nNode <0> is connected to nodes <1>, <3>, <5>, <2>.\nNode <5> is connected to nodes <3>, <2>, <0>, <4>.\nNode <2> is connected to nodes <3>, <5>, <0>, <4>.\nNode <4> is connected to nodes <3>, <5>, <2>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<3>, <5>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 17,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <3>, <4>.\nNode <0> is connected to node <1>.\nNode <3> is connected to nodes <1>, <2>.\nNode <4> is connected to node <1>.\nNode <2> is connected to node <3>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<1>]",
        "type": "neighbor"
    },
    {
        "index": 18,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <6>, <2>, <1>, <0>.\nNode <6> is connected to nodes <5>, <2>, <1>, <4>, <0>.\nNode <2> is connected to nodes <5>, <6>, <4>, <3>.\nNode <1> is connected to nodes <5>, <6>, <3>.\nNode <0> is connected to nodes <5>, <6>, <4>, <3>.\nNode <4> is connected to nodes <6>, <2>, <3>, <0>.\nNode <3> is connected to nodes <2>, <1>, <4>, <0>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<2>, <1>, <4>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 19,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <4>, <3>.\nNode <0> is connected to node <1>.\nNode <4> is connected to nodes <1>, <2>.\nNode <3> is connected to node <1>.\nNode <2> is connected to node <4>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<1>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 20,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <0>, <3>.\nNode <1> is connected to nodes <5>, <2>.\nNode <3> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <3>, <1>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<4>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 21,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <0>, <1>, <3>, <2>.\nNode <1> is connected to node <2>.\nNode <0> is connected to node <4>.\nNode <3> is connected to nodes <4>, <0>, <1>.\nWhich are the neighbor nodes of node <2>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<4>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 22,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <1>, <6>.\nNode <3> is connected to node <0>.\nNode <1> is connected to node <0>.\nNode <6> is connected to nodes <0>, <5>, <2>, <4>.\nNode <5> is connected to node <6>.\nNode <2> is connected to node <6>.\nNode <4> is connected to node <6>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<3>, <1>, <6>]",
        "type": "neighbor"
    },
    {
        "index": 23,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <5>, <3>.\nNode <1> is connected to nodes <4>, <6>.\nNode <5> is connected to nodes <4>, <0>, <2>.\nNode <3> is connected to node <4>.\nNode <6> is connected to node <1>.\nNode <0> is connected to node <5>.\nNode <2> is connected to node <5>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<1>, <5>, <3>]",
        "type": "neighbor"
    },
    {
        "index": 24,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <0>.\nNode <3> is connected to node <5>.\nNode <0> is connected to node <3>.\nNode <2> is connected to node <3>.\nNode <4> is connected to nodes <2>, <3>.\nWhich are the neighbor nodes of node <0>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<3>]",
        "type": "neighbor"
    },
    {
        "index": 25,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <0>, <3>, <4>.\nNode <1> is connected to node <2>.\nNode <0> is connected to node <2>.\nNode <3> is connected to node <2>.\nNode <4> is connected to node <2>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<2>]",
        "type": "neighbor"
    },
    {
        "index": 26,
        "question": "Given a directed graph:\nNode <2> is connected to node <3>.\nNode <3> is connected to nodes <2>, <1>.\nNode <0> is connected to nodes <1>, <3>, <2>.\nNode <1> is connected to node <4>.\nNode <4> is connected to node <0>.\nWhich are the neighbor nodes of node <2>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<3>]",
        "type": "neighbor"
    },
    {
        "index": 27,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <4>, <6>.\nNode <5> is connected to nodes <3>, <0>.\nNode <4> is connected to node <3>.\nNode <6> is connected to node <3>.\nNode <0> is connected to nodes <5>, <2>.\nNode <2> is connected to nodes <0>, <1>.\nNode <1> is connected to node <2>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<5>, <4>, <6>]",
        "type": "neighbor"
    },
    {
        "index": 28,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>.\nNode <1> is connected to node <0>.\nNode <2> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <2>, <4>.\nNode <4> is connected to node <3>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<2>, <4>]",
        "type": "neighbor"
    },
    {
        "index": 29,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <6>, <3>.\nNode <5> is connected to nodes <0>, <1>.\nNode <6> is connected to nodes <0>, <2>.\nNode <3> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <5>, <3>, <4>.\nNode <4> is connected to node <1>.\nNode <2> is connected to node <6>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<6>]",
        "type": "neighbor"
    },
    {
        "index": 30,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <4>, <1>, <6>.\nNode <3> is connected to node <4>.\nNode <1> is connected to nodes <2>, <0>.\nNode <6> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <1>, <6>, <5>.\nNode <5> is connected to node <0>.\nWhich are the neighbor nodes of node <6>? \nAnswer:\n",
        "answer": "[<2>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 31,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <4>, <1>, <6>.\nNode <3> is connected to nodes <5>, <2>, <4>, <6>, <0>.\nNode <4> is connected to nodes <5>, <3>, <2>, <0>.\nNode <1> is connected to node <5>.\nNode <6> is connected to nodes <5>, <3>.\nNode <2> is connected to nodes <3>, <4>.\nNode <0> is connected to nodes <3>, <4>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<5>, <3>, <2>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 32,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <6>, <3>, <5>.\nNode <1> is connected to nodes <0>, <3>, <4>.\nNode <6> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>, <2>.\nNode <5> is connected to node <0>.\nNode <4> is connected to node <1>.\nNode <2> is connected to node <3>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<0>, <1>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 33,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <0>, <4>, <1>.\nNode <5> is connected to node <2>.\nNode <2> is connected to nodes <5>, <1>.\nNode <1> is connected to nodes <2>, <3>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<4>, <3>]",
        "type": "neighbor"
    },
    {
        "index": 34,
        "question": "Given a directed graph:\nNode <2> is connected to node <1>.\nNode <1> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <2>, <1>, <3>.\nNode <3> is connected to nodes <2>, <1>.\nNode <0> is connected to node <3>.\nWhich are the neighbor nodes of node <1>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<4>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 35,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <6>, <5>.\nNode <3> is connected to node <6>.\nNode <5> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <2>, <0>.\nNode <0> is connected to node <4>.\nWhich are the neighbor nodes of node <5>? \nAnswer:\n",
        "answer": "[<1>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 36,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <3>, <0>, <4>, <2>.\nNode <5> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <0> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <2> is connected to node <1>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<1>]",
        "type": "neighbor"
    },
    {
        "index": 37,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <4>, <3>, <0>, <1>, <2>.\nNode <4> is connected to nodes <6>, <5>.\nNode <3> is connected to nodes <6>, <2>, <0>.\nNode <0> is connected to nodes <6>, <3>.\nNode <1> is connected to nodes <6>, <5>.\nNode <2> is connected to nodes <6>, <5>, <3>.\nNode <5> is connected to nodes <4>, <1>, <2>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<6>, <3>]",
        "type": "neighbor"
    },
    {
        "index": 38,
        "question": "Given an undirected graph:\nNode <4> is connected to node <5>.\nNode <5> is connected to nodes <4>, <2>, <3>, <1>, <0>.\nNode <2> is connected to node <5>.\nNode <3> is connected to node <5>.\nNode <1> is connected to node <5>.\nNode <0> is connected to node <5>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<5>]",
        "type": "neighbor"
    },
    {
        "index": 39,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <6>, <2>.\nNode <6> is connected to nodes <2>, <3>, <0>.\nNode <2> is connected to nodes <3>, <4>, <0>, <6>.\nNode <3> is connected to node <5>.\nNode <0> is connected to node <3>.\nNode <5> is connected to nodes <4>, <6>.\nNode <4> is connected to node <1>.\nWhich are the neighbor nodes of node <5>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<4>, <6>]",
        "type": "neighbor"
    },
    {
        "index": 40,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <2>, <1>, <3>.\nNode <0> is connected to node <2>.\nNode <1> is connected to node <4>.\nNode <3> is connected to node <4>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<4>]",
        "type": "neighbor"
    },
    {
        "index": 41,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <3>, <4>, <2>.\nNode <5> is connected to nodes <0>, <4>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <0>, <5>, <1>, <2>, <6>.\nNode <2> is connected to nodes <0>, <4>, <1>.\nNode <1> is connected to nodes <4>, <2>, <3>.\nNode <6> is connected to node <4>.\nWhich are the neighbor nodes of node <6>? \nAnswer:\n",
        "answer": "[<4>]",
        "type": "neighbor"
    },
    {
        "index": 42,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <2>, <5>.\nNode <2> is connected to node <5>.\nNode <1> is connected to nodes <5>, <4>.\nNode <5> is connected to node <3>.\nNode <0> is connected to nodes <1>, <5>.\nWhich are the neighbor nodes of node <5>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<3>]",
        "type": "neighbor"
    },
    {
        "index": 43,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <1>, <4>, <5>.\nNode <0> is connected to node <1>.\nNode <4> is connected to nodes <2>, <3>.\nNode <5> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <5>, <4>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<1>, <4>, <5>]",
        "type": "neighbor"
    },
    {
        "index": 44,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <1>, <2>.\nNode <0> is connected to node <4>.\nNode <1> is connected to node <4>.\nNode <2> is connected to nodes <4>, <3>.\nNode <3> is connected to node <2>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<2>]",
        "type": "neighbor"
    },
    {
        "index": 45,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <5>, <2>.\nNode <4> is connected to nodes <3>, <0>.\nNode <5> is connected to node <3>.\nNode <2> is connected to node <3>.\nNode <0> is connected to nodes <4>, <1>.\nNode <1> is connected to node <0>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<3>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 46,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <4>, <1>.\nNode <2> is connected to nodes <4>, <3>, <0>.\nNode <4> is connected to node <2>.\nNode <3> is connected to node <4>.\nWhich are the neighbor nodes of node <4>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<2>]",
        "type": "neighbor"
    },
    {
        "index": 47,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <0>, <1>, <6>, <2>, <4>.\nNode <5> is connected to nodes <3>, <4>.\nNode <0> is connected to nodes <3>, <4>.\nNode <1> is connected to nodes <3>, <6>.\nNode <6> is connected to nodes <3>, <1>.\nNode <2> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <3>, <5>, <0>, <2>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<3>, <4>]",
        "type": "neighbor"
    },
    {
        "index": 48,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <6>, <0>, <4>.\nNode <6> is connected to nodes <1>, <3>.\nNode <0> is connected to nodes <1>, <2>.\nNode <4> is connected to node <1>.\nNode <3> is connected to nodes <6>, <5>.\nNode <5> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <0>, <5>.\nWhich are the neighbor nodes of node <5>? \nAnswer:\n",
        "answer": "[<3>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 49,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <0>.\nNode <3> is connected to node <4>.\nNode <0> is connected to nodes <4>, <6>.\nNode <6> is connected to nodes <2>, <0>, <5>.\nNode <2> is connected to nodes <6>, <5>.\nNode <5> is connected to nodes <6>, <2>, <1>.\nNode <1> is connected to node <5>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<4>]",
        "type": "neighbor"
    },
    {
        "index": 50,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <5>.\nNode <0> is connected to nodes <3>, <1>.\nNode <5> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <0>, <6>, <5>, <2>, <4>.\nNode <6> is connected to node <1>.\nNode <2> is connected to node <1>.\nNode <4> is connected to node <1>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<0>, <5>]",
        "type": "neighbor"
    },
    {
        "index": 51,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <6>, <0>, <2>, <3>, <5>.\nNode <4> is connected to node <1>.\nNode <6> is connected to nodes <1>, <5>, <3>, <2>.\nNode <0> is connected to nodes <1>, <5>.\nNode <2> is connected to nodes <1>, <6>.\nNode <3> is connected to nodes <1>, <6>.\nNode <5> is connected to nodes <1>, <6>, <0>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<1>]",
        "type": "neighbor"
    },
    {
        "index": 52,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <1>.\nNode <0> is connected to node <3>.\nNode <1> is connected to nodes <3>, <2>, <4>.\nNode <2> is connected to node <1>.\nNode <4> is connected to node <1>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<1>]",
        "type": "neighbor"
    },
    {
        "index": 53,
        "question": "Given a directed graph:\nNode <1> is connected to node <4>.\nNode <4> is connected to nodes <1>, <3>.\nNode <0> is connected to node <2>.\nNode <3> is connected to nodes <2>, <1>, <0>.\nWhich are the neighbor nodes of node <2>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[]",
        "type": "neighbor"
    },
    {
        "index": 54,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <0>.\nNode <5> is connected to nodes <3>, <2>, <4>, <0>.\nNode <0> is connected to nodes <3>, <1>, <5>, <4>.\nNode <1> is connected to nodes <2>, <4>, <0>.\nNode <2> is connected to nodes <1>, <5>.\nNode <4> is connected to nodes <1>, <5>, <0>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<5>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 55,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <3>.\nNode <0> is connected to node <2>.\nNode <3> is connected to nodes <0>, <4>.\nNode <1> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <3>, <1>.\nWhich are the neighbor nodes of node <0>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<2>]",
        "type": "neighbor"
    },
    {
        "index": 56,
        "question": "Given an undirected graph:\nNode <4> is connected to node <2>.\nNode <2> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <2>, <0>, <3>.\nNode <0> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <1>, <0>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<1>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 57,
        "question": "Given an undirected graph:\nNode <2> is connected to node <1>.\nNode <1> is connected to nodes <2>, <4>, <5>.\nNode <6> is connected to node <3>.\nNode <3> is connected to nodes <6>, <4>, <5>.\nNode <0> is connected to node <4>.\nNode <4> is connected to nodes <0>, <3>, <1>.\nNode <5> is connected to nodes <3>, <1>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<0>, <3>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 58,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <0>, <3>.\nNode <1> is connected to nodes <0>, <5>.\nNode <3> is connected to nodes <2>, <5>.\nNode <5> is connected to nodes <1>, <3>, <4>.\nNode <4> is connected to node <5>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<2>, <5>]",
        "type": "neighbor"
    },
    {
        "index": 59,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <2>, <5>, <1>, <0>.\nNode <3> is connected to node <4>.\nNode <2> is connected to node <4>.\nNode <5> is connected to node <4>.\nNode <1> is connected to node <4>.\nNode <0> is connected to node <4>.\nWhich are the neighbor nodes of node <1>? \nAnswer:\n",
        "answer": "[<4>]",
        "type": "neighbor"
    },
    {
        "index": 60,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <6>, <0>.\nNode <5> is connected to node <1>.\nNode <6> is connected to nodes <1>, <3>.\nNode <0> is connected to nodes <1>, <4>, <2>.\nNode <4> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <4>, <6>.\nNode <2> is connected to node <0>.\nWhich are the neighbor nodes of node <6>? \nAnswer:\n",
        "answer": "[<1>, <3>]",
        "type": "neighbor"
    },
    {
        "index": 61,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <2>, <5>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <5> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <5>, <3>.\nNode <3> is connected to node <4>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<5>, <3>]",
        "type": "neighbor"
    },
    {
        "index": 62,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <1>, <4>.\nNode <1> is connected to nodes <0>, <3>.\nNode <4> is connected to nodes <5>, <3>, <2>.\nNode <3> is connected to nodes <6>, <2>, <4>, <0>.\nNode <6> is connected to nodes <2>, <1>, <4>, <5>.\nNode <2> is connected to nodes <4>, <3>.\nWhich are the neighbor nodes of node <4>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<5>, <3>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 63,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <0>, <2>.\nNode <1> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <4>, <5>.\nWhich are the neighbor nodes of node <1>? \nAnswer:\n",
        "answer": "[<3>, <4>]",
        "type": "neighbor"
    },
    {
        "index": 64,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <1>, <2>.\nNode <3> is connected to node <4>.\nNode <1> is connected to nodes <4>, <0>.\nNode <2> is connected to node <4>.\nNode <0> is connected to node <1>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<1>]",
        "type": "neighbor"
    },
    {
        "index": 65,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1>, <3>, <4>, <0>, <2>.\nNode <1> is connected to nodes <5>, <3>, <0>, <2>.\nNode <3> is connected to nodes <5>, <1>, <4>, <0>, <2>.\nNode <4> is connected to nodes <5>, <3>, <0>, <2>.\nNode <0> is connected to nodes <5>, <1>, <3>, <4>.\nNode <2> is connected to nodes <5>, <1>, <3>, <4>.\nWhich are the neighbor nodes of node <1>? \nAnswer:\n",
        "answer": "[<5>, <3>, <0>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 66,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <3>, <1>.\nNode <2> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <4>, <0>, <2>.\nNode <0> is connected to node <1>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<3>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 67,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <3>, <1>.\nNode <2> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <0>, <1>, <4>.\nNode <1> is connected to nodes <4>, <2>, <3>.\nNode <0> is connected to node <4>.\nWhich are the neighbor nodes of node <2>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<3>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 68,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <5>.\nNode <0> is connected to node <1>.\nNode <5> is connected to nodes <2>, <0>, <1>.\nNode <1> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <2>, <4>.\nNode <4> is connected to node <2>.\nWhich are the neighbor nodes of node <5>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<2>, <0>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 69,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <1>, <3>.\nNode <4> is connected to node <5>.\nNode <1> is connected to nodes <5>, <2>.\nNode <3> is connected to nodes <5>, <0>.\nNode <0> is connected to nodes <3>, <6>.\nNode <6> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <1>, <6>.\nWhich are the neighbor nodes of node <6>? \nAnswer:\n",
        "answer": "[<0>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 70,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <0>, <5>.\nNode <1> is connected to nodes <0>, <5>, <2>, <4>.\nNode <5> is connected to nodes <3>, <1>.\nNode <2> is connected to node <1>.\nNode <4> is connected to node <1>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<0>, <5>]",
        "type": "neighbor"
    },
    {
        "index": 71,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1>, <2>, <0>, <3>, <4>.\nNode <1> is connected to nodes <5>, <2>, <0>.\nNode <2> is connected to nodes <5>, <1>, <0>, <3>, <4>.\nNode <0> is connected to nodes <5>, <1>, <2>, <3>.\nNode <3> is connected to nodes <5>, <2>, <0>.\nNode <4> is connected to nodes <5>, <2>.\nWhich are the neighbor nodes of node <1>? \nAnswer:\n",
        "answer": "[<5>, <2>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 72,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <5>.\nNode <1> is connected to node <3>.\nNode <5> is connected to nodes <3>, <0>, <4>, <2>.\nNode <0> is connected to node <5>.\nNode <4> is connected to node <5>.\nNode <2> is connected to node <5>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<5>]",
        "type": "neighbor"
    },
    {
        "index": 73,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <4>, <2>.\nNode <1> is connected to nodes <4>, <5>.\nNode <2> is connected to nodes <0>, <3>.\nNode <5> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <5>, <2>.\nWhich are the neighbor nodes of node <1>? \nAnswer:\n",
        "answer": "[<4>, <5>]",
        "type": "neighbor"
    },
    {
        "index": 74,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <1>, <2>, <4>.\nNode <3> is connected to nodes <5>, <1>, <2>, <0>, <4>.\nNode <1> is connected to nodes <5>, <3>, <2>, <0>.\nNode <2> is connected to nodes <5>, <3>, <1>, <0>, <4>.\nNode <4> is connected to nodes <5>, <3>, <2>, <0>.\nNode <0> is connected to nodes <3>, <1>, <2>, <4>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<3>, <1>, <2>, <4>]",
        "type": "neighbor"
    },
    {
        "index": 75,
        "question": "Given a directed graph:\nNode <6> is connected to node <1>.\nNode <1> is connected to nodes <6>, <2>.\nNode <0> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <0>, <3>.\nNode <4> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <5>, <6>.\nNode <5> is connected to node <3>.\nWhich are the neighbor nodes of node <2>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<0>, <3>]",
        "type": "neighbor"
    },
    {
        "index": 76,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <5>, <6>.\nNode <0> is connected to nodes <1>, <3>, <5>, <6>.\nNode <5> is connected to nodes <1>, <4>, <2>, <3>, <0>.\nNode <6> is connected to nodes <1>, <0>.\nNode <4> is connected to nodes <2>, <3>, <5>.\nNode <2> is connected to nodes <4>, <5>.\nNode <3> is connected to nodes <4>, <0>, <5>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<2>, <3>, <5>]",
        "type": "neighbor"
    },
    {
        "index": 77,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <2>, <4>.\nNode <0> is connected to nodes <2>, <4>, <3>, <1>.\nNode <2> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <1>, <0>.\nWhich are the neighbor nodes of node <2>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<4>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 78,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <3>, <4>.\nNode <0> is connected to nodes <3>, <2>.\nNode <4> is connected to node <1>.\nNode <2> is connected to node <0>.\nWhich are the neighbor nodes of node <1>? \nAnswer:\n",
        "answer": "[<3>, <4>]",
        "type": "neighbor"
    },
    {
        "index": 79,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <6>, <4>.\nNode <6> is connected to nodes <2>, <5>, <3>.\nNode <4> is connected to nodes <2>, <0>.\nNode <5> is connected to nodes <6>, <1>.\nNode <3> is connected to nodes <6>, <1>.\nNode <1> is connected to nodes <5>, <3>.\nNode <0> is connected to node <4>.\nWhich are the neighbor nodes of node <5>? \nAnswer:\n",
        "answer": "[<6>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 80,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <0>, <1>.\nNode <2> is connected to node <3>.\nNode <0> is connected to node <3>.\nNode <1> is connected to nodes <3>, <4>, <5>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <1>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<1>]",
        "type": "neighbor"
    },
    {
        "index": 81,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <0>, <1>, <5>, <3>.\nNode <0> is connected to nodes <6>, <2>, <5>, <4>, <3>.\nNode <1> is connected to nodes <6>, <2>, <5>, <4>, <3>.\nNode <5> is connected to nodes <6>, <2>, <0>, <1>, <3>.\nNode <3> is connected to nodes <6>, <0>, <1>, <5>, <4>.\nNode <2> is connected to nodes <0>, <1>, <5>, <4>.\nNode <4> is connected to nodes <2>, <0>, <1>, <3>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<6>, <0>, <1>, <5>, <4>]",
        "type": "neighbor"
    },
    {
        "index": 82,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <5>, <2>.\nNode <2> is connected to nodes <5>, <1>, <4>.\nNode <0> is connected to node <3>.\nNode <3> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <3>, <2>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<5>, <1>, <4>]",
        "type": "neighbor"
    },
    {
        "index": 83,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <3>, <4>.\nNode <0> is connected to nodes <3>, <1>.\nNode <4> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <0>, <4>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<2>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 84,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <3>, <5>.\nNode <0> is connected to nodes <2>, <6>, <3>, <1>, <5>, <4>.\nNode <3> is connected to nodes <2>, <6>, <0>, <1>, <4>.\nNode <5> is connected to nodes <2>, <0>, <1>.\nNode <6> is connected to nodes <0>, <3>, <4>.\nNode <4> is connected to nodes <6>, <0>, <3>.\nNode <1> is connected to nodes <0>, <3>, <5>.\nWhich are the neighbor nodes of node <1>? \nAnswer:\n",
        "answer": "[<0>, <3>, <5>]",
        "type": "neighbor"
    },
    {
        "index": 85,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5>, <3>.\nNode <5> is connected to nodes <6>, <2>.\nNode <3> is connected to node <4>.\nNode <6> is connected to node <0>.\nNode <2> is connected to nodes <4>, <6>.\nNode <1> is connected to nodes <4>, <0>, <5>.\nNode <4> is connected to nodes <6>, <1>.\nWhich are the neighbor nodes of node <4>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<6>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 86,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <2>.\nNode <0> is connected to node <1>.\nNode <2> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <4>, <2>.\nNode <4> is connected to node <3>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<4>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 87,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <4>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <1>, <2>, <0>.\nNode <2> is connected to node <4>.\nNode <0> is connected to node <4>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<1>]",
        "type": "neighbor"
    },
    {
        "index": 88,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <4>, <3>, <5>, <1>.\nNode <0> is connected to nodes <2>, <3>, <5>, <1>.\nNode <4> is connected to nodes <2>, <3>, <1>.\nNode <3> is connected to nodes <2>, <0>, <4>, <5>, <1>.\nNode <5> is connected to nodes <2>, <0>, <3>, <1>.\nNode <1> is connected to nodes <2>, <0>, <4>, <3>, <5>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<2>, <3>, <5>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 89,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <1>, <2>.\nNode <3> is connected to node <4>.\nNode <1> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <4>, <1>, <0>.\nNode <0> is connected to node <2>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<4>, <1>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 90,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <1>.\nNode <3> is connected to node <5>.\nNode <1> is connected to nodes <5>, <0>, <4>, <6>.\nNode <0> is connected to nodes <2>, <1>.\nNode <2> is connected to node <0>.\nNode <4> is connected to node <1>.\nNode <6> is connected to node <1>.\nWhich are the neighbor nodes of node <6>? \nAnswer:\n",
        "answer": "[<1>]",
        "type": "neighbor"
    },
    {
        "index": 91,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <2>, <4>, <1>.\nNode <0> is connected to node <3>.\nNode <2> is connected to node <3>.\nNode <4> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <3>, <4>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<3>]",
        "type": "neighbor"
    },
    {
        "index": 92,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <5>, <2>, <0>.\nNode <3> is connected to nodes <1>, <4>.\nNode <5> is connected to node <1>.\nNode <2> is connected to node <1>.\nNode <0> is connected to node <1>.\nNode <4> is connected to node <3>.\nWhich are the neighbor nodes of node <1>? \nAnswer:\n",
        "answer": "[<3>, <5>, <2>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 93,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <3>, <5>.\nNode <4> is connected to nodes <0>, <2>.\nNode <3> is connected to node <0>.\nNode <5> is connected to nodes <0>, <1>.\nNode <2> is connected to node <4>.\nNode <1> is connected to node <5>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<4>]",
        "type": "neighbor"
    },
    {
        "index": 94,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <0>.\nNode <5> is connected to nodes <2>, <4>, <1>, <3>.\nNode <0> is connected to node <2>.\nNode <4> is connected to node <5>.\nNode <1> is connected to node <5>.\nNode <3> is connected to node <5>.\nWhich are the neighbor nodes of node <1>? \nAnswer:\n",
        "answer": "[<5>]",
        "type": "neighbor"
    },
    {
        "index": 95,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <5>, <4>.\nNode <3> is connected to nodes <2>, <0>, <1>.\nNode <5> is connected to nodes <2>, <0>.\nNode <4> is connected to nodes <2>, <6>.\nNode <0> is connected to nodes <3>, <6>, <5>.\nNode <6> is connected to nodes <0>, <4>.\nNode <1> is connected to node <3>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<2>, <6>]",
        "type": "neighbor"
    },
    {
        "index": 96,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <0>, <3>.\nNode <2> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <1>, <2>, <4>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <0>.\nWhich are the neighbor nodes of node <1>? \nAnswer:\n",
        "answer": "[<2>, <0>, <3>]",
        "type": "neighbor"
    },
    {
        "index": 97,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <1>, <2>.\nNode <5> is connected to nodes <3>, <1>, <2>, <4>.\nNode <1> is connected to nodes <3>, <5>, <2>, <4>.\nNode <2> is connected to nodes <3>, <5>, <1>, <0>.\nNode <4> is connected to nodes <5>, <1>.\nNode <0> is connected to node <2>.\nWhich are the neighbor nodes of node <5>? \nAnswer:\n",
        "answer": "[<3>, <1>, <2>, <4>]",
        "type": "neighbor"
    },
    {
        "index": 98,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <4>, <2>, <1>.\nNode <5> is connected to node <3>.\nNode <4> is connected to nodes <3>, <0>.\nNode <2> is connected to node <3>.\nNode <1> is connected to node <3>.\nNode <0> is connected to node <4>.\nWhich are the neighbor nodes of node <1>? \nAnswer:\n",
        "answer": "[<3>]",
        "type": "neighbor"
    },
    {
        "index": 99,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <5>, <1>.\nNode <5> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <2>, <3>.\nNode <0> is connected to nodes <5>, <1>.\nNode <3> is connected to nodes <1>, <5>.\nNode <2> is connected to nodes <4>, <5>, <3>.\nWhich are the neighbor nodes of node <1>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<2>, <3>]",
        "type": "neighbor"
    },
    {
        "index": 100,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <1>, <4>.\nNode <3> is connected to nodes <0>, <2>.\nNode <1> is connected to nodes <0>, <5>.\nNode <4> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <3>, <4>.\nNode <5> is connected to node <1>.\nWhich are the neighbor nodes of node <5>? \nAnswer:\n",
        "answer": "[<1>]",
        "type": "neighbor"
    },
    {
        "index": 101,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <4>.\nNode <0> is connected to node <3>.\nNode <4> is connected to nodes <3>, <2>, <1>.\nNode <2> is connected to node <4>.\nNode <1> is connected to node <4>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<0>, <4>]",
        "type": "neighbor"
    },
    {
        "index": 102,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <5>, <2>.\nNode <1> is connected to nodes <5>, <6>.\nNode <2> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <2>, <6>.\nNode <6> is connected to nodes <1>, <0>, <4>.\nNode <4> is connected to node <6>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<5>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 103,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <3>, <1>, <0>, <2>.\nNode <3> is connected to nodes <5>, <4>.\nNode <1> is connected to nodes <0>, <5>, <2>, <4>.\nWhich are the neighbor nodes of node <4>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<3>, <1>, <0>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 104,
        "question": "Given a directed graph:\nNode <5> is connected to node <3>.\nNode <3> is connected to nodes <2>, <1>.\nNode <0> is connected to node <2>.\nNode <2> is connected to nodes <5>, <0>, <1>.\nNode <1> is connected to node <4>.\nWhich are the neighbor nodes of node <0>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<2>]",
        "type": "neighbor"
    },
    {
        "index": 105,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <1>, <5>, <2>.\nNode <3> is connected to nodes <0>, <4>, <1>.\nNode <1> is connected to nodes <0>, <3>, <4>, <5>.\nNode <5> is connected to nodes <0>, <4>, <1>, <2>.\nNode <2> is connected to nodes <0>, <4>, <5>.\nNode <4> is connected to nodes <3>, <1>, <5>, <2>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<0>, <4>, <5>]",
        "type": "neighbor"
    },
    {
        "index": 106,
        "question": "Given a directed graph:\nNode <1> is connected to node <0>.\nNode <0> is connected to nodes <3>, <2>, <4>.\nNode <3> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <1>, <2>.\nNode <2> is connected to node <3>.\nWhich are the neighbor nodes of node <0>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<3>, <2>, <4>]",
        "type": "neighbor"
    },
    {
        "index": 107,
        "question": "Given a directed graph:\nNode <1> is connected to node <3>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <0>.\nNode <0> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <1>, <4>, <0>.\nWhich are the neighbor nodes of node <4>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<0>]",
        "type": "neighbor"
    },
    {
        "index": 108,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <4>, <0>, <2>.\nNode <3> is connected to nodes <4>, <5>.\nNode <0> is connected to node <1>.\nNode <2> is connected to node <1>.\nNode <5> is connected to node <3>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<4>, <5>]",
        "type": "neighbor"
    },
    {
        "index": 109,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <3>, <0>, <1>, <4>.\nNode <2> is connected to nodes <5>, <0>, <6>, <3>.\nNode <3> is connected to nodes <5>, <2>, <6>, <4>.\nNode <0> is connected to nodes <5>, <2>.\nNode <1> is connected to node <5>.\nNode <4> is connected to nodes <5>, <3>.\nNode <6> is connected to nodes <2>, <3>.\nWhich are the neighbor nodes of node <5>? \nAnswer:\n",
        "answer": "[<2>, <3>, <0>, <1>, <4>]",
        "type": "neighbor"
    },
    {
        "index": 110,
        "question": "Given a directed graph:\nNode <4> is connected to node <1>.\nNode <5> is connected to nodes <1>, <3>, <4>.\nNode <3> is connected to node <2>.\nNode <2> is connected to nodes <3>, <5>, <1>.\nNode <6> is connected to nodes <0>, <3>, <4>, <2>.\nNode <0> is connected to nodes <3>, <5>.\nWhich are the neighbor nodes of node <1>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[]",
        "type": "neighbor"
    },
    {
        "index": 111,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <1>, <3>, <0>.\nNode <5> is connected to nodes <4>, <1>, <3>, <2>, <0>.\nNode <1> is connected to nodes <4>, <5>, <3>, <0>.\nNode <3> is connected to nodes <4>, <5>, <1>, <2>, <0>.\nNode <0> is connected to nodes <4>, <5>, <1>, <3>, <2>.\nNode <2> is connected to nodes <5>, <3>, <0>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<5>, <1>, <3>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 112,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <2>, <3>.\nNode <4> is connected to nodes <1>, <0>.\nNode <2> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <1>, <2>.\nNode <0> is connected to node <4>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<4>]",
        "type": "neighbor"
    },
    {
        "index": 113,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <4>, <2>.\nNode <1> is connected to node <4>.\nNode <2> is connected to nodes <0>, <3>.\nNode <3> is connected to node <2>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<4>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 114,
        "question": "Given a directed graph:\nNode <0> is connected to node <5>.\nNode <5> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <2>, <1>.\nNode <4> is connected to nodes <2>, <1>, <3>.\nWhich are the neighbor nodes of node <5>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<1>, <3>]",
        "type": "neighbor"
    },
    {
        "index": 115,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <4>, <0>, <3>, <2>.\nNode <0> is connected to nodes <4>, <1>.\nNode <3> is connected to node <1>.\nNode <2> is connected to node <1>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<4>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 116,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <6>.\nNode <4> is connected to nodes <6>, <0>, <5>.\nNode <6> is connected to nodes <2>, <3>, <0>, <1>.\nNode <3> is connected to nodes <0>, <5>, <1>, <4>.\nNode <0> is connected to nodes <5>, <1>, <6>, <3>.\nNode <5> is connected to nodes <1>, <6>, <2>.\nNode <1> is connected to nodes <4>, <6>, <2>, <3>, <0>.\nWhich are the neighbor nodes of node <0>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<5>, <1>, <6>, <3>]",
        "type": "neighbor"
    },
    {
        "index": 117,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <6>, <1>, <2>, <4>.\nNode <6> is connected to node <2>.\nNode <1> is connected to node <2>.\nNode <2> is connected to node <1>.\nNode <4> is connected to nodes <0>, <6>, <3>.\nNode <3> is connected to node <2>.\nNode <5> is connected to nodes <6>, <2>.\nWhich are the neighbor nodes of node <4>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<0>, <6>, <3>]",
        "type": "neighbor"
    },
    {
        "index": 118,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <3>, <1>, <5>, <0>.\nNode <2> is connected to nodes <4>, <3>, <5>, <0>.\nNode <3> is connected to nodes <4>, <2>, <1>, <0>.\nNode <1> is connected to nodes <4>, <3>, <5>, <0>.\nNode <5> is connected to nodes <4>, <2>, <1>, <0>.\nNode <0> is connected to nodes <4>, <2>, <3>, <1>, <5>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<4>, <3>, <5>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 119,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <4>, <0>.\nNode <1> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <3>, <1>, <2>.\nNode <2> is connected to node <0>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<3>, <1>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 120,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <3>.\nNode <5> is connected to nodes <1>, <2>.\nNode <3> is connected to nodes <1>, <4>.\nNode <2> is connected to nodes <5>, <0>.\nNode <4> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <4>, <2>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<3>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 121,
        "question": "Given a directed graph:\nNode <2> is connected to node <5>.\nNode <5> is connected to nodes <4>, <3>.\nNode <1> is connected to nodes <5>, <0>, <4>, <2>.\nNode <0> is connected to nodes <2>, <5>.\nNode <4> is connected to nodes <3>, <2>, <1>.\nNode <3> is connected to nodes <2>, <4>.\nWhich are the neighbor nodes of node <3>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<2>, <4>]",
        "type": "neighbor"
    },
    {
        "index": 122,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <0>, <2>.\nNode <4> is connected to node <1>.\nNode <0> is connected to nodes <1>, <5>.\nNode <2> is connected to nodes <1>, <3>.\nNode <3> is connected to node <2>.\nNode <5> is connected to node <0>.\nWhich are the neighbor nodes of node <1>? \nAnswer:\n",
        "answer": "[<4>, <0>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 123,
        "question": "Given an undirected graph:\nNode <5> is connected to node <1>.\nNode <1> is connected to nodes <5>, <2>, <3>.\nNode <2> is connected to nodes <1>, <0>.\nNode <3> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <4>, <2>.\nWhich are the neighbor nodes of node <1>? \nAnswer:\n",
        "answer": "[<5>, <2>, <3>]",
        "type": "neighbor"
    },
    {
        "index": 124,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <0>, <6>, <1>.\nNode <4> is connected to node <6>.\nNode <6> is connected to nodes <5>, <2>, <4>, <0>.\nNode <5> is connected to node <0>.\nNode <1> is connected to nodes <2>, <3>, <0>.\nWhich are the neighbor nodes of node <1>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<2>, <3>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 125,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <1>, <3>, <2>.\nNode <5> is connected to nodes <4>, <0>, <1>, <3>, <2>.\nNode <1> is connected to nodes <4>, <5>, <3>, <2>.\nNode <3> is connected to nodes <4>, <0>, <5>, <1>, <2>.\nNode <2> is connected to nodes <4>, <5>, <1>, <3>.\nNode <0> is connected to nodes <5>, <3>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<5>, <3>]",
        "type": "neighbor"
    },
    {
        "index": 126,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <4>, <2>.\nNode <3> is connected to nodes <4>, <5>.\nNode <2> is connected to nodes <1>, <5>, <0>.\nNode <5> is connected to nodes <3>, <2>.\nNode <0> is connected to node <2>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<1>, <3>]",
        "type": "neighbor"
    },
    {
        "index": 127,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <6>, <3>, <5>, <4>.\nNode <6> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <1>, <6>, <2>, <4>, <0>.\nNode <5> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <1>, <3>, <5>.\nNode <2> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <3>, <2>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<1>, <6>, <2>, <4>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 128,
        "question": "Given a directed graph:\nNode <3> is connected to node <2>.\nNode <5> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <1>, <2>, <5>.\nNode <1> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <2>, <5>, <4>, <1>.\nWhich are the neighbor nodes of node <0>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<2>, <5>, <4>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 129,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <5>, <1>.\nNode <3> is connected to node <4>.\nNode <5> is connected to nodes <1>, <0>, <2>.\nNode <1> is connected to nodes <0>, <2>, <5>.\nNode <2> is connected to nodes <4>, <5>.\nNode <4> is connected to node <3>.\nWhich are the neighbor nodes of node <0>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<3>, <5>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 130,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <3>.\nNode <2> is connected to node <5>.\nNode <3> is connected to nodes <5>, <4>.\nNode <4> is connected to nodes <3>, <1>, <0>.\nNode <1> is connected to node <4>.\nNode <0> is connected to node <4>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<5>]",
        "type": "neighbor"
    },
    {
        "index": 131,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <0>, <4>.\nNode <3> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <2>, <3>.\nNode <4> is connected to nodes <2>, <1>.\nNode <1> is connected to node <4>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<2>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 132,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <6>, <1>.\nNode <6> is connected to nodes <3>, <5>.\nNode <1> is connected to nodes <3>, <4>.\nNode <5> is connected to nodes <6>, <2>.\nNode <2> is connected to nodes <5>, <0>.\nNode <0> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <0>, <1>.\nWhich are the neighbor nodes of node <5>? \nAnswer:\n",
        "answer": "[<6>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 133,
        "question": "Given a directed graph:\nNode <3> is connected to node <1>.\nNode <1> is connected to nodes <4>, <5>, <2>, <0>.\nNode <0> is connected to nodes <5>, <3>.\nNode <5> is connected to node <3>.\nNode <4> is connected to nodes <3>, <0>, <1>.\nNode <2> is connected to nodes <3>, <0>, <4>.\nWhich are the neighbor nodes of node <0>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<5>, <3>]",
        "type": "neighbor"
    },
    {
        "index": 134,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <5>, <2>, <6>.\nNode <0> is connected to nodes <3>, <6>, <2>, <5>.\nNode <5> is connected to nodes <3>, <0>, <1>, <4>.\nNode <2> is connected to nodes <3>, <0>, <1>.\nNode <6> is connected to nodes <3>, <0>.\nNode <1> is connected to nodes <5>, <2>.\nNode <4> is connected to node <5>.\nWhich are the neighbor nodes of node <5>? \nAnswer:\n",
        "answer": "[<3>, <0>, <1>, <4>]",
        "type": "neighbor"
    },
    {
        "index": 135,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <1>, <3>, <4>, <2>.\nNode <1> is connected to nodes <0>, <2>, <5>, <6>.\nNode <3> is connected to nodes <0>, <4>, <2>, <5>, <6>, <1>.\nNode <4> is connected to nodes <5>, <6>, <0>.\nNode <2> is connected to nodes <1>, <3>, <0>.\nNode <0> is connected to node <3>.\nNode <5> is connected to nodes <6>, <1>, <0>, <4>, <2>.\nWhich are the neighbor nodes of node <2>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<1>, <3>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 136,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <3>, <1>, <2>, <4>.\nNode <1> is connected to nodes <3>, <0>.\nNode <2> is connected to node <0>.\nNode <4> is connected to node <0>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<0>]",
        "type": "neighbor"
    },
    {
        "index": 137,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <3>, <4>, <6>.\nNode <0> is connected to nodes <3>, <1>.\nNode <4> is connected to nodes <2>, <6>.\nNode <6> is connected to nodes <2>, <4>, <5>.\nNode <1> is connected to node <0>.\nNode <5> is connected to node <6>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<2>, <6>]",
        "type": "neighbor"
    },
    {
        "index": 138,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <5>, <6>, <3>.\nNode <4> is connected to nodes <2>, <0>, <3>.\nNode <5> is connected to nodes <2>, <0>, <1>, <6>, <3>.\nNode <6> is connected to nodes <2>, <0>, <5>, <1>.\nNode <3> is connected to nodes <2>, <4>, <5>, <1>.\nNode <0> is connected to nodes <4>, <5>, <1>, <6>.\nNode <1> is connected to nodes <0>, <5>, <6>, <3>.\nWhich are the neighbor nodes of node <1>? \nAnswer:\n",
        "answer": "[<0>, <5>, <6>, <3>]",
        "type": "neighbor"
    },
    {
        "index": 139,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <0>, <5>, <1>.\nNode <2> is connected to nodes <4>, <3>.\nNode <0> is connected to node <4>.\nNode <5> is connected to node <4>.\nNode <1> is connected to node <4>.\nNode <3> is connected to node <2>.\nWhich are the neighbor nodes of node <1>? \nAnswer:\n",
        "answer": "[<4>]",
        "type": "neighbor"
    },
    {
        "index": 140,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <6>, <5>, <3>.\nNode <6> is connected to node <5>.\nNode <5> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <0>, <5>, <1>, <2>.\nNode <4> is connected to nodes <1>, <3>, <0>.\nNode <1> is connected to nodes <2>, <6>, <4>, <5>.\nNode <2> is connected to nodes <3>, <5>, <1>.\nWhich are the neighbor nodes of node <1>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<2>, <6>, <4>, <5>]",
        "type": "neighbor"
    },
    {
        "index": 141,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <4>, <3>, <5>, <2>.\nNode <4> is connected to nodes <3>, <0>, <5>, <2>.\nNode <3> is connected to nodes <0>, <5>.\nNode <5> is connected to nodes <2>, <1>.\nNode <0> is connected to nodes <5>, <1>, <4>.\nWhich are the neighbor nodes of node <3>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<0>, <5>]",
        "type": "neighbor"
    },
    {
        "index": 142,
        "question": "Given an undirected graph:\nNode <2> is connected to node <0>.\nNode <0> is connected to nodes <2>, <1>, <4>.\nNode <1> is connected to nodes <0>, <3>.\nNode <4> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <1>, <4>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<0>]",
        "type": "neighbor"
    },
    {
        "index": 143,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>, <2>, <4>.\nNode <3> is connected to nodes <0>, <1>.\nNode <5> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <1> is connected to node <3>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<0>]",
        "type": "neighbor"
    },
    {
        "index": 144,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <4>, <1>.\nNode <5> is connected to nodes <4>, <0>.\nNode <1> is connected to nodes <3>, <2>, <0>.\nNode <0> is connected to nodes <5>, <1>.\nNode <2> is connected to node <1>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<3>, <5>]",
        "type": "neighbor"
    },
    {
        "index": 145,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <4>, <2>, <1>.\nNode <4> is connected to node <3>.\nNode <1> is connected to nodes <0>, <4>, <3>.\nNode <2> is connected to nodes <1>, <4>.\nWhich are the neighbor nodes of node <2>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<1>, <4>]",
        "type": "neighbor"
    },
    {
        "index": 146,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <1>, <4>, <0>.\nNode <3> is connected to node <5>.\nNode <1> is connected to nodes <5>, <2>.\nNode <4> is connected to node <5>.\nNode <0> is connected to node <5>.\nNode <2> is connected to node <1>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<5>]",
        "type": "neighbor"
    },
    {
        "index": 147,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <2>.\nNode <1> is connected to node <4>.\nNode <2> is connected to nodes <4>, <3>, <0>.\nNode <3> is connected to node <2>.\nNode <0> is connected to node <2>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<1>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 148,
        "question": "Given an undirected graph:\nNode <3> is connected to node <2>.\nNode <2> is connected to nodes <3>, <4>, <1>.\nNode <4> is connected to nodes <2>, <1>, <0>.\nNode <1> is connected to nodes <2>, <4>.\nNode <0> is connected to node <4>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<2>, <1>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 149,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <0>, <4>, <1>.\nNode <4> is connected to nodes <3>, <0>.\nNode <0> is connected to node <2>.\nNode <1> is connected to nodes <3>, <0>, <4>.\nWhich are the neighbor nodes of node <0>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<2>]",
        "type": "neighbor"
    },
    {
        "index": 150,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <0>, <1>.\nNode <2> is connected to nodes <1>, <4>.\nNode <5> is connected to node <4>.\nNode <0> is connected to node <2>.\nWhich are the neighbor nodes of node <1>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<4>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 151,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <1>, <0>.\nNode <3> is connected to nodes <4>, <5>, <1>, <0>, <2>.\nNode <1> is connected to nodes <4>, <3>, <5>, <0>, <2>.\nNode <0> is connected to nodes <4>, <3>, <5>, <1>, <2>.\nNode <5> is connected to nodes <3>, <1>, <0>, <2>.\nNode <2> is connected to nodes <3>, <5>, <1>, <0>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<3>, <1>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 152,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <0>.\nNode <1> is connected to node <2>.\nNode <0> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <0>, <4>.\nNode <4> is connected to node <3>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<1>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 153,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <0>, <4>, <3>, <1>.\nNode <2> is connected to node <5>.\nNode <0> is connected to node <5>.\nNode <4> is connected to node <5>.\nNode <3> is connected to node <5>.\nNode <1> is connected to node <5>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<5>]",
        "type": "neighbor"
    },
    {
        "index": 154,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <3>, <2>, <1>.\nNode <0> is connected to node <4>.\nNode <3> is connected to node <4>.\nNode <2> is connected to node <4>.\nNode <1> is connected to node <4>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<4>]",
        "type": "neighbor"
    },
    {
        "index": 155,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <2>, <6>, <1>, <3>.\nNode <5> is connected to nodes <4>, <2>, <0>.\nNode <2> is connected to nodes <4>, <5>.\nNode <6> is connected to nodes <4>, <3>, <0>.\nNode <1> is connected to nodes <4>, <0>.\nNode <3> is connected to nodes <4>, <6>.\nNode <0> is connected to nodes <5>, <6>, <1>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<5>, <6>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 156,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <3>, <2>, <1>.\nNode <1> is connected to nodes <0>, <4>.\nNode <0> is connected to node <1>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<2>, <4>]",
        "type": "neighbor"
    },
    {
        "index": 157,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <4>, <1>.\nNode <3> is connected to nodes <1>, <2>.\nNode <4> is connected to node <0>.\nNode <2> is connected to nodes <3>, <1>, <0>.\nWhich are the neighbor nodes of node <0>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<3>, <4>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 158,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <4>, <2>.\nNode <5> is connected to nodes <3>, <2>.\nNode <4> is connected to nodes <3>, <1>.\nNode <2> is connected to nodes <3>, <5>, <0>.\nNode <1> is connected to node <4>.\nNode <0> is connected to node <2>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<5>, <4>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 159,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <3>, <1>, <0>, <5>.\nNode <2> is connected to nodes <4>, <3>, <1>.\nNode <3> is connected to nodes <4>, <2>, <1>, <6>, <0>, <5>.\nNode <1> is connected to nodes <4>, <2>, <3>, <6>, <5>.\nNode <0> is connected to nodes <4>, <3>, <6>.\nNode <5> is connected to nodes <4>, <3>, <1>.\nNode <6> is connected to nodes <3>, <1>, <0>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<4>, <3>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 160,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <5>, <3>, <2>.\nNode <0> is connected to node <1>.\nNode <5> is connected to nodes <1>, <4>.\nNode <3> is connected to node <1>.\nNode <2> is connected to node <1>.\nNode <4> is connected to node <5>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<1>]",
        "type": "neighbor"
    },
    {
        "index": 161,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <2>, <4>, <3>.\nNode <0> is connected to node <5>.\nNode <2> is connected to node <5>.\nNode <4> is connected to nodes <5>, <1>.\nNode <3> is connected to node <5>.\nNode <1> is connected to node <4>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<5>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 162,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <3>, <4>, <1>.\nNode <2> is connected to node <3>.\nNode <1> is connected to nodes <0>, <2>, <3>, <4>.\nNode <3> is connected to node <4>.\nWhich are the neighbor nodes of node <2>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<3>]",
        "type": "neighbor"
    },
    {
        "index": 163,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <2>, <1>.\nNode <4> is connected to node <3>.\nNode <2> is connected to node <3>.\nNode <1> is connected to nodes <3>, <0>.\nNode <0> is connected to node <1>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<3>]",
        "type": "neighbor"
    },
    {
        "index": 164,
        "question": "Given an undirected graph:\nNode <3> is connected to node <1>.\nNode <1> is connected to nodes <3>, <4>, <0>.\nNode <4> is connected to nodes <1>, <2>.\nNode <0> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <4>, <0>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<1>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 165,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <3>, <1>, <4>, <2>.\nNode <4> is connected to node <0>.\nNode <2> is connected to node <0>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<0>]",
        "type": "neighbor"
    },
    {
        "index": 166,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <0>, <1>, <3>, <4>, <2>.\nNode <0> is connected to nodes <6>, <3>.\nNode <1> is connected to nodes <6>, <3>.\nNode <3> is connected to nodes <6>, <0>, <1>, <4>, <5>.\nNode <4> is connected to nodes <6>, <3>, <2>.\nNode <2> is connected to nodes <6>, <4>.\nNode <5> is connected to node <3>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<6>, <3>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 167,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <1>, <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <5> is connected to node <3>.\nNode <4> is connected to nodes <0>, <2>, <3>.\nWhich are the neighbor nodes of node <3>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<0>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 168,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <0>, <4>.\nNode <3> is connected to nodes <2>, <1>.\nNode <0> is connected to node <2>.\nNode <4> is connected to nodes <2>, <5>.\nNode <1> is connected to nodes <3>, <5>.\nNode <5> is connected to nodes <1>, <4>.\nWhich are the neighbor nodes of node <1>? \nAnswer:\n",
        "answer": "[<3>, <5>]",
        "type": "neighbor"
    },
    {
        "index": 169,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <0>, <3>, <1>, <5>.\nNode <4> is connected to nodes <2>, <0>, <1>, <5>.\nNode <0> is connected to nodes <2>, <4>, <3>, <1>.\nNode <3> is connected to nodes <2>, <0>, <1>, <5>.\nNode <1> is connected to nodes <2>, <4>, <0>, <3>, <5>.\nNode <5> is connected to nodes <2>, <4>, <3>, <1>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<2>, <4>, <3>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 170,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <1>, <0>.\nNode <2> is connected to nodes <4>, <3>.\nNode <1> is connected to nodes <4>, <3>.\nNode <0> is connected to node <4>.\nNode <3> is connected to nodes <2>, <1>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<4>, <3>]",
        "type": "neighbor"
    },
    {
        "index": 171,
        "question": "Given an undirected graph:\nNode <4> is connected to node <0>.\nNode <0> is connected to nodes <4>, <1>, <2>.\nNode <1> is connected to nodes <0>, <3>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <1>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<0>]",
        "type": "neighbor"
    },
    {
        "index": 172,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <2>, <6>, <3>.\nNode <4> is connected to nodes <0>, <2>, <6>, <3>.\nNode <2> is connected to nodes <0>, <4>, <6>, <3>, <5>.\nNode <6> is connected to nodes <0>, <4>, <2>, <3>, <1>, <5>.\nNode <3> is connected to nodes <0>, <4>, <2>, <6>, <1>, <5>.\nNode <5> is connected to nodes <2>, <6>, <3>.\nNode <1> is connected to nodes <6>, <3>.\nWhich are the neighbor nodes of node <5>? \nAnswer:\n",
        "answer": "[<2>, <6>, <3>]",
        "type": "neighbor"
    },
    {
        "index": 173,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <5>, <6>, <3>.\nNode <1> is connected to node <5>.\nNode <6> is connected to nodes <4>, <2>.\nNode <3> is connected to nodes <4>, <2>, <0>.\nNode <2> is connected to nodes <6>, <3>.\nNode <0> is connected to node <3>.\nWhich are the neighbor nodes of node <1>? \nAnswer:\n",
        "answer": "[<5>]",
        "type": "neighbor"
    },
    {
        "index": 174,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <5>, <6>.\nNode <1> is connected to node <5>.\nNode <5> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <4>, <5>, <6>, <2>.\nNode <4> is connected to nodes <2>, <3>, <1>.\nNode <0> is connected to nodes <6>, <2>, <3>.\nWhich are the neighbor nodes of node <6>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[]",
        "type": "neighbor"
    },
    {
        "index": 175,
        "question": "Given a directed graph:\nNode <4> is connected to node <0>.\nNode <0> is connected to nodes <3>, <2>.\nNode <3> is connected to node <1>.\nNode <1> is connected to nodes <2>, <0>.\nWhich are the neighbor nodes of node <2>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[]",
        "type": "neighbor"
    },
    {
        "index": 176,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5>, <2>.\nNode <5> is connected to nodes <3>, <4>, <0>.\nNode <2> is connected to nodes <3>, <6>, <4>, <1>, <5>.\nNode <3> is connected to nodes <1>, <2>.\nNode <4> is connected to nodes <5>, <3>, <6>.\nNode <6> is connected to nodes <5>, <3>.\nNode <1> is connected to nodes <5>, <3>, <6>.\nWhich are the neighbor nodes of node <3>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<1>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 177,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <0>, <1>, <5>.\nNode <2> is connected to nodes <0>, <3>, <1>, <5>.\nNode <3> is connected to nodes <2>, <1>, <5>.\nNode <1> is connected to nodes <3>, <4>, <2>, <5>.\nNode <5> is connected to nodes <3>, <4>, <2>, <1>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<0>, <3>, <1>, <5>]",
        "type": "neighbor"
    },
    {
        "index": 178,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <1>.\nNode <3> is connected to node <2>.\nNode <1> is connected to nodes <2>, <0>, <4>.\nNode <0> is connected to node <1>.\nNode <4> is connected to node <1>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<1>]",
        "type": "neighbor"
    },
    {
        "index": 179,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <1>, <0>, <4>.\nNode <0> is connected to nodes <1>, <3>, <2>.\nNode <4> is connected to node <3>.\nNode <2> is connected to node <0>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<1>, <0>, <4>]",
        "type": "neighbor"
    },
    {
        "index": 180,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <1>.\nNode <4> is connected to node <1>.\nNode <1> is connected to nodes <3>, <2>, <4>.\nNode <2> is connected to node <3>.\nNode <0> is connected to nodes <4>, <3>.\nWhich are the neighbor nodes of node <4>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<1>]",
        "type": "neighbor"
    },
    {
        "index": 181,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <0>, <1>.\nNode <2> is connected to nodes <0>, <1>, <3>.\nNode <0> is connected to nodes <4>, <3>.\nNode <1> is connected to node <3>.\nNode <3> is connected to nodes <2>, <0>, <4>.\nWhich are the neighbor nodes of node <1>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<3>]",
        "type": "neighbor"
    },
    {
        "index": 182,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <5>, <3>.\nNode <1> is connected to node <0>.\nNode <5> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <1>, <5>, <4>.\nNode <0> is connected to nodes <2>, <1>, <5>.\nWhich are the neighbor nodes of node <1>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<0>]",
        "type": "neighbor"
    },
    {
        "index": 183,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <4>, <5>, <2>.\nNode <2> is connected to nodes <4>, <0>, <3>.\nNode <5> is connected to nodes <0>, <1>.\nNode <1> is connected to node <5>.\nNode <3> is connected to node <2>.\nWhich are the neighbor nodes of node <1>? \nAnswer:\n",
        "answer": "[<5>]",
        "type": "neighbor"
    },
    {
        "index": 184,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <6>, <3>, <1>, <0>.\nNode <2> is connected to nodes <5>, <3>.\nNode <6> is connected to nodes <5>, <3>.\nNode <3> is connected to nodes <5>, <2>, <1>, <6>.\nNode <1> is connected to nodes <5>, <0>, <3>, <4>.\nNode <0> is connected to nodes <5>, <1>.\nNode <4> is connected to node <1>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<5>, <2>, <1>, <6>]",
        "type": "neighbor"
    },
    {
        "index": 185,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <6>, <0>, <1>.\nNode <2> is connected to node <3>.\nNode <4> is connected to nodes <0>, <1>, <6>.\nWhich are the neighbor nodes of node <5>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<6>, <0>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 186,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <3>, <0>, <4>.\nNode <2> is connected to nodes <4>, <1>.\nNode <3> is connected to nodes <1>, <2>.\nNode <0> is connected to node <4>.\nWhich are the neighbor nodes of node <4>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<1>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 187,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <0>, <3>, <4>.\nNode <2> is connected to nodes <5>, <3>, <1>.\nNode <0> is connected to node <5>.\nNode <3> is connected to nodes <5>, <2>.\nNode <4> is connected to node <5>.\nNode <1> is connected to node <2>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<5>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 188,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <6>, <1>, <2>.\nNode <0> is connected to nodes <6>, <2>, <3>.\nNode <6> is connected to nodes <1>, <2>, <3>, <0>, <5>.\nNode <1> is connected to nodes <2>, <4>, <3>, <0>, <6>.\nNode <2> is connected to nodes <3>, <0>, <6>.\nNode <3> is connected to nodes <0>, <6>, <1>, <2>, <4>.\nNode <5> is connected to nodes <1>, <2>, <4>, <0>.\nWhich are the neighbor nodes of node <5>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<1>, <2>, <4>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 189,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <2>, <0>.\nNode <3> is connected to nodes <2>, <1>.\nNode <2> is connected to node <4>.\nNode <0> is connected to nodes <1>, <4>, <2>, <5>.\nNode <4> is connected to nodes <5>, <1>.\nNode <5> is connected to nodes <1>, <4>.\nWhich are the neighbor nodes of node <4>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<5>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 190,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <1>, <3>, <2>.\nNode <4> is connected to nodes <0>, <1>, <3>, <5>, <2>, <6>.\nNode <1> is connected to nodes <0>, <4>, <3>, <5>, <2>.\nNode <3> is connected to nodes <0>, <4>, <1>, <5>, <6>.\nNode <2> is connected to nodes <0>, <4>, <1>, <5>, <6>.\nNode <5> is connected to nodes <4>, <1>, <3>, <2>, <6>.\nNode <6> is connected to nodes <4>, <3>, <5>, <2>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<0>, <4>, <1>, <5>, <6>]",
        "type": "neighbor"
    },
    {
        "index": 191,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <0>, <6>, <3>.\nNode <5> is connected to node <2>.\nNode <0> is connected to node <2>.\nNode <6> is connected to nodes <2>, <1>.\nNode <3> is connected to node <2>.\nNode <1> is connected to nodes <6>, <4>.\nNode <4> is connected to node <1>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<5>, <0>, <6>, <3>]",
        "type": "neighbor"
    },
    {
        "index": 192,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <3>, <5>, <0>, <1>, <6>, <2>.\nNode <0> is connected to nodes <6>, <5>.\nNode <6> is connected to nodes <2>, <0>, <1>.\nNode <2> is connected to nodes <3>, <0>, <6>.\nNode <3> is connected to nodes <1>, <6>, <4>.\nNode <5> is connected to nodes <6>, <2>, <4>.\nWhich are the neighbor nodes of node <2>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<3>, <0>, <6>]",
        "type": "neighbor"
    },
    {
        "index": 193,
        "question": "Given an undirected graph:\nNode <5> is connected to node <3>.\nNode <3> is connected to nodes <5>, <2>, <4>, <0>.\nNode <2> is connected to nodes <3>, <0>.\nNode <4> is connected to nodes <3>, <1>.\nNode <0> is connected to nodes <3>, <2>.\nNode <1> is connected to node <4>.\nWhich are the neighbor nodes of node <5>? \nAnswer:\n",
        "answer": "[<3>]",
        "type": "neighbor"
    },
    {
        "index": 194,
        "question": "Given a directed graph:\nNode <2> is connected to node <4>.\nNode <4> is connected to nodes <2>, <3>, <5>.\nNode <3> is connected to node <4>.\nNode <5> is connected to nodes <1>, <0>, <3>.\nNode <1> is connected to node <2>.\nNode <0> is connected to node <1>.\nWhich are the neighbor nodes of node <1>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<2>]",
        "type": "neighbor"
    },
    {
        "index": 195,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <3>, <5>, <4>.\nNode <3> is connected to node <6>.\nNode <4> is connected to nodes <6>, <5>.\nNode <0> is connected to nodes <1>, <4>, <6>, <3>.\nNode <1> is connected to node <3>.\nNode <2> is connected to node <0>.\nWhich are the neighbor nodes of node <4>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<6>, <5>]",
        "type": "neighbor"
    },
    {
        "index": 196,
        "question": "Given a directed graph:\nNode <0> is connected to node <3>.\nNode <3> is connected to node <2>.\nNode <4> is connected to nodes <3>, <2>.\nNode <1> is connected to nodes <6>, <0>.\nNode <6> is connected to nodes <4>, <1>.\nNode <5> is connected to nodes <6>, <4>, <3>.\nWhich are the neighbor nodes of node <5>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<6>, <4>, <3>]",
        "type": "neighbor"
    },
    {
        "index": 197,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <5>, <0>, <1>.\nNode <1> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <1>, <2>.\nNode <0> is connected to nodes <2>, <5>, <3>.\nWhich are the neighbor nodes of node <5>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<4>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 198,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <5>, <2>, <0>.\nNode <3> is connected to nodes <1>, <4>, <5>, <2>.\nNode <5> is connected to nodes <1>, <3>, <2>, <0>.\nNode <2> is connected to nodes <1>, <3>, <4>, <5>, <0>.\nNode <0> is connected to nodes <1>, <4>, <5>, <2>.\nNode <4> is connected to nodes <3>, <2>, <0>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<1>, <4>, <5>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 199,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <2>, <1>.\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <4>, <3>, <5>.\nNode <3> is connected to nodes <1>, <0>.\nNode <5> is connected to node <1>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<4>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 200,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <0>, <1>.\nNode <2> is connected to node <4>.\nNode <0> is connected to node <1>.\nNode <1> is connected to nodes <4>, <2>, <0>.\nNode <3> is connected to nodes <4>, <1>.\nWhich are the neighbor nodes of node <3>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<4>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 201,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <1>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <0>, <2>.\nNode <4> is connected to nodes <0>, <3>.\nNode <3> is connected to node <4>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<0>, <3>]",
        "type": "neighbor"
    },
    {
        "index": 202,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <5>, <2>, <3>.\nNode <0> is connected to node <1>.\nNode <5> is connected to node <1>.\nNode <2> is connected to nodes <1>, <4>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <2>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<2>]",
        "type": "neighbor"
    },
    {
        "index": 203,
        "question": "Given a directed graph:\nNode <2> is connected to node <3>.\nNode <3> is connected to nodes <1>, <4>.\nNode <5> is connected to nodes <0>, <3>, <2>.\nNode <0> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <0>, <2>, <5>.\nNode <4> is connected to nodes <0>, <5>.\nWhich are the neighbor nodes of node <0>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<1>, <4>]",
        "type": "neighbor"
    },
    {
        "index": 204,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <4>, <5>, <6>, <2>, <3>.\nNode <0> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <1>.\nNode <6> is connected to node <1>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <1>.\nWhich are the neighbor nodes of node <5>? \nAnswer:\n",
        "answer": "[<1>]",
        "type": "neighbor"
    },
    {
        "index": 205,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <4>, <0>.\nNode <2> is connected to nodes <1>, <0>.\nNode <4> is connected to node <1>.\nNode <0> is connected to nodes <1>, <2>, <3>.\nNode <3> is connected to node <0>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<1>]",
        "type": "neighbor"
    },
    {
        "index": 206,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <2>, <5>, <6>, <4>.\nNode <1> is connected to nodes <3>, <2>, <5>, <6>.\nNode <2> is connected to nodes <3>, <1>, <0>.\nNode <5> is connected to nodes <3>, <1>.\nNode <6> is connected to nodes <3>, <1>.\nNode <4> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <4>, <2>.\nWhich are the neighbor nodes of node <6>? \nAnswer:\n",
        "answer": "[<3>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 207,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <5>.\nNode <1> is connected to node <4>.\nNode <5> is connected to nodes <4>, <0>, <2>, <3>.\nNode <0> is connected to node <5>.\nNode <2> is connected to node <5>.\nNode <3> is connected to node <5>.\nWhich are the neighbor nodes of node <1>? \nAnswer:\n",
        "answer": "[<4>]",
        "type": "neighbor"
    },
    {
        "index": 208,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <5>, <4>.\nNode <1> is connected to nodes <5>, <3>, <4>.\nNode <5> is connected to node <4>.\nNode <4> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <0>, <5>.\nNode <0> is connected to nodes <1>, <3>.\nWhich are the neighbor nodes of node <2>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<1>, <5>, <4>]",
        "type": "neighbor"
    },
    {
        "index": 209,
        "question": "Given a directed graph:\nNode <1> is connected to node <4>.\nNode <4> is connected to nodes <1>, <5>.\nNode <2> is connected to nodes <5>, <4>.\nNode <0> is connected to node <1>.\nNode <3> is connected to nodes <2>, <0>.\nWhich are the neighbor nodes of node <4>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<1>, <5>]",
        "type": "neighbor"
    },
    {
        "index": 210,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <4>.\nNode <2> is connected to node <3>.\nNode <4> is connected to nodes <3>, <1>, <0>.\nNode <1> is connected to node <4>.\nNode <0> is connected to node <4>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<2>, <4>]",
        "type": "neighbor"
    },
    {
        "index": 211,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <1>, <5>, <0>, <4>.\nNode <3> is connected to node <2>.\nNode <1> is connected to node <2>.\nNode <5> is connected to node <2>.\nNode <0> is connected to node <2>.\nNode <4> is connected to node <2>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<2>]",
        "type": "neighbor"
    },
    {
        "index": 212,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <1>, <2>, <0>.\nNode <4> is connected to node <1>.\nNode <2> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <3>, <2>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<3>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 213,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <6>, <4>, <1>, <5>.\nNode <6> is connected to nodes <2>, <0>, <3>, <4>, <1>.\nNode <4> is connected to nodes <2>, <0>, <6>, <1>, <5>.\nNode <1> is connected to nodes <2>, <0>, <6>, <4>, <5>.\nNode <5> is connected to nodes <2>, <0>, <4>, <1>.\nNode <0> is connected to nodes <6>, <4>, <1>, <5>.\nNode <3> is connected to node <6>.\nWhich are the neighbor nodes of node <6>? \nAnswer:\n",
        "answer": "[<2>, <0>, <3>, <4>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 214,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <6>.\nNode <1> is connected to nodes <0>, <3>.\nNode <6> is connected to nodes <0>, <5>.\nNode <3> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <4>, <5>.\nNode <5> is connected to nodes <2>, <6>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<1>, <6>]",
        "type": "neighbor"
    },
    {
        "index": 215,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <1>, <2>, <5>, <6>.\nNode <4> is connected to nodes <0>, <1>, <2>, <5>, <6>.\nNode <1> is connected to nodes <0>, <4>, <5>, <3>.\nNode <2> is connected to nodes <0>, <4>, <5>, <6>, <3>.\nNode <5> is connected to nodes <0>, <4>, <1>, <2>.\nNode <6> is connected to nodes <0>, <4>, <2>, <3>.\nNode <3> is connected to nodes <1>, <2>, <6>.\nWhich are the neighbor nodes of node <5>? \nAnswer:\n",
        "answer": "[<0>, <4>, <1>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 216,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <3>, <2>, <1>.\nNode <5> is connected to nodes <4>, <0>, <3>, <2>.\nNode <3> is connected to nodes <4>, <5>, <0>, <2>, <1>.\nNode <2> is connected to nodes <4>, <5>, <0>, <3>, <1>.\nNode <1> is connected to nodes <4>, <0>, <3>, <2>.\nNode <0> is connected to nodes <5>, <3>, <2>, <1>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<5>, <3>, <2>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 217,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <4>, <0>, <1>.\nNode <3> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to node <2>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<2>, <3>]",
        "type": "neighbor"
    },
    {
        "index": 218,
        "question": "Given an undirected graph:\nNode <3> is connected to node <0>.\nNode <0> is connected to nodes <3>, <4>, <5>, <2>, <1>.\nNode <4> is connected to nodes <0>, <2>, <6>.\nNode <2> is connected to nodes <4>, <0>, <6>, <1>.\nNode <6> is connected to nodes <4>, <5>, <2>, <1>.\nNode <5> is connected to nodes <0>, <6>, <1>.\nNode <1> is connected to nodes <0>, <5>, <2>, <6>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<3>, <4>, <5>, <2>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 219,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <2>, <3>, <0>.\nNode <4> is connected to node <1>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <0> is connected to node <1>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<1>]",
        "type": "neighbor"
    },
    {
        "index": 220,
        "question": "Given a directed graph:\nNode <4> is connected to node <3>.\nNode <3> is connected to nodes <5>, <4>.\nNode <2> is connected to node <6>.\nNode <6> is connected to node <4>.\nNode <1> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <5>, <4>, <3>.\nWhich are the neighbor nodes of node <1>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<0>, <3>]",
        "type": "neighbor"
    },
    {
        "index": 221,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <3>, <1>, <4>.\nNode <3> is connected to nodes <1>, <5>, <0>.\nNode <1> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <1>, <5>.\nNode <2> is connected to nodes <4>, <5>.\nWhich are the neighbor nodes of node <1>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<4>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 222,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <3>, <0>, <1>, <4>.\nNode <5> is connected to node <2>.\nNode <3> is connected to node <2>.\nNode <0> is connected to node <2>.\nNode <1> is connected to node <2>.\nNode <4> is connected to node <2>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<2>]",
        "type": "neighbor"
    },
    {
        "index": 223,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2>, <0>, <4>.\nNode <2> is connected to nodes <1>, <4>, <3>, <5>.\nNode <0> is connected to node <5>.\nNode <4> is connected to nodes <2>, <0>, <1>.\nNode <1> is connected to nodes <4>, <0>.\nNode <3> is connected to nodes <5>, <2>.\nWhich are the neighbor nodes of node <1>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<4>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 224,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <1>, <3>.\nNode <2> is connected to node <4>.\nNode <1> is connected to nodes <4>, <0>, <5>.\nNode <3> is connected to node <4>.\nNode <0> is connected to node <1>.\nNode <5> is connected to node <1>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<4>]",
        "type": "neighbor"
    },
    {
        "index": 225,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <5>, <3>, <4>.\nNode <2> is connected to node <5>.\nNode <3> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <1>, <3>, <0>.\nNode <0> is connected to node <4>.\nWhich are the neighbor nodes of node <1>? \nAnswer:\n",
        "answer": "[<5>, <3>, <4>]",
        "type": "neighbor"
    },
    {
        "index": 226,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <5>, <2>, <3>.\nNode <4> is connected to node <5>.\nNode <2> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <2>, <3>.\nWhich are the neighbor nodes of node <1>? \nAnswer:\n",
        "answer": "[<2>, <3>]",
        "type": "neighbor"
    },
    {
        "index": 227,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <3>, <2>, <1>.\nNode <5> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <4>, <5>, <0>, <2>.\nNode <2> is connected to nodes <4>, <3>, <1>.\nNode <1> is connected to nodes <4>, <0>, <2>.\nNode <0> is connected to nodes <3>, <1>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<4>, <3>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 228,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <2>, <1>.\nNode <4> is connected to node <3>.\nNode <2> is connected to node <3>.\nNode <1> is connected to nodes <3>, <0>.\nNode <0> is connected to node <1>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<1>]",
        "type": "neighbor"
    },
    {
        "index": 229,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <3>, <0>.\nNode <1> is connected to nodes <3>, <2>.\nNode <0> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <1>, <0>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<3>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 230,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <4>, <2>.\nNode <3> is connected to node <4>.\nNode <2> is connected to node <0>.\nNode <1> is connected to node <4>.\nWhich are the neighbor nodes of node <3>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<4>]",
        "type": "neighbor"
    },
    {
        "index": 231,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <4>, <6>, <5>, <1>.\nNode <0> is connected to nodes <3>, <1>.\nNode <4> is connected to nodes <3>, <2>.\nNode <6> is connected to nodes <3>, <2>.\nNode <5> is connected to nodes <3>, <2>.\nNode <1> is connected to nodes <3>, <0>, <2>.\nNode <2> is connected to nodes <4>, <1>, <6>, <5>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<0>, <4>, <6>, <5>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 232,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <4>, <3>.\nNode <0> is connected to nodes <4>, <2>.\nNode <3> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <0>, <3>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<4>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 233,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <3>, <0>, <5>.\nNode <5> is connected to nodes <1>, <2>.\nNode <4> is connected to node <2>.\nNode <2> is connected to nodes <4>, <5>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<3>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 234,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <0>, <3>, <2>.\nNode <1> is connected to nodes <0>, <3>, <2>, <4>.\nNode <0> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <1>, <0>.\nWhich are the neighbor nodes of node <3>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<2>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 235,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <1>, <5>, <3>.\nNode <0> is connected to node <4>.\nNode <1> is connected to nodes <4>, <5>.\nNode <5> is connected to nodes <4>, <2>, <1>.\nNode <3> is connected to node <4>.\nNode <2> is connected to node <5>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<4>]",
        "type": "neighbor"
    },
    {
        "index": 236,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <2>, <3>.\nNode <4> is connected to nodes <5>, <0>, <2>, <6>.\nNode <2> is connected to nodes <5>, <4>, <0>, <6>, <1>.\nNode <3> is connected to nodes <5>, <6>.\nNode <0> is connected to nodes <4>, <2>.\nNode <6> is connected to nodes <4>, <2>, <3>.\nNode <1> is connected to node <2>.\nWhich are the neighbor nodes of node <1>? \nAnswer:\n",
        "answer": "[<2>]",
        "type": "neighbor"
    },
    {
        "index": 237,
        "question": "Given a directed graph:\nNode <6> is connected to node <3>.\nNode <3> is connected to nodes <1>, <6>.\nNode <4> is connected to nodes <0>, <2>.\nNode <1> is connected to nodes <6>, <2>.\nNode <5> is connected to nodes <1>, <0>, <6>, <4>.\nWhich are the neighbor nodes of node <2>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[]",
        "type": "neighbor"
    },
    {
        "index": 238,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <5>, <6>, <3>, <2>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <1>.\nNode <6> is connected to nodes <1>, <0>.\nNode <3> is connected to node <1>.\nNode <2> is connected to node <1>.\nNode <0> is connected to node <6>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<1>]",
        "type": "neighbor"
    },
    {
        "index": 239,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <5>, <0>, <4>, <1>.\nNode <5> is connected to nodes <4>, <6>, <3>.\nNode <6> is connected to nodes <0>, <2>, <4>.\nNode <0> is connected to nodes <2>, <4>, <1>, <3>.\nNode <2> is connected to nodes <4>, <6>, <3>, <0>.\nNode <4> is connected to nodes <1>, <5>, <0>, <2>.\nWhich are the neighbor nodes of node <2>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<4>, <6>, <3>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 240,
        "question": "Given a directed graph:\nNode <5> is connected to node <2>.\nNode <2> is connected to nodes <5>, <4>.\nNode <4> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <2>, <4>, <3>.\nNode <0> is connected to nodes <1>, <5>, <4>.\nWhich are the neighbor nodes of node <2>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<5>, <4>]",
        "type": "neighbor"
    },
    {
        "index": 241,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <1>, <4>, <2>, <3>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<0>]",
        "type": "neighbor"
    },
    {
        "index": 242,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <1>, <4>, <0>.\nNode <1> is connected to nodes <0>, <2>, <5>.\nNode <4> is connected to nodes <2>, <1>.\nNode <0> is connected to nodes <2>, <5>, <3>.\nNode <2> is connected to nodes <3>, <0>.\nWhich are the neighbor nodes of node <3>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[]",
        "type": "neighbor"
    },
    {
        "index": 243,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <2>, <0>.\nNode <4> is connected to nodes <1>, <2>, <0>, <5>, <3>.\nNode <2> is connected to nodes <1>, <4>, <0>, <3>.\nNode <0> is connected to nodes <1>, <4>, <2>, <5>, <3>.\nNode <5> is connected to nodes <4>, <0>.\nNode <3> is connected to nodes <4>, <2>, <0>.\nWhich are the neighbor nodes of node <1>? \nAnswer:\n",
        "answer": "[<4>, <2>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 244,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <0>.\nNode <1> is connected to node <2>.\nNode <0> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <0>, <3>.\nNode <3> is connected to node <4>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<2>, <4>]",
        "type": "neighbor"
    },
    {
        "index": 245,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <4>, <1>, <0>.\nNode <2> is connected to nodes <3>, <0>.\nNode <4> is connected to node <3>.\nNode <1> is connected to node <3>.\nNode <0> is connected to nodes <3>, <2>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<3>]",
        "type": "neighbor"
    },
    {
        "index": 246,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <3>, <0>.\nNode <4> is connected to nodes <2>, <0>.\nNode <3> is connected to nodes <2>, <1>.\nNode <0> is connected to nodes <2>, <4>.\nNode <1> is connected to node <3>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<2>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 247,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <2>, <3>, <4>, <0>.\nNode <2> is connected to nodes <6>, <4>.\nNode <3> is connected to nodes <6>, <1>, <4>.\nNode <4> is connected to nodes <6>, <2>, <1>, <3>, <5>.\nNode <0> is connected to nodes <6>, <1>.\nNode <1> is connected to nodes <0>, <3>, <4>.\nNode <5> is connected to node <4>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<6>, <4>]",
        "type": "neighbor"
    },
    {
        "index": 248,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <1>, <3>.\nNode <2> is connected to node <4>.\nNode <1> is connected to node <4>.\nNode <3> is connected to nodes <4>, <0>.\nNode <0> is connected to node <3>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<3>]",
        "type": "neighbor"
    },
    {
        "index": 249,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <0>, <3>, <5>.\nNode <0> is connected to nodes <1>, <3>, <2>.\nNode <5> is connected to nodes <2>, <0>.\nNode <1> is connected to node <4>.\nNode <4> is connected to nodes <1>, <5>, <2>.\nWhich are the neighbor nodes of node <1>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<4>]",
        "type": "neighbor"
    },
    {
        "index": 250,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <5>, <1>, <3>.\nNode <0> is connected to nodes <5>, <3>, <4>, <2>.\nNode <5> is connected to node <3>.\nNode <1> is connected to nodes <3>, <4>, <2>, <5>.\nNode <3> is connected to nodes <4>, <5>, <1>, <6>.\nNode <4> is connected to nodes <2>, <0>, <5>, <1>.\nNode <6> is connected to nodes <3>, <2>, <0>, <1>.\nWhich are the neighbor nodes of node <0>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<5>, <3>, <4>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 251,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <2>.\nNode <0> is connected to node <4>.\nNode <2> is connected to nodes <1>, <4>, <3>.\nNode <3> is connected to nodes <0>, <2>, <4>.\nWhich are the neighbor nodes of node <0>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<4>]",
        "type": "neighbor"
    },
    {
        "index": 252,
        "question": "Given an undirected graph:\nNode <1> is connected to node <2>.\nNode <2> is connected to nodes <1>, <4>, <3>.\nNode <4> is connected to nodes <2>, <0>.\nNode <3> is connected to nodes <2>, <5>.\nNode <6> is connected to nodes <0>, <5>.\nNode <0> is connected to nodes <6>, <4>.\nNode <5> is connected to nodes <6>, <3>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<1>, <4>, <3>]",
        "type": "neighbor"
    },
    {
        "index": 253,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <5>, <4>.\nNode <0> is connected to nodes <2>, <5>, <3>.\nNode <5> is connected to nodes <4>, <3>, <2>.\nNode <4> is connected to nodes <0>, <2>.\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <5>, <3>, <0>.\nWhich are the neighbor nodes of node <1>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<2>, <3>]",
        "type": "neighbor"
    },
    {
        "index": 254,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <3>.\nNode <0> is connected to node <5>.\nNode <3> is connected to nodes <5>, <2>, <4>, <1>.\nNode <2> is connected to node <3>.\nNode <4> is connected to node <3>.\nNode <1> is connected to node <3>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<3>]",
        "type": "neighbor"
    },
    {
        "index": 255,
        "question": "Given an undirected graph:\nNode <0> is connected to node <1>.\nNode <1> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <4>, <2>.\nNode <2> is connected to node <3>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<3>]",
        "type": "neighbor"
    },
    {
        "index": 256,
        "question": "Given a directed graph:\nNode <0> is connected to node <1>.\nNode <1> is connected to nodes <3>, <4>, <0>.\nNode <3> is connected to nodes <4>, <2>, <0>.\nNode <4> is connected to nodes <2>, <0>, <3>.\nNode <2> is connected to nodes <0>, <3>.\nWhich are the neighbor nodes of node <3>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<4>, <2>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 257,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <2>, <5>, <4>, <0>.\nNode <2> is connected to nodes <6>, <3>, <4>, <0>, <1>.\nNode <5> is connected to nodes <6>, <3>, <0>, <1>.\nNode <4> is connected to nodes <6>, <2>, <3>, <0>.\nNode <0> is connected to nodes <6>, <2>, <3>, <5>, <4>, <1>.\nNode <3> is connected to nodes <2>, <5>, <4>, <0>.\nNode <1> is connected to nodes <2>, <5>, <0>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<2>, <5>, <4>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 258,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <3>, <0>, <5>.\nNode <2> is connected to nodes <3>, <1>, <0>.\nNode <0> is connected to nodes <4>, <2>.\nNode <5> is connected to node <4>.\nNode <1> is connected to node <2>.\nWhich are the neighbor nodes of node <5>? \nAnswer:\n",
        "answer": "[<4>]",
        "type": "neighbor"
    },
    {
        "index": 259,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <0>, <3>.\nNode <1> is connected to nodes <2>, <4>.\nNode <0> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <2>, <0>.\nNode <4> is connected to node <1>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<2>, <3>]",
        "type": "neighbor"
    },
    {
        "index": 260,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <4>, <2>.\nNode <5> is connected to node <2>.\nNode <4> is connected to nodes <2>, <1>, <3>.\nNode <3> is connected to nodes <4>, <5>.\nNode <0> is connected to node <5>.\nWhich are the neighbor nodes of node <3>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<4>, <5>]",
        "type": "neighbor"
    },
    {
        "index": 261,
        "question": "Given an undirected graph:\nNode <5> is connected to node <0>.\nNode <0> is connected to nodes <5>, <2>, <4>.\nNode <2> is connected to nodes <0>, <3>.\nNode <4> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <2>, <4>, <1>.\nNode <1> is connected to node <3>.\nWhich are the neighbor nodes of node <5>? \nAnswer:\n",
        "answer": "[<0>]",
        "type": "neighbor"
    },
    {
        "index": 262,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <1>, <2>, <5>.\nNode <1> is connected to nodes <5>, <6>.\nNode <2> is connected to nodes <4>, <0>.\nNode <5> is connected to nodes <6>, <0>, <4>.\nNode <0> is connected to nodes <2>, <5>.\nNode <3> is connected to nodes <5>, <6>, <0>.\nNode <4> is connected to nodes <5>, <3>, <2>.\nWhich are the neighbor nodes of node <1>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<5>, <6>]",
        "type": "neighbor"
    },
    {
        "index": 263,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <4>.\nNode <5> is connected to node <1>.\nNode <4> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <2>, <0>.\nNode <0> is connected to node <3>.\nWhich are the neighbor nodes of node <5>? \nAnswer:\n",
        "answer": "[<1>]",
        "type": "neighbor"
    },
    {
        "index": 264,
        "question": "Given an undirected graph:\nNode <3> is connected to node <1>.\nNode <1> is connected to nodes <3>, <4>, <0>, <2>.\nNode <4> is connected to nodes <1>, <2>.\nNode <0> is connected to node <1>.\nNode <2> is connected to nodes <1>, <4>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<1>]",
        "type": "neighbor"
    },
    {
        "index": 265,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <4>, <0>.\nNode <2> is connected to nodes <1>, <3>.\nNode <4> is connected to node <2>.\nNode <1> is connected to nodes <0>, <2>, <4>.\nWhich are the neighbor nodes of node <0>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[]",
        "type": "neighbor"
    },
    {
        "index": 266,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <0>, <6>, <4>.\nNode <3> is connected to nodes <6>, <4>.\nNode <0> is connected to nodes <1>, <4>, <5>.\nNode <6> is connected to nodes <5>, <3>, <0>.\nNode <4> is connected to nodes <2>, <3>, <0>, <6>, <1>.\nNode <1> is connected to nodes <4>, <3>.\nNode <5> is connected to nodes <2>, <1>, <4>.\nWhich are the neighbor nodes of node <4>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<2>, <3>, <0>, <6>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 267,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <4>, <3>, <2>.\nNode <2> is connected to nodes <1>, <0>.\nNode <0> is connected to node <2>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<3>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 268,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <2>, <1>.\nNode <4> is connected to nodes <2>, <0>.\nNode <1> is connected to nodes <3>, <5>.\nNode <5> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <5>, <4>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<3>, <4>]",
        "type": "neighbor"
    },
    {
        "index": 269,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <0>.\nNode <4> is connected to node <1>.\nNode <0> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <0>, <3>.\nNode <3> is connected to node <2>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<1>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 270,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <3>.\nNode <4> is connected to node <1>.\nNode <3> is connected to nodes <1>, <0>, <2>.\nNode <0> is connected to node <3>.\nNode <2> is connected to node <3>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<1>]",
        "type": "neighbor"
    },
    {
        "index": 271,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1>, <2>, <4>.\nNode <1> is connected to nodes <3>, <0>.\nNode <2> is connected to node <1>.\nNode <4> is connected to nodes <3>, <0>, <1>.\nNode <3> is connected to nodes <1>, <2>, <4>.\nWhich are the neighbor nodes of node <0>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<1>, <2>, <4>]",
        "type": "neighbor"
    },
    {
        "index": 272,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <2>, <3>, <0>.\nNode <0> is connected to nodes <2>, <1>, <4>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <0>.\nWhich are the neighbor nodes of node <1>? \nAnswer:\n",
        "answer": "[<2>, <3>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 273,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <2>, <1>.\nNode <0> is connected to nodes <4>, <2>, <3>, <5>.\nNode <2> is connected to nodes <4>, <0>, <1>, <6>, <5>.\nNode <1> is connected to nodes <4>, <2>, <5>.\nNode <3> is connected to nodes <0>, <5>.\nNode <5> is connected to nodes <0>, <2>, <1>, <6>, <3>.\nNode <6> is connected to nodes <2>, <5>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<0>, <5>]",
        "type": "neighbor"
    },
    {
        "index": 274,
        "question": "Given an undirected graph:\nNode <2> is connected to node <1>.\nNode <1> is connected to nodes <2>, <4>, <3>.\nNode <4> is connected to nodes <1>, <5>, <0>.\nNode <3> is connected to node <1>.\nNode <5> is connected to node <4>.\nNode <0> is connected to node <4>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<1>, <5>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 275,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <4>, <1>, <5>.\nNode <0> is connected to nodes <3>, <2>, <4>, <1>, <5>.\nNode <4> is connected to nodes <3>, <0>, <2>, <1>.\nNode <1> is connected to nodes <3>, <0>, <2>, <4>, <5>.\nNode <5> is connected to nodes <3>, <0>, <1>.\nNode <2> is connected to nodes <0>, <4>, <1>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<3>, <0>, <2>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 276,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <3>, <1>, <0>.\nNode <4> is connected to node <2>.\nNode <3> is connected to node <2>.\nNode <1> is connected to node <2>.\nNode <0> is connected to node <2>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<2>]",
        "type": "neighbor"
    },
    {
        "index": 277,
        "question": "Given an undirected graph:\nNode <1> is connected to node <3>.\nNode <3> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <4>, <5>, <2>.\nNode <5> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <5>, <0>.\nWhich are the neighbor nodes of node <1>? \nAnswer:\n",
        "answer": "[<3>]",
        "type": "neighbor"
    },
    {
        "index": 278,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <3>, <5>, <1>.\nNode <3> is connected to nodes <6>, <0>, <2>.\nNode <5> is connected to nodes <6>, <2>.\nNode <1> is connected to nodes <6>, <4>.\nNode <0> is connected to node <3>.\nNode <2> is connected to nodes <3>, <5>.\nNode <4> is connected to node <1>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<3>]",
        "type": "neighbor"
    },
    {
        "index": 279,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <6>, <3>, <2>.\nNode <1> is connected to node <6>.\nNode <3> is connected to node <0>.\nNode <2> is connected to nodes <0>, <5>, <4>.\nNode <5> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <2>, <5>.\nWhich are the neighbor nodes of node <1>? \nAnswer:\n",
        "answer": "[<6>]",
        "type": "neighbor"
    },
    {
        "index": 280,
        "question": "Given an undirected graph:\nNode <3> is connected to node <4>.\nNode <4> is connected to nodes <3>, <2>, <0>.\nNode <2> is connected to node <4>.\nNode <0> is connected to nodes <4>, <1>.\nNode <1> is connected to node <0>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<4>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 281,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <5>.\nNode <4> is connected to node <1>.\nNode <5> is connected to nodes <1>, <2>, <0>, <3>.\nNode <2> is connected to node <5>.\nNode <0> is connected to node <5>.\nNode <3> is connected to node <5>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<5>]",
        "type": "neighbor"
    },
    {
        "index": 282,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <3>, <2>, <4>, <1>.\nNode <5> is connected to nodes <0>, <2>.\nNode <3> is connected to nodes <0>, <4>.\nNode <2> is connected to nodes <0>, <5>, <6>.\nNode <4> is connected to nodes <0>, <3>, <1>.\nNode <1> is connected to nodes <0>, <6>, <4>.\nNode <6> is connected to nodes <2>, <1>.\nWhich are the neighbor nodes of node <5>? \nAnswer:\n",
        "answer": "[<0>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 283,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <6>, <1>, <5>, <2>.\nNode <0> is connected to node <6>.\nNode <1> is connected to nodes <4>, <2>.\nNode <5> is connected to node <4>.\nNode <2> is connected to nodes <4>, <1>, <3>.\nNode <3> is connected to node <2>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<4>, <1>, <3>]",
        "type": "neighbor"
    },
    {
        "index": 284,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <1>, <0>, <4>.\nNode <4> is connected to nodes <3>, <1>, <0>.\nWhich are the neighbor nodes of node <2>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<1>, <0>, <4>]",
        "type": "neighbor"
    },
    {
        "index": 285,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <2>, <0>, <4>.\nNode <3> is connected to node <1>.\nNode <2> is connected to nodes <1>, <5>.\nNode <0> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to node <2>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<1>, <5>]",
        "type": "neighbor"
    },
    {
        "index": 286,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <6>.\nNode <0> is connected to nodes <2>, <3>.\nNode <6> is connected to nodes <2>, <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <3>, <5>, <4>, <6>.\nNode <5> is connected to node <1>.\nNode <4> is connected to node <1>.\nWhich are the neighbor nodes of node <6>? \nAnswer:\n",
        "answer": "[<2>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 287,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <2>, <0>, <1>.\nNode <2> is connected to nodes <3>, <0>.\nWhich are the neighbor nodes of node <0>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[]",
        "type": "neighbor"
    },
    {
        "index": 288,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <0>, <3>.\nNode <4> is connected to node <2>.\nNode <0> is connected to nodes <2>, <1>.\nNode <3> is connected to node <2>.\nNode <1> is connected to node <0>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<2>, <1>]",
        "type": "neighbor"
    },
    {
        "index": 289,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5>, <1>.\nNode <5> is connected to node <0>.\nNode <1> is connected to nodes <0>, <4>.\nNode <0> is connected to node <3>.\nNode <3> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <1>, <2>, <0>, <5>.\nWhich are the neighbor nodes of node <5>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<0>]",
        "type": "neighbor"
    },
    {
        "index": 290,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <4>.\nNode <4> is connected to node <5>.\nNode <3> is connected to nodes <5>, <0>.\nNode <5> is connected to nodes <2>, <1>, <3>.\nNode <2> is connected to nodes <1>, <3>.\nWhich are the neighbor nodes of node <5>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<2>, <1>, <3>]",
        "type": "neighbor"
    },
    {
        "index": 291,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <3>.\nNode <1> is connected to node <0>.\nNode <3> is connected to nodes <0>, <2>, <4>.\nNode <2> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <2>, <3>.\nWhich are the neighbor nodes of node <4>? \nAnswer:\n",
        "answer": "[<2>, <3>]",
        "type": "neighbor"
    },
    {
        "index": 292,
        "question": "Given an undirected graph:\nNode <4> is connected to node <3>.\nNode <3> is connected to nodes <4>, <5>.\nNode <5> is connected to nodes <3>, <0>, <2>, <1>.\nNode <0> is connected to node <5>.\nNode <2> is connected to node <5>.\nNode <1> is connected to node <5>.\nWhich are the neighbor nodes of node <2>? \nAnswer:\n",
        "answer": "[<5>]",
        "type": "neighbor"
    },
    {
        "index": 293,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <3>, <0>, <1>.\nNode <3> is connected to nodes <1>, <5>, <4>, <6>, <2>.\nNode <0> is connected to nodes <5>, <6>, <2>, <3>.\nNode <1> is connected to nodes <4>, <6>, <2>.\nNode <4> is connected to nodes <6>, <3>, <1>, <5>.\nNode <6> is connected to nodes <2>, <3>, <0>, <1>, <4>.\nNode <2> is connected to nodes <3>, <0>.\nWhich are the neighbor nodes of node <0>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<5>, <6>, <2>, <3>]",
        "type": "neighbor"
    },
    {
        "index": 294,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <2>, <1>, <3>, <4>.\nNode <2> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <0>, <5>.\nNode <3> is connected to nodes <5>, <6>, <1>, <0>.\nNode <4> is connected to nodes <6>, <0>, <5>.\nNode <0> is connected to nodes <5>, <4>, <2>, <1>.\nNode <5> is connected to nodes <4>, <1>, <0>, <3>.\nWhich are the neighbor nodes of node <2>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<1>, <4>]",
        "type": "neighbor"
    },
    {
        "index": 295,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <3>, <5>.\nNode <2> is connected to nodes <4>, <5>.\nNode <3> is connected to nodes <4>, <0>.\nNode <5> is connected to nodes <4>, <2>, <1>.\nNode <1> is connected to node <5>.\nNode <0> is connected to node <3>.\nWhich are the neighbor nodes of node <0>? \nAnswer:\n",
        "answer": "[<3>]",
        "type": "neighbor"
    },
    {
        "index": 296,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <6>, <1>, <3>, <4>.\nNode <6> is connected to nodes <5>, <1>, <3>, <2>, <0>.\nNode <1> is connected to nodes <5>, <6>, <3>, <2>, <0>.\nNode <3> is connected to nodes <5>, <6>, <1>, <4>, <0>.\nNode <4> is connected to nodes <5>, <3>, <2>, <0>.\nNode <2> is connected to nodes <6>, <1>, <4>, <0>.\nNode <0> is connected to nodes <6>, <1>, <3>, <2>, <4>.\nWhich are the neighbor nodes of node <3>? \nAnswer:\n",
        "answer": "[<5>, <6>, <1>, <4>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 297,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5>, <4>.\nNode <5> is connected to node <1>.\nNode <4> is connected to nodes <3>, <2>.\nNode <1> is connected to nodes <5>, <4>, <0>, <2>.\nNode <3> is connected to node <0>.\nWhich are the neighbor nodes of node <1>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<5>, <4>, <0>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 298,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <5>, <0>.\nNode <5> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <2>, <1>, <5>.\nNode <3> is connected to nodes <5>, <4>, <6>.\nNode <2> is connected to node <5>.\nNode <1> is connected to node <4>.\nWhich are the neighbor nodes of node <5>? In the context of a directed graph, we consider a node's successors as its neighbors. \nAnswer:\n",
        "answer": "[<0>, <2>]",
        "type": "neighbor"
    },
    {
        "index": 299,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1>, <4>, <3>, <0>.\nNode <1> is connected to nodes <5>, <4>, <3>, <0>, <2>.\nNode <4> is connected to nodes <5>, <1>, <3>, <2>.\nNode <3> is connected to nodes <5>, <1>, <4>, <0>, <2>.\nNode <0> is connected to nodes <5>, <1>, <3>, <2>.\nNode <2> is connected to nodes <1>, <4>, <3>, <0>.\nWhich are the neighbor nodes of node <5>? \nAnswer:\n",
        "answer": "[<1>, <4>, <3>, <0>]",
        "type": "neighbor"
    },
    {
        "index": 0,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <0>, <1>, <4>.\nNode <1> is connected to nodes <3>, <0>.\nNode <0> is connected to node <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 1,
        "question": "Given a directed graph:\nNode <3> is connected to node <2>.\nNode <2> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <5>, <2>.\nNode <5> is connected to node <2>.\nNode <4> is connected to nodes <5>, <0>, <3>, <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<5> ",
        "type": "page_rank"
    },
    {
        "index": 2,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <4>, <1>.\nNode <2> is connected to node <4>.\nNode <1> is connected to nodes <0>, <3>.\nNode <3> is connected to node <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 3,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <0>, <3>, <1>.\nNode <2> is connected to nodes <5>, <6>.\nNode <0> is connected to nodes <5>, <4>.\nNode <3> is connected to node <5>.\nNode <1> is connected to node <5>.\nNode <6> is connected to node <2>.\nNode <4> is connected to node <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 4,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <1>, <2>, <3>.\nNode <0> is connected to nodes <5>, <1>, <2>, <4>, <3>.\nNode <1> is connected to nodes <5>, <0>, <2>, <3>.\nNode <2> is connected to nodes <5>, <0>, <1>, <3>.\nNode <3> is connected to nodes <5>, <0>, <1>, <2>, <4>.\nNode <4> is connected to nodes <0>, <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<4> ",
        "type": "page_rank"
    },
    {
        "index": 5,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <0>, <3>.\nNode <4> is connected to nodes <0>, <3>, <2>.\nNode <3> is connected to nodes <1>, <4>.\nNode <2> is connected to node <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 6,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <1>, <0>, <2>.\nNode <4> is connected to node <3>.\nNode <1> is connected to node <3>.\nNode <0> is connected to node <3>.\nNode <2> is connected to node <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 7,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <1>, <3>, <4>.\nNode <0> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <2>, <0>.\nNode <4> is connected to node <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 8,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <1>, <4>.\nNode <2> is connected to nodes <3>, <4>, <0>.\nNode <1> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <2>, <1>, <3>.\nNode <3> is connected to nodes <4>, <2>, <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 9,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <2>, <4>, <5>.\nNode <2> is connected to nodes <4>, <3>, <6>.\nNode <4> is connected to nodes <5>, <3>, <6>, <1>.\nNode <5> is connected to nodes <6>, <1>, <2>, <4>.\nNode <1> is connected to nodes <4>, <3>, <0>.\nNode <3> is connected to nodes <0>, <6>, <1>, <5>.\nNode <0> is connected to nodes <6>, <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<5> ",
        "type": "page_rank"
    },
    {
        "index": 10,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <6>, <1>.\nNode <6> is connected to nodes <3>, <4>, <5>.\nNode <1> is connected to nodes <5>, <2>, <3>.\nNode <5> is connected to nodes <0>, <2>, <1>, <4>.\nNode <0> is connected to nodes <6>, <1>, <5>.\nNode <2> is connected to nodes <3>, <1>, <0>.\nNode <3> is connected to nodes <1>, <5>, <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 11,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <4>, <2>, <5>.\nNode <1> is connected to nodes <3>, <0>, <4>, <2>, <5>.\nNode <4> is connected to nodes <3>, <1>, <0>, <5>.\nNode <2> is connected to nodes <3>, <1>, <0>.\nNode <5> is connected to nodes <3>, <1>, <0>, <4>.\nNode <0> is connected to nodes <1>, <4>, <2>, <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 12,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <2>, <4>, <0>.\nNode <2> is connected to nodes <6>, <4>.\nNode <4> is connected to nodes <6>, <2>.\nNode <0> is connected to nodes <6>, <5>, <3>.\nNode <5> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <1> is connected to node <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 13,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <5>, <6>.\nNode <4> is connected to node <3>.\nNode <5> is connected to node <3>.\nNode <6> is connected to nodes <3>, <2>, <1>, <0>.\nNode <2> is connected to node <6>.\nNode <1> is connected to node <6>.\nNode <0> is connected to node <6>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 14,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <0>.\nNode <5> is connected to nodes <2>, <1>.\nNode <0> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <5>, <3>, <0>, <4>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <1>, <6>.\nNode <6> is connected to node <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 15,
        "question": "Given an undirected graph:\nNode <3> is connected to node <5>.\nNode <5> is connected to nodes <3>, <1>, <4>, <0>.\nNode <1> is connected to node <5>.\nNode <4> is connected to nodes <5>, <0>.\nNode <0> is connected to nodes <5>, <4>, <2>.\nNode <2> is connected to nodes <0>, <6>.\nNode <6> is connected to node <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 16,
        "question": "Given a directed graph:\nNode <5> is connected to node <0>.\nNode <0> is connected to node <5>.\nNode <3> is connected to nodes <4>, <6>.\nNode <4> is connected to nodes <2>, <5>.\nNode <2> is connected to node <3>.\nNode <1> is connected to node <6>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 17,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <5>, <2>.\nNode <1> is connected to node <0>.\nNode <5> is connected to nodes <0>, <3>, <4>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <5>.\nNode <4> is connected to node <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 18,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <6>.\nNode <0> is connected to nodes <2>, <4>.\nNode <6> is connected to nodes <2>, <3>.\nNode <4> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <5>, <6>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 19,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <0>, <2>, <1>.\nNode <1> is connected to nodes <3>, <4>.\nNode <4> is connected to node <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 20,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <4>, <1>, <5>.\nNode <0> is connected to nodes <2>, <4>, <3>, <1>.\nNode <4> is connected to nodes <2>, <0>, <3>, <1>, <5>.\nNode <1> is connected to nodes <2>, <0>, <4>, <3>, <5>.\nNode <5> is connected to nodes <2>, <4>, <3>, <1>.\nNode <3> is connected to nodes <0>, <4>, <1>, <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 21,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <3>, <2>.\nNode <0> is connected to node <2>.\nNode <3> is connected to node <0>.\nNode <2> is connected to node <4>.\nNode <1> is connected to nodes <5>, <0>, <3>.\nNode <4> is connected to node <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<4> ",
        "type": "page_rank"
    },
    {
        "index": 22,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <4>.\nNode <0> is connected to node <2>.\nNode <4> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <5>, <3>, <4>.\nNode <5> is connected to node <1>.\nNode <3> is connected to node <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 23,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <0>, <3>.\nNode <4> is connected to nodes <1>, <2>.\nNode <0> is connected to node <1>.\nNode <3> is connected to nodes <1>, <6>.\nNode <2> is connected to nodes <4>, <5>.\nNode <5> is connected to nodes <2>, <6>.\nNode <6> is connected to nodes <3>, <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 24,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <4> is connected to nodes <2>, <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <1> is connected to node <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 25,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1>, <2>, <3>.\nNode <1> is connected to nodes <5>, <4>.\nNode <2> is connected to nodes <5>, <0>.\nNode <3> is connected to nodes <5>, <6>.\nNode <4> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <4>, <2>.\nNode <6> is connected to node <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 26,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <4>.\nNode <5> is connected to node <3>.\nNode <4> is connected to nodes <3>, <2>, <0>, <1>.\nNode <2> is connected to node <4>.\nNode <0> is connected to node <4>.\nNode <1> is connected to node <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 27,
        "question": "Given a directed graph:\nNode <2> is connected to node <5>.\nNode <5> is connected to node <4>.\nNode <3> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <4>, <2>, <0>.\nNode <4> is connected to node <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 28,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1>, <4>, <3>.\nNode <1> is connected to nodes <4>, <3>, <2>, <0>.\nNode <4> is connected to nodes <0>, <1>.\nNode <3> is connected to node <0>.\nNode <2> is connected to nodes <0>, <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 29,
        "question": "Given a directed graph:\nNode <0> is connected to node <4>.\nNode <4> is connected to node <5>.\nNode <5> is connected to nodes <6>, <1>, <3>, <0>, <4>.\nNode <6> is connected to nodes <3>, <4>, <5>.\nNode <1> is connected to nodes <4>, <2>, <6>.\nNode <3> is connected to nodes <0>, <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<4> ",
        "type": "page_rank"
    },
    {
        "index": 30,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <3>, <1>.\nNode <5> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <1>, <5>, <2>.\nNode <0> is connected to nodes <2>, <1>, <4>.\nNode <2> is connected to nodes <3>, <1>, <4>, <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<5> ",
        "type": "page_rank"
    },
    {
        "index": 31,
        "question": "Given a directed graph:\nNode <0> is connected to node <1>.\nNode <1> is connected to node <3>.\nNode <3> is connected to node <1>.\nNode <2> is connected to nodes <4>, <3>, <1>.\nNode <4> is connected to node <1>.\nNode <5> is connected to nodes <0>, <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 32,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <5>, <1>, <0>, <4>, <3>.\nNode <1> is connected to nodes <5>, <2>, <4>, <3>.\nNode <0> is connected to nodes <2>, <4>, <3>.\nNode <4> is connected to nodes <2>, <1>, <0>, <3>.\nNode <3> is connected to nodes <2>, <1>, <0>, <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 33,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <6>, <3>, <0>, <2>, <5>.\nNode <6> is connected to nodes <4>, <1>, <3>, <0>, <2>.\nNode <3> is connected to nodes <4>, <6>, <1>, <0>, <2>, <5>.\nNode <0> is connected to nodes <4>, <6>, <1>, <3>, <5>.\nNode <2> is connected to nodes <4>, <6>, <3>, <5>.\nNode <5> is connected to nodes <4>, <3>, <0>, <2>.\nNode <1> is connected to nodes <6>, <3>, <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 34,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <4>, <6>, <5>.\nNode <1> is connected to nodes <2>, <0>, <6>, <3>.\nNode <4> is connected to node <3>.\nNode <6> is connected to nodes <3>, <1>.\nNode <2> is connected to nodes <0>, <6>, <1>, <4>.\nNode <0> is connected to nodes <6>, <5>, <1>, <4>, <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<6> ",
        "type": "page_rank"
    },
    {
        "index": 35,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <4>, <3>.\nNode <0> is connected to node <2>.\nNode <4> is connected to nodes <2>, <6>, <1>, <5>.\nNode <3> is connected to node <2>.\nNode <6> is connected to node <4>.\nNode <1> is connected to node <4>.\nNode <5> is connected to node <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 36,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <5>, <1>.\nNode <4> is connected to nodes <2>, <0>, <3>, <1>.\nNode <5> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <2>, <0>, <4>, <5>, <3>.\nNode <0> is connected to nodes <4>, <3>, <1>.\nNode <3> is connected to nodes <0>, <4>, <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 37,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <1>, <4>.\nNode <0> is connected to nodes <3>, <4>.\nNode <1> is connected to nodes <3>, <2>.\nNode <4> is connected to nodes <3>, <0>.\nNode <2> is connected to node <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 38,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <6>, <3>.\nNode <5> is connected to nodes <1>, <0>, <4>, <3>, <2>.\nNode <6> is connected to nodes <1>, <0>, <4>, <2>.\nNode <3> is connected to nodes <1>, <5>, <0>, <4>.\nNode <0> is connected to nodes <5>, <6>, <3>, <2>.\nNode <4> is connected to nodes <5>, <6>, <3>, <2>.\nNode <2> is connected to nodes <5>, <0>, <6>, <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 39,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <4>, <1>.\nNode <2> is connected to nodes <4>, <1>.\nNode <4> is connected to node <2>.\nNode <1> is connected to nodes <0>, <3>, <2>.\nNode <3> is connected to nodes <2>, <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 40,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <5>, <4>.\nNode <1> is connected to nodes <3>, <5>, <0>, <2>.\nNode <5> is connected to nodes <3>, <1>, <4>, <0>, <2>.\nNode <4> is connected to nodes <3>, <5>, <0>, <2>.\nNode <0> is connected to nodes <1>, <5>, <4>.\nNode <2> is connected to nodes <1>, <5>, <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 41,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <2>, <0>.\nNode <1> is connected to node <5>.\nNode <2> is connected to node <4>.\nNode <0> is connected to node <5>.\nNode <3> is connected to node <2>.\nNode <5> is connected to nodes <3>, <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 42,
        "question": "Given an undirected graph:\nNode <1> is connected to node <0>.\nNode <0> is connected to nodes <1>, <4>, <2>, <3>.\nNode <4> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 43,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <0>.\nNode <4> is connected to node <2>.\nNode <0> is connected to nodes <2>, <1>, <3>.\nNode <1> is connected to node <0>.\nNode <3> is connected to node <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 44,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <1>, <0>.\nNode <4> is connected to node <3>.\nNode <1> is connected to nodes <3>, <2>.\nNode <0> is connected to node <3>.\nNode <2> is connected to node <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 45,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <6>, <0>.\nNode <4> is connected to nodes <6>, <2>.\nNode <0> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <4>, <1>, <5>.\nNode <5> is connected to node <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<5> ",
        "type": "page_rank"
    },
    {
        "index": 46,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <3>, <0>, <5>.\nNode <1> is connected to node <2>.\nNode <3> is connected to nodes <2>, <4>.\nNode <0> is connected to node <2>.\nNode <5> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <3>, <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 47,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <5>, <1>, <0>.\nNode <3> is connected to node <5>.\nNode <1> is connected to nodes <4>, <6>, <2>.\nNode <0> is connected to nodes <4>, <2>.\nNode <6> is connected to node <1>.\nNode <2> is connected to nodes <1>, <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 48,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <0>, <4>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <2>, <1>.\nNode <1> is connected to node <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 49,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <2>, <3>, <1>.\nNode <0> is connected to node <4>.\nNode <2> is connected to node <4>.\nNode <3> is connected to node <4>.\nNode <1> is connected to node <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 50,
        "question": "Given a directed graph:\nNode <0> is connected to node <2>.\nNode <1> is connected to node <2>.\nNode <3> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <2>, <1>, <3>.\nNode <5> is connected to nodes <2>, <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<4> ",
        "type": "page_rank"
    },
    {
        "index": 51,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <1>, <5>.\nNode <3> is connected to nodes <1>, <2>, <5>.\nNode <1> is connected to nodes <5>, <4>.\nNode <5> is connected to node <1>.\nNode <2> is connected to nodes <0>, <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 52,
        "question": "Given an undirected graph:\nNode <5> is connected to node <4>.\nNode <4> is connected to nodes <5>, <2>, <3>, <1>.\nNode <2> is connected to node <4>.\nNode <3> is connected to nodes <4>, <0>.\nNode <1> is connected to node <4>.\nNode <0> is connected to node <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 53,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <2>, <3>.\nNode <4> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <1>, <4>.\nNode <3> is connected to nodes <1>, <0>.\nNode <0> is connected to node <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 54,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <0>, <4>, <3>.\nNode <1> is connected to node <0>.\nNode <4> is connected to node <2>.\nNode <3> is connected to node <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 55,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <4>, <0>, <2>, <6>.\nNode <5> is connected to nodes <1>, <4>, <0>.\nNode <4> is connected to nodes <1>, <5>.\nNode <0> is connected to nodes <1>, <5>, <6>, <3>.\nNode <2> is connected to nodes <1>, <3>.\nNode <6> is connected to nodes <1>, <0>.\nNode <3> is connected to nodes <0>, <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 56,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <0>, <4>, <2>.\nNode <1> is connected to node <0>.\nNode <4> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <3>, <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 57,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <3>, <6>.\nNode <5> is connected to nodes <3>, <6>, <0>, <1>.\nNode <6> is connected to nodes <2>, <5>.\nNode <0> is connected to node <5>.\nNode <1> is connected to nodes <5>, <4>.\nNode <4> is connected to node <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 58,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <4>, <1>, <0>, <5>.\nNode <4> is connected to nodes <6>, <3>, <0>.\nNode <1> is connected to node <6>.\nNode <0> is connected to nodes <6>, <4>, <3>, <2>, <5>.\nNode <5> is connected to nodes <6>, <0>.\nNode <3> is connected to nodes <4>, <2>, <0>.\nNode <2> is connected to nodes <3>, <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 59,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <5>, <2>.\nNode <1> is connected to nodes <4>, <5>, <0>.\nNode <5> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <3>, <0>.\nNode <4> is connected to nodes <5>, <0>, <2>, <1>.\nNode <0> is connected to nodes <2>, <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<4> ",
        "type": "page_rank"
    },
    {
        "index": 60,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <3>, <2>, <0>.\nNode <3> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <0>, <3>.\nNode <4> is connected to nodes <0>, <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 61,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <4>, <1>.\nNode <5> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <2>, <5>, <3>.\nNode <1> is connected to node <2>.\nNode <0> is connected to node <3>.\nNode <3> is connected to nodes <0>, <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 62,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <6>, <2>.\nNode <6> is connected to nodes <4>, <1>.\nNode <2> is connected to nodes <4>, <3>, <5>.\nNode <1> is connected to nodes <6>, <3>.\nNode <3> is connected to nodes <1>, <2>.\nNode <0> is connected to node <5>.\nNode <5> is connected to nodes <0>, <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 63,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <2>, <1>, <4>.\nNode <3> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <1> is connected to node <0>.\nNode <4> is connected to node <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 64,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <6>.\nNode <4> is connected to nodes <2>, <6>, <5>, <1>, <3>.\nNode <6> is connected to nodes <2>, <4>, <1>, <3>.\nNode <0> is connected to node <5>.\nNode <5> is connected to nodes <0>, <4>, <1>.\nNode <1> is connected to nodes <4>, <6>, <5>.\nNode <3> is connected to nodes <4>, <6>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 65,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <5>, <3>, <2>.\nNode <5> is connected to nodes <0>, <2>.\nNode <3> is connected to nodes <4>, <1>.\nNode <2> is connected to nodes <5>, <0>.\nNode <1> is connected to nodes <5>, <2>, <4>.\nNode <0> is connected to nodes <2>, <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 66,
        "question": "Given a directed graph:\nNode <0> is connected to node <4>.\nNode <4> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <4>, <2>.\nNode <2> is connected to node <3>.\nNode <1> is connected to nodes <0>, <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<4> ",
        "type": "page_rank"
    },
    {
        "index": 67,
        "question": "Given a directed graph:\nNode <1> is connected to node <2>.\nNode <2> is connected to nodes <3>, <1>, <6>.\nNode <4> is connected to nodes <6>, <0>.\nNode <6> is connected to nodes <3>, <4>.\nNode <0> is connected to node <5>.\nNode <3> is connected to nodes <1>, <4>, <5>, <0>.\nNode <5> is connected to nodes <0>, <3>, <6>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<5> ",
        "type": "page_rank"
    },
    {
        "index": 68,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <1>, <2>.\nNode <5> is connected to nodes <3>, <4>.\nNode <1> is connected to nodes <3>, <0>.\nNode <2> is connected to node <3>.\nNode <4> is connected to node <5>.\nNode <0> is connected to node <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 69,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <6>, <1>, <5>.\nNode <2> is connected to nodes <4>, <3>, <0>, <1>.\nNode <6> is connected to nodes <4>, <3>, <1>, <5>.\nNode <1> is connected to nodes <4>, <2>, <6>, <5>.\nNode <5> is connected to nodes <4>, <3>, <0>, <6>, <1>.\nNode <3> is connected to nodes <2>, <0>, <6>, <5>.\nNode <0> is connected to nodes <3>, <2>, <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<4> ",
        "type": "page_rank"
    },
    {
        "index": 70,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <1>, <4>, <2>.\nNode <5> is connected to node <3>.\nNode <1> is connected to nodes <3>, <6>, <4>, <0>, <2>.\nNode <4> is connected to nodes <3>, <1>, <6>.\nNode <2> is connected to nodes <3>, <1>, <0>.\nNode <6> is connected to nodes <1>, <4>.\nNode <0> is connected to nodes <1>, <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 71,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <3>, <0>, <1>, <5>.\nNode <2> is connected to node <4>.\nNode <3> is connected to node <4>.\nNode <0> is connected to node <4>.\nNode <1> is connected to node <4>.\nNode <5> is connected to node <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 72,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <5>, <0>.\nNode <2> is connected to nodes <4>, <3>, <1>.\nNode <5> is connected to nodes <3>, <1>, <2>.\nNode <4> is connected to node <0>.\nNode <3> is connected to nodes <1>, <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 73,
        "question": "Given a directed graph:\nNode <1> is connected to node <2>.\nNode <2> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <2>, <3>, <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 74,
        "question": "Given a directed graph:\nNode <0> is connected to node <3>.\nNode <3> is connected to node <4>.\nNode <6> is connected to nodes <2>, <3>, <1>, <0>.\nNode <2> is connected to nodes <4>, <3>, <0>, <6>.\nNode <1> is connected to node <5>.\nNode <5> is connected to node <6>.\nNode <4> is connected to nodes <3>, <0>, <6>, <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<6> ",
        "type": "page_rank"
    },
    {
        "index": 75,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>, <4>.\nNode <3> is connected to nodes <0>, <6>, <4>.\nNode <5> is connected to nodes <0>, <6>, <2>, <4>, <1>.\nNode <4> is connected to nodes <0>, <3>, <5>.\nNode <6> is connected to nodes <3>, <5>, <1>.\nNode <1> is connected to nodes <6>, <5>.\nNode <2> is connected to node <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 76,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5>, <6>, <4>.\nNode <5> is connected to nodes <3>, <1>, <4>, <2>.\nNode <6> is connected to nodes <2>, <5>, <3>.\nNode <4> is connected to nodes <2>, <3>.\nNode <0> is connected to nodes <5>, <6>, <2>.\nNode <3> is connected to node <2>.\nNode <1> is connected to nodes <4>, <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 77,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <1>, <5>.\nNode <2> is connected to nodes <3>, <4>.\nNode <1> is connected to node <3>.\nNode <5> is connected to nodes <3>, <0>.\nNode <4> is connected to node <2>.\nNode <0> is connected to nodes <5>, <6>.\nNode <6> is connected to node <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 78,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <3>, <5>, <0>.\nNode <0> is connected to nodes <1>, <2>, <4>.\nNode <3> is connected to nodes <4>, <0>, <2>.\nNode <5> is connected to nodes <2>, <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 79,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <3>, <4>.\nNode <2> is connected to nodes <3>, <1>, <4>.\nNode <4> is connected to nodes <0>, <2>.\nNode <5> is connected to node <1>.\nNode <1> is connected to nodes <5>, <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 80,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <0>, <1>.\nNode <2> is connected to node <0>.\nNode <1> is connected to nodes <3>, <5>, <4>.\nNode <5> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <5>, <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 81,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <4>, <2>.\nNode <3> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <1>, <3>.\nNode <2> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <2>, <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 82,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <3>, <0>.\nNode <2> is connected to nodes <4>, <1>, <5>, <3>, <0>.\nNode <3> is connected to nodes <4>, <1>, <2>, <5>.\nNode <0> is connected to nodes <4>, <2>, <5>.\nNode <1> is connected to nodes <2>, <5>, <3>.\nNode <5> is connected to nodes <1>, <2>, <3>, <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 83,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <6>.\nNode <4> is connected to nodes <1>, <6>, <3>.\nNode <6> is connected to nodes <1>, <4>, <5>.\nNode <3> is connected to node <4>.\nNode <2> is connected to node <0>.\nNode <0> is connected to nodes <2>, <5>.\nNode <5> is connected to nodes <0>, <6>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 84,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <3>, <1>, <5>.\nNode <2> is connected to node <4>.\nNode <3> is connected to node <4>.\nNode <1> is connected to node <4>.\nNode <5> is connected to nodes <4>, <0>.\nNode <0> is connected to node <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 85,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <2> is connected to node <1>.\nNode <3> is connected to nodes <1>, <0>, <4>, <2>.\nNode <4> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <4>, <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 86,
        "question": "Given an undirected graph:\nNode <6> is connected to node <4>.\nNode <4> is connected to nodes <6>, <0>.\nNode <0> is connected to nodes <4>, <2>, <3>, <5>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <3>, <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 87,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <4>, <2>, <3>.\nNode <5> is connected to nodes <0>, <1>.\nNode <4> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <1> is connected to node <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 88,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1>, <6>, <5>.\nNode <1> is connected to nodes <3>, <5>.\nNode <6> is connected to nodes <2>, <1>, <3>.\nNode <5> is connected to nodes <2>, <3>, <6>.\nNode <2> is connected to nodes <1>, <0>.\nNode <3> is connected to nodes <6>, <4>, <5>, <1>.\nNode <4> is connected to nodes <0>, <6>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<5> ",
        "type": "page_rank"
    },
    {
        "index": 89,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <0>, <1>, <3>.\nNode <1> is connected to node <4>.\nNode <3> is connected to nodes <2>, <0>, <1>, <5>.\nNode <5> is connected to nodes <6>, <1>.\nNode <2> is connected to nodes <5>, <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 90,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <4>.\nNode <1> is connected to node <0>.\nNode <4> is connected to nodes <0>, <6>, <3>, <2>, <5>.\nNode <6> is connected to node <4>.\nNode <3> is connected to node <4>.\nNode <2> is connected to node <4>.\nNode <5> is connected to node <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 91,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <5>, <2>.\nNode <5> is connected to nodes <0>, <1>, <6>.\nNode <2> is connected to nodes <5>, <3>.\nNode <0> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <4>, <3>, <2>.\nNode <4> is connected to nodes <0>, <3>, <2>, <6>, <5>.\nNode <3> is connected to nodes <2>, <1>, <6>, <4>, <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<6> ",
        "type": "page_rank"
    },
    {
        "index": 92,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <6>, <3>.\nNode <1> is connected to nodes <2>, <5>, <4>.\nNode <6> is connected to nodes <2>, <5>.\nNode <3> is connected to node <2>.\nNode <5> is connected to nodes <1>, <0>, <6>.\nNode <4> is connected to node <1>.\nNode <0> is connected to node <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<4> ",
        "type": "page_rank"
    },
    {
        "index": 93,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <0>, <1>.\nNode <3> is connected to nodes <4>, <0>, <1>, <2>.\nNode <0> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <1>, <5>, <2>.\nNode <5> is connected to nodes <2>, <3>, <4>, <0>, <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<5> ",
        "type": "page_rank"
    },
    {
        "index": 94,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <2>.\nNode <0> is connected to node <4>.\nNode <2> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <4>, <5>, <0>.\nNode <1> is connected to nodes <5>, <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<4> ",
        "type": "page_rank"
    },
    {
        "index": 95,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <0>, <1>, <3>, <6>.\nNode <5> is connected to node <4>.\nNode <0> is connected to node <4>.\nNode <1> is connected to node <4>.\nNode <3> is connected to nodes <4>, <2>.\nNode <6> is connected to node <4>.\nNode <2> is connected to node <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 96,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <5>.\nNode <1> is connected to node <3>.\nNode <5> is connected to nodes <3>, <4>, <0>.\nNode <4> is connected to node <5>.\nNode <0> is connected to nodes <5>, <2>.\nNode <2> is connected to node <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 97,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <6>.\nNode <5> is connected to node <0>.\nNode <6> is connected to nodes <0>, <1>, <3>, <2>.\nNode <1> is connected to node <6>.\nNode <3> is connected to nodes <6>, <4>.\nNode <2> is connected to node <6>.\nNode <4> is connected to node <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 98,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <5>, <3>, <2>.\nNode <4> is connected to nodes <0>, <6>, <5>, <1>.\nNode <5> is connected to nodes <0>, <4>.\nNode <3> is connected to nodes <0>, <6>, <1>.\nNode <2> is connected to nodes <0>, <1>.\nNode <6> is connected to nodes <4>, <3>.\nNode <1> is connected to nodes <4>, <3>, <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 99,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <1>, <2>, <3>.\nNode <2> is connected to nodes <1>, <0>.\nNode <3> is connected to nodes <0>, <4>.\nNode <4> is connected to node <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 100,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <4>, <3>.\nNode <1> is connected to nodes <0>, <3>.\nNode <4> is connected to nodes <0>, <2>.\nNode <3> is connected to nodes <0>, <1>.\nNode <2> is connected to node <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 101,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <1>, <3>.\nNode <4> is connected to node <5>.\nNode <1> is connected to node <5>.\nNode <3> is connected to nodes <5>, <0>.\nNode <0> is connected to nodes <3>, <2>.\nNode <2> is connected to node <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 102,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <3>, <0>.\nNode <4> is connected to nodes <2>, <5>.\nNode <3> is connected to node <2>.\nNode <0> is connected to nodes <2>, <1>.\nNode <5> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <5>, <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 103,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <3>, <0>, <1>.\nNode <3> is connected to node <0>.\nNode <1> is connected to node <3>.\nNode <4> is connected to nodes <2>, <1>, <5>, <3>.\nNode <2> is connected to nodes <0>, <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 104,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <5>, <6>.\nNode <2> is connected to nodes <5>, <4>.\nNode <6> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <6>, <1>.\nNode <1> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <1>, <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 105,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <3>, <2>.\nNode <1> is connected to nodes <4>, <5>, <6>.\nNode <3> is connected to node <4>.\nNode <2> is connected to nodes <4>, <5>.\nNode <5> is connected to nodes <1>, <2>.\nNode <6> is connected to nodes <1>, <0>.\nNode <0> is connected to node <6>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 106,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <2>, <3>, <1>, <5>.\nNode <0> is connected to nodes <4>, <2>, <3>, <6>, <1>.\nNode <2> is connected to nodes <4>, <0>, <3>, <6>, <1>, <5>.\nNode <3> is connected to nodes <4>, <0>, <2>, <1>, <5>.\nNode <1> is connected to nodes <4>, <0>, <2>, <3>.\nNode <5> is connected to nodes <4>, <2>, <3>, <6>.\nNode <6> is connected to nodes <0>, <2>, <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 107,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <0>, <4>, <3>.\nNode <2> is connected to nodes <0>, <4>, <1>.\nNode <0> is connected to nodes <4>, <3>, <2>.\nNode <4> is connected to nodes <1>, <5>.\nNode <3> is connected to nodes <2>, <4>.\nNode <5> is connected to nodes <4>, <3>, <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 108,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <4>, <5>.\nNode <3> is connected to nodes <1>, <0>.\nNode <4> is connected to nodes <1>, <2>.\nNode <5> is connected to node <1>.\nNode <0> is connected to node <3>.\nNode <2> is connected to node <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 109,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <1>, <3>, <4>.\nNode <2> is connected to nodes <0>, <1>, <3>, <5>.\nNode <1> is connected to nodes <0>, <2>, <3>, <5>, <4>.\nNode <3> is connected to nodes <0>, <2>, <1>, <5>, <4>.\nNode <4> is connected to nodes <0>, <1>, <3>, <5>.\nNode <5> is connected to nodes <2>, <1>, <3>, <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 110,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <2>.\nNode <5> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <1>, <5>, <3>.\nNode <3> is connected to nodes <2>, <0>.\nNode <4> is connected to node <0>.\nNode <0> is connected to nodes <4>, <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 111,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <2>, <5>, <0>.\nNode <4> is connected to nodes <6>, <1>.\nNode <2> is connected to nodes <5>, <0>, <1>, <4>.\nNode <5> is connected to nodes <0>, <1>, <3>, <2>.\nNode <0> is connected to nodes <4>, <6>, <3>, <2>, <5>.\nNode <6> is connected to nodes <2>, <5>, <1>.\nNode <3> is connected to nodes <2>, <6>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<4> ",
        "type": "page_rank"
    },
    {
        "index": 112,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <2>, <5>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <2> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <0>, <6>.\nNode <1> is connected to node <2>.\nNode <6> is connected to node <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 113,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <3>.\nNode <4> is connected to node <1>.\nNode <3> is connected to nodes <1>, <2>, <0>.\nNode <2> is connected to node <3>.\nNode <0> is connected to node <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 114,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <2>, <3>.\nNode <4> is connected to nodes <3>, <1>, <0>.\nNode <1> is connected to nodes <0>, <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 115,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <5>, <2>.\nNode <5> is connected to nodes <6>, <3>, <1>, <0>.\nNode <2> is connected to nodes <6>, <0>.\nNode <3> is connected to node <5>.\nNode <1> is connected to node <5>.\nNode <0> is connected to nodes <5>, <2>, <4>.\nNode <4> is connected to node <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 116,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <4>, <1>.\nNode <2> is connected to nodes <4>, <3>, <1>.\nNode <1> is connected to nodes <0>, <2>.\nNode <3> is connected to node <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 117,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <0>, <6>.\nNode <1> is connected to node <6>.\nNode <4> is connected to nodes <5>, <3>.\nNode <5> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <5>, <3>.\nNode <2> is connected to node <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 118,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <4>, <2>, <6>.\nNode <0> is connected to nodes <5>, <1>, <3>, <4>, <2>, <6>.\nNode <4> is connected to nodes <5>, <0>, <6>.\nNode <2> is connected to nodes <5>, <0>, <3>, <6>.\nNode <6> is connected to nodes <5>, <0>, <1>, <4>, <2>.\nNode <1> is connected to nodes <0>, <3>, <6>.\nNode <3> is connected to nodes <0>, <1>, <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 119,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <0>, <2>.\nNode <3> is connected to nodes <2>, <1>, <4>.\nNode <0> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <0>, <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 120,
        "question": "Given a directed graph:\nNode <3> is connected to node <1>.\nNode <1> is connected to nodes <3>, <0>, <2>, <4>.\nNode <2> is connected to nodes <4>, <1>, <0>.\nNode <4> is connected to nodes <3>, <0>, <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 121,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <3>, <4>.\nNode <5> is connected to nodes <3>, <0>, <2>.\nNode <4> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <5>, <4>.\nNode <2> is connected to node <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 122,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <5>, <1>.\nNode <5> is connected to nodes <1>, <4>, <0>.\nNode <0> is connected to nodes <1>, <3>.\nNode <4> is connected to node <2>.\nNode <2> is connected to node <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 123,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <0>, <5>, <2>.\nNode <3> is connected to nodes <4>, <0>, <1>, <5>, <2>.\nNode <0> is connected to nodes <4>, <3>, <1>, <5>, <2>.\nNode <5> is connected to nodes <4>, <3>, <0>, <1>.\nNode <2> is connected to nodes <4>, <3>, <0>, <1>.\nNode <1> is connected to nodes <3>, <0>, <5>, <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 124,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <4>, <0>.\nNode <5> is connected to nodes <4>, <2>, <6>.\nNode <0> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <5>, <0>.\nNode <6> is connected to nodes <5>, <3>.\nNode <3> is connected to node <6>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 125,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <2>, <0>, <1>.\nNode <3> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <4>, <3>.\nNode <1> is connected to nodes <4>, <6>, <5>.\nNode <6> is connected to node <1>.\nNode <5> is connected to node <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<4> ",
        "type": "page_rank"
    },
    {
        "index": 126,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <3>, <2>, <4>.\nNode <1> is connected to node <3>.\nNode <2> is connected to node <0>.\nNode <4> is connected to node <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 127,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <4>, <6>, <0>.\nNode <3> is connected to nodes <4>, <6>, <1>.\nNode <4> is connected to nodes <6>, <2>, <1>.\nNode <6> is connected to nodes <0>, <3>.\nNode <1> is connected to nodes <3>, <4>, <6>, <2>.\nNode <5> is connected to nodes <4>, <6>, <0>, <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 128,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <6>.\nNode <1> is connected to nodes <0>, <2>.\nNode <6> is connected to nodes <0>, <4>.\nNode <2> is connected to nodes <1>, <4>.\nNode <3> is connected to node <5>.\nNode <5> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <5>, <2>, <6>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<6> ",
        "type": "page_rank"
    },
    {
        "index": 129,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <6>, <4>, <1>, <5>.\nNode <2> is connected to nodes <3>, <4>.\nNode <6> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <3>, <2>, <0>, <6>, <1>.\nNode <1> is connected to nodes <3>, <4>, <5>.\nNode <5> is connected to nodes <3>, <1>.\nNode <0> is connected to node <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 130,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <4>, <3>, <1>.\nNode <4> is connected to nodes <2>, <5>, <1>, <0>.\nNode <3> is connected to nodes <1>, <2>.\nNode <2> is connected to node <1>.\nNode <5> is connected to nodes <2>, <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 131,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <5>, <6>, <2>.\nNode <3> is connected to node <5>.\nNode <6> is connected to nodes <0>, <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <6>, <1>.\nNode <1> is connected to nodes <4>, <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 132,
        "question": "Given an undirected graph:\nNode <5> is connected to node <0>.\nNode <0> is connected to nodes <5>, <2>, <1>.\nNode <2> is connected to node <0>.\nNode <1> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <1>, <4>.\nNode <4> is connected to node <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 133,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <3>, <5>.\nNode <2> is connected to nodes <3>, <6>.\nNode <5> is connected to node <1>.\nNode <6> is connected to nodes <4>, <0>, <2>.\nNode <4> is connected to node <6>.\nNode <0> is connected to node <6>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<4> ",
        "type": "page_rank"
    },
    {
        "index": 134,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <2>, <4>, <5>.\nNode <3> is connected to nodes <0>, <1>, <2>, <5>.\nNode <2> is connected to nodes <0>, <3>, <1>, <4>, <5>, <6>.\nNode <4> is connected to nodes <0>, <1>, <2>, <6>.\nNode <5> is connected to nodes <0>, <3>, <2>, <6>.\nNode <1> is connected to nodes <3>, <2>, <4>, <6>.\nNode <6> is connected to nodes <1>, <2>, <4>, <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 135,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <2>, <3>, <0>.\nNode <4> is connected to node <1>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <0> is connected to node <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 136,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <2>, <5>.\nNode <1> is connected to nodes <2>, <4>, <3>.\nNode <5> is connected to nodes <0>, <3>.\nNode <4> is connected to nodes <6>, <1>.\nNode <6> is connected to node <4>.\nNode <3> is connected to nodes <5>, <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 137,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <6>, <0>, <5>.\nNode <6> is connected to node <2>.\nNode <0> is connected to nodes <2>, <4>, <1>.\nNode <5> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <0>, <5>.\nNode <1> is connected to nodes <0>, <3>.\nNode <3> is connected to node <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 138,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <0>, <1>, <3>.\nNode <4> is connected to nodes <1>, <3>.\nNode <0> is connected to nodes <1>, <3>, <4>.\nNode <1> is connected to node <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 139,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5>, <0>, <4>, <1>, <3>.\nNode <5> is connected to node <2>.\nNode <0> is connected to node <2>.\nNode <4> is connected to node <2>.\nNode <1> is connected to node <2>.\nNode <3> is connected to node <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 140,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <5>, <2>.\nNode <1> is connected to node <0>.\nNode <5> is connected to nodes <4>, <0>, <1>.\nNode <0> is connected to nodes <3>, <5>, <2>, <4>.\nNode <3> is connected to nodes <5>, <4>, <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 141,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5>, <3>.\nNode <5> is connected to nodes <4>, <0>, <3>.\nNode <3> is connected to nodes <4>, <5>, <2>.\nNode <0> is connected to nodes <5>, <1>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 142,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <5>, <1>.\nNode <5> is connected to node <0>.\nNode <1> is connected to nodes <2>, <0>.\nNode <3> is connected to nodes <2>, <5>, <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<4> ",
        "type": "page_rank"
    },
    {
        "index": 143,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <5>, <3>, <6>, <0>.\nNode <1> is connected to node <4>.\nNode <5> is connected to node <4>.\nNode <3> is connected to nodes <4>, <2>.\nNode <6> is connected to node <4>.\nNode <0> is connected to node <4>.\nNode <2> is connected to node <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 144,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <2>, <4>, <5>, <0>, <1>.\nNode <2> is connected to nodes <6>, <0>, <1>.\nNode <4> is connected to nodes <6>, <5>, <0>, <1>, <3>.\nNode <5> is connected to nodes <6>, <4>, <1>, <3>.\nNode <0> is connected to nodes <6>, <2>, <4>, <3>.\nNode <1> is connected to nodes <6>, <2>, <4>, <5>, <3>.\nNode <3> is connected to nodes <4>, <5>, <0>, <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<5> ",
        "type": "page_rank"
    },
    {
        "index": 145,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <2>, <0>.\nNode <3> is connected to nodes <1>, <0>.\nNode <2> is connected to nodes <1>, <4>.\nNode <0> is connected to nodes <1>, <3>.\nNode <4> is connected to node <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 146,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <5>, <2>.\nNode <3> is connected to nodes <5>, <0>.\nNode <2> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <3>, <1>, <2>.\nNode <1> is connected to node <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<4> ",
        "type": "page_rank"
    },
    {
        "index": 147,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <2>.\nNode <3> is connected to node <0>.\nNode <2> is connected to nodes <0>, <1>, <4>.\nNode <1> is connected to node <2>.\nNode <4> is connected to node <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 148,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <2>, <0>, <5>.\nNode <0> is connected to nodes <3>, <5>, <2>.\nNode <1> is connected to nodes <4>, <0>.\nNode <2> is connected to nodes <3>, <4>.\nNode <3> is connected to node <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 149,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <0>, <4>.\nNode <3> is connected to node <1>.\nNode <0> is connected to nodes <1>, <2>.\nNode <4> is connected to node <1>.\nNode <2> is connected to node <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 150,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <6>.\nNode <1> is connected to nodes <0>, <2>.\nNode <6> is connected to nodes <0>, <3>.\nNode <2> is connected to nodes <1>, <4>.\nNode <3> is connected to nodes <6>, <5>.\nNode <5> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <5>, <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 151,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <1>, <3>, <0>.\nNode <2> is connected to node <4>.\nNode <1> is connected to node <4>.\nNode <3> is connected to node <4>.\nNode <0> is connected to node <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 152,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <4>, <0>, <2>.\nNode <1> is connected to node <4>.\nNode <0> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <3>, <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 153,
        "question": "Given an undirected graph:\nNode <4> is connected to node <2>.\nNode <2> is connected to nodes <4>, <3>, <1>.\nNode <3> is connected to nodes <2>, <0>.\nNode <1> is connected to node <2>.\nNode <0> is connected to node <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 154,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <3>, <2>, <4>.\nNode <3> is connected to node <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 155,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <1>, <3>, <4>, <2>.\nNode <0> is connected to nodes <5>, <1>, <3>, <4>, <2>.\nNode <1> is connected to nodes <5>, <0>, <2>.\nNode <3> is connected to nodes <5>, <0>, <4>, <2>.\nNode <4> is connected to nodes <5>, <0>, <3>.\nNode <2> is connected to nodes <5>, <0>, <1>, <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 156,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <4>, <2>.\nNode <3> is connected to nodes <0>, <2>, <1>, <5>.\nNode <2> is connected to nodes <5>, <3>.\nNode <4> is connected to nodes <2>, <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 157,
        "question": "Given a directed graph:\nNode <5> is connected to node <0>.\nNode <0> is connected to nodes <4>, <3>.\nNode <4> is connected to node <2>.\nNode <2> is connected to nodes <0>, <5>, <1>, <3>.\nNode <3> is connected to node <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 158,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <1>, <3>, <2>.\nNode <4> is connected to node <0>.\nNode <1> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <2> is connected to node <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 159,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <4>, <0>.\nNode <4> is connected to node <2>.\nNode <0> is connected to node <4>.\nNode <1> is connected to nodes <4>, <0>, <2>, <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<4> ",
        "type": "page_rank"
    },
    {
        "index": 160,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <1>, <2>, <0>.\nNode <3> is connected to nodes <4>, <5>, <2>, <0>.\nNode <1> is connected to nodes <4>, <0>.\nNode <2> is connected to nodes <4>, <3>, <5>, <0>.\nNode <0> is connected to nodes <4>, <3>, <5>, <1>, <2>.\nNode <5> is connected to nodes <3>, <2>, <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<4> ",
        "type": "page_rank"
    },
    {
        "index": 161,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4>, <1>, <0>.\nNode <4> is connected to node <3>.\nNode <1> is connected to node <3>.\nNode <0> is connected to nodes <3>, <2>.\nNode <2> is connected to node <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 162,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <1>, <4>.\nNode <0> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <3>, <5>.\nNode <2> is connected to nodes <5>, <1>.\nNode <3> is connected to nodes <0>, <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 163,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <3> is connected to nodes <5>, <2>.\nNode <0> is connected to nodes <1>, <4>.\nNode <5> is connected to nodes <1>, <3>.\nNode <2> is connected to nodes <4>, <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 164,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <0>, <4>.\nNode <1> is connected to nodes <2>, <5>.\nNode <0> is connected to node <2>.\nNode <4> is connected to nodes <2>, <3>.\nNode <5> is connected to nodes <1>, <6>.\nNode <6> is connected to node <5>.\nNode <3> is connected to node <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 165,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <2>, <0>.\nNode <4> is connected to nodes <2>, <0>, <1>.\nNode <0> is connected to nodes <3>, <4>.\nNode <1> is connected to node <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 166,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <0>, <1>, <2>.\nNode <1> is connected to nodes <3>, <4>.\nNode <2> is connected to node <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 167,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <3>, <5>, <4>.\nNode <3> is connected to nodes <0>, <2>.\nNode <5> is connected to nodes <0>, <2>, <4>.\nNode <4> is connected to nodes <1>, <6>, <3>, <5>, <2>.\nNode <0> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <1>, <6>, <5>, <0>.\nNode <1> is connected to nodes <6>, <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 168,
        "question": "Given a directed graph:\nNode <1> is connected to node <2>.\nNode <2> is connected to nodes <5>, <1>, <0>.\nNode <4> is connected to nodes <0>, <3>, <1>.\nNode <0> is connected to nodes <2>, <5>, <1>, <4>.\nNode <3> is connected to node <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 169,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <3>, <5>.\nNode <4> is connected to node <1>.\nNode <3> is connected to nodes <1>, <2>.\nNode <5> is connected to node <1>.\nNode <2> is connected to nodes <3>, <0>.\nNode <0> is connected to node <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 170,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <5>, <1>.\nNode <3> is connected to node <0>.\nNode <5> is connected to nodes <0>, <6>.\nNode <1> is connected to nodes <0>, <2>, <4>.\nNode <6> is connected to node <5>.\nNode <2> is connected to node <1>.\nNode <4> is connected to node <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 171,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <2>, <5>.\nNode <0> is connected to nodes <4>, <3>.\nNode <2> is connected to nodes <4>, <1>.\nNode <5> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <0>, <5>.\nNode <1> is connected to node <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 172,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <3>, <6>, <0>, <1>.\nNode <2> is connected to node <4>.\nNode <3> is connected to node <4>.\nNode <6> is connected to node <4>.\nNode <0> is connected to node <4>.\nNode <1> is connected to nodes <4>, <5>.\nNode <5> is connected to node <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 173,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <2>, <3>, <5>.\nNode <4> is connected to node <1>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <5> is connected to nodes <1>, <0>.\nNode <0> is connected to node <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 174,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <0>, <5>, <2>, <3>.\nNode <1> is connected to nodes <4>, <0>, <5>, <3>.\nNode <0> is connected to nodes <4>, <1>, <2>.\nNode <5> is connected to nodes <4>, <1>, <3>.\nNode <2> is connected to nodes <4>, <0>, <3>.\nNode <3> is connected to nodes <4>, <1>, <5>, <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 175,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <4>, <2>, <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <2> is connected to node <1>.\nNode <0> is connected to node <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 176,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1>, <0>.\nNode <1> is connected to node <5>.\nNode <0> is connected to nodes <5>, <2>, <4>.\nNode <2> is connected to nodes <3>, <0>.\nNode <3> is connected to node <2>.\nNode <4> is connected to node <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 177,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <1>, <3>, <5>.\nNode <5> is connected to nodes <6>, <4>, <0>.\nNode <6> is connected to node <5>.\nNode <4> is connected to nodes <5>, <2>.\nNode <2> is connected to node <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 178,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <1>, <6>.\nNode <0> is connected to nodes <4>, <2>.\nNode <1> is connected to node <4>.\nNode <6> is connected to nodes <4>, <5>.\nNode <2> is connected to node <0>.\nNode <5> is connected to nodes <3>, <6>.\nNode <3> is connected to node <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 179,
        "question": "Given an undirected graph:\nNode <3> is connected to node <6>.\nNode <6> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <6>, <2>.\nNode <5> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <5>, <4>, <0>, <1>.\nNode <1> is connected to nodes <5>, <2>.\nNode <4> is connected to node <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<4> ",
        "type": "page_rank"
    },
    {
        "index": 180,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <6>, <0>.\nNode <6> is connected to nodes <2>, <3>.\nNode <0> is connected to node <2>.\nNode <3> is connected to nodes <6>, <1>, <4>.\nNode <5> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <5>, <3>.\nNode <4> is connected to nodes <5>, <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 181,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5>, <2>, <1>, <4>.\nNode <5> is connected to nodes <1>, <4>, <0>, <6>.\nNode <2> is connected to nodes <6>, <3>.\nNode <1> is connected to nodes <4>, <6>, <2>.\nNode <4> is connected to nodes <5>, <2>.\nNode <6> is connected to nodes <5>, <3>, <2>, <0>.\nNode <3> is connected to nodes <2>, <1>, <0>, <6>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 182,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5>, <2>, <0>.\nNode <5> is connected to nodes <1>, <4>.\nNode <2> is connected to nodes <1>, <3>.\nNode <0> is connected to node <1>.\nNode <4> is connected to nodes <5>, <3>.\nNode <3> is connected to nodes <4>, <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 183,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <1>.\nNode <0> is connected to node <2>.\nNode <1> is connected to nodes <2>, <4>, <3>.\nNode <4> is connected to node <1>.\nNode <3> is connected to node <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 184,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1>, <0>, <3>.\nNode <1> is connected to nodes <5>, <2>.\nNode <0> is connected to node <5>.\nNode <3> is connected to nodes <5>, <4>.\nNode <2> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <2>, <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 185,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <3>, <4>.\nNode <1> is connected to nodes <0>, <3>, <6>.\nNode <3> is connected to nodes <0>, <5>, <1>, <6>, <4>.\nNode <4> is connected to nodes <0>, <5>, <3>, <6>.\nNode <2> is connected to nodes <5>, <6>.\nNode <5> is connected to nodes <2>, <3>, <6>, <4>.\nNode <6> is connected to nodes <2>, <5>, <1>, <3>, <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<6> ",
        "type": "page_rank"
    },
    {
        "index": 186,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <3>, <1>.\nNode <0> is connected to nodes <2>, <3>, <5>.\nNode <3> is connected to node <4>.\nNode <1> is connected to node <2>.\nNode <2> is connected to nodes <3>, <4>, <1>.\nNode <4> is connected to nodes <5>, <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 187,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <3>, <4>, <1>.\nNode <0> is connected to nodes <2>, <3>, <4>, <1>.\nNode <3> is connected to nodes <2>, <0>, <5>, <1>.\nNode <4> is connected to nodes <2>, <0>, <5>.\nNode <1> is connected to nodes <2>, <0>, <3>.\nNode <5> is connected to nodes <3>, <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 188,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <2>, <1>, <0>, <3>.\nNode <1> is connected to nodes <0>, <4>, <6>, <5>.\nNode <0> is connected to node <1>.\nNode <3> is connected to nodes <5>, <2>, <4>.\nNode <5> is connected to nodes <0>, <4>, <3>.\nNode <4> is connected to nodes <5>, <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 189,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <6>, <3>.\nNode <4> is connected to nodes <2>, <5>.\nNode <6> is connected to nodes <3>, <1>, <4>.\nNode <1> is connected to nodes <4>, <6>.\nNode <5> is connected to nodes <4>, <2>, <3>, <0>, <1>.\nNode <2> is connected to nodes <5>, <6>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<5> ",
        "type": "page_rank"
    },
    {
        "index": 190,
        "question": "Given an undirected graph:\nNode <1> is connected to node <3>.\nNode <3> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <3>, <0>, <5>.\nNode <0> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <0>, <5>.\nNode <5> is connected to nodes <2>, <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 191,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <2>, <1>.\nNode <0> is connected to nodes <2>, <4>, <1>.\nNode <2> is connected to nodes <4>, <0>.\nNode <1> is connected to nodes <3>, <0>, <2>, <4>.\nNode <4> is connected to node <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 192,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <2>, <0>, <5>.\nNode <3> is connected to node <0>.\nNode <2> is connected to nodes <5>, <1>, <6>.\nNode <6> is connected to nodes <4>, <0>, <3>, <1>.\nNode <4> is connected to nodes <3>, <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<5> ",
        "type": "page_rank"
    },
    {
        "index": 193,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <2>, <3>, <1>, <5>.\nNode <0> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <4>, <0>, <6>.\nNode <3> is connected to nodes <4>, <6>, <1>.\nNode <1> is connected to nodes <4>, <3>.\nNode <5> is connected to nodes <4>, <6>.\nNode <6> is connected to nodes <3>, <2>, <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 194,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <2>, <1>.\nNode <4> is connected to nodes <0>, <5>.\nNode <2> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <0>, <2>.\nNode <5> is connected to nodes <4>, <3>.\nNode <3> is connected to node <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 195,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <1>, <0>, <3>, <4>.\nNode <3> is connected to nodes <1>, <0>.\nNode <1> is connected to node <0>.\nNode <0> is connected to nodes <3>, <2>, <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 196,
        "question": "Given a directed graph:\nNode <1> is connected to node <6>.\nNode <6> is connected to nodes <0>, <1>, <4>.\nNode <5> is connected to nodes <2>, <0>, <1>.\nNode <2> is connected to nodes <6>, <0>, <1>, <5>.\nNode <0> is connected to node <5>.\nNode <4> is connected to nodes <3>, <6>, <0>, <1>, <5>.\nNode <3> is connected to node <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<5> ",
        "type": "page_rank"
    },
    {
        "index": 197,
        "question": "Given a directed graph:\nNode <1> is connected to node <4>.\nNode <4> is connected to node <2>.\nNode <2> is connected to nodes <1>, <4>.\nNode <3> is connected to nodes <0>, <1>.\nNode <0> is connected to node <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 198,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5>, <4>.\nNode <5> is connected to node <0>.\nNode <4> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <4>, <1>, <3>.\nNode <1> is connected to node <2>.\nNode <3> is connected to node <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 199,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <1>, <0>, <2>, <4>.\nNode <3> is connected to nodes <5>, <6>, <1>, <0>, <4>.\nNode <1> is connected to nodes <5>, <6>, <3>, <0>, <2>, <4>.\nNode <0> is connected to nodes <5>, <3>, <1>, <2>, <4>.\nNode <2> is connected to nodes <5>, <6>, <1>, <0>, <4>.\nNode <4> is connected to nodes <5>, <3>, <1>, <0>, <2>.\nNode <6> is connected to nodes <3>, <1>, <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 200,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <5>, <4>, <0>, <6>.\nNode <5> is connected to nodes <4>, <3>, <0>, <1>.\nNode <4> is connected to node <6>.\nNode <0> is connected to nodes <6>, <1>.\nNode <6> is connected to nodes <5>, <3>, <0>.\nNode <3> is connected to nodes <0>, <6>, <1>, <5>.\nNode <2> is connected to nodes <6>, <5>, <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 201,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <4>.\nNode <4> is connected to node <0>.\nNode <2> is connected to nodes <4>, <3>.\nNode <5> is connected to nodes <1>, <3>, <0>.\nNode <1> is connected to nodes <3>, <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<4> ",
        "type": "page_rank"
    },
    {
        "index": 202,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <2>, <1>, <3>.\nNode <0> is connected to node <2>.\nNode <1> is connected to node <4>.\nNode <3> is connected to node <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 203,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <5>, <3>.\nNode <0> is connected to nodes <5>, <2>, <1>.\nNode <3> is connected to nodes <4>, <1>, <0>.\nNode <2> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <1>, <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 204,
        "question": "Given an undirected graph:\nNode <3> is connected to node <4>.\nNode <4> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <4>, <0>, <2>.\nNode <0> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <1>, <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 205,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <5>, <1>.\nNode <5> is connected to node <2>.\nNode <1> is connected to nodes <4>, <3>, <0>.\nNode <2> is connected to nodes <1>, <5>, <3>, <0>.\nNode <3> is connected to nodes <0>, <5>.\nNode <0> is connected to nodes <1>, <5>, <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 206,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <4>, <6>, <0>, <5>.\nNode <1> is connected to nodes <3>, <4>, <2>.\nNode <4> is connected to nodes <3>, <1>.\nNode <6> is connected to nodes <3>, <0>, <5>.\nNode <0> is connected to nodes <3>, <2>, <6>.\nNode <5> is connected to nodes <3>, <6>.\nNode <2> is connected to nodes <1>, <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 207,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <1>, <0>.\nNode <3> is connected to node <1>.\nNode <1> is connected to node <2>.\nNode <0> is connected to node <1>.\nNode <4> is connected to nodes <0>, <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 208,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <5>.\nNode <0> is connected to nodes <4>, <2>.\nNode <5> is connected to nodes <4>, <3>.\nNode <2> is connected to nodes <0>, <3>, <6>.\nNode <3> is connected to nodes <2>, <5>.\nNode <6> is connected to nodes <2>, <1>.\nNode <1> is connected to node <6>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 209,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <3>, <1>, <4>.\nNode <3> is connected to nodes <6>, <5>.\nNode <1> is connected to nodes <6>, <0>, <5>, <4>.\nNode <4> is connected to nodes <6>, <1>, <0>, <5>, <2>.\nNode <5> is connected to nodes <3>, <1>, <4>.\nNode <0> is connected to nodes <1>, <4>.\nNode <2> is connected to node <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 210,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <1>, <3>.\nNode <0> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <2>, <1>.\nNode <4> is connected to node <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 211,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <1>, <3>.\nNode <4> is connected to nodes <0>, <2>, <5>.\nNode <1> is connected to nodes <3>, <5>, <4>.\nNode <3> is connected to node <0>.\nNode <0> is connected to nodes <5>, <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 212,
        "question": "Given a directed graph:\nNode <4> is connected to node <3>.\nNode <3> is connected to nodes <1>, <4>, <5>.\nNode <2> is connected to nodes <3>, <0>.\nNode <1> is connected to nodes <4>, <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 213,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <4>, <3>, <5>, <0>.\nNode <2> is connected to node <0>.\nNode <4> is connected to nodes <3>, <5>, <1>, <2>.\nNode <3> is connected to nodes <0>, <4>.\nNode <5> is connected to nodes <0>, <2>, <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 214,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <3>, <1>, <0>.\nNode <4> is connected to node <2>.\nNode <3> is connected to node <2>.\nNode <1> is connected to node <2>.\nNode <0> is connected to node <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 215,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0>, <4>, <1>.\nNode <0> is connected to node <3>.\nNode <4> is connected to nodes <3>, <2>.\nNode <1> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <4>, <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 216,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <3>.\nNode <4> is connected to node <2>.\nNode <3> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <3>, <0>.\nNode <0> is connected to node <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 217,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <2>, <0>.\nNode <3> is connected to nodes <1>, <0>, <4>.\nNode <2> is connected to nodes <4>, <1>.\nNode <0> is connected to nodes <4>, <1>.\nNode <1> is connected to node <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 218,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <6>, <5>.\nNode <2> is connected to nodes <0>, <3>, <6>, <1>, <4>.\nNode <6> is connected to nodes <0>, <2>, <1>.\nNode <5> is connected to nodes <0>, <4>.\nNode <3> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <2>, <6>.\nNode <4> is connected to nodes <2>, <5>, <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 219,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <4>.\nNode <3> is connected to node <6>.\nNode <4> is connected to nodes <6>, <5>, <2>.\nNode <6> is connected to node <2>.\nNode <5> is connected to nodes <6>, <1>.\nNode <1> is connected to nodes <0>, <2>, <3>, <4>.\nNode <0> is connected to nodes <2>, <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<5> ",
        "type": "page_rank"
    },
    {
        "index": 220,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <0>.\nNode <1> is connected to node <3>.\nNode <0> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <0>, <2>.\nNode <2> is connected to node <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 221,
        "question": "Given an undirected graph:\nNode <3> is connected to node <4>.\nNode <4> is connected to nodes <3>, <1>, <2>.\nNode <1> is connected to node <4>.\nNode <2> is connected to nodes <4>, <5>.\nNode <5> is connected to nodes <2>, <0>.\nNode <0> is connected to node <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 222,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <4>, <2>, <3>.\nNode <0> is connected to node <4>.\nNode <2> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <1>, <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 223,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <0>, <1>.\nNode <2> is connected to nodes <0>, <4>, <1>.\nNode <1> is connected to nodes <3>, <2>.\nNode <4> is connected to node <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 224,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <2>, <5>, <3>, <0>.\nNode <2> is connected to node <6>.\nNode <5> is connected to nodes <6>, <4>, <1>.\nNode <3> is connected to node <6>.\nNode <0> is connected to node <6>.\nNode <4> is connected to node <5>.\nNode <1> is connected to node <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 225,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <3>, <4>, <0>.\nNode <3> is connected to node <4>.\nNode <4> is connected to nodes <1>, <3>.\nNode <0> is connected to node <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 226,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <1>, <2>.\nNode <3> is connected to nodes <4>, <0>.\nNode <1> is connected to nodes <4>, <2>, <0>.\nNode <2> is connected to nodes <0>, <4>.\nNode <4> is connected to node <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 227,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <0>, <6>, <5>, <3>.\nNode <4> is connected to node <5>.\nNode <0> is connected to nodes <6>, <5>.\nNode <6> is connected to nodes <5>, <3>, <1>, <0>.\nNode <5> is connected to node <6>.\nNode <3> is connected to node <5>.\nNode <1> is connected to nodes <4>, <0>, <6>, <5>, <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<6> ",
        "type": "page_rank"
    },
    {
        "index": 228,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <2>, <1>.\nNode <0> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <3>, <4>, <2>.\nNode <3> is connected to nodes <4>, <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 229,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <3>, <2>, <4>.\nNode <4> is connected to nodes <1>, <5>.\nNode <5> is connected to nodes <4>, <0>.\nNode <0> is connected to node <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 230,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0>, <2>, <4>, <3>, <5>.\nNode <0> is connected to nodes <1>, <6>.\nNode <2> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <5> is connected to node <1>.\nNode <6> is connected to node <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 231,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <0>, <6>, <2>, <3>.\nNode <4> is connected to nodes <5>, <1>.\nNode <0> is connected to node <5>.\nNode <6> is connected to node <5>.\nNode <2> is connected to node <5>.\nNode <3> is connected to node <5>.\nNode <1> is connected to node <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 232,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <5>, <0>, <4>.\nNode <2> is connected to nodes <5>, <4>, <3>.\nNode <5> is connected to nodes <1>, <4>.\nNode <0> is connected to nodes <3>, <2>.\nNode <4> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <4>, <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 233,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0>, <1>, <6>, <2>, <3>, <4>.\nNode <0> is connected to node <5>.\nNode <1> is connected to node <5>.\nNode <6> is connected to node <5>.\nNode <2> is connected to node <5>.\nNode <3> is connected to node <5>.\nNode <4> is connected to node <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 234,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <2>, <1>, <5>.\nNode <0> is connected to nodes <4>, <2>, <5>.\nNode <2> is connected to nodes <4>, <0>, <5>.\nNode <1> is connected to nodes <4>, <3>, <5>.\nNode <5> is connected to nodes <4>, <0>, <2>, <1>, <3>.\nNode <3> is connected to nodes <1>, <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<4> ",
        "type": "page_rank"
    },
    {
        "index": 235,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <5>, <0>, <3>, <6>.\nNode <4> is connected to nodes <2>, <1>, <5>, <0>, <3>, <6>.\nNode <5> is connected to nodes <2>, <4>, <1>, <6>.\nNode <0> is connected to nodes <2>, <4>, <3>, <6>.\nNode <3> is connected to nodes <2>, <4>, <0>.\nNode <6> is connected to nodes <2>, <4>, <5>, <0>.\nNode <1> is connected to nodes <4>, <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 236,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <1>, <5>, <4>.\nNode <3> is connected to node <0>.\nNode <1> is connected to nodes <0>, <2>.\nNode <5> is connected to node <0>.\nNode <4> is connected to node <0>.\nNode <2> is connected to node <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 237,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0>, <4>, <3>, <5>.\nNode <0> is connected to node <2>.\nNode <4> is connected to node <2>.\nNode <3> is connected to nodes <2>, <1>.\nNode <5> is connected to node <2>.\nNode <1> is connected to node <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 238,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <2>, <1>.\nNode <3> is connected to node <4>.\nNode <2> is connected to nodes <4>, <0>.\nNode <1> is connected to node <4>.\nNode <0> is connected to node <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 239,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1>, <2>, <4>, <0>.\nNode <1> is connected to node <3>.\nNode <2> is connected to node <3>.\nNode <4> is connected to node <3>.\nNode <0> is connected to node <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 240,
        "question": "Given a directed graph:\nNode <1> is connected to node <0>.\nNode <0> is connected to node <4>.\nNode <3> is connected to nodes <0>, <1>, <4>.\nNode <2> is connected to node <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 241,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <4>, <3>, <0>.\nNode <0> is connected to nodes <1>, <2>.\nNode <2> is connected to node <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 242,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <4>, <1>, <5>.\nNode <3> is connected to nodes <0>, <4>, <1>, <5>, <2>.\nNode <4> is connected to nodes <0>, <3>, <1>, <2>.\nNode <1> is connected to nodes <0>, <3>, <4>, <5>.\nNode <5> is connected to nodes <0>, <3>, <1>, <2>.\nNode <2> is connected to nodes <3>, <4>, <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 243,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <5>.\nNode <2> is connected to node <4>.\nNode <5> is connected to nodes <1>, <4>, <2>.\nNode <4> is connected to nodes <2>, <3>, <5>.\nNode <3> is connected to nodes <5>, <1>, <0>.\nNode <0> is connected to nodes <5>, <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 244,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <0>, <3>.\nNode <4> is connected to node <5>.\nNode <1> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <3>, <5>, <4>, <2>.\nNode <3> is connected to node <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<4> ",
        "type": "page_rank"
    },
    {
        "index": 245,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <0>.\nNode <1> is connected to node <4>.\nNode <0> is connected to nodes <1>, <2>.\nNode <4> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <0>, <3>, <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<4> ",
        "type": "page_rank"
    },
    {
        "index": 246,
        "question": "Given a directed graph:\nNode <4> is connected to node <2>.\nNode <2> is connected to nodes <1>, <3>, <4>.\nNode <0> is connected to nodes <2>, <1>, <4>.\nNode <1> is connected to nodes <4>, <2>.\nNode <3> is connected to nodes <0>, <2>, <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 247,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1>, <5>, <3>, <2>.\nNode <1> is connected to nodes <0>, <5>, <3>, <2>.\nNode <5> is connected to nodes <0>, <1>, <3>, <4>.\nNode <3> is connected to nodes <0>, <1>, <5>, <2>, <4>.\nNode <2> is connected to nodes <0>, <1>, <3>, <4>.\nNode <4> is connected to nodes <5>, <3>, <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 248,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <1>, <2>, <0>, <4>, <3>.\nNode <1> is connected to nodes <2>, <6>.\nNode <2> is connected to nodes <0>, <5>.\nNode <0> is connected to nodes <4>, <3>, <5>, <1>, <2>.\nNode <4> is connected to nodes <6>, <5>, <2>.\nNode <3> is connected to nodes <6>, <1>, <4>.\nNode <5> is connected to nodes <2>, <0>, <3>, <6>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 249,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <6>, <1>, <5>.\nNode <6> is connected to nodes <0>, <2>.\nNode <1> is connected to nodes <0>, <4>, <3>.\nNode <5> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <6>, <5>.\nNode <4> is connected to node <1>.\nNode <3> is connected to node <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 250,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2>, <3>, <0>, <1>, <4>.\nNode <2> is connected to node <5>.\nNode <3> is connected to node <5>.\nNode <0> is connected to node <5>.\nNode <1> is connected to node <5>.\nNode <4> is connected to node <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 251,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <3>, <1>.\nNode <1> is connected to nodes <6>, <2>, <3>.\nNode <6> is connected to nodes <5>, <0>, <3>.\nNode <4> is connected to nodes <0>, <1>, <6>, <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 252,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <4>, <1>, <0>.\nNode <4> is connected to nodes <1>, <2>, <0>, <3>.\nNode <1> is connected to nodes <0>, <5>.\nNode <0> is connected to nodes <5>, <6>.\nNode <6> is connected to nodes <4>, <1>, <2>, <3>, <5>.\nNode <2> is connected to nodes <3>, <5>, <1>.\nNode <3> is connected to node <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<4> ",
        "type": "page_rank"
    },
    {
        "index": 253,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <6>, <1>, <0>, <5>.\nNode <2> is connected to nodes <3>, <6>, <1>, <0>, <5>, <4>.\nNode <6> is connected to nodes <3>, <2>, <1>, <5>.\nNode <1> is connected to nodes <3>, <2>, <6>, <0>.\nNode <0> is connected to nodes <3>, <2>, <1>, <5>, <4>.\nNode <5> is connected to nodes <3>, <2>, <6>, <0>, <4>.\nNode <4> is connected to nodes <2>, <0>, <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 254,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <0>, <2>.\nNode <1> is connected to nodes <0>, <2>, <3>.\nNode <2> is connected to nodes <4>, <1>.\nNode <3> is connected to node <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 255,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <1>, <0>, <3>.\nNode <2> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <4>, <2>.\nNode <0> is connected to nodes <4>, <5>.\nNode <3> is connected to node <4>.\nNode <5> is connected to node <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 256,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <2>, <3>, <5>, <4>.\nNode <3> is connected to nodes <6>, <1>, <2>.\nNode <4> is connected to nodes <3>, <6>.\nNode <6> is connected to nodes <5>, <4>, <3>.\nNode <2> is connected to nodes <3>, <6>, <0>, <4>, <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<6> ",
        "type": "page_rank"
    },
    {
        "index": 257,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <3>, <5>, <2>.\nNode <4> is connected to nodes <0>, <1>.\nNode <3> is connected to node <0>.\nNode <5> is connected to nodes <0>, <6>.\nNode <2> is connected to node <0>.\nNode <1> is connected to node <4>.\nNode <6> is connected to node <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 258,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <2>, <4>, <5>.\nNode <0> is connected to nodes <2>, <5>, <3>.\nNode <4> is connected to node <1>.\nNode <5> is connected to nodes <1>, <0>.\nNode <3> is connected to node <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 259,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2>, <6>, <5>, <1>.\nNode <2> is connected to nodes <3>, <0>, <4>, <1>.\nNode <6> is connected to nodes <3>, <4>, <1>.\nNode <5> is connected to nodes <3>, <4>.\nNode <1> is connected to nodes <3>, <2>, <6>, <4>.\nNode <0> is connected to node <2>.\nNode <4> is connected to nodes <2>, <6>, <5>, <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 260,
        "question": "Given an undirected graph:\nNode <0> is connected to node <2>.\nNode <2> is connected to nodes <0>, <3>, <1>, <4>, <5>.\nNode <3> is connected to nodes <2>, <4>, <5>.\nNode <1> is connected to nodes <2>, <4>.\nNode <4> is connected to nodes <2>, <3>, <1>, <5>.\nNode <5> is connected to nodes <2>, <3>, <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 261,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <0>, <1>, <3>.\nNode <2> is connected to node <4>.\nNode <0> is connected to node <4>.\nNode <1> is connected to node <4>.\nNode <3> is connected to node <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 262,
        "question": "Given an undirected graph:\nNode <4> is connected to node <3>.\nNode <3> is connected to nodes <4>, <2>, <5>, <1>, <0>.\nNode <2> is connected to nodes <3>, <0>, <6>.\nNode <5> is connected to node <3>.\nNode <1> is connected to node <3>.\nNode <0> is connected to nodes <3>, <2>.\nNode <6> is connected to node <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 263,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5>, <1>, <0>.\nNode <5> is connected to nodes <3>, <2>.\nNode <1> is connected to node <3>.\nNode <0> is connected to node <3>.\nNode <2> is connected to nodes <5>, <4>, <6>.\nNode <4> is connected to nodes <2>, <6>.\nNode <6> is connected to nodes <2>, <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 264,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <2>, <1>.\nNode <0> is connected to nodes <4>, <3>.\nNode <2> is connected to node <4>.\nNode <1> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <0>, <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 265,
        "question": "Given a directed graph:\nNode <4> is connected to node <0>.\nNode <0> is connected to node <4>.\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <0>, <3>.\nNode <3> is connected to node <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 266,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <2>, <0>, <5>.\nNode <3> is connected to nodes <4>, <5>.\nNode <5> is connected to nodes <3>, <1>.\nNode <0> is connected to node <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 267,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <4>, <1>, <3>.\nNode <1> is connected to nodes <4>, <2>.\nNode <3> is connected to nodes <2>, <0>.\nNode <0> is connected to node <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 268,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <5>, <0>, <1>.\nNode <5> is connected to node <4>.\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <1> is connected to nodes <0>, <2>.\nNode <4> is connected to nodes <2>, <1>.\nNode <2> is connected to node <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 269,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <3>, <5>, <4>.\nNode <1> is connected to nodes <2>, <5>, <4>, <0>.\nNode <3> is connected to nodes <2>, <5>, <4>.\nNode <5> is connected to nodes <2>, <1>, <3>, <4>.\nNode <4> is connected to nodes <2>, <1>, <3>, <5>.\nNode <0> is connected to node <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 270,
        "question": "Given a directed graph:\nNode <4> is connected to node <2>.\nNode <2> is connected to nodes <4>, <0>, <3>, <1>.\nNode <0> is connected to node <3>.\nNode <3> is connected to nodes <1>, <2>.\nNode <1> is connected to node <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 271,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <1>, <4>, <2>.\nNode <2> is connected to nodes <3>, <0>.\nNode <0> is connected to node <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 272,
        "question": "Given a directed graph:\nNode <6> is connected to node <2>.\nNode <2> is connected to nodes <1>, <0>, <6>.\nNode <5> is connected to nodes <3>, <6>.\nNode <3> is connected to nodes <4>, <0>, <6>, <5>.\nNode <1> is connected to node <3>.\nNode <0> is connected to nodes <6>, <2>, <3>, <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 273,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4>, <3>, <0>.\nNode <4> is connected to node <2>.\nNode <3> is connected to nodes <2>, <5>, <1>.\nNode <0> is connected to node <2>.\nNode <5> is connected to node <3>.\nNode <1> is connected to node <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 274,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <6>, <4>.\nNode <6> is connected to node <1>.\nNode <4> is connected to nodes <1>, <5>, <2>, <0>.\nNode <5> is connected to nodes <4>, <3>.\nNode <3> is connected to node <5>.\nNode <2> is connected to node <4>.\nNode <0> is connected to node <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 275,
        "question": "Given an undirected graph:\nNode <1> is connected to node <3>.\nNode <3> is connected to nodes <1>, <0>, <2>.\nNode <0> is connected to nodes <3>, <4>.\nNode <2> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <0>, <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 276,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <4>, <3>.\nNode <0> is connected to node <4>.\nNode <3> is connected to nodes <2>, <5>, <6>.\nNode <1> is connected to nodes <5>, <6>.\nNode <5> is connected to nodes <1>, <3>.\nNode <6> is connected to nodes <1>, <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<3> ",
        "type": "page_rank"
    },
    {
        "index": 277,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <6>, <5>, <4>, <0>, <1>, <2>.\nNode <6> is connected to node <3>.\nNode <5> is connected to node <3>.\nNode <4> is connected to node <3>.\nNode <0> is connected to node <3>.\nNode <1> is connected to node <3>.\nNode <2> is connected to node <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 278,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <5>, <4>, <0>, <1>.\nNode <2> is connected to node <5>.\nNode <4> is connected to node <3>.\nNode <0> is connected to node <3>.\nNode <1> is connected to node <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 279,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2>, <4>, <5>.\nNode <2> is connected to nodes <1>, <4>, <5>, <3>.\nNode <4> is connected to nodes <1>, <2>, <5>, <0>, <3>.\nNode <5> is connected to nodes <1>, <2>, <4>, <0>, <3>.\nNode <3> is connected to nodes <2>, <4>, <5>, <0>.\nNode <0> is connected to nodes <4>, <5>, <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 280,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <2>, <0>, <3>.\nNode <0> is connected to nodes <5>, <3>.\nNode <1> is connected to nodes <0>, <3>.\nNode <2> is connected to nodes <5>, <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 281,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1>, <3>, <4>, <0>.\nNode <1> is connected to node <2>.\nNode <3> is connected to node <2>.\nNode <4> is connected to node <2>.\nNode <0> is connected to node <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 282,
        "question": "Given a directed graph:\nNode <3> is connected to node <0>.\nNode <0> is connected to nodes <2>, <4>, <3>, <5>.\nNode <5> is connected to nodes <2>, <4>.\nNode <2> is connected to node <0>.\nNode <4> is connected to node <1>.\nNode <1> is connected to nodes <4>, <0>.\nNode <6> is connected to nodes <5>, <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 283,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <2>, <5>, <1>.\nNode <0> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <4>, <0>, <3>, <5>, <1>.\nNode <5> is connected to nodes <4>, <3>, <2>, <1>.\nNode <1> is connected to nodes <4>, <3>, <2>, <5>.\nNode <3> is connected to nodes <2>, <5>, <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 284,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <6>, <2>.\nNode <4> is connected to nodes <6>, <3>.\nNode <2> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <2>, <5>, <3>.\nNode <5> is connected to node <0>.\nNode <3> is connected to nodes <0>, <4>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<4> ",
        "type": "page_rank"
    },
    {
        "index": 285,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <2>, <5>.\nNode <0> is connected to nodes <5>, <4>.\nNode <2> is connected to node <1>.\nNode <5> is connected to node <0>.\nNode <1> is connected to node <2>.\nNode <4> is connected to node <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 286,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <2>, <6>.\nNode <4> is connected to nodes <5>, <3>.\nNode <2> is connected to nodes <5>, <0>.\nNode <6> is connected to nodes <5>, <3>.\nNode <3> is connected to nodes <4>, <6>.\nNode <0> is connected to nodes <2>, <1>.\nNode <1> is connected to node <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 287,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <5>, <6>.\nNode <4> is connected to nodes <2>, <3>, <5>, <0>, <6>.\nNode <5> is connected to node <0>.\nNode <2> is connected to nodes <3>, <5>, <0>, <1>, <4>.\nNode <3> is connected to nodes <5>, <6>.\nNode <0> is connected to nodes <6>, <4>, <3>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 288,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <0>, <3>, <5>, <1>.\nNode <3> is connected to nodes <5>, <1>, <0>, <2>.\nNode <0> is connected to nodes <2>, <4>.\nNode <5> is connected to node <4>.\nNode <2> is connected to node <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 289,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <4>, <0>, <1>.\nNode <1> is connected to nodes <2>, <3>.\nNode <3> is connected to node <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 290,
        "question": "Given a directed graph:\nNode <3> is connected to node <2>.\nNode <2> is connected to nodes <5>, <1>.\nNode <4> is connected to nodes <0>, <1>.\nNode <0> is connected to node <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<1> ",
        "type": "page_rank"
    },
    {
        "index": 291,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4>, <6>, <5>.\nNode <4> is connected to node <0>.\nNode <6> is connected to node <0>.\nNode <5> is connected to nodes <0>, <2>, <1>.\nNode <2> is connected to nodes <3>, <5>.\nNode <3> is connected to node <2>.\nNode <1> is connected to node <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 292,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <6>, <5>.\nNode <6> is connected to nodes <3>, <1>.\nNode <5> is connected to nodes <3>, <0>.\nNode <1> is connected to nodes <6>, <2>.\nNode <2> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <4>, <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 293,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2>, <1>.\nNode <2> is connected to node <4>.\nNode <1> is connected to nodes <4>, <5>, <3>.\nNode <5> is connected to nodes <1>, <0>.\nNode <0> is connected to node <5>.\nNode <3> is connected to node <1>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 294,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4>, <2>, <3>.\nNode <4> is connected to nodes <5>, <2>, <3>.\nNode <2> is connected to nodes <5>, <0>, <4>.\nNode <3> is connected to nodes <5>, <0>, <4>.\nNode <0> is connected to nodes <1>, <2>, <3>.\nNode <1> is connected to node <0>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<4> ",
        "type": "page_rank"
    },
    {
        "index": 295,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <0>, <4>, <1>, <5>.\nNode <5> is connected to nodes <0>, <4>, <2>, <1>, <3>.\nNode <4> is connected to nodes <2>, <1>, <3>, <5>.\nNode <1> is connected to nodes <4>, <2>, <3>, <5>.\nNode <3> is connected to nodes <4>, <1>, <5>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 296,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <2>.\nNode <4> is connected to node <1>.\nNode <2> is connected to nodes <1>, <6>, <4>.\nNode <6> is connected to node <2>.\nNode <5> is connected to nodes <2>, <6>.\nNode <0> is connected to nodes <4>, <5>.\nNode <3> is connected to node <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<2> ",
        "type": "page_rank"
    },
    {
        "index": 297,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <0>, <3>.\nNode <4> is connected to node <5>.\nNode <0> is connected to node <4>.\nNode <3> is connected to node <2>.\nNode <5> is connected to nodes <1>, <4>, <0>.\nNode <1> is connected to nodes <0>, <3>, <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 298,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <6>, <0>, <5>, <3>.\nNode <6> is connected to nodes <0>, <5>, <4>, <2>.\nNode <5> is connected to nodes <4>, <1>, <6>.\nNode <4> is connected to node <6>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 299,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3>, <1>, <5>, <2>.\nNode <3> is connected to nodes <0>, <5>.\nNode <1> is connected to node <0>.\nNode <5> is connected to nodes <0>, <3>.\nNode <2> is connected to nodes <0>, <4>.\nNode <4> is connected to node <2>.\nWhich node has the largest PageRank value? The dampling factor is 0.85. The number of iterations is 3. The initial PageRank values for all nodes are initialized equally as 1/N, where N is the number of nodes.\nAnswer:\n",
        "answer": "<0> ",
        "type": "page_rank"
    },
    {
        "index": 0,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <3>, <5>, <0>.\nNode <4> is connected to nodes <6>, <0>, <1>.\nNode <5> is connected to nodes <0>, <6>, <3>.\nNode <0> is connected to node <4>.\nNode <1> is connected to nodes <4>, <2>.\nNode <6> is connected to nodes <2>, <1>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <5>]",
        "type": "predecessor"
    },
    {
        "index": 1,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <0>, <3>.\nNode <2> is connected to node <1>.\nNode <0> is connected to nodes <3>, <2>, <4>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <2>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 2,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <3>, <2>.\nNode <1> is connected to nodes <4>, <0>, <3>.\nNode <4> is connected to nodes <0>, <3>, <2>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <4>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 3,
        "question": "Given a directed graph:\nNode <4> is connected to node <5>.\nNode <5> is connected to nodes <4>, <0>.\nNode <6> is connected to node <3>.\nNode <0> is connected to nodes <5>, <3>.\nNode <2> is connected to nodes <1>, <6>.\nWhich are the predecessor nodes of node <6>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>]",
        "type": "predecessor"
    },
    {
        "index": 4,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <3>, <1>, <4>.\nNode <2> is connected to node <3>.\nNode <3> is connected to node <5>.\nNode <1> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <0>, <2>, <5>, <3>.\nNode <5> is connected to nodes <1>, <0>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<5>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 5,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <4>, <0>, <2>, <6>, <5>, <3>.\nNode <2> is connected to nodes <6>, <4>, <0>.\nNode <5> is connected to nodes <3>, <1>, <4>, <0>, <6>.\nNode <3> is connected to nodes <1>, <0>, <2>, <5>.\nNode <4> is connected to nodes <0>, <5>, <1>.\nNode <0> is connected to nodes <2>, <6>, <5>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<6>, <3>, <1>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 6,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5>, <3>.\nNode <5> is connected to nodes <4>, <3>, <0>.\nNode <3> is connected to nodes <2>, <5>, <6>.\nNode <4> is connected to nodes <0>, <6>.\nNode <0> is connected to nodes <2>, <5>, <6>, <1>, <4>.\nNode <6> is connected to node <1>.\nNode <1> is connected to nodes <3>, <5>, <6>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<5>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 7,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <4>, <1>, <3>.\nNode <4> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <4>, <2>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>]",
        "type": "predecessor"
    },
    {
        "index": 8,
        "question": "Given a directed graph:\nNode <2> is connected to node <3>.\nNode <3> is connected to node <2>.\nNode <1> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <2>, <1>, <3>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <1>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 9,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <5>, <2>, <4>, <3>.\nNode <5> is connected to nodes <0>, <2>, <4>, <3>, <1>.\nNode <2> is connected to nodes <3>, <5>, <0>.\nNode <4> is connected to nodes <3>, <1>, <5>, <0>, <2>.\nNode <3> is connected to nodes <6>, <0>, <2>, <4>.\nWhich are the predecessor nodes of node <5>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <2>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 10,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <5>, <2>.\nNode <3> is connected to node <0>.\nNode <5> is connected to nodes <2>, <1>, <3>.\nNode <2> is connected to node <0>.\nNode <0> is connected to nodes <5>, <3>.\nNode <4> is connected to nodes <5>, <1>, <3>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <5>]",
        "type": "predecessor"
    },
    {
        "index": 11,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <2>, <0>.\nNode <3> is connected to node <2>.\nNode <2> is connected to node <1>.\nNode <0> is connected to nodes <4>, <2>.\nNode <4> is connected to node <3>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <3>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 12,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <6>, <3>, <4>.\nNode <6> is connected to nodes <0>, <1>, <4>, <5>.\nNode <3> is connected to node <4>.\nNode <4> is connected to nodes <5>, <0>, <1>, <3>.\nNode <0> is connected to nodes <1>, <3>, <5>, <6>.\nNode <1> is connected to nodes <3>, <4>, <2>, <6>.\nNode <5> is connected to nodes <2>, <6>, <3>, <4>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <5>]",
        "type": "predecessor"
    },
    {
        "index": 13,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <0>, <2>, <5>.\nNode <0> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <5>, <4>.\nNode <3> is connected to nodes <4>, <0>, <1>, <5>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <2>, <3>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 14,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <4>, <2>, <0>.\nNode <2> is connected to nodes <1>, <3>.\nNode <0> is connected to nodes <1>, <3>, <4>, <2>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <0>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 15,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <4>, <2>, <0>.\nNode <4> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <2>, <3>, <0>, <5>, <4>.\nNode <3> is connected to node <0>.\nWhich are the predecessor nodes of node <5>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>]",
        "type": "predecessor"
    },
    {
        "index": 16,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <5>, <0>.\nNode <2> is connected to nodes <1>, <3>, <5>.\nNode <5> is connected to nodes <4>, <1>.\nNode <0> is connected to node <4>.\nNode <1> is connected to nodes <3>, <5>, <2>.\nNode <3> is connected to nodes <5>, <4>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <5>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 17,
        "question": "Given a directed graph:\nNode <2> is connected to node <4>.\nNode <4> is connected to nodes <3>, <5>.\nNode <5> is connected to nodes <1>, <4>, <3>.\nNode <1> is connected to nodes <5>, <0>.\nNode <3> is connected to nodes <6>, <0>, <1>.\nNode <6> is connected to nodes <1>, <4>.\nNode <0> is connected to nodes <3>, <6>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<5>, <0>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 18,
        "question": "Given a directed graph:\nNode <1> is connected to node <3>.\nNode <3> is connected to node <4>.\nNode <4> is connected to nodes <2>, <0>, <3>.\nNode <2> is connected to nodes <3>, <4>.\nNode <0> is connected to nodes <1>, <4>, <2>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 19,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <1>, <3>.\nNode <4> is connected to nodes <1>, <0>, <3>, <2>.\nNode <0> is connected to nodes <3>, <2>, <1>.\nNode <3> is connected to nodes <2>, <4>, <0>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <2>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 20,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <2>, <1>.\nNode <5> is connected to node <1>.\nNode <2> is connected to nodes <5>, <4>, <3>.\nNode <0> is connected to nodes <2>, <5>, <1>, <4>.\nNode <3> is connected to nodes <1>, <0>.\nWhich are the predecessor nodes of node <5>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <0>, <2>]",
        "type": "predecessor"
    },
    {
        "index": 21,
        "question": "Given a directed graph:\nNode <4> is connected to node <5>.\nNode <5> is connected to nodes <4>, <1>.\nNode <6> is connected to nodes <0>, <3>, <1>, <5>, <4>.\nNode <0> is connected to nodes <2>, <5>, <4>.\nNode <3> is connected to nodes <1>, <4>, <6>, <0>, <2>.\nNode <1> is connected to nodes <5>, <6>.\nNode <2> is connected to nodes <5>, <6>, <0>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <3>]",
        "type": "predecessor"
    },
    {
        "index": 22,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <6>, <2>.\nNode <6> is connected to nodes <2>, <3>, <0>, <5>.\nNode <2> is connected to node <1>.\nNode <4> is connected to node <2>.\nNode <3> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <5>, <1>, <4>, <2>.\nNode <5> is connected to nodes <1>, <4>, <6>, <3>, <0>.\nWhich are the predecessor nodes of node <5>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<6>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 23,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <2>, <1>.\nNode <3> is connected to nodes <4>, <2>, <1>.\nNode <4> is connected to nodes <1>, <3>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>]",
        "type": "predecessor"
    },
    {
        "index": 24,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <6>, <1>.\nNode <6> is connected to nodes <0>, <4>, <3>.\nNode <1> is connected to nodes <5>, <6>, <4>.\nNode <0> is connected to nodes <4>, <2>, <1>, <5>.\nNode <2> is connected to node <4>.\nNode <5> is connected to nodes <0>, <4>, <2>, <1>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<6>, <5>]",
        "type": "predecessor"
    },
    {
        "index": 25,
        "question": "Given a directed graph:\nNode <5> is connected to node <1>.\nNode <1> is connected to node <0>.\nNode <4> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <6>, <4>, <1>.\nNode <3> is connected to nodes <4>, <2>.\nNode <0> is connected to nodes <5>, <4>, <1>, <2>.\nNode <6> is connected to nodes <0>, <4>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>, <3>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 26,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <4>, <2>, <0>.\nNode <1> is connected to nodes <4>, <2>, <3>.\nNode <4> is connected to nodes <0>, <1>.\nNode <2> is connected to nodes <3>, <4>.\nNode <0> is connected to nodes <1>, <4>, <2>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <2>]",
        "type": "predecessor"
    },
    {
        "index": 27,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <5>, <0>.\nNode <5> is connected to nodes <2>, <0>, <3>, <4>, <1>.\nNode <3> is connected to nodes <4>, <5>, <2>, <6>.\nNode <4> is connected to nodes <1>, <2>, <6>.\nNode <2> is connected to nodes <6>, <1>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <5>]",
        "type": "predecessor"
    },
    {
        "index": 28,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <2>, <5>, <0>, <3>.\nNode <0> is connected to nodes <3>, <5>, <1>.\nNode <3> is connected to nodes <2>, <1>.\nNode <4> is connected to node <1>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<6>, <3>]",
        "type": "predecessor"
    },
    {
        "index": 29,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <5>, <2>, <0>.\nNode <5> is connected to nodes <0>, <4>.\nNode <2> is connected to nodes <0>, <6>, <4>, <3>.\nNode <0> is connected to nodes <6>, <3>, <1>, <5>.\nNode <3> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <2>, <0>, <6>, <4>, <3>.\nNode <6> is connected to nodes <4>, <5>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 30,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <1>, <2>, <4>.\nNode <3> is connected to nodes <1>, <4>, <0>.\nNode <1> is connected to nodes <4>, <3>.\nNode <2> is connected to node <3>.\nNode <4> is connected to node <3>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <3>]",
        "type": "predecessor"
    },
    {
        "index": 31,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <3>, <2>.\nNode <4> is connected to nodes <3>, <1>.\nNode <3> is connected to node <0>.\nNode <2> is connected to nodes <1>, <0>, <3>.\nNode <0> is connected to nodes <4>, <3>, <2>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 32,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <2>.\nNode <4> is connected to node <0>.\nNode <2> is connected to nodes <3>, <0>.\nNode <0> is connected to node <1>.\nNode <1> is connected to nodes <3>, <4>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>, <2>]",
        "type": "predecessor"
    },
    {
        "index": 33,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5>, <0>.\nNode <5> is connected to node <3>.\nNode <0> is connected to nodes <1>, <4>, <5>, <3>.\nNode <3> is connected to nodes <0>, <1>, <4>.\nNode <1> is connected to nodes <5>, <0>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 34,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <2>, <4>, <6>.\nNode <4> is connected to nodes <1>, <2>.\nNode <5> is connected to nodes <4>, <0>, <6>.\nNode <0> is connected to nodes <6>, <3>.\nWhich are the predecessor nodes of node <6>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <5>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 35,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <6>, <5>, <2>.\nNode <0> is connected to nodes <6>, <2>, <1>.\nNode <6> is connected to nodes <2>, <1>, <0>.\nNode <5> is connected to nodes <2>, <6>.\nNode <2> is connected to node <3>.\nNode <1> is connected to nodes <3>, <6>, <4>, <5>, <2>.\nNode <4> is connected to nodes <5>, <2>, <1>, <3>, <0>, <6>.\nWhich are the predecessor nodes of node <6>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <0>, <4>, <5>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 36,
        "question": "Given a directed graph:\nNode <2> is connected to node <1>.\nNode <4> is connected to nodes <0>, <5>, <2>.\nNode <0> is connected to nodes <2>, <4>.\nNode <5> is connected to nodes <1>, <4>, <3>.\nNode <3> is connected to node <0>.\nWhich are the predecessor nodes of node <5>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>]",
        "type": "predecessor"
    },
    {
        "index": 37,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <5>, <1>.\nNode <0> is connected to nodes <5>, <1>, <2>.\nNode <5> is connected to nodes <1>, <2>, <4>, <3>.\nNode <1> is connected to nodes <4>, <0>, <5>.\nNode <4> is connected to nodes <0>, <3>, <5>, <1>.\nNode <3> is connected to nodes <2>, <4>.\nNode <6> is connected to nodes <5>, <2>, <4>, <0>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <4>, <6>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 38,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <4>, <6>.\nNode <1> is connected to nodes <2>, <3>.\nNode <4> is connected to node <5>.\nNode <6> is connected to nodes <0>, <2>, <4>.\nNode <2> is connected to nodes <5>, <4>, <6>, <0>, <3>.\nNode <5> is connected to nodes <3>, <2>.\nNode <0> is connected to nodes <1>, <2>, <4>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <5>, <6>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 39,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <2>, <0>, <6>, <3>.\nNode <5> is connected to nodes <3>, <1>, <2>, <4>.\nNode <2> is connected to nodes <0>, <4>, <6>, <5>.\nNode <0> is connected to node <6>.\nNode <6> is connected to nodes <5>, <2>, <0>, <4>.\nNode <4> is connected to nodes <6>, <3>, <2>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <2>, <6>]",
        "type": "predecessor"
    },
    {
        "index": 40,
        "question": "Given a directed graph:\nNode <0> is connected to node <4>.\nNode <4> is connected to nodes <2>, <3>, <1>.\nNode <2> is connected to nodes <3>, <5>, <0>.\nNode <3> is connected to nodes <5>, <0>.\nNode <5> is connected to node <0>.\nNode <1> is connected to nodes <0>, <3>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <1>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 41,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <1>, <4>.\nNode <1> is connected to node <5>.\nNode <4> is connected to node <3>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>]",
        "type": "predecessor"
    },
    {
        "index": 42,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <6>, <2>.\nNode <6> is connected to nodes <1>, <2>.\nNode <0> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <2>, <6>.\nNode <5> is connected to node <2>.\nNode <3> is connected to node <2>.\nWhich are the predecessor nodes of node <6>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 43,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <0>, <4>, <2>, <1>, <5>.\nNode <0> is connected to nodes <2>, <1>, <5>.\nNode <5> is connected to node <4>.\nNode <4> is connected to nodes <1>, <5>, <3>.\nNode <2> is connected to nodes <1>, <4>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 44,
        "question": "Given a directed graph:\nNode <4> is connected to node <1>.\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to node <3>.\nNode <3> is connected to node <1>.\nNode <0> is connected to nodes <3>, <1>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>]",
        "type": "predecessor"
    },
    {
        "index": 45,
        "question": "Given a directed graph:\nNode <2> is connected to node <3>.\nNode <3> is connected to nodes <4>, <2>.\nNode <1> is connected to node <2>.\nNode <4> is connected to node <0>.\nNode <0> is connected to nodes <4>, <2>, <1>, <3>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>]",
        "type": "predecessor"
    },
    {
        "index": 46,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <1>, <5>.\nNode <2> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <3>, <4>.\nNode <5> is connected to nodes <0>, <3>, <2>, <1>.\nNode <3> is connected to nodes <5>, <0>.\nNode <4> is connected to nodes <1>, <5>, <0>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <5>]",
        "type": "predecessor"
    },
    {
        "index": 47,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5>, <0>, <3>, <1>.\nNode <5> is connected to node <3>.\nNode <0> is connected to nodes <4>, <3>, <1>.\nNode <3> is connected to nodes <1>, <2>.\nNode <1> is connected to node <0>.\nWhich are the predecessor nodes of node <5>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>]",
        "type": "predecessor"
    },
    {
        "index": 48,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <0>, <2>.\nNode <0> is connected to node <4>.\nNode <2> is connected to node <1>.\nNode <4> is connected to nodes <2>, <3>, <1>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 49,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <4>, <1>.\nNode <0> is connected to nodes <4>, <1>, <2>.\nNode <4> is connected to node <2>.\nNode <1> is connected to nodes <5>, <0>.\nNode <2> is connected to nodes <5>, <3>, <0>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 50,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <4>, <1>.\nNode <2> is connected to node <3>.\nNode <4> is connected to node <2>.\nNode <1> is connected to node <2>.\nNode <5> is connected to nodes <2>, <4>, <1>, <0>.\nNode <0> is connected to nodes <3>, <5>, <2>, <1>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <5>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 51,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <3>.\nNode <2> is connected to node <1>.\nNode <3> is connected to node <1>.\nNode <0> is connected to nodes <2>, <3>, <1>.\nNode <1> is connected to nodes <4>, <2>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <2>, <3>]",
        "type": "predecessor"
    },
    {
        "index": 52,
        "question": "Given a directed graph:\nNode <2> is connected to node <1>.\nNode <1> is connected to node <2>.\nNode <3> is connected to nodes <0>, <4>, <2>.\nNode <4> is connected to nodes <2>, <1>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>]",
        "type": "predecessor"
    },
    {
        "index": 53,
        "question": "Given a directed graph:\nNode <0> is connected to node <4>.\nNode <4> is connected to nodes <3>, <1>, <0>.\nNode <2> is connected to nodes <4>, <3>, <0>.\nNode <3> is connected to node <2>.\nNode <1> is connected to nodes <0>, <2>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 54,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <6>.\nNode <3> is connected to nodes <0>, <1>.\nNode <6> is connected to nodes <0>, <3>, <5>.\nNode <0> is connected to nodes <5>, <6>.\nNode <2> is connected to nodes <0>, <1>.\nNode <4> is connected to node <0>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <6>]",
        "type": "predecessor"
    },
    {
        "index": 55,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <0>, <6>.\nNode <1> is connected to nodes <0>, <3>, <6>, <5>.\nNode <0> is connected to nodes <3>, <6>, <2>, <5>, <1>, <4>.\nNode <6> is connected to nodes <4>, <0>.\nNode <5> is connected to nodes <3>, <6>, <2>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <5>, <1>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <4>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 56,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <0>, <3>, <5>, <2>.\nNode <3> is connected to node <2>.\nNode <2> is connected to nodes <3>, <5>.\nNode <4> is connected to nodes <0>, <5>.\nWhich are the predecessor nodes of node <5>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <1>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 57,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <4>.\nNode <3> is connected to node <2>.\nNode <4> is connected to node <3>.\nNode <0> is connected to nodes <1>, <4>, <2>.\nNode <1> is connected to nodes <3>, <0>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <3>]",
        "type": "predecessor"
    },
    {
        "index": 58,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <1>, <0>, <5>.\nNode <0> is connected to nodes <5>, <2>, <1>, <4>.\nNode <5> is connected to nodes <1>, <4>.\nNode <4> is connected to nodes <3>, <2>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>]",
        "type": "predecessor"
    },
    {
        "index": 59,
        "question": "Given a directed graph:\nNode <4> is connected to node <1>.\nNode <1> is connected to node <6>.\nNode <3> is connected to node <2>.\nNode <2> is connected to node <0>.\nNode <0> is connected to node <3>.\nNode <6> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <3>, <2>, <1>, <6>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <5>]",
        "type": "predecessor"
    },
    {
        "index": 60,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <4>, <5>.\nNode <1> is connected to nodes <6>, <0>.\nNode <4> is connected to nodes <5>, <6>, <3>, <0>.\nNode <5> is connected to node <6>.\nNode <6> is connected to node <5>.\nNode <0> is connected to nodes <1>, <4>, <3>.\nNode <3> is connected to node <2>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 61,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <3>, <4>.\nNode <2> is connected to nodes <3>, <0>, <5>.\nNode <3> is connected to nodes <0>, <5>, <2>.\nNode <5> is connected to node <0>.\nNode <1> is connected to nodes <2>, <4>, <0>, <5>.\nWhich are the predecessor nodes of node <5>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <2>, <3>]",
        "type": "predecessor"
    },
    {
        "index": 62,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <3>, <0>.\nNode <0> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>]",
        "type": "predecessor"
    },
    {
        "index": 63,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <5>, <3>.\nNode <4> is connected to nodes <0>, <5>, <3>, <1>.\nNode <5> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <4>, <0>, <2>, <5>.\nNode <0> is connected to nodes <2>, <5>, <3>.\nNode <2> is connected to node <4>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>, <3>]",
        "type": "predecessor"
    },
    {
        "index": 64,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <0>, <3>.\nNode <3> is connected to node <0>.\nNode <0> is connected to nodes <2>, <4>.\nNode <2> is connected to node <4>.\nNode <5> is connected to node <4>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <3>]",
        "type": "predecessor"
    },
    {
        "index": 65,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <6>.\nNode <6> is connected to node <2>.\nNode <0> is connected to nodes <3>, <2>, <4>.\nNode <2> is connected to nodes <6>, <3>, <5>.\nNode <1> is connected to node <0>.\nNode <5> is connected to node <2>.\nWhich are the predecessor nodes of node <5>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>]",
        "type": "predecessor"
    },
    {
        "index": 66,
        "question": "Given a directed graph:\nNode <2> is connected to node <0>.\nNode <0> is connected to node <4>.\nNode <1> is connected to nodes <0>, <4>, <2>.\nNode <4> is connected to nodes <2>, <1>, <3>.\nNode <3> is connected to nodes <2>, <1>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>]",
        "type": "predecessor"
    },
    {
        "index": 67,
        "question": "Given a directed graph:\nNode <4> is connected to node <2>.\nNode <2> is connected to node <1>.\nNode <1> is connected to nodes <0>, <3>.\nNode <0> is connected to node <4>.\nNode <3> is connected to node <0>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>]",
        "type": "predecessor"
    },
    {
        "index": 68,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <5>.\nNode <3> is connected to node <1>.\nNode <5> is connected to node <3>.\nNode <2> is connected to node <3>.\nNode <6> is connected to node <0>.\nNode <1> is connected to nodes <3>, <6>.\nNode <4> is connected to nodes <5>, <2>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>]",
        "type": "predecessor"
    },
    {
        "index": 69,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <0>, <2>, <3>.\nNode <3> is connected to node <1>.\nNode <0> is connected to nodes <2>, <1>, <4>, <5>.\nNode <5> is connected to nodes <0>, <2>, <1>, <4>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <5>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 70,
        "question": "Given a directed graph:\nNode <3> is connected to node <1>.\nNode <1> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <3>, <1>.\nNode <0> is connected to nodes <4>, <3>, <1>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 71,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <3>, <2>.\nNode <3> is connected to node <1>.\nNode <2> is connected to node <1>.\nNode <4> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <6>, <3>.\nNode <6> is connected to nodes <3>, <2>.\nNode <0> is connected to nodes <3>, <5>, <1>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[]",
        "type": "predecessor"
    },
    {
        "index": 72,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <0>, <1>.\nNode <2> is connected to nodes <5>, <4>.\nNode <1> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <0>, <1>, <4>.\nNode <5> is connected to nodes <4>, <2>, <0>, <1>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <2>, <5>]",
        "type": "predecessor"
    },
    {
        "index": 73,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <0>, <4>.\nNode <2> is connected to node <1>.\nNode <0> is connected to nodes <3>, <1>, <2>.\nNode <4> is connected to nodes <2>, <3>.\nNode <3> is connected to node <1>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <0>, <3>]",
        "type": "predecessor"
    },
    {
        "index": 74,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <2>.\nNode <0> is connected to node <1>.\nNode <2> is connected to nodes <3>, <6>, <1>.\nNode <1> is connected to nodes <2>, <3>, <5>.\nNode <6> is connected to nodes <1>, <2>, <5>.\nNode <4> is connected to nodes <3>, <0>, <6>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>, <1>, <2>]",
        "type": "predecessor"
    },
    {
        "index": 75,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5>, <4>, <2>.\nNode <5> is connected to nodes <3>, <2>.\nNode <4> is connected to nodes <2>, <0>, <3>.\nNode <2> is connected to node <0>.\nNode <1> is connected to nodes <5>, <3>, <4>, <0>.\nNode <3> is connected to node <0>.\nWhich are the predecessor nodes of node <5>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 76,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <5>, <4>, <1>.\nNode <0> is connected to nodes <2>, <4>.\nNode <5> is connected to nodes <4>, <1>, <3>, <0>.\nNode <4> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <3>, <5>.\nNode <2> is connected to nodes <4>, <3>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>]",
        "type": "predecessor"
    },
    {
        "index": 77,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <1>, <4>, <2>.\nNode <2> is connected to nodes <0>, <4>.\nNode <1> is connected to nodes <2>, <3>, <0>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 78,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5>, <3>.\nNode <5> is connected to nodes <6>, <1>, <4>, <2>.\nNode <3> is connected to nodes <1>, <4>, <0>, <5>.\nNode <6> is connected to nodes <1>, <4>, <5>.\nNode <1> is connected to nodes <4>, <2>, <0>.\nNode <4> is connected to nodes <2>, <0>, <6>.\nNode <2> is connected to nodes <6>, <1>.\nWhich are the predecessor nodes of node <5>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <3>, <6>]",
        "type": "predecessor"
    },
    {
        "index": 79,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <3>, <4>, <0>.\nNode <3> is connected to node <2>.\nNode <4> is connected to nodes <0>, <1>, <3>.\nNode <2> is connected to nodes <4>, <0>, <3>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 80,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <4>, <0>, <1>.\nNode <4> is connected to nodes <0>, <3>, <1>.\nNode <0> is connected to nodes <5>, <2>.\nNode <1> is connected to nodes <4>, <2>, <3>.\nNode <3> is connected to nodes <4>, <2>.\nNode <2> is connected to node <0>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 81,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <0>, <4>.\nNode <1> is connected to nodes <4>, <3>.\nNode <0> is connected to nodes <2>, <4>, <3>, <1>.\nNode <4> is connected to node <0>.\nNode <2> is connected to nodes <3>, <0>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <1>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 82,
        "question": "Given a directed graph:\nNode <0> is connected to node <1>.\nNode <1> is connected to nodes <3>, <0>.\nNode <4> is connected to nodes <1>, <2>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>]",
        "type": "predecessor"
    },
    {
        "index": 83,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <5>, <2>, <0>, <1>, <4>, <3>.\nNode <5> is connected to nodes <2>, <0>, <1>, <4>, <3>.\nNode <2> is connected to nodes <0>, <1>, <6>, <5>.\nNode <1> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <3>, <6>, <5>, <0>.\nNode <3> is connected to nodes <6>, <5>, <2>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<6>, <5>, <2>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 84,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <1>.\nNode <0> is connected to node <5>.\nNode <1> is connected to nodes <5>, <0>, <3>.\nNode <2> is connected to nodes <0>, <3>, <5>.\nNode <3> is connected to nodes <1>, <2>, <0>.\nNode <4> is connected to node <5>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<5>, <2>, <3>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 85,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <1>, <2>.\nNode <3> is connected to nodes <2>, <0>.\nNode <1> is connected to node <4>.\nNode <2> is connected to node <4>.\nNode <0> is connected to node <3>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <2>]",
        "type": "predecessor"
    },
    {
        "index": 86,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <2>, <3>, <1>.\nNode <2> is connected to nodes <3>, <0>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <3>]",
        "type": "predecessor"
    },
    {
        "index": 87,
        "question": "Given a directed graph:\nNode <5> is connected to node <1>.\nNode <1> is connected to nodes <5>, <6>, <3>.\nNode <6> is connected to nodes <4>, <0>.\nNode <4> is connected to node <5>.\nNode <0> is connected to node <5>.\nNode <3> is connected to node <4>.\nNode <2> is connected to nodes <5>, <6>.\nWhich are the predecessor nodes of node <6>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 88,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <4>, <1>, <2>.\nNode <0> is connected to nodes <3>, <4>.\nNode <2> is connected to nodes <1>, <0>.\nNode <5> is connected to node <1>.\nWhich are the predecessor nodes of node <5>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[]",
        "type": "predecessor"
    },
    {
        "index": 89,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <6>, <1>, <4>.\nNode <0> is connected to nodes <5>, <2>, <3>.\nNode <6> is connected to nodes <4>, <3>.\nNode <1> is connected to nodes <2>, <3>, <6>.\nNode <4> is connected to nodes <3>, <0>, <6>.\nNode <3> is connected to node <4>.\nNode <5> is connected to nodes <0>, <6>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <6>, <1>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 90,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <1>, <6>.\nNode <2> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <6>, <3>, <0>.\nNode <6> is connected to nodes <0>, <1>.\nNode <0> is connected to node <2>.\nNode <5> is connected to node <3>.\nNode <3> is connected to node <2>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[]",
        "type": "predecessor"
    },
    {
        "index": 91,
        "question": "Given a directed graph:\nNode <0> is connected to node <3>.\nNode <3> is connected to node <6>.\nNode <6> is connected to nodes <3>, <4>, <5>, <1>, <0>.\nNode <4> is connected to node <5>.\nNode <5> is connected to node <0>.\nNode <1> is connected to node <4>.\nNode <2> is connected to nodes <5>, <1>, <0>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<6>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 92,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <2>, <5>, <4>.\nNode <1> is connected to nodes <2>, <5>.\nNode <2> is connected to node <4>.\nNode <5> is connected to nodes <0>, <3>, <1>.\nNode <4> is connected to nodes <0>, <5>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<5>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 93,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to node <0>.\nNode <4> is connected to node <2>.\nNode <3> is connected to nodes <2>, <1>.\nNode <5> is connected to node <3>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>]",
        "type": "predecessor"
    },
    {
        "index": 94,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <5>, <1>.\nNode <5> is connected to nodes <2>, <0>, <6>.\nNode <1> is connected to nodes <3>, <0>, <6>.\nNode <2> is connected to nodes <0>, <6>, <1>.\nNode <0> is connected to nodes <4>, <2>.\nNode <3> is connected to nodes <2>, <0>, <4>, <6>, <1>.\nWhich are the predecessor nodes of node <6>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<5>, <1>, <3>, <2>]",
        "type": "predecessor"
    },
    {
        "index": 95,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <6>, <4>.\nNode <6> is connected to node <3>.\nNode <4> is connected to nodes <2>, <5>, <0>.\nNode <0> is connected to nodes <6>, <2>, <5>.\nNode <2> is connected to nodes <5>, <0>, <6>, <4>, <1>.\nNode <3> is connected to nodes <6>, <4>, <5>.\nNode <1> is connected to nodes <5>, <6>, <4>.\nWhich are the predecessor nodes of node <6>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<5>, <0>, <3>, <1>, <2>]",
        "type": "predecessor"
    },
    {
        "index": 96,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <6>, <5>.\nNode <6> is connected to nodes <4>, <5>, <0>, <3>, <1>.\nNode <5> is connected to nodes <3>, <2>, <1>.\nNode <3> is connected to nodes <2>, <6>, <4>, <5>, <0>.\nNode <2> is connected to nodes <1>, <6>, <4>.\nNode <4> is connected to nodes <5>, <0>, <3>, <1>.\nNode <1> is connected to nodes <6>, <5>, <3>.\nWhich are the predecessor nodes of node <5>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <3>, <1>, <6>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 97,
        "question": "Given a directed graph:\nNode <0> is connected to node <5>.\nNode <5> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <5>, <1>, <0>.\nNode <1> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <2>, <1>, <4>.\nNode <2> is connected to nodes <1>, <0>, <4>, <5>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>]",
        "type": "predecessor"
    },
    {
        "index": 98,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <6>, <3>.\nNode <6> is connected to nodes <2>, <4>, <0>.\nNode <3> is connected to nodes <2>, <1>, <0>.\nNode <0> is connected to node <6>.\nNode <2> is connected to nodes <4>, <1>, <5>, <3>.\nNode <4> is connected to nodes <0>, <2>.\nNode <1> is connected to nodes <5>, <0>, <3>, <2>, <4>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<6>, <3>, <4>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 99,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5>, <1>.\nNode <5> is connected to nodes <1>, <0>.\nNode <1> is connected to node <0>.\nNode <6> is connected to nodes <5>, <3>, <0>.\nNode <3> is connected to nodes <4>, <5>.\nNode <4> is connected to node <5>.\nNode <2> is connected to nodes <3>, <0>.\nWhich are the predecessor nodes of node <5>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <6>, <4>, <3>]",
        "type": "predecessor"
    },
    {
        "index": 100,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <6>, <4>.\nNode <1> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <2>, <5>, <0>.\nNode <5> is connected to nodes <0>, <1>, <4>.\nNode <0> is connected to nodes <1>, <6>, <4>, <5>.\nNode <3> is connected to nodes <0>, <1>, <4>, <2>.\nWhich are the predecessor nodes of node <6>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 101,
        "question": "Given a directed graph:\nNode <3> is connected to node <5>.\nNode <5> is connected to nodes <1>, <3>, <2>.\nNode <6> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <3>, <5>.\nNode <2> is connected to nodes <0>, <4>, <1>.\nNode <0> is connected to node <1>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <0>, <5>]",
        "type": "predecessor"
    },
    {
        "index": 102,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <6>, <1>, <0>, <5>.\nNode <6> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <4>, <6>.\nNode <0> is connected to nodes <2>, <4>, <1>.\nNode <5> is connected to node <2>.\nNode <4> is connected to nodes <6>, <1>, <2>.\nNode <2> is connected to node <0>.\nWhich are the predecessor nodes of node <5>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>]",
        "type": "predecessor"
    },
    {
        "index": 103,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <6>.\nNode <2> is connected to nodes <4>, <3>.\nNode <6> is connected to nodes <1>, <5>.\nNode <3> is connected to nodes <2>, <5>, <6>.\nNode <5> is connected to node <0>.\nNode <0> is connected to node <5>.\nWhich are the predecessor nodes of node <6>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>, <3>]",
        "type": "predecessor"
    },
    {
        "index": 104,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <4>, <5>.\nNode <2> is connected to nodes <4>, <1>, <0>.\nNode <4> is connected to node <1>.\nNode <1> is connected to nodes <0>, <2>, <3>.\nNode <3> is connected to node <4>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 105,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2>, <6>.\nNode <2> is connected to nodes <0>, <4>, <3>, <6>.\nNode <6> is connected to nodes <1>, <2>, <4>.\nNode <1> is connected to nodes <2>, <4>, <3>, <5>.\nNode <4> is connected to node <3>.\nNode <3> is connected to node <0>.\nNode <0> is connected to nodes <4>, <3>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<5>, <1>, <6>]",
        "type": "predecessor"
    },
    {
        "index": 106,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <4>, <2>, <3>.\nNode <3> is connected to nodes <0>, <2>.\nNode <4> is connected to nodes <3>, <1>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <3>]",
        "type": "predecessor"
    },
    {
        "index": 107,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <5>, <4>, <0>.\nNode <4> is connected to node <5>.\nNode <5> is connected to nodes <4>, <3>, <1>.\nNode <0> is connected to nodes <2>, <1>, <5>, <4>.\nNode <2> is connected to nodes <1>, <4>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>]",
        "type": "predecessor"
    },
    {
        "index": 108,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <0>, <5>, <4>.\nNode <0> is connected to node <5>.\nNode <1> is connected to nodes <3>, <2>.\nNode <2> is connected to node <0>.\nNode <4> is connected to node <3>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[]",
        "type": "predecessor"
    },
    {
        "index": 109,
        "question": "Given a directed graph:\nNode <3> is connected to node <1>.\nNode <1> is connected to nodes <4>, <2>, <5>.\nNode <4> is connected to node <2>.\nNode <2> is connected to nodes <5>, <3>, <4>.\nNode <0> is connected to node <3>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>]",
        "type": "predecessor"
    },
    {
        "index": 110,
        "question": "Given a directed graph:\nNode <0> is connected to node <4>.\nNode <4> is connected to node <1>.\nNode <1> is connected to nodes <4>, <0>.\nNode <3> is connected to nodes <0>, <1>, <4>.\nNode <2> is connected to node <0>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[]",
        "type": "predecessor"
    },
    {
        "index": 111,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <1>, <4>, <2>.\nNode <5> is connected to nodes <4>, <2>.\nNode <1> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <2>, <3>, <5>.\nWhich are the predecessor nodes of node <5>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 112,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <0>, <4>, <3>.\nNode <0> is connected to nodes <4>, <2>, <3>, <1>.\nNode <4> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <1>, <0>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <0>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 113,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <1>, <4>, <0>, <3>.\nNode <1> is connected to nodes <2>, <5>.\nNode <4> is connected to node <1>.\nNode <0> is connected to node <4>.\nNode <2> is connected to nodes <0>, <1>.\nNode <6> is connected to node <3>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<5>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 114,
        "question": "Given a directed graph:\nNode <4> is connected to node <5>.\nNode <5> is connected to node <2>.\nNode <1> is connected to node <3>.\nNode <3> is connected to nodes <0>, <1>, <2>.\nNode <2> is connected to node <0>.\nNode <0> is connected to nodes <1>, <5>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 115,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <0>.\nNode <1> is connected to node <2>.\nNode <0> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <1>, <0>, <3>.\nNode <5> is connected to nodes <4>, <1>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 116,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <0>, <4>, <1>.\nNode <3> is connected to node <0>.\nNode <0> is connected to nodes <1>, <3>.\nNode <4> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <3>, <0>, <4>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <0>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 117,
        "question": "Given a directed graph:\nNode <6> is connected to node <3>.\nNode <3> is connected to nodes <1>, <5>, <4>, <2>.\nNode <0> is connected to nodes <4>, <6>.\nNode <1> is connected to nodes <5>, <2>.\nNode <5> is connected to nodes <4>, <6>, <3>, <1>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[]",
        "type": "predecessor"
    },
    {
        "index": 118,
        "question": "Given a directed graph:\nNode <0> is connected to node <6>.\nNode <6> is connected to node <1>.\nNode <1> is connected to nodes <4>, <3>, <6>.\nNode <4> is connected to nodes <3>, <2>.\nNode <3> is connected to node <0>.\nNode <2> is connected to nodes <3>, <0>.\nNode <5> is connected to nodes <6>, <2>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<6>]",
        "type": "predecessor"
    },
    {
        "index": 119,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <1>, <5>.\nNode <4> is connected to nodes <2>, <5>.\nNode <1> is connected to node <3>.\nNode <5> is connected to nodes <1>, <3>.\nNode <2> is connected to nodes <4>, <1>.\nNode <3> is connected to nodes <5>, <0>, <4>, <1>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <2>, <3>]",
        "type": "predecessor"
    },
    {
        "index": 120,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <2>, <4>, <5>.\nNode <2> is connected to nodes <0>, <1>.\nNode <4> is connected to nodes <6>, <1>, <2>.\nNode <5> is connected to node <1>.\nNode <0> is connected to node <2>.\nNode <1> is connected to nodes <4>, <6>.\nNode <3> is connected to nodes <0>, <1>, <4>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[]",
        "type": "predecessor"
    },
    {
        "index": 121,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <1>, <5>.\nNode <1> is connected to nodes <5>, <0>.\nNode <5> is connected to nodes <2>, <0>, <3>, <4>, <1>.\nNode <4> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <0>, <4>, <5>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <5>]",
        "type": "predecessor"
    },
    {
        "index": 122,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <3>, <0>.\nNode <4> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <0>, <4>.\nNode <0> is connected to node <2>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[]",
        "type": "predecessor"
    },
    {
        "index": 123,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5>, <3>, <4>, <2>, <1>.\nNode <5> is connected to nodes <4>, <2>, <1>.\nNode <3> is connected to nodes <2>, <1>, <5>.\nNode <4> is connected to node <5>.\nNode <2> is connected to nodes <0>, <5>, <3>.\nNode <1> is connected to nodes <0>, <5>, <2>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <2>]",
        "type": "predecessor"
    },
    {
        "index": 124,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <5>.\nNode <4> is connected to node <2>.\nNode <5> is connected to nodes <0>, <1>, <2>.\nNode <0> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <2>, <4>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>, <5>, <3>]",
        "type": "predecessor"
    },
    {
        "index": 125,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <0>.\nNode <4> is connected to node <1>.\nNode <0> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <2>, <4>.\nNode <3> is connected to nodes <0>, <1>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <3>]",
        "type": "predecessor"
    },
    {
        "index": 126,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <3>, <0>.\nNode <3> is connected to node <0>.\nNode <0> is connected to nodes <5>, <2>.\nNode <2> is connected to nodes <4>, <1>, <3>.\nNode <4> is connected to nodes <0>, <5>, <3>, <2>.\nNode <1> is connected to node <3>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 127,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <6>, <5>, <1>, <0>.\nNode <6> is connected to nodes <3>, <5>, <2>, <4>.\nNode <5> is connected to nodes <2>, <1>, <0>.\nNode <1> is connected to nodes <0>, <4>, <6>, <5>, <2>.\nNode <0> is connected to nodes <4>, <3>, <5>.\nNode <3> is connected to nodes <5>, <0>, <4>.\nNode <2> is connected to nodes <3>, <5>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>, <3>, <5>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 128,
        "question": "Given a directed graph:\nNode <5> is connected to node <3>.\nNode <3> is connected to nodes <1>, <5>.\nNode <2> is connected to nodes <4>, <1>.\nNode <4> is connected to node <3>.\nNode <1> is connected to node <3>.\nNode <0> is connected to nodes <5>, <4>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <3>]",
        "type": "predecessor"
    },
    {
        "index": 129,
        "question": "Given a directed graph:\nNode <0> is connected to node <5>.\nNode <5> is connected to nodes <4>, <3>, <0>, <2>.\nNode <2> is connected to nodes <5>, <6>, <0>.\nNode <6> is connected to nodes <2>, <5>, <3>.\nNode <4> is connected to nodes <6>, <0>, <2>, <1>.\nNode <3> is connected to nodes <6>, <4>.\nNode <1> is connected to nodes <4>, <6>, <0>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>]",
        "type": "predecessor"
    },
    {
        "index": 130,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <3>, <2>.\nNode <0> is connected to nodes <3>, <2>, <1>.\nNode <3> is connected to nodes <2>, <6>, <5>, <4>.\nNode <2> is connected to nodes <1>, <6>.\nNode <1> is connected to node <0>.\nNode <4> is connected to node <5>.\nNode <6> is connected to nodes <0>, <1>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<5>, <1>, <6>]",
        "type": "predecessor"
    },
    {
        "index": 131,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <6>.\nNode <0> is connected to nodes <1>, <4>, <5>.\nNode <6> is connected to nodes <4>, <5>.\nNode <1> is connected to nodes <6>, <2>, <3>, <0>.\nNode <4> is connected to nodes <6>, <2>, <3>, <1>.\nNode <5> is connected to nodes <6>, <2>, <0>, <1>.\nNode <2> is connected to nodes <0>, <5>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 132,
        "question": "Given a directed graph:\nNode <1> is connected to node <2>.\nNode <2> is connected to node <3>.\nNode <3> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <0>, <1>.\nNode <5> is connected to nodes <1>, <2>.\nWhich are the predecessor nodes of node <5>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[]",
        "type": "predecessor"
    },
    {
        "index": 133,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <0>, <3>.\nNode <2> is connected to node <0>.\nNode <0> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <1>, <2>.\nNode <4> is connected to nodes <1>, <2>, <0>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <4>, <3>]",
        "type": "predecessor"
    },
    {
        "index": 134,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <4>, <3>.\nNode <1> is connected to node <0>.\nNode <4> is connected to nodes <3>, <1>, <0>.\nNode <0> is connected to nodes <4>, <1>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[]",
        "type": "predecessor"
    },
    {
        "index": 135,
        "question": "Given a directed graph:\nNode <4> is connected to node <0>.\nNode <0> is connected to node <4>.\nNode <2> is connected to nodes <1>, <3>, <0>.\nNode <1> is connected to nodes <4>, <3>, <2>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 136,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <1>, <0>, <4>.\nNode <1> is connected to nodes <3>, <2>.\nNode <0> is connected to node <5>.\nNode <4> is connected to node <5>.\nNode <3> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <5>, <1>, <3>, <0>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<5>, <2>]",
        "type": "predecessor"
    },
    {
        "index": 137,
        "question": "Given a directed graph:\nNode <0> is connected to node <3>.\nNode <3> is connected to nodes <0>, <1>.\nNode <2> is connected to nodes <3>, <0>.\nNode <1> is connected to nodes <5>, <2>.\nNode <5> is connected to nodes <0>, <2>.\nNode <4> is connected to nodes <5>, <2>, <1>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <3>, <5>]",
        "type": "predecessor"
    },
    {
        "index": 138,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <5>, <4>, <0>.\nNode <5> is connected to nodes <4>, <0>, <3>.\nNode <4> is connected to nodes <0>, <5>.\nNode <0> is connected to node <3>.\nNode <2> is connected to nodes <5>, <0>.\nNode <1> is connected to nodes <5>, <0>, <3>.\nWhich are the predecessor nodes of node <5>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <2>, <1>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 139,
        "question": "Given a directed graph:\nNode <5> is connected to node <2>.\nNode <2> is connected to nodes <1>, <4>, <5>, <3>.\nNode <3> is connected to node <5>.\nNode <1> is connected to nodes <4>, <2>, <0>.\nNode <4> is connected to node <3>.\nNode <0> is connected to nodes <3>, <2>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 140,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <1>, <4>.\nNode <2> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <5>, <0>, <2>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 141,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <5>, <2>, <4>, <3>.\nNode <5> is connected to nodes <2>, <3>, <6>.\nNode <2> is connected to nodes <0>, <1>, <5>.\nNode <4> is connected to nodes <3>, <6>, <2>.\nNode <3> is connected to node <1>.\nNode <0> is connected to nodes <3>, <6>, <2>.\nNode <1> is connected to node <6>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<6>, <5>, <4>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 142,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5>, <2>, <1>.\nNode <5> is connected to nodes <2>, <4>.\nNode <2> is connected to node <3>.\nNode <1> is connected to nodes <4>, <0>.\nNode <4> is connected to node <2>.\nNode <3> is connected to nodes <1>, <4>, <0>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <3>]",
        "type": "predecessor"
    },
    {
        "index": 143,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <5>.\nNode <0> is connected to nodes <1>, <5>, <4>.\nNode <5> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <0>, <5>.\nNode <1> is connected to nodes <4>, <0>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>, <5>]",
        "type": "predecessor"
    },
    {
        "index": 144,
        "question": "Given a directed graph:\nNode <0> is connected to node <4>.\nNode <4> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <1>, <0>, <3>.\nNode <1> is connected to nodes <4>, <2>.\nNode <3> is connected to node <5>.\nNode <5> is connected to nodes <2>, <1>, <0>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>, <5>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 145,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <2>, <1>.\nNode <3> is connected to nodes <5>, <2>, <0>.\nNode <2> is connected to nodes <0>, <5>, <4>.\nNode <1> is connected to node <0>.\nNode <5> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <2>, <1>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <3>, <5>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 146,
        "question": "Given a directed graph:\nNode <2> is connected to node <3>.\nNode <3> is connected to nodes <4>, <2>.\nNode <5> is connected to nodes <3>, <0>, <4>, <2>.\nNode <0> is connected to nodes <5>, <1>, <3>.\nNode <4> is connected to nodes <2>, <5>, <1>.\nNode <1> is connected to nodes <3>, <4>, <2>, <5>.\nWhich are the predecessor nodes of node <5>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <0>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 147,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <1>, <2>, <0>, <4>, <3>.\nNode <1> is connected to nodes <2>, <0>, <6>.\nNode <2> is connected to nodes <5>, <3>, <6>, <1>.\nNode <0> is connected to nodes <3>, <6>, <2>.\nNode <4> is connected to nodes <3>, <2>, <5>.\nNode <3> is connected to nodes <1>, <5>, <4>.\nNode <5> is connected to nodes <6>, <2>, <0>.\nWhich are the predecessor nodes of node <6>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <2>, <0>, <5>]",
        "type": "predecessor"
    },
    {
        "index": 148,
        "question": "Given a directed graph:\nNode <4> is connected to node <0>.\nNode <0> is connected to node <2>.\nNode <2> is connected to nodes <3>, <0>.\nNode <1> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <0>, <5>.\nNode <5> is connected to nodes <3>, <4>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>]",
        "type": "predecessor"
    },
    {
        "index": 149,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <2>, <0>.\nNode <4> is connected to nodes <0>, <3>.\nNode <2> is connected to nodes <0>, <3>, <1>, <4>.\nNode <0> is connected to nodes <3>, <1>, <4>.\nNode <1> is connected to nodes <0>, <3>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <2>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 150,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <1>, <4>.\nNode <0> is connected to nodes <4>, <3>, <1>.\nNode <1> is connected to node <4>.\nNode <2> is connected to nodes <4>, <3>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>, <2>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 151,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5>, <3>.\nNode <5> is connected to node <4>.\nNode <3> is connected to nodes <6>, <5>.\nNode <4> is connected to nodes <1>, <3>, <2>.\nNode <1> is connected to node <3>.\nNode <0> is connected to nodes <1>, <2>.\nNode <6> is connected to nodes <3>, <4>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <4>, <1>, <6>]",
        "type": "predecessor"
    },
    {
        "index": 152,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <6>, <5>, <4>.\nNode <6> is connected to nodes <5>, <3>.\nNode <5> is connected to nodes <4>, <2>, <3>, <0>, <6>.\nNode <4> is connected to nodes <1>, <5>.\nNode <3> is connected to node <1>.\nNode <0> is connected to node <2>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <5>]",
        "type": "predecessor"
    },
    {
        "index": 153,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <5>.\nNode <5> is connected to nodes <2>, <0>.\nNode <2> is connected to node <0>.\nNode <1> is connected to nodes <0>, <3>, <4>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 154,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <1>, <2>.\nNode <4> is connected to nodes <6>, <2>, <5>, <0>.\nNode <2> is connected to nodes <5>, <4>, <1>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<6>]",
        "type": "predecessor"
    },
    {
        "index": 155,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <4>, <1>, <2>, <5>.\nNode <1> is connected to nodes <3>, <0>.\nNode <5> is connected to nodes <1>, <3>.\nNode <4> is connected to node <2>.\nNode <2> is connected to nodes <0>, <1>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>]",
        "type": "predecessor"
    },
    {
        "index": 156,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <5>, <6>, <2>.\nNode <5> is connected to nodes <2>, <3>, <0>.\nNode <6> is connected to nodes <2>, <1>, <0>, <5>.\nNode <2> is connected to nodes <4>, <1>, <3>, <0>.\nNode <3> is connected to nodes <0>, <5>, <6>.\nNode <0> is connected to nodes <5>, <1>.\nNode <4> is connected to nodes <3>, <6>, <2>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <5>, <6>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 157,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <1>, <0>, <2>.\nNode <3> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <0>, <2>, <5>.\nNode <0> is connected to node <2>.\nNode <2> is connected to nodes <4>, <5>, <1>.\nNode <5> is connected to nodes <3>, <2>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>, <3>, <2>]",
        "type": "predecessor"
    },
    {
        "index": 158,
        "question": "Given a directed graph:\nNode <0> is connected to node <2>.\nNode <2> is connected to nodes <4>, <3>, <0>.\nNode <4> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <1>, <2>, <4>.\nNode <1> is connected to nodes <0>, <2>, <4>, <3>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <3>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 159,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5>, <3>, <4>.\nNode <5> is connected to nodes <1>, <2>, <4>, <0>.\nNode <3> is connected to nodes <5>, <1>.\nNode <4> is connected to nodes <0>, <5>, <1>, <2>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to nodes <4>, <5>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<5>, <3>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 160,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <5>.\nNode <5> is connected to nodes <1>, <3>, <2>.\nNode <2> is connected to node <3>.\nNode <0> is connected to node <2>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <5>]",
        "type": "predecessor"
    },
    {
        "index": 161,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1>, <4>, <3>, <2>.\nNode <1> is connected to node <3>.\nNode <4> is connected to node <1>.\nNode <3> is connected to node <2>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[]",
        "type": "predecessor"
    },
    {
        "index": 162,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <5>, <3>, <2>.\nNode <3> is connected to nodes <0>, <2>, <1>, <5>.\nNode <1> is connected to nodes <4>, <5>, <0>.\nNode <5> is connected to nodes <3>, <0>, <2>, <1>, <4>.\nNode <0> is connected to nodes <2>, <1>, <5>, <3>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <1>, <5>]",
        "type": "predecessor"
    },
    {
        "index": 163,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <6>, <4>, <1>.\nNode <0> is connected to nodes <4>, <5>.\nNode <6> is connected to node <3>.\nNode <4> is connected to nodes <3>, <2>, <6>.\nNode <1> is connected to node <2>.\nNode <2> is connected to nodes <0>, <1>.\nNode <5> is connected to node <1>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 164,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <3>, <1>, <5>.\nNode <3> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <5>, <0>, <3>.\nNode <2> is connected to nodes <5>, <0>, <3>, <4>, <1>.\nNode <4> is connected to nodes <1>, <2>.\nWhich are the predecessor nodes of node <5>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <1>, <2>]",
        "type": "predecessor"
    },
    {
        "index": 165,
        "question": "Given a directed graph:\nNode <1> is connected to node <0>.\nNode <0> is connected to nodes <2>, <5>.\nNode <3> is connected to nodes <5>, <1>.\nNode <2> is connected to nodes <1>, <3>, <0>, <4>.\nNode <4> is connected to node <5>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <2>]",
        "type": "predecessor"
    },
    {
        "index": 166,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <1>, <2>, <3>.\nNode <0> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <3>, <4>, <0>.\nNode <2> is connected to nodes <3>, <4>, <1>.\nNode <3> is connected to node <2>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 167,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <5>.\nNode <0> is connected to nodes <6>, <3>, <1>.\nNode <5> is connected to nodes <3>, <1>, <0>.\nNode <4> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <0>, <6>.\nNode <2> is connected to nodes <0>, <4>.\nNode <6> is connected to nodes <3>, <4>, <2>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>, <0>, <5>]",
        "type": "predecessor"
    },
    {
        "index": 168,
        "question": "Given a directed graph:\nNode <3> is connected to node <2>.\nNode <2> is connected to node <4>.\nNode <4> is connected to node <2>.\nNode <1> is connected to nodes <0>, <5>, <3>, <4>.\nNode <5> is connected to node <0>.\nNode <6> is connected to nodes <3>, <0>, <5>.\nWhich are the predecessor nodes of node <6>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[]",
        "type": "predecessor"
    },
    {
        "index": 169,
        "question": "Given a directed graph:\nNode <0> is connected to node <4>.\nNode <5> is connected to nodes <3>, <2>, <4>, <1>.\nNode <2> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <5>, <3>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<5>]",
        "type": "predecessor"
    },
    {
        "index": 170,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <5>.\nNode <0> is connected to nodes <4>, <1>, <3>, <2>.\nNode <5> is connected to nodes <1>, <6>, <0>, <4>.\nNode <2> is connected to nodes <6>, <0>, <4>, <5>, <1>.\nNode <6> is connected to nodes <0>, <4>, <1>.\nNode <4> is connected to nodes <1>, <3>, <2>, <6>, <0>.\nNode <1> is connected to nodes <2>, <4>, <5>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <2>, <6>, <4>, <5>]",
        "type": "predecessor"
    },
    {
        "index": 171,
        "question": "Given a directed graph:\nNode <4> is connected to node <2>.\nNode <2> is connected to node <3>.\nNode <3> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <3>, <0>.\nNode <0> is connected to node <1>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 172,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <5>, <4>, <1>.\nNode <3> is connected to nodes <1>, <2>.\nNode <5> is connected to nodes <1>, <2>.\nNode <4> is connected to nodes <2>, <3>.\nNode <1> is connected to node <2>.\nNode <2> is connected to node <1>.\nWhich are the predecessor nodes of node <5>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>]",
        "type": "predecessor"
    },
    {
        "index": 173,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <3>, <1>, <0>.\nNode <0> is connected to nodes <4>, <2>, <1>.\nNode <1> is connected to nodes <4>, <3>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <1>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 174,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5>, <3>, <4>, <1>.\nNode <5> is connected to node <2>.\nNode <3> is connected to nodes <4>, <2>, <1>, <0>.\nNode <4> is connected to nodes <2>, <1>, <0>.\nNode <1> is connected to nodes <0>, <3>, <4>, <2>.\nNode <2> is connected to nodes <0>, <5>, <3>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <4>, <2>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 175,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <0>, <6>, <4>.\nNode <5> is connected to node <0>.\nNode <1> is connected to node <2>.\nNode <0> is connected to node <6>.\nNode <6> is connected to nodes <4>, <3>, <2>, <0>.\nNode <4> is connected to nodes <3>, <1>.\nWhich are the predecessor nodes of node <6>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 176,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <3>, <5>, <2>.\nNode <3> is connected to nodes <0>, <6>, <1>.\nNode <5> is connected to nodes <6>, <1>.\nNode <1> is connected to nodes <2>, <6>.\nNode <0> is connected to nodes <6>, <4>.\nNode <4> is connected to nodes <5>, <2>, <6>.\nWhich are the predecessor nodes of node <6>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <3>, <4>, <5>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 177,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <6>, <2>, <5>.\nNode <3> is connected to nodes <2>, <5>, <4>.\nNode <2> is connected to node <0>.\nNode <0> is connected to nodes <3>, <5>, <1>, <4>.\nNode <5> is connected to nodes <1>, <3>, <6>, <2>.\nNode <1> is connected to nodes <0>, <6>, <5>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 178,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <1>, <3>.\nNode <2> is connected to nodes <1>, <4>, <0>.\nNode <1> is connected to node <2>.\nNode <3> is connected to nodes <4>, <2>.\nNode <0> is connected to nodes <3>, <4>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <2>, <3>]",
        "type": "predecessor"
    },
    {
        "index": 179,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <5>, <4>, <3>.\nNode <5> is connected to node <2>.\nNode <4> is connected to node <2>.\nNode <3> is connected to node <1>.\nNode <2> is connected to node <5>.\nNode <0> is connected to node <5>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[]",
        "type": "predecessor"
    },
    {
        "index": 180,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <4>, <0>.\nNode <0> is connected to node <4>.\nNode <4> is connected to nodes <0>, <3>, <1>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>]",
        "type": "predecessor"
    },
    {
        "index": 181,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <0>, <3>.\nNode <4> is connected to node <0>.\nNode <1> is connected to nodes <3>, <4>, <0>.\nNode <3> is connected to node <2>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <2>]",
        "type": "predecessor"
    },
    {
        "index": 182,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <1>, <2>.\nNode <3> is connected to nodes <4>, <2>.\nNode <1> is connected to nodes <2>, <0>, <5>.\nNode <2> is connected to nodes <3>, <5>, <4>.\nNode <5> is connected to node <1>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>]",
        "type": "predecessor"
    },
    {
        "index": 183,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <4>, <2>, <0>.\nNode <4> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <3>, <1>.\nNode <0> is connected to node <1>.\nNode <3> is connected to nodes <0>, <5>.\nNode <1> is connected to node <3>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<5>, <3>]",
        "type": "predecessor"
    },
    {
        "index": 184,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <5>, <0>.\nNode <4> is connected to nodes <5>, <2>, <6>, <1>, <0>, <3>.\nNode <5> is connected to nodes <6>, <1>, <0>.\nNode <0> is connected to node <6>.\nNode <2> is connected to nodes <6>, <1>.\nNode <6> is connected to nodes <4>, <5>, <2>.\nNode <1> is connected to node <6>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>]",
        "type": "predecessor"
    },
    {
        "index": 185,
        "question": "Given a directed graph:\nNode <2> is connected to node <3>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <3>, <0>, <1>.\nNode <0> is connected to nodes <1>, <5>, <4>, <3>.\nNode <1> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <2>, <4>, <1>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>, <0>, <5>]",
        "type": "predecessor"
    },
    {
        "index": 186,
        "question": "Given a directed graph:\nNode <2> is connected to node <0>.\nNode <0> is connected to nodes <2>, <1>.\nNode <1> is connected to node <2>.\nNode <3> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <0>, <2>, <1>, <3>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 187,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <4>, <3>.\nNode <0> is connected to nodes <4>, <3>, <5>, <1>.\nNode <4> is connected to nodes <2>, <0>.\nNode <3> is connected to nodes <5>, <1>, <2>.\nNode <2> is connected to nodes <3>, <1>, <0>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <0>, <2>]",
        "type": "predecessor"
    },
    {
        "index": 188,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <2>, <0>.\nNode <4> is connected to node <2>.\nNode <5> is connected to node <2>.\nNode <2> is connected to nodes <3>, <1>.\nNode <0> is connected to nodes <3>, <4>, <5>, <2>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>]",
        "type": "predecessor"
    },
    {
        "index": 189,
        "question": "Given a directed graph:\nNode <6> is connected to node <4>.\nNode <4> is connected to nodes <5>, <2>.\nNode <0> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <5>, <2>, <0>.\nNode <3> is connected to nodes <4>, <1>, <5>, <0>.\nNode <5> is connected to nodes <6>, <1>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<6>, <0>, <3>]",
        "type": "predecessor"
    },
    {
        "index": 190,
        "question": "Given a directed graph:\nNode <4> is connected to node <5>.\nNode <5> is connected to nodes <0>, <2>, <3>.\nNode <0> is connected to nodes <2>, <1>, <4>.\nNode <3> is connected to nodes <4>, <0>, <2>, <1>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<5>]",
        "type": "predecessor"
    },
    {
        "index": 191,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <1>.\nNode <2> is connected to node <0>.\nNode <0> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <1>, <2>, <0>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>, <0>, <3>]",
        "type": "predecessor"
    },
    {
        "index": 192,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5>, <1>, <4>, <2>.\nNode <5> is connected to nodes <1>, <4>, <0>, <6>.\nNode <1> is connected to nodes <3>, <2>, <0>, <6>.\nNode <4> is connected to nodes <0>, <5>.\nNode <2> is connected to nodes <0>, <1>.\nNode <6> is connected to nodes <5>, <1>, <3>, <0>.\nNode <3> is connected to nodes <0>, <6>, <1>, <4>.\nWhich are the predecessor nodes of node <5>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <6>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 193,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <2>, <0>.\nNode <1> is connected to nodes <3>, <4>, <0>.\nNode <3> is connected to nodes <4>, <2>, <0>, <1>.\nNode <5> is connected to nodes <2>, <0>, <3>, <4>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <5>]",
        "type": "predecessor"
    },
    {
        "index": 194,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5>, <3>, <1>.\nNode <5> is connected to nodes <3>, <1>, <2>, <0>, <4>.\nNode <3> is connected to nodes <2>, <0>, <5>.\nNode <1> is connected to node <2>.\nNode <0> is connected to nodes <5>, <3>, <1>, <2>.\nNode <4> is connected to node <1>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<5>]",
        "type": "predecessor"
    },
    {
        "index": 195,
        "question": "Given a directed graph:\nNode <4> is connected to node <3>.\nNode <3> is connected to nodes <1>, <0>, <4>.\nNode <1> is connected to nodes <4>, <3>.\nNode <0> is connected to nodes <4>, <1>.\nNode <2> is connected to nodes <4>, <0>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 196,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <2> is connected to node <0>.\nNode <4> is connected to nodes <3>, <1>, <0>, <2>.\nNode <3> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <0>, <2>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>]",
        "type": "predecessor"
    },
    {
        "index": 197,
        "question": "Given a directed graph:\nNode <1> is connected to node <0>.\nNode <0> is connected to nodes <2>, <4>.\nNode <3> is connected to nodes <4>, <0>, <2>, <1>.\nNode <4> is connected to node <3>.\nNode <2> is connected to nodes <3>, <4>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>, <2>]",
        "type": "predecessor"
    },
    {
        "index": 198,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <5>, <6>, <3>.\nNode <6> is connected to nodes <1>, <2>.\nNode <2> is connected to nodes <5>, <6>.\nNode <0> is connected to nodes <6>, <1>, <4>, <2>.\nNode <1> is connected to node <5>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>]",
        "type": "predecessor"
    },
    {
        "index": 199,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <1>.\nNode <3> is connected to node <1>.\nNode <1> is connected to nodes <4>, <2>.\nNode <0> is connected to nodes <5>, <3>, <2>, <4>.\nNode <5> is connected to nodes <3>, <2>, <0>.\nNode <2> is connected to node <5>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<5>]",
        "type": "predecessor"
    },
    {
        "index": 200,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <3>, <2>.\nNode <4> is connected to nodes <1>, <2>.\nNode <3> is connected to nodes <2>, <0>, <4>.\nNode <1> is connected to node <2>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>]",
        "type": "predecessor"
    },
    {
        "index": 201,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <5>, <2>.\nNode <5> is connected to node <4>.\nNode <2> is connected to nodes <3>, <1>, <0>.\nNode <4> is connected to nodes <5>, <1>, <0>.\nNode <1> is connected to nodes <0>, <2>, <4>.\nNode <0> is connected to nodes <4>, <1>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>, <0>, <2>]",
        "type": "predecessor"
    },
    {
        "index": 202,
        "question": "Given a directed graph:\nNode <3> is connected to node <1>.\nNode <1> is connected to nodes <0>, <4>, <3>.\nNode <4> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <0>, <1>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <2>]",
        "type": "predecessor"
    },
    {
        "index": 203,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <6>, <3>.\nNode <6> is connected to nodes <4>, <5>, <1>.\nNode <3> is connected to nodes <0>, <4>, <2>, <6>.\nNode <4> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <2>, <6>.\nNode <2> is connected to nodes <5>, <1>.\nNode <5> is connected to nodes <1>, <2>, <4>.\nWhich are the predecessor nodes of node <5>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <6>]",
        "type": "predecessor"
    },
    {
        "index": 204,
        "question": "Given a directed graph:\nNode <1> is connected to node <4>.\nNode <4> is connected to node <1>.\nNode <0> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <1>, <0>, <2>.\nNode <2> is connected to nodes <3>, <1>, <4>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <2>]",
        "type": "predecessor"
    },
    {
        "index": 205,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <4>, <2>.\nNode <4> is connected to node <5>.\nNode <2> is connected to nodes <5>, <4>.\nNode <3> is connected to node <2>.\nNode <1> is connected to node <2>.\nNode <0> is connected to nodes <2>, <5>, <1>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[]",
        "type": "predecessor"
    },
    {
        "index": 206,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <4>, <5>.\nNode <3> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <2>, <1>, <3>.\nNode <2> is connected to nodes <1>, <3>, <4>.\nNode <4> is connected to node <5>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>]",
        "type": "predecessor"
    },
    {
        "index": 207,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <2> is connected to node <0>.\nNode <4> is connected to nodes <1>, <2>.\nNode <3> is connected to node <2>.\nNode <1> is connected to nodes <3>, <2>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>]",
        "type": "predecessor"
    },
    {
        "index": 208,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <3>, <1>.\nNode <4> is connected to node <2>.\nNode <1> is connected to node <3>.\nNode <2> is connected to nodes <4>, <1>, <0>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>]",
        "type": "predecessor"
    },
    {
        "index": 209,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <1>, <0>.\nNode <3> is connected to node <0>.\nNode <2> is connected to node <0>.\nNode <1> is connected to nodes <0>, <2>, <4>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 210,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <6>, <5>, <1>, <4>.\nNode <3> is connected to nodes <5>, <4>, <0>.\nNode <6> is connected to node <0>.\nNode <5> is connected to nodes <0>, <2>, <3>.\nNode <1> is connected to nodes <4>, <0>, <2>, <3>.\nNode <4> is connected to node <1>.\nNode <2> is connected to node <1>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <6>, <5>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 211,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <2>, <1>.\nNode <0> is connected to nodes <1>, <4>.\nNode <2> is connected to nodes <4>, <3>, <0>.\nNode <1> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <0>, <4>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>, <3>, <2>]",
        "type": "predecessor"
    },
    {
        "index": 212,
        "question": "Given a directed graph:\nNode <4> is connected to node <1>.\nNode <1> is connected to node <3>.\nNode <2> is connected to nodes <0>, <3>, <1>.\nNode <0> is connected to nodes <3>, <4>, <1>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>]",
        "type": "predecessor"
    },
    {
        "index": 213,
        "question": "Given a directed graph:\nNode <0> is connected to node <5>.\nNode <5> is connected to nodes <4>, <3>, <2>.\nNode <4> is connected to nodes <3>, <5>, <1>.\nNode <3> is connected to nodes <2>, <1>, <0>.\nNode <1> is connected to node <5>.\nNode <2> is connected to nodes <5>, <1>.\nWhich are the predecessor nodes of node <5>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <4>, <2>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 214,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <4>.\nNode <1> is connected to nodes <3>, <4>, <5>.\nNode <4> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <0>, <5>.\nNode <5> is connected to nodes <2>, <3>.\nNode <6> is connected to nodes <0>, <4>, <5>, <2>, <1>.\nNode <0> is connected to nodes <1>, <6>, <3>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <0>, <4>, <5>]",
        "type": "predecessor"
    },
    {
        "index": 215,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <2>, <3>, <6>.\nNode <4> is connected to nodes <2>, <3>, <1>.\nNode <2> is connected to nodes <5>, <6>, <0>, <1>.\nNode <3> is connected to nodes <0>, <2>.\nNode <6> is connected to nodes <1>, <4>, <2>, <3>, <5>.\nNode <5> is connected to nodes <4>, <2>, <3>.\nNode <0> is connected to nodes <3>, <6>.\nWhich are the predecessor nodes of node <5>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <6>]",
        "type": "predecessor"
    },
    {
        "index": 216,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <6>.\nNode <4> is connected to nodes <3>, <2>.\nNode <6> is connected to nodes <1>, <4>, <3>.\nNode <5> is connected to nodes <4>, <2>.\nNode <3> is connected to nodes <5>, <4>, <0>.\nNode <1> is connected to node <5>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>, <6>]",
        "type": "predecessor"
    },
    {
        "index": 217,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <4>, <2>.\nNode <0> is connected to nodes <2>, <1>.\nNode <4> is connected to nodes <1>, <3>, <0>.\nNode <2> is connected to nodes <1>, <3>, <0>.\nNode <1> is connected to nodes <4>, <2>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 218,
        "question": "Given a directed graph:\nNode <4> is connected to node <0>.\nNode <0> is connected to node <2>.\nNode <1> is connected to nodes <3>, <0>, <5>.\nNode <3> is connected to nodes <5>, <1>.\nNode <5> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <4>, <3>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>]",
        "type": "predecessor"
    },
    {
        "index": 219,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <1>, <5>, <3>.\nNode <4> is connected to node <1>.\nNode <3> is connected to nodes <2>, <4>.\nNode <0> is connected to nodes <4>, <1>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <0>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 220,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <5>.\nNode <2> is connected to node <3>.\nNode <5> is connected to nodes <6>, <1>.\nNode <4> is connected to nodes <0>, <1>, <5>.\nNode <0> is connected to node <4>.\nNode <1> is connected to nodes <0>, <2>.\nNode <6> is connected to node <3>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 221,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <0>, <5>, <3>.\nNode <0> is connected to node <4>.\nNode <5> is connected to nodes <3>, <1>, <2>.\nNode <3> is connected to node <4>.\nNode <1> is connected to node <0>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>, <5>]",
        "type": "predecessor"
    },
    {
        "index": 222,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <5>, <1>.\nNode <2> is connected to nodes <0>, <5>.\nNode <4> is connected to node <1>.\nNode <1> is connected to nodes <3>, <0>, <5>, <2>, <4>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<5>, <2>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 223,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <1>, <0>.\nNode <3> is connected to nodes <2>, <4>.\nNode <1> is connected to nodes <2>, <0>, <4>, <3>.\nNode <0> is connected to nodes <4>, <3>.\nNode <2> is connected to nodes <3>, <1>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>, <2>]",
        "type": "predecessor"
    },
    {
        "index": 224,
        "question": "Given a directed graph:\nNode <4> is connected to node <3>.\nNode <3> is connected to nodes <6>, <1>.\nNode <5> is connected to nodes <2>, <6>.\nNode <2> is connected to nodes <5>, <0>.\nNode <6> is connected to nodes <1>, <4>, <0>, <3>, <2>.\nNode <0> is connected to nodes <2>, <6>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>, <6>]",
        "type": "predecessor"
    },
    {
        "index": 225,
        "question": "Given a directed graph:\nNode <3> is connected to node <0>.\nNode <0> is connected to nodes <1>, <2>, <4>.\nNode <4> is connected to node <1>.\nNode <1> is connected to nodes <2>, <3>, <4>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>]",
        "type": "predecessor"
    },
    {
        "index": 226,
        "question": "Given a directed graph:\nNode <4> is connected to node <0>.\nNode <0> is connected to nodes <2>, <3>, <1>.\nNode <2> is connected to nodes <1>, <0>.\nNode <1> is connected to node <2>.\nNode <3> is connected to node <2>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>]",
        "type": "predecessor"
    },
    {
        "index": 227,
        "question": "Given a directed graph:\nNode <4> is connected to node <3>.\nNode <3> is connected to nodes <0>, <4>.\nNode <2> is connected to nodes <1>, <3>, <0>, <4>.\nNode <1> is connected to node <2>.\nNode <0> is connected to nodes <4>, <1>, <3>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>]",
        "type": "predecessor"
    },
    {
        "index": 228,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <5>, <4>.\nNode <1> is connected to nodes <2>, <3>.\nNode <4> is connected to node <2>.\nNode <3> is connected to node <4>.\nNode <0> is connected to node <4>.\nNode <6> is connected to nodes <1>, <5>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 229,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <6>, <5>.\nNode <6> is connected to nodes <0>, <5>, <2>, <3>.\nNode <5> is connected to nodes <3>, <6>, <0>.\nNode <2> is connected to nodes <3>, <6>, <0>, <1>, <5>.\nNode <3> is connected to nodes <6>, <0>, <1>, <5>, <4>, <2>.\nNode <0> is connected to nodes <2>, <3>, <6>.\nNode <1> is connected to node <0>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <6>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 230,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <2>.\nNode <4> is connected to node <0>.\nNode <2> is connected to nodes <0>, <3>, <1>, <4>.\nNode <3> is connected to nodes <1>, <4>, <2>.\nNode <1> is connected to nodes <4>, <2>, <0>, <3>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <2>]",
        "type": "predecessor"
    },
    {
        "index": 231,
        "question": "Given a directed graph:\nNode <0> is connected to node <6>.\nNode <6> is connected to nodes <1>, <4>.\nNode <2> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <6>, <2>.\nNode <1> is connected to node <3>.\nNode <5> is connected to nodes <3>, <0>.\nNode <4> is connected to nodes <6>, <0>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>]",
        "type": "predecessor"
    },
    {
        "index": 232,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <2>, <0>.\nNode <1> is connected to nodes <5>, <6>, <2>.\nNode <0> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <5>, <6>, <4>, <3>.\nNode <5> is connected to node <1>.\nNode <3> is connected to nodes <1>, <4>.\nWhich are the predecessor nodes of node <5>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <2>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 233,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <2>, <0>.\nNode <4> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <1>, <4>.\nNode <0> is connected to nodes <1>, <4>, <2>.\nNode <3> is connected to node <2>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>]",
        "type": "predecessor"
    },
    {
        "index": 234,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <5>, <4>.\nNode <1> is connected to nodes <5>, <4>, <2>.\nNode <4> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <5>, <4>, <3>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<5>]",
        "type": "predecessor"
    },
    {
        "index": 235,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <2>, <5>, <0>, <3>, <1>, <4>.\nNode <2> is connected to nodes <3>, <1>, <4>, <6>.\nNode <5> is connected to nodes <0>, <1>, <4>, <6>.\nNode <0> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <6>, <5>, <0>.\nNode <1> is connected to nodes <6>, <2>, <5>, <3>.\nNode <4> is connected to nodes <6>, <2>, <5>, <0>, <3>, <1>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<6>, <2>, <0>, <1>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 236,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <6>, <1>.\nNode <6> is connected to node <1>.\nNode <1> is connected to nodes <4>, <3>.\nNode <2> is connected to nodes <5>, <6>.\nNode <5> is connected to node <4>.\nNode <3> is connected to nodes <0>, <4>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[]",
        "type": "predecessor"
    },
    {
        "index": 237,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <6>, <0>.\nNode <6> is connected to nodes <3>, <1>.\nNode <0> is connected to nodes <4>, <1>, <6>, <3>, <2>.\nNode <5> is connected to nodes <6>, <3>, <2>, <0>.\nNode <3> is connected to nodes <2>, <0>, <1>.\nNode <2> is connected to nodes <5>, <6>, <3>.\nNode <1> is connected to nodes <6>, <0>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<5>, <3>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 238,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <3>, <5>.\nNode <1> is connected to nodes <0>, <5>.\nNode <3> is connected to nodes <1>, <4>.\nNode <2> is connected to nodes <3>, <1>, <0>, <4>.\nNode <0> is connected to nodes <5>, <4>, <1>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>, <2>]",
        "type": "predecessor"
    },
    {
        "index": 239,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <4>, <2>, <5>, <0>.\nNode <4> is connected to nodes <1>, <0>.\nNode <2> is connected to nodes <1>, <5>, <6>.\nNode <5> is connected to nodes <6>, <3>, <4>, <2>.\nNode <0> is connected to nodes <6>, <2>, <5>.\nNode <3> is connected to nodes <4>, <2>.\nNode <1> is connected to nodes <5>, <6>, <3>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>, <2>]",
        "type": "predecessor"
    },
    {
        "index": 240,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <1>, <5>, <0>.\nNode <5> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <2>, <1>, <5>.\nNode <1> is connected to node <0>.\nNode <0> is connected to nodes <2>, <5>, <4>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 241,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <2>, <5>, <3>.\nNode <2> is connected to node <0>.\nNode <5> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <1>, <0>.\nNode <0> is connected to node <1>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <3>]",
        "type": "predecessor"
    },
    {
        "index": 242,
        "question": "Given a directed graph:\nNode <5> is connected to node <4>.\nNode <4> is connected to nodes <3>, <2>, <0>.\nNode <3> is connected to node <2>.\nNode <2> is connected to node <3>.\nNode <0> is connected to nodes <5>, <3>.\nNode <1> is connected to nodes <0>, <5>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>, <3>]",
        "type": "predecessor"
    },
    {
        "index": 243,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <5>, <1>, <2>.\nNode <5> is connected to nodes <0>, <4>, <1>.\nNode <1> is connected to nodes <5>, <4>.\nNode <2> is connected to nodes <3>, <5>, <0>.\nNode <0> is connected to node <3>.\nNode <4> is connected to node <3>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <5>]",
        "type": "predecessor"
    },
    {
        "index": 244,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <3>, <4>.\nNode <0> is connected to nodes <2>, <5>.\nNode <3> is connected to nodes <1>, <2>, <0>.\nNode <4> is connected to node <3>.\nNode <1> is connected to node <0>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<5>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 245,
        "question": "Given a directed graph:\nNode <3> is connected to node <4>.\nNode <4> is connected to nodes <1>, <0>.\nNode <2> is connected to nodes <0>, <4>, <1>, <3>.\nNode <0> is connected to nodes <1>, <3>, <2>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 246,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <1>, <4>, <0>.\nNode <1> is connected to nodes <2>, <0>.\nNode <4> is connected to nodes <0>, <1>.\nNode <2> is connected to nodes <0>, <4>.\nNode <5> is connected to nodes <2>, <0>, <1>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>]",
        "type": "predecessor"
    },
    {
        "index": 247,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <3>.\nNode <0> is connected to node <2>.\nNode <3> is connected to node <2>.\nNode <2> is connected to nodes <3>, <1>, <4>.\nNode <1> is connected to node <4>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <3>]",
        "type": "predecessor"
    },
    {
        "index": 248,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <4>.\nNode <1> is connected to node <2>.\nNode <2> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <3>, <1>, <4>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>]",
        "type": "predecessor"
    },
    {
        "index": 249,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <5>, <0>, <4>.\nNode <5> is connected to node <3>.\nNode <0> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <2>, <0>.\nNode <3> is connected to nodes <0>, <4>, <6>.\nNode <6> is connected to nodes <1>, <5>.\nNode <2> is connected to nodes <1>, <5>, <4>, <6>.\nWhich are the predecessor nodes of node <5>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <6>, <2>]",
        "type": "predecessor"
    },
    {
        "index": 250,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <1>, <6>, <3>.\nNode <1> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <2>, <1>.\nNode <5> is connected to nodes <6>, <3>, <1>.\nNode <4> is connected to nodes <2>, <1>, <5>.\nWhich are the predecessor nodes of node <6>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <5>]",
        "type": "predecessor"
    },
    {
        "index": 251,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <1>, <4>.\nNode <2> is connected to nodes <0>, <3>.\nNode <1> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <2>, <1>, <4>, <0>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <3>]",
        "type": "predecessor"
    },
    {
        "index": 252,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <1>, <0>.\nNode <3> is connected to node <4>.\nNode <1> is connected to node <3>.\nNode <0> is connected to nodes <2>, <3>, <4>, <1>.\nNode <4> is connected to node <1>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 253,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <0>, <3>, <5>, <1>.\nNode <0> is connected to nodes <1>, <2>.\nNode <3> is connected to nodes <5>, <1>, <0>.\nNode <5> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <2>, <6>, <3>, <5>.\nNode <2> is connected to nodes <4>, <6>, <3>, <1>.\nNode <4> is connected to nodes <5>, <1>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 254,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <5>, <2>.\nNode <5> is connected to node <2>.\nNode <2> is connected to nodes <4>, <5>.\nNode <1> is connected to nodes <0>, <2>, <4>.\nNode <0> is connected to node <3>.\nNode <4> is connected to node <3>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <2>]",
        "type": "predecessor"
    },
    {
        "index": 255,
        "question": "Given a directed graph:\nNode <3> is connected to node <2>.\nNode <2> is connected to nodes <3>, <4>, <5>.\nNode <1> is connected to nodes <4>, <3>.\nNode <0> is connected to node <2>.\nNode <5> is connected to nodes <2>, <1>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<5>]",
        "type": "predecessor"
    },
    {
        "index": 256,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <4>, <0>.\nNode <4> is connected to node <0>.\nNode <0> is connected to nodes <3>, <4>, <1>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <0>, <2>]",
        "type": "predecessor"
    },
    {
        "index": 257,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <0>, <1>, <4>.\nNode <4> is connected to nodes <3>, <2>, <0>.\nNode <0> is connected to node <1>.\nNode <1> is connected to node <2>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <2>]",
        "type": "predecessor"
    },
    {
        "index": 258,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <5>, <2>.\nNode <4> is connected to nodes <6>, <3>.\nNode <5> is connected to node <0>.\nNode <2> is connected to nodes <0>, <6>.\nNode <3> is connected to nodes <4>, <6>.\nNode <6> is connected to node <1>.\nNode <0> is connected to node <4>.\nWhich are the predecessor nodes of node <5>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>]",
        "type": "predecessor"
    },
    {
        "index": 259,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <4>.\nNode <4> is connected to nodes <2>, <0>.\nNode <3> is connected to nodes <4>, <2>.\nNode <1> is connected to nodes <0>, <5>, <4>, <3>.\nNode <5> is connected to nodes <4>, <2>, <1>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>]",
        "type": "predecessor"
    },
    {
        "index": 260,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <4>.\nNode <1> is connected to nodes <2>, <3>, <0>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 261,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <1>.\nNode <4> is connected to node <3>.\nNode <1> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <3>, <1>.\nNode <0> is connected to nodes <3>, <1>, <2>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>]",
        "type": "predecessor"
    },
    {
        "index": 262,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1>, <3>, <6>, <4>.\nNode <1> is connected to node <4>.\nNode <3> is connected to nodes <4>, <0>, <5>.\nNode <6> is connected to nodes <0>, <1>, <2>, <3>.\nNode <2> is connected to node <4>.\nNode <5> is connected to nodes <3>, <0>, <1>, <2>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<5>, <3>, <6>]",
        "type": "predecessor"
    },
    {
        "index": 263,
        "question": "Given a directed graph:\nNode <4> is connected to node <0>.\nNode <0> is connected to nodes <3>, <1>, <2>.\nNode <3> is connected to node <2>.\nNode <1> is connected to nodes <2>, <4>, <0>.\nNode <2> is connected to nodes <4>, <0>, <3>, <1>.\nNode <5> is connected to nodes <3>, <2>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <5>, <3>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 264,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <3>, <0>.\nNode <1> is connected to nodes <0>, <2>.\nNode <2> is connected to nodes <3>, <1>, <0>, <4>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>]",
        "type": "predecessor"
    },
    {
        "index": 265,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <5>, <3>, <0>.\nNode <5> is connected to nodes <3>, <1>.\nNode <2> is connected to node <5>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 266,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <6>, <1>, <5>.\nNode <6> is connected to node <2>.\nNode <1> is connected to nodes <4>, <5>, <3>, <2>.\nNode <5> is connected to nodes <2>, <1>.\nNode <2> is connected to nodes <3>, <6>.\nNode <4> is connected to nodes <0>, <3>, <2>, <1>.\nNode <0> is connected to node <1>.\nWhich are the predecessor nodes of node <5>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 267,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <0>.\nNode <4> is connected to node <5>.\nNode <0> is connected to nodes <1>, <3>, <5>.\nNode <5> is connected to nodes <2>, <4>, <0>, <3>.\nNode <1> is connected to node <0>.\nNode <3> is connected to nodes <2>, <0>.\nWhich are the predecessor nodes of node <5>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 268,
        "question": "Given a directed graph:\nNode <2> is connected to node <4>.\nNode <4> is connected to nodes <1>, <3>.\nNode <0> is connected to node <2>.\nNode <1> is connected to node <0>.\nNode <5> is connected to nodes <3>, <4>, <2>, <1>.\nNode <3> is connected to nodes <4>, <0>, <5>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<5>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 269,
        "question": "Given a directed graph:\nNode <1> is connected to node <3>.\nNode <3> is connected to nodes <1>, <2>, <0>.\nNode <2> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <2>, <0>.\nNode <0> is connected to node <1>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 270,
        "question": "Given a directed graph:\nNode <4> is connected to node <1>.\nNode <1> is connected to nodes <4>, <5>.\nNode <5> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <3>, <5>, <1>.\nNode <2> is connected to nodes <1>, <0>, <3>.\nNode <3> is connected to nodes <5>, <0>.\nWhich are the predecessor nodes of node <3>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 271,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <4>, <5>.\nNode <1> is connected to nodes <4>, <5>, <3>.\nNode <4> is connected to nodes <5>, <1>.\nNode <5> is connected to node <0>.\nNode <3> is connected to node <0>.\nNode <0> is connected to nodes <4>, <2>, <3>.\nNode <6> is connected to nodes <3>, <1>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <1>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 272,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <6>, <0>.\nNode <6> is connected to nodes <4>, <3>, <0>, <5>.\nNode <4> is connected to nodes <2>, <3>, <1>, <0>, <6>.\nNode <3> is connected to nodes <1>, <4>, <2>.\nNode <2> is connected to nodes <3>, <5>, <4>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<6>, <2>, <3>]",
        "type": "predecessor"
    },
    {
        "index": 273,
        "question": "Given a directed graph:\nNode <1> is connected to node <0>.\nNode <0> is connected to nodes <5>, <1>, <3>, <2>.\nNode <3> is connected to nodes <0>, <1>.\nNode <2> is connected to nodes <5>, <3>.\nNode <5> is connected to nodes <1>, <0>.\nNode <4> is connected to nodes <5>, <1>, <3>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <3>, <5>]",
        "type": "predecessor"
    },
    {
        "index": 274,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <2>.\nNode <4> is connected to node <3>.\nNode <2> is connected to nodes <1>, <0>.\nNode <3> is connected to node <2>.\nNode <1> is connected to nodes <0>, <4>, <2>, <3>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <3>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 275,
        "question": "Given a directed graph:\nNode <0> is connected to node <4>.\nNode <4> is connected to node <0>.\nNode <2> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <2>, <4>, <1>.\nNode <1> is connected to nodes <3>, <0>, <2>, <4>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>]",
        "type": "predecessor"
    },
    {
        "index": 276,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <4>, <3>.\nNode <2> is connected to nodes <3>, <0>.\nNode <4> is connected to nodes <3>, <1>, <2>.\nNode <3> is connected to nodes <1>, <2>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>]",
        "type": "predecessor"
    },
    {
        "index": 277,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <1>, <5>.\nNode <0> is connected to node <4>.\nNode <1> is connected to node <0>.\nNode <5> is connected to nodes <2>, <3>, <4>, <0>.\nNode <4> is connected to node <5>.\nNode <2> is connected to nodes <0>, <1>, <5>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<5>]",
        "type": "predecessor"
    },
    {
        "index": 278,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <6>, <5>.\nNode <3> is connected to nodes <2>, <4>.\nNode <6> is connected to nodes <5>, <3>, <0>.\nNode <5> is connected to nodes <4>, <1>.\nNode <2> is connected to node <0>.\nNode <4> is connected to nodes <3>, <0>, <2>.\nNode <0> is connected to nodes <6>, <5>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <5>]",
        "type": "predecessor"
    },
    {
        "index": 279,
        "question": "Given a directed graph:\nNode <5> is connected to node <2>.\nNode <2> is connected to nodes <3>, <4>.\nNode <1> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <5>, <1>, <0>, <4>, <2>.\nNode <0> is connected to nodes <4>, <2>, <5>.\nNode <4> is connected to nodes <2>, <5>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>]",
        "type": "predecessor"
    },
    {
        "index": 280,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <1>, <3>.\nNode <2> is connected to node <3>.\nNode <1> is connected to nodes <3>, <2>.\nNode <3> is connected to node <0>.\nNode <0> is connected to nodes <2>, <3>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>]",
        "type": "predecessor"
    },
    {
        "index": 281,
        "question": "Given a directed graph:\nNode <2> is connected to node <0>.\nNode <0> is connected to nodes <4>, <1>, <3>.\nNode <4> is connected to nodes <1>, <3>, <2>.\nNode <1> is connected to nodes <3>, <0>, <4>.\nNode <3> is connected to nodes <0>, <4>, <1>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<4>]",
        "type": "predecessor"
    },
    {
        "index": 282,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <1>.\nNode <3> is connected to nodes <1>, <2>.\nNode <1> is connected to node <4>.\nNode <2> is connected to node <3>.\nNode <4> is connected to nodes <3>, <1>, <0>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>]",
        "type": "predecessor"
    },
    {
        "index": 283,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <2>.\nNode <2> is connected to node <1>.\nNode <4> is connected to nodes <2>, <1>.\nNode <1> is connected to node <4>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>]",
        "type": "predecessor"
    },
    {
        "index": 284,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <4>, <3>.\nNode <1> is connected to nodes <4>, <0>, <3>.\nNode <4> is connected to node <1>.\nNode <3> is connected to node <4>.\nNode <0> is connected to node <2>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 285,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5>, <2>.\nNode <5> is connected to nodes <3>, <0>.\nNode <2> is connected to nodes <1>, <0>, <5>.\nNode <3> is connected to nodes <2>, <1>, <0>, <5>.\nNode <1> is connected to nodes <0>, <2>.\nNode <4> is connected to nodes <5>, <2>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[]",
        "type": "predecessor"
    },
    {
        "index": 286,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <3>, <2>, <0>.\nNode <3> is connected to nodes <2>, <5>, <1>, <0>, <6>.\nNode <2> is connected to nodes <1>, <3>.\nNode <0> is connected to nodes <6>, <5>.\nNode <5> is connected to nodes <4>, <1>, <0>, <2>.\nNode <1> is connected to nodes <6>, <5>.\nNode <4> is connected to nodes <1>, <0>, <6>, <3>, <2>.\nWhich are the predecessor nodes of node <5>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>, <1>, <0>]",
        "type": "predecessor"
    },
    {
        "index": 287,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5>, <6>, <2>, <1>, <4>.\nNode <5> is connected to nodes <6>, <3>, <4>, <0>.\nNode <6> is connected to nodes <3>, <0>, <5>.\nNode <2> is connected to nodes <1>, <4>, <0>, <5>.\nNode <1> is connected to nodes <4>, <0>, <6>.\nNode <4> is connected to nodes <0>, <6>.\nNode <3> is connected to node <0>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <2>]",
        "type": "predecessor"
    },
    {
        "index": 288,
        "question": "Given a directed graph:\nNode <0> is connected to node <3>.\nNode <3> is connected to nodes <0>, <2>, <4>, <1>.\nNode <2> is connected to nodes <4>, <1>, <0>.\nNode <4> is connected to node <0>.\nNode <1> is connected to node <3>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<3>]",
        "type": "predecessor"
    },
    {
        "index": 289,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <5>.\nNode <1> is connected to nodes <5>, <4>, <3>, <0>.\nNode <5> is connected to nodes <4>, <3>, <0>.\nNode <0> is connected to nodes <1>, <5>, <4>.\nNode <4> is connected to nodes <3>, <1>, <5>.\nNode <2> is connected to nodes <4>, <0>, <1>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <5>, <2>]",
        "type": "predecessor"
    },
    {
        "index": 290,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <4>, <5>, <3>, <6>.\nNode <4> is connected to nodes <1>, <3>, <6>, <0>.\nNode <1> is connected to nodes <3>, <6>, <0>, <2>.\nNode <3> is connected to nodes <6>, <0>.\nNode <6> is connected to nodes <0>, <4>, <5>.\nNode <2> is connected to nodes <4>, <0>.\nWhich are the predecessor nodes of node <6>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>, <3>, <0>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 291,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <5>, <4>.\nNode <5> is connected to node <4>.\nNode <4> is connected to node <3>.\nNode <1> is connected to nodes <3>, <5>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[]",
        "type": "predecessor"
    },
    {
        "index": 292,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <4>, <0>.\nNode <1> is connected to node <3>.\nNode <4> is connected to nodes <1>, <3>.\nNode <3> is connected to node <4>.\nWhich are the predecessor nodes of node <2>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[]",
        "type": "predecessor"
    },
    {
        "index": 293,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <6>, <5>.\nNode <6> is connected to nodes <5>, <2>.\nNode <5> is connected to node <3>.\nNode <3> is connected to nodes <1>, <2>.\nNode <0> is connected to node <1>.\nNode <1> is connected to nodes <4>, <2>, <3>.\nNode <4> is connected to nodes <2>, <0>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<1>]",
        "type": "predecessor"
    },
    {
        "index": 294,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5>, <1>, <6>.\nNode <5> is connected to nodes <4>, <2>.\nNode <1> is connected to nodes <3>, <0>.\nNode <6> is connected to node <5>.\nNode <4> is connected to nodes <2>, <1>.\nNode <3> is connected to nodes <0>, <5>, <1>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <3>, <4>]",
        "type": "predecessor"
    },
    {
        "index": 295,
        "question": "Given a directed graph:\nNode <0> is connected to node <4>.\nNode <4> is connected to node <0>.\nNode <2> is connected to nodes <1>, <0>.\nNode <1> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <0>, <4>, <1>.\nWhich are the predecessor nodes of node <4>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <3>]",
        "type": "predecessor"
    },
    {
        "index": 296,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <3>.\nNode <2> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <4>, <0>, <5>.\nNode <0> is connected to nodes <1>, <2>, <5>, <3>, <4>.\nNode <1> is connected to nodes <2>, <4>.\nNode <5> is connected to nodes <3>, <4>, <0>.\nWhich are the predecessor nodes of node <5>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<0>, <3>]",
        "type": "predecessor"
    },
    {
        "index": 297,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <0>, <4>.\nNode <2> is connected to node <0>.\nNode <5> is connected to nodes <1>, <0>, <2>.\nNode <1> is connected to nodes <0>, <2>, <4>.\nWhich are the predecessor nodes of node <0>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <5>, <3>, <1>]",
        "type": "predecessor"
    },
    {
        "index": 298,
        "question": "Given a directed graph:\nNode <2> is connected to node <5>.\nNode <5> is connected to node <2>.\nNode <4> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <5>, <2>, <4>, <0>.\nNode <0> is connected to nodes <1>, <6>.\nNode <1> is connected to node <2>.\nNode <6> is connected to nodes <5>, <2>.\nWhich are the predecessor nodes of node <5>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[<2>, <6>, <3>]",
        "type": "predecessor"
    },
    {
        "index": 299,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <6>, <4>.\nNode <6> is connected to node <5>.\nNode <5> is connected to nodes <4>, <0>.\nNode <0> is connected to node <3>.\nNode <2> is connected to nodes <3>, <6>, <0>.\nNode <1> is connected to nodes <5>, <6>.\nWhich are the predecessor nodes of node <1>? A predecessor of n is a node m such that there exists a directed edge from m to n.\nAnswer:\n",
        "answer": "[]",
        "type": "predecessor"
    },
    {
        "index": 0,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3> (weight: 7), <5> (weight: 1), <6> (weight: 7), <4> (weight: 7).\nNode <3> is connected to nodes <0> (weight: 7), <5> (weight: 10), <6> (weight: 10), <2> (weight: 1), <1> (weight: 8), <4> (weight: 7).\nNode <5> is connected to nodes <0> (weight: 1), <3> (weight: 10), <6> (weight: 1), <2> (weight: 9), <1> (weight: 9).\nNode <6> is connected to nodes <0> (weight: 7), <3> (weight: 10), <5> (weight: 1), <2> (weight: 2), <1> (weight: 3), <4> (weight: 3).\nNode <4> is connected to nodes <0> (weight: 7), <3> (weight: 7), <6> (weight: 3), <2> (weight: 8), <1> (weight: 1).\nNode <2> is connected to nodes <3> (weight: 1), <5> (weight: 9), <6> (weight: 2), <4> (weight: 8), <1> (weight: 6).\nNode <1> is connected to nodes <3> (weight: 8), <5> (weight: 9), <6> (weight: 3), <4> (weight: 1), <2> (weight: 6).\n\nCalculate the distance of the shortest path from node <1> to node <3>.\nAnswer:\n",
        "answer": "6",
        "type": "shortest_path"
    },
    {
        "index": 1,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0> (weight: 4), <2> (weight: 4), <1> (weight: 6).\nNode <0> is connected to nodes <2> (weight: 10), <4> (weight: 4), <1> (weight: 6).\nNode <2> is connected to nodes <1> (weight: 7), <0> (weight: 4).\nNode <1> is connected to nodes <3> (weight: 5), <4> (weight: 7).\nNode <4> is connected to nodes <1> (weight: 2), <2> (weight: 3).\n\nCalculate the distance of the shortest path from node <3> to node <4>.\nAnswer:\n",
        "answer": "8",
        "type": "shortest_path"
    },
    {
        "index": 2,
        "question": "Given an undirected graph:\nNode <4> is connected to node <2> (weight: 5).\nNode <2> is connected to nodes <4> (weight: 5), <0> (weight: 3).\nNode <0> is connected to nodes <2> (weight: 3), <1> (weight: 10), <3> (weight: 3).\nNode <1> is connected to nodes <0> (weight: 10), <3> (weight: 9).\nNode <3> is connected to nodes <0> (weight: 3), <1> (weight: 9).\n\nCalculate the distance of the shortest path from node <2> to node <1>.\nAnswer:\n",
        "answer": "13",
        "type": "shortest_path"
    },
    {
        "index": 3,
        "question": "Given a directed graph:\nNode <0> is connected to node <1> (weight: 1).\nNode <1> is connected to node <4> (weight: 3).\nNode <4> is connected to nodes <1> (weight: 1), <2> (weight: 5), <0> (weight: 4), <3> (weight: 2).\nNode <2> is connected to nodes <3> (weight: 4), <1> (weight: 2).\n\nCalculate the distance of the shortest path from node <2> to node <1>.\nAnswer:\n",
        "answer": "2",
        "type": "shortest_path"
    },
    {
        "index": 4,
        "question": "Given an undirected graph:\nNode <0> is connected to node <5> (weight: 2).\nNode <5> is connected to nodes <0> (weight: 2), <4> (weight: 8), <2> (weight: 5).\nNode <4> is connected to nodes <5> (weight: 8), <1> (weight: 8), <3> (weight: 9).\nNode <2> is connected to nodes <5> (weight: 5), <1> (weight: 2).\nNode <1> is connected to nodes <4> (weight: 8), <2> (weight: 2).\nNode <3> is connected to node <4> (weight: 9).\n\nCalculate the distance of the shortest path from node <2> to node <4>.\nAnswer:\n",
        "answer": "10",
        "type": "shortest_path"
    },
    {
        "index": 5,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1> (weight: 5), <2> (weight: 5).\nNode <1> is connected to nodes <4> (weight: 5), <3> (weight: 10).\nNode <2> is connected to nodes <4> (weight: 5), <0> (weight: 3).\nNode <3> is connected to nodes <1> (weight: 10), <0> (weight: 5).\nNode <0> is connected to nodes <2> (weight: 3), <3> (weight: 5).\n\nCalculate the distance of the shortest path from node <1> to node <2>.\nAnswer:\n",
        "answer": "10",
        "type": "shortest_path"
    },
    {
        "index": 6,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4> (weight: 4), <3> (weight: 4), <1> (weight: 10), <0> (weight: 6).\nNode <4> is connected to node <2> (weight: 4).\nNode <3> is connected to node <2> (weight: 4).\nNode <1> is connected to node <2> (weight: 10).\nNode <0> is connected to node <2> (weight: 6).\n\nCalculate the distance of the shortest path from node <2> to node <4>.\nAnswer:\n",
        "answer": "4",
        "type": "shortest_path"
    },
    {
        "index": 7,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1> (weight: 9), <0> (weight: 9).\nNode <1> is connected to nodes <4> (weight: 9), <3> (weight: 6).\nNode <0> is connected to nodes <4> (weight: 9), <2> (weight: 9).\nNode <3> is connected to node <1> (weight: 6).\nNode <2> is connected to node <0> (weight: 9).\n\nCalculate the distance of the shortest path from node <1> to node <2>.\nAnswer:\n",
        "answer": "27",
        "type": "shortest_path"
    },
    {
        "index": 8,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <4> (weight: 10), <0> (weight: 1), <2> (weight: 7).\nNode <4> is connected to nodes <3> (weight: 8), <6> (weight: 5), <5> (weight: 8).\nNode <0> is connected to node <5> (weight: 8).\nNode <2> is connected to nodes <4> (weight: 2), <3> (weight: 5).\nNode <6> is connected to node <4> (weight: 3).\nNode <1> is connected to nodes <0> (weight: 8), <3> (weight: 2).\n\nCalculate the distance of the shortest path from node <5> to node <4>.\nAnswer:\n",
        "answer": "9",
        "type": "shortest_path"
    },
    {
        "index": 9,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3> (weight: 1), <4> (weight: 1).\nNode <3> is connected to nodes <0> (weight: 1), <5> (weight: 1).\nNode <4> is connected to nodes <0> (weight: 1), <2> (weight: 2).\nNode <5> is connected to nodes <3> (weight: 1), <1> (weight: 2).\nNode <2> is connected to nodes <4> (weight: 2), <1> (weight: 8).\nNode <1> is connected to nodes <5> (weight: 2), <2> (weight: 8).\n\nCalculate the distance of the shortest path from node <4> to node <2>.\nAnswer:\n",
        "answer": "2",
        "type": "shortest_path"
    },
    {
        "index": 10,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4> (weight: 5), <1> (weight: 3), <3> (weight: 5).\nNode <4> is connected to node <2> (weight: 5).\nNode <1> is connected to nodes <2> (weight: 3), <0> (weight: 4).\nNode <3> is connected to node <2> (weight: 5).\nNode <0> is connected to node <1> (weight: 4).\n\nCalculate the distance of the shortest path from node <3> to node <1>.\nAnswer:\n",
        "answer": "8",
        "type": "shortest_path"
    },
    {
        "index": 11,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5> (weight: 2), <1> (weight: 2), <0> (weight: 1), <2> (weight: 10).\nNode <5> is connected to nodes <3> (weight: 2), <1> (weight: 9), <0> (weight: 9), <2> (weight: 8).\nNode <1> is connected to nodes <3> (weight: 2), <5> (weight: 9), <0> (weight: 10), <2> (weight: 10), <4> (weight: 3).\nNode <0> is connected to nodes <3> (weight: 1), <5> (weight: 9), <1> (weight: 10), <2> (weight: 4), <4> (weight: 3).\nNode <2> is connected to nodes <3> (weight: 10), <5> (weight: 8), <1> (weight: 10), <0> (weight: 4), <4> (weight: 7).\nNode <4> is connected to nodes <1> (weight: 3), <0> (weight: 3), <2> (weight: 7).\n\nCalculate the distance of the shortest path from node <0> to node <4>.\nAnswer:\n",
        "answer": "3",
        "type": "shortest_path"
    },
    {
        "index": 12,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0> (weight: 10), <4> (weight: 1).\nNode <0> is connected to nodes <6> (weight: 8), <5> (weight: 6), <1> (weight: 9).\nNode <4> is connected to node <2> (weight: 5).\nNode <6> is connected to node <2> (weight: 7).\nNode <5> is connected to nodes <6> (weight: 6), <4> (weight: 3).\nNode <2> is connected to nodes <1> (weight: 3), <6> (weight: 4), <4> (weight: 1), <5> (weight: 7).\nNode <3> is connected to nodes <6> (weight: 6), <4> (weight: 8), <2> (weight: 5).\n\nCalculate the distance of the shortest path from node <4> to node <5>.\nAnswer:\n",
        "answer": "12",
        "type": "shortest_path"
    },
    {
        "index": 13,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2> (weight: 2), <3> (weight: 4), <1> (weight: 8).\nNode <2> is connected to nodes <1> (weight: 6), <5> (weight: 10), <0> (weight: 1).\nNode <1> is connected to nodes <5> (weight: 7), <4> (weight: 7).\nNode <0> is connected to nodes <3> (weight: 5), <1> (weight: 7).\nNode <4> is connected to nodes <2> (weight: 10), <3> (weight: 10).\n\nCalculate the distance of the shortest path from node <5> to node <3>.\nAnswer:\n",
        "answer": "4",
        "type": "shortest_path"
    },
    {
        "index": 14,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5> (weight: 2), <6> (weight: 8), <4> (weight: 5).\nNode <5> is connected to node <3> (weight: 2).\nNode <6> is connected to nodes <3> (weight: 8), <0> (weight: 7).\nNode <4> is connected to nodes <3> (weight: 5), <0> (weight: 6), <2> (weight: 2).\nNode <0> is connected to nodes <6> (weight: 7), <4> (weight: 6), <1> (weight: 8).\nNode <2> is connected to node <4> (weight: 2).\nNode <1> is connected to node <0> (weight: 8).\n\nCalculate the distance of the shortest path from node <3> to node <4>.\nAnswer:\n",
        "answer": "5",
        "type": "shortest_path"
    },
    {
        "index": 15,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1> (weight: 8), <2> (weight: 10).\nNode <1> is connected to node <0> (weight: 8).\nNode <2> is connected to nodes <0> (weight: 10), <3> (weight: 3), <4> (weight: 8).\nNode <3> is connected to node <2> (weight: 3).\nNode <4> is connected to node <2> (weight: 8).\n\nCalculate the distance of the shortest path from node <2> to node <1>.\nAnswer:\n",
        "answer": "18",
        "type": "shortest_path"
    },
    {
        "index": 16,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3> (weight: 2), <5> (weight: 3).\nNode <3> is connected to nodes <4> (weight: 2), <1> (weight: 8).\nNode <5> is connected to nodes <4> (weight: 3), <2> (weight: 8), <0> (weight: 7).\nNode <1> is connected to nodes <3> (weight: 8), <2> (weight: 3).\nNode <2> is connected to nodes <5> (weight: 8), <1> (weight: 3).\nNode <0> is connected to node <5> (weight: 7).\n\nCalculate the distance of the shortest path from node <4> to node <2>.\nAnswer:\n",
        "answer": "11",
        "type": "shortest_path"
    },
    {
        "index": 17,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1> (weight: 4), <2> (weight: 7), <3> (weight: 10), <5> (weight: 9), <4> (weight: 9).\nNode <1> is connected to node <0> (weight: 4).\nNode <2> is connected to node <0> (weight: 7).\nNode <3> is connected to node <0> (weight: 10).\nNode <5> is connected to node <0> (weight: 9).\nNode <4> is connected to node <0> (weight: 9).\n\nCalculate the distance of the shortest path from node <0> to node <2>.\nAnswer:\n",
        "answer": "7",
        "type": "shortest_path"
    },
    {
        "index": 18,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0> (weight: 2), <1> (weight: 9), <5> (weight: 5).\nNode <0> is connected to nodes <2> (weight: 2), <3> (weight: 3).\nNode <1> is connected to node <2> (weight: 9).\nNode <5> is connected to nodes <2> (weight: 5), <4> (weight: 9).\nNode <3> is connected to node <0> (weight: 3).\nNode <4> is connected to node <5> (weight: 9).\n\nCalculate the distance of the shortest path from node <0> to node <4>.\nAnswer:\n",
        "answer": "16",
        "type": "shortest_path"
    },
    {
        "index": 19,
        "question": "Given an undirected graph:\nNode <2> is connected to node <1> (weight: 2).\nNode <1> is connected to nodes <2> (weight: 2), <0> (weight: 9), <4> (weight: 7).\nNode <0> is connected to nodes <1> (weight: 9), <3> (weight: 1).\nNode <4> is connected to node <1> (weight: 7).\nNode <3> is connected to node <0> (weight: 1).\n\nCalculate the distance of the shortest path from node <0> to node <4>.\nAnswer:\n",
        "answer": "16",
        "type": "shortest_path"
    },
    {
        "index": 20,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <2> (weight: 10), <4> (weight: 5).\nNode <2> is connected to nodes <6> (weight: 10), <0> (weight: 5).\nNode <4> is connected to nodes <6> (weight: 5), <5> (weight: 5), <3> (weight: 8).\nNode <0> is connected to node <2> (weight: 5).\nNode <5> is connected to nodes <4> (weight: 5), <1> (weight: 1).\nNode <3> is connected to nodes <4> (weight: 8), <1> (weight: 1).\nNode <1> is connected to nodes <5> (weight: 1), <3> (weight: 1).\n\nCalculate the distance of the shortest path from node <1> to node <4>.\nAnswer:\n",
        "answer": "6",
        "type": "shortest_path"
    },
    {
        "index": 21,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3> (weight: 9), <1> (weight: 8), <0> (weight: 7).\nNode <3> is connected to nodes <0> (weight: 6), <4> (weight: 2).\nNode <1> is connected to nodes <0> (weight: 4), <5> (weight: 4).\nNode <0> is connected to nodes <3> (weight: 10), <1> (weight: 4), <6> (weight: 2).\nNode <5> is connected to nodes <1> (weight: 7), <3> (weight: 4).\nNode <6> is connected to nodes <0> (weight: 7), <4> (weight: 9).\nNode <2> is connected to nodes <0> (weight: 9), <1> (weight: 1).\n\nCalculate the distance of the shortest path from node <4> to node <6>.\nAnswer:\n",
        "answer": "9",
        "type": "shortest_path"
    },
    {
        "index": 22,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1> (weight: 5), <3> (weight: 5).\nNode <1> is connected to nodes <3> (weight: 6), <2> (weight: 5).\nNode <3> is connected to nodes <4> (weight: 2), <0> (weight: 3).\nNode <2> is connected to node <4> (weight: 2).\nNode <0> is connected to nodes <4> (weight: 7), <2> (weight: 1), <1> (weight: 8).\n\nCalculate the distance of the shortest path from node <2> to node <0>.\nAnswer:\n",
        "answer": "10",
        "type": "shortest_path"
    },
    {
        "index": 23,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2> (weight: 7), <6> (weight: 5), <1> (weight: 8), <4> (weight: 10).\nNode <2> is connected to nodes <3> (weight: 7), <6> (weight: 9), <0> (weight: 3), <1> (weight: 8), <4> (weight: 2).\nNode <6> is connected to nodes <3> (weight: 5), <2> (weight: 9), <0> (weight: 7), <1> (weight: 1), <4> (weight: 7).\nNode <1> is connected to nodes <3> (weight: 8), <2> (weight: 8), <6> (weight: 1).\nNode <4> is connected to nodes <3> (weight: 10), <2> (weight: 2), <6> (weight: 7), <0> (weight: 7), <5> (weight: 8).\nNode <0> is connected to nodes <2> (weight: 3), <6> (weight: 7), <4> (weight: 7), <5> (weight: 1).\nNode <5> is connected to nodes <4> (weight: 8), <0> (weight: 1).\n\nCalculate the distance of the shortest path from node <4> to node <2>.\nAnswer:\n",
        "answer": "2",
        "type": "shortest_path"
    },
    {
        "index": 24,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2> (weight: 4), <4> (weight: 8), <5> (weight: 8).\nNode <2> is connected to nodes <3> (weight: 4), <4> (weight: 8), <1> (weight: 2), <5> (weight: 5).\nNode <4> is connected to nodes <3> (weight: 8), <2> (weight: 8), <1> (weight: 4), <5> (weight: 7).\nNode <5> is connected to nodes <3> (weight: 8), <2> (weight: 5), <4> (weight: 7), <1> (weight: 3), <0> (weight: 5).\nNode <1> is connected to nodes <2> (weight: 2), <4> (weight: 4), <5> (weight: 3), <0> (weight: 9).\nNode <0> is connected to nodes <5> (weight: 5), <1> (weight: 9).\n\nCalculate the distance of the shortest path from node <2> to node <5>.\nAnswer:\n",
        "answer": "5",
        "type": "shortest_path"
    },
    {
        "index": 25,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <6> (weight: 7), <0> (weight: 6), <4> (weight: 8).\nNode <6> is connected to nodes <0> (weight: 5), <1> (weight: 3), <2> (weight: 3).\nNode <0> is connected to nodes <5> (weight: 7), <1> (weight: 4), <3> (weight: 7), <2> (weight: 3).\nNode <4> is connected to node <1> (weight: 5).\nNode <1> is connected to nodes <6> (weight: 9), <4> (weight: 8), <5> (weight: 10).\nNode <2> is connected to nodes <0> (weight: 8), <5> (weight: 9).\nNode <3> is connected to node <5> (weight: 2).\n\nCalculate the distance of the shortest path from node <0> to node <3>.\nAnswer:\n",
        "answer": "7",
        "type": "shortest_path"
    },
    {
        "index": 26,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2> (weight: 9), <1> (weight: 1), <3> (weight: 8).\nNode <2> is connected to node <4> (weight: 9).\nNode <1> is connected to node <4> (weight: 1).\nNode <3> is connected to nodes <4> (weight: 8), <0> (weight: 3).\nNode <0> is connected to node <3> (weight: 3).\n\nCalculate the distance of the shortest path from node <4> to node <3>.\nAnswer:\n",
        "answer": "8",
        "type": "shortest_path"
    },
    {
        "index": 27,
        "question": "Given a directed graph:\nNode <3> is connected to node <4> (weight: 2).\nNode <4> is connected to nodes <0> (weight: 8), <3> (weight: 6), <2> (weight: 7).\nNode <0> is connected to nodes <1> (weight: 5), <2> (weight: 3), <4> (weight: 8).\nNode <2> is connected to nodes <4> (weight: 9), <3> (weight: 6).\nNode <1> is connected to nodes <2> (weight: 8), <4> (weight: 8), <0> (weight: 2).\n\nCalculate the distance of the shortest path from node <0> to node <3>.\nAnswer:\n",
        "answer": "9",
        "type": "shortest_path"
    },
    {
        "index": 28,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0> (weight: 10), <3> (weight: 10).\nNode <0> is connected to nodes <2> (weight: 10), <1> (weight: 4), <3> (weight: 5).\nNode <3> is connected to nodes <2> (weight: 10), <0> (weight: 5).\nNode <1> is connected to nodes <0> (weight: 4), <5> (weight: 9).\nNode <5> is connected to nodes <1> (weight: 9), <4> (weight: 5).\nNode <4> is connected to node <5> (weight: 5).\n\nCalculate the distance of the shortest path from node <0> to node <3>.\nAnswer:\n",
        "answer": "5",
        "type": "shortest_path"
    },
    {
        "index": 29,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1> (weight: 4), <3> (weight: 1).\nNode <1> is connected to nodes <2> (weight: 4), <4> (weight: 6), <3> (weight: 6), <0> (weight: 10).\nNode <3> is connected to nodes <2> (weight: 1), <1> (weight: 6).\nNode <4> is connected to node <1> (weight: 6).\nNode <0> is connected to node <1> (weight: 10).\n\nCalculate the distance of the shortest path from node <3> to node <2>.\nAnswer:\n",
        "answer": "1",
        "type": "shortest_path"
    },
    {
        "index": 30,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2> (weight: 4), <4> (weight: 8), <3> (weight: 6).\nNode <2> is connected to nodes <1> (weight: 4), <6> (weight: 4), <5> (weight: 5), <0> (weight: 10).\nNode <4> is connected to nodes <1> (weight: 8), <0> (weight: 9).\nNode <3> is connected to nodes <1> (weight: 6), <6> (weight: 7), <5> (weight: 2), <0> (weight: 1).\nNode <6> is connected to nodes <2> (weight: 4), <3> (weight: 7), <0> (weight: 2).\nNode <5> is connected to nodes <2> (weight: 5), <3> (weight: 2), <0> (weight: 9).\nNode <0> is connected to nodes <2> (weight: 10), <4> (weight: 9), <3> (weight: 1), <6> (weight: 2), <5> (weight: 9).\n\nCalculate the distance of the shortest path from node <4> to node <2>.\nAnswer:\n",
        "answer": "12",
        "type": "shortest_path"
    },
    {
        "index": 31,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5> (weight: 2), <1> (weight: 10).\nNode <5> is connected to node <3> (weight: 2).\nNode <1> is connected to nodes <3> (weight: 10), <4> (weight: 1), <0> (weight: 1), <2> (weight: 5).\nNode <4> is connected to node <1> (weight: 1).\nNode <0> is connected to node <1> (weight: 1).\nNode <2> is connected to node <1> (weight: 5).\n\nCalculate the distance of the shortest path from node <3> to node <1>.\nAnswer:\n",
        "answer": "10",
        "type": "shortest_path"
    },
    {
        "index": 32,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3> (weight: 8), <2> (weight: 1).\nNode <3> is connected to nodes <0> (weight: 8), <4> (weight: 1), <2> (weight: 9).\nNode <2> is connected to nodes <0> (weight: 1), <3> (weight: 9).\nNode <4> is connected to nodes <3> (weight: 1), <1> (weight: 10).\nNode <1> is connected to node <4> (weight: 10).\n\nCalculate the distance of the shortest path from node <2> to node <0>.\nAnswer:\n",
        "answer": "1",
        "type": "shortest_path"
    },
    {
        "index": 33,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0> (weight: 1), <3> (weight: 10).\nNode <0> is connected to nodes <4> (weight: 10), <3> (weight: 4).\nNode <3> is connected to node <2> (weight: 9).\nNode <4> is connected to nodes <3> (weight: 7), <2> (weight: 10), <0> (weight: 2).\nNode <1> is connected to node <0> (weight: 3).\n\nCalculate the distance of the shortest path from node <3> to node <0>.\nAnswer:\n",
        "answer": "10",
        "type": "shortest_path"
    },
    {
        "index": 34,
        "question": "Given an undirected graph:\nNode <1> is connected to node <3> (weight: 1).\nNode <3> is connected to nodes <1> (weight: 1), <2> (weight: 10), <4> (weight: 4).\nNode <2> is connected to nodes <3> (weight: 10), <4> (weight: 6), <0> (weight: 3).\nNode <4> is connected to nodes <3> (weight: 4), <2> (weight: 6).\nNode <0> is connected to node <2> (weight: 3).\n\nCalculate the distance of the shortest path from node <2> to node <4>.\nAnswer:\n",
        "answer": "6",
        "type": "shortest_path"
    },
    {
        "index": 35,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4> (weight: 10), <2> (weight: 9).\nNode <4> is connected to node <0> (weight: 8).\nNode <2> is connected to nodes <6> (weight: 7), <3> (weight: 4), <4> (weight: 1).\nNode <0> is connected to node <1> (weight: 7).\nNode <6> is connected to nodes <1> (weight: 3), <0> (weight: 7), <4> (weight: 4).\nNode <1> is connected to node <5> (weight: 3).\nNode <5> is connected to nodes <3> (weight: 8), <4> (weight: 1).\n\nCalculate the distance of the shortest path from node <1> to node <3>.\nAnswer:\n",
        "answer": "11",
        "type": "shortest_path"
    },
    {
        "index": 36,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2> (weight: 10), <4> (weight: 7), <1> (weight: 8).\nNode <2> is connected to node <3> (weight: 10).\nNode <4> is connected to nodes <3> (weight: 7), <0> (weight: 7).\nNode <1> is connected to node <3> (weight: 8).\nNode <0> is connected to node <4> (weight: 7).\n\nCalculate the distance of the shortest path from node <3> to node <2>.\nAnswer:\n",
        "answer": "10",
        "type": "shortest_path"
    },
    {
        "index": 37,
        "question": "Given a directed graph:\nNode <3> is connected to node <0> (weight: 8).\nNode <0> is connected to nodes <4> (weight: 8), <3> (weight: 4), <1> (weight: 1).\nNode <4> is connected to node <3> (weight: 6).\nNode <1> is connected to nodes <2> (weight: 1), <0> (weight: 5), <4> (weight: 6), <3> (weight: 8).\nNode <2> is connected to nodes <0> (weight: 7), <4> (weight: 9).\n\nCalculate the distance of the shortest path from node <2> to node <0>.\nAnswer:\n",
        "answer": "7",
        "type": "shortest_path"
    },
    {
        "index": 38,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5> (weight: 8), <1> (weight: 8), <0> (weight: 2), <4> (weight: 6).\nNode <5> is connected to nodes <3> (weight: 8), <2> (weight: 1).\nNode <1> is connected to node <3> (weight: 8).\nNode <0> is connected to nodes <3> (weight: 2), <6> (weight: 4).\nNode <4> is connected to node <3> (weight: 6).\nNode <2> is connected to node <5> (weight: 1).\nNode <6> is connected to node <0> (weight: 4).\n\nCalculate the distance of the shortest path from node <6> to node <4>.\nAnswer:\n",
        "answer": "12",
        "type": "shortest_path"
    },
    {
        "index": 39,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <6> (weight: 9), <4> (weight: 7), <3> (weight: 6).\nNode <6> is connected to nodes <5> (weight: 9), <0> (weight: 3).\nNode <4> is connected to nodes <5> (weight: 7), <3> (weight: 6).\nNode <3> is connected to nodes <5> (weight: 6), <4> (weight: 6).\nNode <0> is connected to nodes <6> (weight: 3), <2> (weight: 4), <1> (weight: 6).\nNode <2> is connected to node <0> (weight: 4).\nNode <1> is connected to node <0> (weight: 6).\n\nCalculate the distance of the shortest path from node <5> to node <2>.\nAnswer:\n",
        "answer": "16",
        "type": "shortest_path"
    },
    {
        "index": 40,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3> (weight: 5), <1> (weight: 9), <4> (weight: 7), <0> (weight: 2).\nNode <3> is connected to node <2> (weight: 5).\nNode <1> is connected to node <2> (weight: 9).\nNode <4> is connected to node <2> (weight: 7).\nNode <0> is connected to node <2> (weight: 2).\n\nCalculate the distance of the shortest path from node <0> to node <4>.\nAnswer:\n",
        "answer": "9",
        "type": "shortest_path"
    },
    {
        "index": 41,
        "question": "Given an undirected graph:\nNode <2> is connected to node <3> (weight: 5).\nNode <3> is connected to nodes <2> (weight: 5), <1> (weight: 2), <0> (weight: 6).\nNode <1> is connected to nodes <3> (weight: 2), <4> (weight: 3), <0> (weight: 8).\nNode <0> is connected to nodes <3> (weight: 6), <1> (weight: 8).\nNode <4> is connected to node <1> (weight: 3).\n\nCalculate the distance of the shortest path from node <4> to node <1>.\nAnswer:\n",
        "answer": "3",
        "type": "shortest_path"
    },
    {
        "index": 42,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3> (weight: 4), <4> (weight: 8), <1> (weight: 4), <5> (weight: 8).\nNode <3> is connected to node <2> (weight: 4).\nNode <4> is connected to node <2> (weight: 8).\nNode <1> is connected to nodes <2> (weight: 4), <0> (weight: 2).\nNode <5> is connected to node <2> (weight: 8).\nNode <0> is connected to node <1> (weight: 2).\n\nCalculate the distance of the shortest path from node <3> to node <1>.\nAnswer:\n",
        "answer": "8",
        "type": "shortest_path"
    },
    {
        "index": 43,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <2> (weight: 7), <1> (weight: 1), <4> (weight: 6), <5> (weight: 6).\nNode <2> is connected to nodes <6> (weight: 7), <0> (weight: 6), <4> (weight: 5), <5> (weight: 7), <3> (weight: 7).\nNode <1> is connected to nodes <6> (weight: 1), <3> (weight: 9).\nNode <4> is connected to nodes <6> (weight: 6), <2> (weight: 5), <0> (weight: 9), <3> (weight: 4).\nNode <5> is connected to nodes <6> (weight: 6), <2> (weight: 7), <0> (weight: 8).\nNode <0> is connected to nodes <2> (weight: 6), <4> (weight: 9), <5> (weight: 8).\nNode <3> is connected to nodes <2> (weight: 7), <1> (weight: 9), <4> (weight: 4).\n\nCalculate the distance of the shortest path from node <5> to node <4>.\nAnswer:\n",
        "answer": "12",
        "type": "shortest_path"
    },
    {
        "index": 44,
        "question": "Given a directed graph:\nNode <4> is connected to node <3> (weight: 7).\nNode <3> is connected to nodes <0> (weight: 8), <4> (weight: 1).\nNode <0> is connected to nodes <4> (weight: 9), <2> (weight: 7).\nNode <2> is connected to node <0> (weight: 3).\nNode <1> is connected to nodes <4> (weight: 7), <2> (weight: 2).\n\nCalculate the distance of the shortest path from node <4> to node <3>.\nAnswer:\n",
        "answer": "7",
        "type": "shortest_path"
    },
    {
        "index": 45,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1> (weight: 3), <4> (weight: 9), <5> (weight: 8), <2> (weight: 1), <3> (weight: 8).\nNode <1> is connected to nodes <0> (weight: 3), <4> (weight: 10), <5> (weight: 5), <2> (weight: 6), <3> (weight: 1).\nNode <4> is connected to nodes <0> (weight: 9), <1> (weight: 10), <5> (weight: 3), <2> (weight: 1).\nNode <5> is connected to nodes <0> (weight: 8), <1> (weight: 5), <4> (weight: 3), <2> (weight: 7).\nNode <2> is connected to nodes <0> (weight: 1), <1> (weight: 6), <4> (weight: 1), <5> (weight: 7), <3> (weight: 4).\nNode <3> is connected to nodes <0> (weight: 8), <1> (weight: 1), <2> (weight: 4).\n\nCalculate the distance of the shortest path from node <2> to node <4>.\nAnswer:\n",
        "answer": "1",
        "type": "shortest_path"
    },
    {
        "index": 46,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4> (weight: 3), <0> (weight: 2).\nNode <4> is connected to nodes <2> (weight: 3), <3> (weight: 9), <1> (weight: 9).\nNode <0> is connected to nodes <2> (weight: 2), <5> (weight: 2).\nNode <3> is connected to node <4> (weight: 9).\nNode <1> is connected to node <4> (weight: 9).\nNode <5> is connected to node <0> (weight: 2).\n\nCalculate the distance of the shortest path from node <3> to node <1>.\nAnswer:\n",
        "answer": "18",
        "type": "shortest_path"
    },
    {
        "index": 47,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <6> (weight: 5), <3> (weight: 4), <5> (weight: 5), <0> (weight: 10).\nNode <6> is connected to nodes <4> (weight: 3), <1> (weight: 9).\nNode <3> is connected to nodes <5> (weight: 3), <1> (weight: 10), <2> (weight: 8), <6> (weight: 6).\nNode <5> is connected to nodes <0> (weight: 5), <4> (weight: 3).\nNode <0> is connected to nodes <1> (weight: 6), <2> (weight: 4), <3> (weight: 6), <5> (weight: 5).\nNode <4> is connected to node <0> (weight: 4).\nNode <1> is connected to nodes <2> (weight: 3), <3> (weight: 9).\n\nCalculate the distance of the shortest path from node <6> to node <1>.\nAnswer:\n",
        "answer": "9",
        "type": "shortest_path"
    },
    {
        "index": 48,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2> (weight: 6), <5> (weight: 4), <3> (weight: 5), <1> (weight: 7), <4> (weight: 3).\nNode <2> is connected to nodes <0> (weight: 6), <5> (weight: 9), <3> (weight: 8), <1> (weight: 1), <4> (weight: 1).\nNode <5> is connected to nodes <0> (weight: 4), <2> (weight: 9), <3> (weight: 8), <1> (weight: 9), <4> (weight: 6).\nNode <3> is connected to nodes <0> (weight: 5), <2> (weight: 8), <5> (weight: 8), <4> (weight: 1).\nNode <1> is connected to nodes <0> (weight: 7), <2> (weight: 1), <5> (weight: 9).\nNode <4> is connected to nodes <0> (weight: 3), <2> (weight: 1), <5> (weight: 6), <3> (weight: 1).\n\nCalculate the distance of the shortest path from node <1> to node <4>.\nAnswer:\n",
        "answer": "2",
        "type": "shortest_path"
    },
    {
        "index": 49,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <2> (weight: 6), <1> (weight: 4).\nNode <2> is connected to nodes <6> (weight: 6), <5> (weight: 5).\nNode <1> is connected to nodes <6> (weight: 4), <0> (weight: 3), <4> (weight: 9), <5> (weight: 7).\nNode <5> is connected to nodes <2> (weight: 5), <1> (weight: 7).\nNode <0> is connected to node <1> (weight: 3).\nNode <4> is connected to nodes <1> (weight: 9), <3> (weight: 4).\nNode <3> is connected to node <4> (weight: 4).\n\nCalculate the distance of the shortest path from node <5> to node <1>.\nAnswer:\n",
        "answer": "7",
        "type": "shortest_path"
    },
    {
        "index": 50,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0> (weight: 7), <2> (weight: 2), <1> (weight: 8).\nNode <0> is connected to nodes <4> (weight: 7), <3> (weight: 2).\nNode <2> is connected to node <4> (weight: 2).\nNode <1> is connected to node <4> (weight: 8).\nNode <3> is connected to node <0> (weight: 2).\n\nCalculate the distance of the shortest path from node <2> to node <3>.\nAnswer:\n",
        "answer": "11",
        "type": "shortest_path"
    },
    {
        "index": 51,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <6> (weight: 9), <1> (weight: 10), <2> (weight: 4), <0> (weight: 2), <4> (weight: 10), <5> (weight: 6).\nNode <6> is connected to nodes <3> (weight: 9), <4> (weight: 6).\nNode <1> is connected to nodes <3> (weight: 10), <2> (weight: 7), <0> (weight: 10), <4> (weight: 3), <5> (weight: 4).\nNode <2> is connected to nodes <3> (weight: 4), <1> (weight: 7), <0> (weight: 2), <4> (weight: 5), <5> (weight: 4).\nNode <0> is connected to nodes <3> (weight: 2), <1> (weight: 10), <2> (weight: 2).\nNode <4> is connected to nodes <3> (weight: 10), <6> (weight: 6), <1> (weight: 3), <2> (weight: 5), <5> (weight: 2).\nNode <5> is connected to nodes <3> (weight: 6), <1> (weight: 4), <2> (weight: 4), <4> (weight: 2).\n\nCalculate the distance of the shortest path from node <2> to node <0>.\nAnswer:\n",
        "answer": "2",
        "type": "shortest_path"
    },
    {
        "index": 52,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1> (weight: 6), <2> (weight: 2).\nNode <1> is connected to nodes <2> (weight: 3), <0> (weight: 4).\nNode <2> is connected to node <0> (weight: 8).\nNode <3> is connected to nodes <4> (weight: 1), <2> (weight: 2).\nNode <4> is connected to nodes <0> (weight: 8), <1> (weight: 4).\n\nCalculate the distance of the shortest path from node <0> to node <1>.\nAnswer:\n",
        "answer": "6",
        "type": "shortest_path"
    },
    {
        "index": 53,
        "question": "Given a directed graph:\nNode <3> is connected to node <1> (weight: 2).\nNode <1> is connected to nodes <6> (weight: 1), <4> (weight: 3).\nNode <6> is connected to nodes <0> (weight: 10), <4> (weight: 7), <2> (weight: 2), <1> (weight: 2).\nNode <4> is connected to nodes <2> (weight: 5), <6> (weight: 4), <0> (weight: 10).\nNode <0> is connected to node <2> (weight: 8).\nNode <2> is connected to nodes <3> (weight: 7), <6> (weight: 1), <4> (weight: 6), <5> (weight: 9).\nNode <5> is connected to nodes <2> (weight: 3), <6> (weight: 9), <0> (weight: 8).\n\nCalculate the distance of the shortest path from node <4> to node <6>.\nAnswer:\n",
        "answer": "4",
        "type": "shortest_path"
    },
    {
        "index": 54,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2> (weight: 1), <5> (weight: 1), <3> (weight: 8), <0> (weight: 8), <4> (weight: 3).\nNode <2> is connected to node <1> (weight: 1).\nNode <5> is connected to node <1> (weight: 1).\nNode <3> is connected to node <1> (weight: 8).\nNode <0> is connected to node <1> (weight: 8).\nNode <4> is connected to node <1> (weight: 3).\n\nCalculate the distance of the shortest path from node <3> to node <0>.\nAnswer:\n",
        "answer": "16",
        "type": "shortest_path"
    },
    {
        "index": 55,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3> (weight: 10), <4> (weight: 4).\nNode <3> is connected to nodes <1> (weight: 10), <6> (weight: 1), <2> (weight: 10), <5> (weight: 1).\nNode <4> is connected to node <1> (weight: 4).\nNode <6> is connected to nodes <3> (weight: 1), <5> (weight: 10).\nNode <2> is connected to nodes <3> (weight: 10), <0> (weight: 4).\nNode <5> is connected to nodes <3> (weight: 1), <6> (weight: 10).\nNode <0> is connected to node <2> (weight: 4).\n\nCalculate the distance of the shortest path from node <4> to node <3>.\nAnswer:\n",
        "answer": "14",
        "type": "shortest_path"
    },
    {
        "index": 56,
        "question": "Given a directed graph:\nNode <3> is connected to node <4> (weight: 1).\nNode <4> is connected to node <2> (weight: 2).\nNode <2> is connected to nodes <4> (weight: 7), <0> (weight: 2).\nNode <1> is connected to nodes <4> (weight: 2), <0> (weight: 3), <3> (weight: 4).\nNode <0> is connected to node <2> (weight: 5).\nNode <5> is connected to nodes <0> (weight: 9), <3> (weight: 3), <2> (weight: 4), <4> (weight: 9).\n\nCalculate the distance of the shortest path from node <3> to node <0>.\nAnswer:\n",
        "answer": "5",
        "type": "shortest_path"
    },
    {
        "index": 57,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4> (weight: 1), <1> (weight: 10).\nNode <4> is connected to nodes <2> (weight: 7), <3> (weight: 3).\nNode <1> is connected to nodes <2> (weight: 5), <0> (weight: 8).\nNode <2> is connected to nodes <3> (weight: 4), <4> (weight: 4).\nNode <0> is connected to nodes <3> (weight: 2), <4> (weight: 6), <2> (weight: 10).\n\nCalculate the distance of the shortest path from node <0> to node <4>.\nAnswer:\n",
        "answer": "3",
        "type": "shortest_path"
    },
    {
        "index": 58,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3> (weight: 2), <4> (weight: 2).\nNode <3> is connected to node <2> (weight: 2).\nNode <4> is connected to nodes <2> (weight: 2), <1> (weight: 8), <0> (weight: 10).\nNode <1> is connected to node <4> (weight: 8).\nNode <0> is connected to node <4> (weight: 10).\n\nCalculate the distance of the shortest path from node <2> to node <0>.\nAnswer:\n",
        "answer": "12",
        "type": "shortest_path"
    },
    {
        "index": 59,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4> (weight: 3), <1> (weight: 8), <0> (weight: 9).\nNode <4> is connected to node <3> (weight: 8).\nNode <1> is connected to nodes <0> (weight: 7), <2> (weight: 8).\nNode <0> is connected to nodes <3> (weight: 8), <4> (weight: 6), <1> (weight: 3).\nNode <2> is connected to nodes <4> (weight: 4), <0> (weight: 5).\n\nCalculate the distance of the shortest path from node <1> to node <3>.\nAnswer:\n",
        "answer": "15",
        "type": "shortest_path"
    },
    {
        "index": 60,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3> (weight: 10), <4> (weight: 8), <1> (weight: 2).\nNode <3> is connected to node <2> (weight: 10).\nNode <4> is connected to node <2> (weight: 8).\nNode <1> is connected to nodes <2> (weight: 2), <0> (weight: 8), <5> (weight: 4).\nNode <0> is connected to node <1> (weight: 8).\nNode <5> is connected to node <1> (weight: 4).\n\nCalculate the distance of the shortest path from node <1> to node <3>.\nAnswer:\n",
        "answer": "12",
        "type": "shortest_path"
    },
    {
        "index": 61,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <1> (weight: 8), <0> (weight: 5).\nNode <1> is connected to nodes <3> (weight: 7), <0> (weight: 5), <5> (weight: 8), <2> (weight: 2).\nNode <0> is connected to node <3> (weight: 2).\nNode <2> is connected to nodes <1> (weight: 6), <4> (weight: 4), <3> (weight: 4), <0> (weight: 2).\nNode <4> is connected to nodes <3> (weight: 3), <0> (weight: 5), <2> (weight: 8), <1> (weight: 1).\n\nCalculate the distance of the shortest path from node <5> to node <4>.\nAnswer:\n",
        "answer": "14",
        "type": "shortest_path"
    },
    {
        "index": 62,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5> (weight: 3), <4> (weight: 3), <2> (weight: 10).\nNode <5> is connected to node <1> (weight: 3).\nNode <4> is connected to nodes <1> (weight: 3), <0> (weight: 9).\nNode <2> is connected to node <1> (weight: 10).\nNode <0> is connected to nodes <4> (weight: 9), <3> (weight: 1).\nNode <3> is connected to node <0> (weight: 1).\n\nCalculate the distance of the shortest path from node <2> to node <0>.\nAnswer:\n",
        "answer": "22",
        "type": "shortest_path"
    },
    {
        "index": 63,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5> (weight: 7), <1> (weight: 8), <0> (weight: 6), <3> (weight: 7).\nNode <5> is connected to nodes <1> (weight: 4), <0> (weight: 6).\nNode <1> is connected to nodes <0> (weight: 8), <6> (weight: 6).\nNode <0> is connected to nodes <3> (weight: 9), <4> (weight: 2), <2> (weight: 8), <6> (weight: 4), <1> (weight: 6).\nNode <3> is connected to nodes <2> (weight: 10), <6> (weight: 5), <5> (weight: 10), <0> (weight: 2).\nNode <6> is connected to nodes <5> (weight: 1), <1> (weight: 9), <0> (weight: 8), <2> (weight: 2).\n\nCalculate the distance of the shortest path from node <3> to node <6>.\nAnswer:\n",
        "answer": "5",
        "type": "shortest_path"
    },
    {
        "index": 64,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3> (weight: 8), <4> (weight: 10).\nNode <3> is connected to nodes <1> (weight: 8), <0> (weight: 7).\nNode <4> is connected to nodes <1> (weight: 10), <2> (weight: 2).\nNode <0> is connected to nodes <3> (weight: 7), <2> (weight: 5).\nNode <2> is connected to nodes <4> (weight: 2), <0> (weight: 5).\n\nCalculate the distance of the shortest path from node <0> to node <1>.\nAnswer:\n",
        "answer": "15",
        "type": "shortest_path"
    },
    {
        "index": 65,
        "question": "Given an undirected graph:\nNode <3> is connected to node <2> (weight: 3).\nNode <2> is connected to nodes <3> (weight: 3), <0> (weight: 3), <1> (weight: 5).\nNode <0> is connected to node <2> (weight: 3).\nNode <1> is connected to nodes <2> (weight: 5), <4> (weight: 9).\nNode <4> is connected to node <1> (weight: 9).\n\nCalculate the distance of the shortest path from node <1> to node <4>.\nAnswer:\n",
        "answer": "9",
        "type": "shortest_path"
    },
    {
        "index": 66,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0> (weight: 3), <3> (weight: 4).\nNode <0> is connected to nodes <2> (weight: 3), <5> (weight: 5), <1> (weight: 5).\nNode <3> is connected to nodes <4> (weight: 10), <0> (weight: 7), <5> (weight: 8).\nNode <2> is connected to nodes <5> (weight: 1), <1> (weight: 10), <3> (weight: 9).\nNode <5> is connected to nodes <1> (weight: 5), <3> (weight: 10), <4> (weight: 5), <0> (weight: 4).\nNode <1> is connected to node <3> (weight: 9).\n\nCalculate the distance of the shortest path from node <1> to node <2>.\nAnswer:\n",
        "answer": "19",
        "type": "shortest_path"
    },
    {
        "index": 67,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <6> (weight: 8), <5> (weight: 10), <1> (weight: 10), <3> (weight: 9), <4> (weight: 3).\nNode <6> is connected to nodes <2> (weight: 8), <3> (weight: 10), <1> (weight: 6), <0> (weight: 3), <4> (weight: 5).\nNode <5> is connected to node <2> (weight: 10).\nNode <1> is connected to nodes <2> (weight: 10), <6> (weight: 6), <0> (weight: 3).\nNode <3> is connected to nodes <2> (weight: 9), <6> (weight: 10).\nNode <4> is connected to nodes <2> (weight: 3), <6> (weight: 5).\nNode <0> is connected to nodes <6> (weight: 3), <1> (weight: 3).\n\nCalculate the distance of the shortest path from node <0> to node <4>.\nAnswer:\n",
        "answer": "8",
        "type": "shortest_path"
    },
    {
        "index": 68,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3> (weight: 1), <1> (weight: 5).\nNode <3> is connected to node <2> (weight: 1).\nNode <1> is connected to nodes <2> (weight: 5), <4> (weight: 3), <0> (weight: 6).\nNode <4> is connected to node <1> (weight: 3).\nNode <0> is connected to node <1> (weight: 6).\n\nCalculate the distance of the shortest path from node <2> to node <4>.\nAnswer:\n",
        "answer": "8",
        "type": "shortest_path"
    },
    {
        "index": 69,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2> (weight: 7), <6> (weight: 8).\nNode <2> is connected to nodes <6> (weight: 5), <0> (weight: 4), <5> (weight: 2).\nNode <5> is connected to nodes <4> (weight: 4), <6> (weight: 8), <3> (weight: 7).\nNode <1> is connected to nodes <5> (weight: 4), <2> (weight: 9), <4> (weight: 3), <3> (weight: 3).\nNode <3> is connected to node <6> (weight: 2).\n\nCalculate the distance of the shortest path from node <1> to node <2>.\nAnswer:\n",
        "answer": "9",
        "type": "shortest_path"
    },
    {
        "index": 70,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0> (weight: 7), <1> (weight: 5).\nNode <0> is connected to node <4> (weight: 7).\nNode <1> is connected to nodes <4> (weight: 5), <3> (weight: 8), <2> (weight: 7).\nNode <3> is connected to node <1> (weight: 8).\nNode <2> is connected to node <1> (weight: 7).\n\nCalculate the distance of the shortest path from node <3> to node <1>.\nAnswer:\n",
        "answer": "8",
        "type": "shortest_path"
    },
    {
        "index": 71,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0> (weight: 2), <1> (weight: 1), <4> (weight: 2).\nNode <0> is connected to node <3> (weight: 2).\nNode <1> is connected to nodes <3> (weight: 1), <2> (weight: 5), <6> (weight: 3).\nNode <4> is connected to node <3> (weight: 2).\nNode <2> is connected to node <1> (weight: 5).\nNode <6> is connected to nodes <1> (weight: 3), <5> (weight: 2).\nNode <5> is connected to node <6> (weight: 2).\n\nCalculate the distance of the shortest path from node <4> to node <2>.\nAnswer:\n",
        "answer": "8",
        "type": "shortest_path"
    },
    {
        "index": 72,
        "question": "Given a directed graph:\nNode <4> is connected to node <5> (weight: 1).\nNode <5> is connected to nodes <1> (weight: 7), <2> (weight: 1), <0> (weight: 7).\nNode <1> is connected to nodes <2> (weight: 4), <4> (weight: 3), <5> (weight: 4).\nNode <2> is connected to nodes <4> (weight: 2), <6> (weight: 2), <1> (weight: 8).\nNode <0> is connected to nodes <1> (weight: 6), <2> (weight: 1), <3> (weight: 3), <4> (weight: 9).\nNode <6> is connected to node <4> (weight: 7).\nNode <3> is connected to nodes <4> (weight: 4), <6> (weight: 8).\n\nCalculate the distance of the shortest path from node <5> to node <3>.\nAnswer:\n",
        "answer": "10",
        "type": "shortest_path"
    },
    {
        "index": 73,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1> (weight: 1), <4> (weight: 10), <2> (weight: 5).\nNode <1> is connected to nodes <3> (weight: 1), <4> (weight: 10).\nNode <4> is connected to nodes <3> (weight: 10), <1> (weight: 10).\nNode <2> is connected to nodes <3> (weight: 5), <0> (weight: 1).\nNode <0> is connected to node <2> (weight: 1).\n\nCalculate the distance of the shortest path from node <2> to node <1>.\nAnswer:\n",
        "answer": "6",
        "type": "shortest_path"
    },
    {
        "index": 74,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1> (weight: 9), <3> (weight: 10).\nNode <1> is connected to nodes <4> (weight: 9), <0> (weight: 5).\nNode <3> is connected to nodes <4> (weight: 10), <2> (weight: 9).\nNode <0> is connected to nodes <1> (weight: 5), <5> (weight: 6), <2> (weight: 4), <6> (weight: 3).\nNode <2> is connected to nodes <3> (weight: 9), <0> (weight: 4).\nNode <5> is connected to node <0> (weight: 6).\nNode <6> is connected to node <0> (weight: 3).\n\nCalculate the distance of the shortest path from node <2> to node <0>.\nAnswer:\n",
        "answer": "4",
        "type": "shortest_path"
    },
    {
        "index": 75,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <5> (weight: 4), <6> (weight: 9).\nNode <5> is connected to node <6> (weight: 6).\nNode <6> is connected to node <3> (weight: 2).\nNode <0> is connected to nodes <3> (weight: 4), <5> (weight: 6).\nNode <1> is connected to nodes <2> (weight: 1), <0> (weight: 9).\nNode <2> is connected to nodes <0> (weight: 4), <1> (weight: 2), <5> (weight: 4), <6> (weight: 4).\n\nCalculate the distance of the shortest path from node <1> to node <6>.\nAnswer:\n",
        "answer": "5",
        "type": "shortest_path"
    },
    {
        "index": 76,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <6> (weight: 9), <5> (weight: 9).\nNode <6> is connected to nodes <0> (weight: 6), <2> (weight: 4), <1> (weight: 5).\nNode <5> is connected to nodes <1> (weight: 5), <0> (weight: 5).\nNode <0> is connected to nodes <2> (weight: 2), <1> (weight: 7).\nNode <2> is connected to nodes <1> (weight: 3), <0> (weight: 4).\nNode <1> is connected to nodes <3> (weight: 3), <6> (weight: 6), <5> (weight: 7), <2> (weight: 1).\nNode <3> is connected to node <0> (weight: 7).\n\nCalculate the distance of the shortest path from node <1> to node <5>.\nAnswer:\n",
        "answer": "7",
        "type": "shortest_path"
    },
    {
        "index": 77,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5> (weight: 3), <2> (weight: 9), <4> (weight: 9).\nNode <5> is connected to node <0> (weight: 3).\nNode <2> is connected to nodes <0> (weight: 9), <3> (weight: 7).\nNode <4> is connected to nodes <0> (weight: 9), <1> (weight: 5).\nNode <3> is connected to nodes <2> (weight: 7), <1> (weight: 7).\nNode <1> is connected to nodes <4> (weight: 5), <3> (weight: 7).\n\nCalculate the distance of the shortest path from node <0> to node <4>.\nAnswer:\n",
        "answer": "9",
        "type": "shortest_path"
    },
    {
        "index": 78,
        "question": "Given an undirected graph:\nNode <0> is connected to node <4> (weight: 4).\nNode <4> is connected to nodes <0> (weight: 4), <3> (weight: 1).\nNode <3> is connected to nodes <4> (weight: 1), <1> (weight: 4).\nNode <1> is connected to nodes <3> (weight: 4), <2> (weight: 10).\nNode <2> is connected to node <1> (weight: 10).\n\nCalculate the distance of the shortest path from node <4> to node <2>.\nAnswer:\n",
        "answer": "15",
        "type": "shortest_path"
    },
    {
        "index": 79,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5> (weight: 4), <3> (weight: 5), <6> (weight: 8), <2> (weight: 9), <0> (weight: 9).\nNode <5> is connected to nodes <1> (weight: 4), <6> (weight: 7).\nNode <3> is connected to nodes <1> (weight: 5), <0> (weight: 10), <4> (weight: 5).\nNode <6> is connected to nodes <1> (weight: 8), <5> (weight: 7), <2> (weight: 8).\nNode <2> is connected to nodes <1> (weight: 9), <6> (weight: 8), <4> (weight: 5).\nNode <0> is connected to nodes <1> (weight: 9), <3> (weight: 10).\nNode <4> is connected to nodes <3> (weight: 5), <2> (weight: 5).\n\nCalculate the distance of the shortest path from node <1> to node <4>.\nAnswer:\n",
        "answer": "10",
        "type": "shortest_path"
    },
    {
        "index": 80,
        "question": "Given a directed graph:\nNode <6> is connected to node <0> (weight: 7).\nNode <0> is connected to nodes <2> (weight: 2), <3> (weight: 3), <1> (weight: 5), <6> (weight: 5).\nNode <2> is connected to node <0> (weight: 5).\nNode <3> is connected to nodes <0> (weight: 2), <4> (weight: 2), <2> (weight: 1).\nNode <1> is connected to node <2> (weight: 8).\nNode <5> is connected to nodes <4> (weight: 3), <2> (weight: 10), <6> (weight: 6), <0> (weight: 5).\n\nCalculate the distance of the shortest path from node <2> to node <3>.\nAnswer:\n",
        "answer": "8",
        "type": "shortest_path"
    },
    {
        "index": 81,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1> (weight: 2), <3> (weight: 7), <4> (weight: 2), <2> (weight: 6).\nNode <1> is connected to node <0> (weight: 2).\nNode <3> is connected to node <0> (weight: 7).\nNode <4> is connected to node <0> (weight: 2).\nNode <2> is connected to node <0> (weight: 6).\n\nCalculate the distance of the shortest path from node <1> to node <3>.\nAnswer:\n",
        "answer": "9",
        "type": "shortest_path"
    },
    {
        "index": 82,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <2> (weight: 3), <3> (weight: 5), <0> (weight: 7).\nNode <2> is connected to nodes <5> (weight: 3), <3> (weight: 6), <0> (weight: 7), <6> (weight: 9), <4> (weight: 1).\nNode <3> is connected to nodes <5> (weight: 5), <2> (weight: 6), <0> (weight: 6), <1> (weight: 9), <4> (weight: 7).\nNode <0> is connected to nodes <5> (weight: 7), <2> (weight: 7), <3> (weight: 6), <6> (weight: 8).\nNode <6> is connected to nodes <2> (weight: 9), <0> (weight: 8), <1> (weight: 8), <4> (weight: 1).\nNode <4> is connected to nodes <2> (weight: 1), <3> (weight: 7), <6> (weight: 1), <1> (weight: 2).\nNode <1> is connected to nodes <3> (weight: 9), <6> (weight: 8), <4> (weight: 2).\n\nCalculate the distance of the shortest path from node <6> to node <4>.\nAnswer:\n",
        "answer": "1",
        "type": "shortest_path"
    },
    {
        "index": 83,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1> (weight: 1), <4> (weight: 3).\nNode <1> is connected to nodes <5> (weight: 1), <2> (weight: 2), <0> (weight: 10).\nNode <4> is connected to nodes <5> (weight: 3), <3> (weight: 3).\nNode <2> is connected to node <1> (weight: 2).\nNode <0> is connected to nodes <1> (weight: 10), <3> (weight: 6).\nNode <3> is connected to nodes <4> (weight: 3), <0> (weight: 6).\n\nCalculate the distance of the shortest path from node <5> to node <1>.\nAnswer:\n",
        "answer": "1",
        "type": "shortest_path"
    },
    {
        "index": 84,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1> (weight: 2), <5> (weight: 1).\nNode <1> is connected to nodes <3> (weight: 2), <5> (weight: 2).\nNode <5> is connected to nodes <3> (weight: 1), <1> (weight: 2), <2> (weight: 4).\nNode <2> is connected to nodes <5> (weight: 4), <4> (weight: 9).\nNode <0> is connected to node <4> (weight: 1).\nNode <4> is connected to nodes <0> (weight: 1), <2> (weight: 9).\n\nCalculate the distance of the shortest path from node <1> to node <5>.\nAnswer:\n",
        "answer": "2",
        "type": "shortest_path"
    },
    {
        "index": 85,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <6> (weight: 2), <3> (weight: 5), <0> (weight: 3).\nNode <6> is connected to nodes <5> (weight: 2), <4> (weight: 10), <0> (weight: 7), <2> (weight: 10).\nNode <3> is connected to node <5> (weight: 5).\nNode <0> is connected to nodes <5> (weight: 3), <6> (weight: 7), <1> (weight: 2).\nNode <4> is connected to node <6> (weight: 10).\nNode <2> is connected to node <6> (weight: 10).\nNode <1> is connected to node <0> (weight: 2).\n\nCalculate the distance of the shortest path from node <4> to node <5>.\nAnswer:\n",
        "answer": "12",
        "type": "shortest_path"
    },
    {
        "index": 86,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1> (weight: 9), <4> (weight: 8), <0> (weight: 10).\nNode <1> is connected to node <4> (weight: 5).\nNode <4> is connected to nodes <0> (weight: 2), <3> (weight: 5), <1> (weight: 9).\nNode <0> is connected to nodes <3> (weight: 1), <2> (weight: 1).\nNode <2> is connected to nodes <0> (weight: 10), <1> (weight: 1).\n\nCalculate the distance of the shortest path from node <1> to node <0>.\nAnswer:\n",
        "answer": "7",
        "type": "shortest_path"
    },
    {
        "index": 87,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <3> (weight: 7), <4> (weight: 1), <0> (weight: 5).\nNode <4> is connected to node <0> (weight: 2).\nNode <0> is connected to nodes <1> (weight: 6), <3> (weight: 5), <4> (weight: 2).\nNode <2> is connected to nodes <3> (weight: 5), <4> (weight: 5), <6> (weight: 6), <5> (weight: 1).\nNode <6> is connected to nodes <5> (weight: 3), <4> (weight: 4).\n\nCalculate the distance of the shortest path from node <0> to node <1>.\nAnswer:\n",
        "answer": "6",
        "type": "shortest_path"
    },
    {
        "index": 88,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1> (weight: 6), <3> (weight: 4), <4> (weight: 8).\nNode <1> is connected to nodes <0> (weight: 6), <5> (weight: 3), <2> (weight: 5), <3> (weight: 8), <4> (weight: 2).\nNode <3> is connected to nodes <0> (weight: 4), <1> (weight: 8), <5> (weight: 4), <2> (weight: 2), <4> (weight: 1).\nNode <4> is connected to nodes <0> (weight: 8), <1> (weight: 2), <3> (weight: 1), <5> (weight: 1), <2> (weight: 4).\nNode <5> is connected to nodes <1> (weight: 3), <3> (weight: 4), <4> (weight: 1).\nNode <2> is connected to nodes <1> (weight: 5), <3> (weight: 2), <4> (weight: 4).\n\nCalculate the distance of the shortest path from node <2> to node <4>.\nAnswer:\n",
        "answer": "3",
        "type": "shortest_path"
    },
    {
        "index": 89,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0> (weight: 10), <2> (weight: 2), <4> (weight: 10).\nNode <0> is connected to nodes <1> (weight: 10), <3> (weight: 2).\nNode <2> is connected to node <1> (weight: 2).\nNode <4> is connected to node <1> (weight: 10).\nNode <3> is connected to node <0> (weight: 2).\n\nCalculate the distance of the shortest path from node <2> to node <4>.\nAnswer:\n",
        "answer": "12",
        "type": "shortest_path"
    },
    {
        "index": 90,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3> (weight: 8), <2> (weight: 4).\nNode <3> is connected to nodes <4> (weight: 8), <1> (weight: 4).\nNode <2> is connected to nodes <4> (weight: 4), <0> (weight: 8).\nNode <1> is connected to nodes <3> (weight: 4), <5> (weight: 7).\nNode <0> is connected to nodes <2> (weight: 8), <6> (weight: 8).\nNode <5> is connected to nodes <1> (weight: 7), <6> (weight: 7).\nNode <6> is connected to nodes <0> (weight: 8), <5> (weight: 7).\n\nCalculate the distance of the shortest path from node <3> to node <5>.\nAnswer:\n",
        "answer": "11",
        "type": "shortest_path"
    },
    {
        "index": 91,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2> (weight: 10), <5> (weight: 10).\nNode <2> is connected to nodes <1> (weight: 10), <4> (weight: 7), <0> (weight: 2), <5> (weight: 7).\nNode <5> is connected to nodes <1> (weight: 10), <2> (weight: 7), <4> (weight: 4), <0> (weight: 10), <3> (weight: 4).\nNode <4> is connected to nodes <2> (weight: 7), <5> (weight: 4), <0> (weight: 3), <3> (weight: 3).\nNode <0> is connected to nodes <2> (weight: 2), <5> (weight: 10), <4> (weight: 3), <3> (weight: 1).\nNode <3> is connected to nodes <5> (weight: 4), <4> (weight: 3), <0> (weight: 1).\n\nCalculate the distance of the shortest path from node <5> to node <4>.\nAnswer:\n",
        "answer": "4",
        "type": "shortest_path"
    },
    {
        "index": 92,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2> (weight: 2), <1> (weight: 6), <3> (weight: 5).\nNode <2> is connected to nodes <1> (weight: 1), <3> (weight: 5), <0> (weight: 10).\nNode <1> is connected to nodes <3> (weight: 9), <2> (weight: 9).\nNode <3> is connected to nodes <0> (weight: 1), <5> (weight: 9), <2> (weight: 1), <4> (weight: 5).\nNode <5> is connected to node <0> (weight: 7).\nNode <4> is connected to nodes <3> (weight: 2), <2> (weight: 10), <1> (weight: 2).\n\nCalculate the distance of the shortest path from node <1> to node <3>.\nAnswer:\n",
        "answer": "9",
        "type": "shortest_path"
    },
    {
        "index": 93,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2> (weight: 2), <3> (weight: 9), <1> (weight: 4).\nNode <2> is connected to nodes <0> (weight: 2), <3> (weight: 10), <4> (weight: 1), <1> (weight: 4).\nNode <3> is connected to nodes <0> (weight: 9), <2> (weight: 10), <5> (weight: 1), <4> (weight: 10), <1> (weight: 9).\nNode <1> is connected to nodes <0> (weight: 4), <2> (weight: 4), <3> (weight: 9), <4> (weight: 10).\nNode <4> is connected to nodes <2> (weight: 1), <3> (weight: 10), <1> (weight: 10), <5> (weight: 3).\nNode <5> is connected to nodes <3> (weight: 1), <4> (weight: 3).\n\nCalculate the distance of the shortest path from node <0> to node <5>.\nAnswer:\n",
        "answer": "6",
        "type": "shortest_path"
    },
    {
        "index": 94,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4> (weight: 6), <2> (weight: 1).\nNode <4> is connected to nodes <3> (weight: 6), <1> (weight: 3).\nNode <2> is connected to node <3> (weight: 1).\nNode <1> is connected to nodes <4> (weight: 3), <0> (weight: 9).\nNode <0> is connected to node <1> (weight: 9).\n\nCalculate the distance of the shortest path from node <2> to node <1>.\nAnswer:\n",
        "answer": "10",
        "type": "shortest_path"
    },
    {
        "index": 95,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <4> (weight: 6), <0> (weight: 7).\nNode <4> is connected to node <6> (weight: 6).\nNode <0> is connected to nodes <6> (weight: 7), <3> (weight: 6).\nNode <3> is connected to nodes <0> (weight: 6), <1> (weight: 3), <5> (weight: 10).\nNode <1> is connected to nodes <3> (weight: 3), <2> (weight: 10).\nNode <5> is connected to nodes <3> (weight: 10), <2> (weight: 1).\nNode <2> is connected to nodes <1> (weight: 10), <5> (weight: 1).\n\nCalculate the distance of the shortest path from node <1> to node <6>.\nAnswer:\n",
        "answer": "16",
        "type": "shortest_path"
    },
    {
        "index": 96,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2> (weight: 2), <1> (weight: 2), <0> (weight: 1), <3> (weight: 8).\nNode <2> is connected to node <4> (weight: 2).\nNode <1> is connected to node <4> (weight: 2).\nNode <0> is connected to node <4> (weight: 1).\nNode <3> is connected to node <4> (weight: 8).\n\nCalculate the distance of the shortest path from node <4> to node <0>.\nAnswer:\n",
        "answer": "1",
        "type": "shortest_path"
    },
    {
        "index": 97,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0> (weight: 4), <1> (weight: 6), <5> (weight: 2), <4> (weight: 9).\nNode <0> is connected to nodes <3> (weight: 4), <1> (weight: 6), <5> (weight: 9), <4> (weight: 8), <2> (weight: 3).\nNode <1> is connected to nodes <3> (weight: 6), <0> (weight: 6), <5> (weight: 4), <4> (weight: 10), <2> (weight: 9).\nNode <5> is connected to nodes <3> (weight: 2), <0> (weight: 9), <1> (weight: 4), <4> (weight: 1).\nNode <4> is connected to nodes <3> (weight: 9), <0> (weight: 8), <1> (weight: 10), <5> (weight: 1).\nNode <2> is connected to nodes <0> (weight: 3), <1> (weight: 9).\n\nCalculate the distance of the shortest path from node <2> to node <0>.\nAnswer:\n",
        "answer": "3",
        "type": "shortest_path"
    },
    {
        "index": 98,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <6> (weight: 4), <0> (weight: 1), <4> (weight: 2).\nNode <6> is connected to node <5> (weight: 5).\nNode <0> is connected to nodes <4> (weight: 7), <5> (weight: 8).\nNode <4> is connected to node <1> (weight: 6).\nNode <5> is connected to nodes <3> (weight: 1), <2> (weight: 1).\nNode <1> is connected to node <2> (weight: 3).\nNode <3> is connected to nodes <4> (weight: 6), <6> (weight: 4), <1> (weight: 6).\n\nCalculate the distance of the shortest path from node <5> to node <3>.\nAnswer:\n",
        "answer": "1",
        "type": "shortest_path"
    },
    {
        "index": 99,
        "question": "Given a directed graph:\nNode <4> is connected to node <2> (weight: 10).\nNode <2> is connected to nodes <4> (weight: 2), <0> (weight: 8), <3> (weight: 7).\nNode <0> is connected to nodes <5> (weight: 8), <2> (weight: 1), <1> (weight: 9), <4> (weight: 4).\nNode <3> is connected to nodes <2> (weight: 4), <4> (weight: 5), <5> (weight: 10).\nNode <5> is connected to nodes <2> (weight: 3), <1> (weight: 3), <4> (weight: 3), <0> (weight: 9).\nNode <1> is connected to node <5> (weight: 9).\n\nCalculate the distance of the shortest path from node <5> to node <2>.\nAnswer:\n",
        "answer": "3",
        "type": "shortest_path"
    },
    {
        "index": 100,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <5> (weight: 6), <4> (weight: 7).\nNode <5> is connected to nodes <2> (weight: 6), <3> (weight: 2).\nNode <4> is connected to nodes <2> (weight: 7), <1> (weight: 7).\nNode <3> is connected to nodes <5> (weight: 2), <6> (weight: 4).\nNode <1> is connected to nodes <4> (weight: 7), <6> (weight: 9).\nNode <6> is connected to nodes <3> (weight: 4), <0> (weight: 10), <1> (weight: 9).\nNode <0> is connected to node <6> (weight: 10).\n\nCalculate the distance of the shortest path from node <1> to node <5>.\nAnswer:\n",
        "answer": "15",
        "type": "shortest_path"
    },
    {
        "index": 101,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4> (weight: 9), <1> (weight: 2).\nNode <4> is connected to nodes <2> (weight: 9), <3> (weight: 7).\nNode <1> is connected to nodes <2> (weight: 2), <6> (weight: 2).\nNode <3> is connected to nodes <4> (weight: 7), <0> (weight: 4).\nNode <6> is connected to nodes <1> (weight: 2), <5> (weight: 6).\nNode <0> is connected to nodes <3> (weight: 4), <5> (weight: 10).\nNode <5> is connected to nodes <6> (weight: 6), <0> (weight: 10).\n\nCalculate the distance of the shortest path from node <3> to node <1>.\nAnswer:\n",
        "answer": "18",
        "type": "shortest_path"
    },
    {
        "index": 102,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3> (weight: 9), <4> (weight: 7).\nNode <3> is connected to nodes <1> (weight: 9), <0> (weight: 1), <4> (weight: 8).\nNode <4> is connected to nodes <1> (weight: 7), <3> (weight: 8).\nNode <0> is connected to nodes <3> (weight: 1), <2> (weight: 10).\nNode <2> is connected to node <0> (weight: 10).\n\nCalculate the distance of the shortest path from node <2> to node <4>.\nAnswer:\n",
        "answer": "19",
        "type": "shortest_path"
    },
    {
        "index": 103,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0> (weight: 5), <6> (weight: 3), <1> (weight: 10).\nNode <0> is connected to nodes <1> (weight: 8), <2> (weight: 8), <5> (weight: 7), <3> (weight: 2).\nNode <6> is connected to nodes <1> (weight: 9), <5> (weight: 9), <4> (weight: 5), <0> (weight: 5).\nNode <1> is connected to node <6> (weight: 2).\nNode <2> is connected to node <4> (weight: 1).\nNode <5> is connected to nodes <4> (weight: 7), <6> (weight: 10), <1> (weight: 6).\nNode <3> is connected to nodes <0> (weight: 7), <1> (weight: 2), <2> (weight: 3).\n\nCalculate the distance of the shortest path from node <0> to node <1>.\nAnswer:\n",
        "answer": "4",
        "type": "shortest_path"
    },
    {
        "index": 104,
        "question": "Given an undirected graph:\nNode <2> is connected to node <3> (weight: 8).\nNode <3> is connected to nodes <2> (weight: 8), <1> (weight: 5), <0> (weight: 6).\nNode <1> is connected to nodes <3> (weight: 5), <4> (weight: 7), <0> (weight: 1).\nNode <0> is connected to nodes <3> (weight: 6), <1> (weight: 1).\nNode <4> is connected to nodes <1> (weight: 7), <5> (weight: 5).\nNode <5> is connected to node <4> (weight: 5).\n\nCalculate the distance of the shortest path from node <5> to node <1>.\nAnswer:\n",
        "answer": "12",
        "type": "shortest_path"
    },
    {
        "index": 105,
        "question": "Given an undirected graph:\nNode <4> is connected to node <0> (weight: 5).\nNode <0> is connected to nodes <4> (weight: 5), <1> (weight: 5), <2> (weight: 1).\nNode <1> is connected to nodes <0> (weight: 5), <3> (weight: 4), <2> (weight: 10).\nNode <2> is connected to nodes <0> (weight: 1), <1> (weight: 10).\nNode <3> is connected to node <1> (weight: 4).\n\nCalculate the distance of the shortest path from node <0> to node <1>.\nAnswer:\n",
        "answer": "5",
        "type": "shortest_path"
    },
    {
        "index": 106,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0> (weight: 6), <4> (weight: 10), <5> (weight: 4).\nNode <0> is connected to nodes <3> (weight: 6), <5> (weight: 10).\nNode <4> is connected to nodes <3> (weight: 10), <5> (weight: 10).\nNode <5> is connected to nodes <3> (weight: 4), <0> (weight: 10), <4> (weight: 10), <2> (weight: 7), <6> (weight: 3), <1> (weight: 8).\nNode <2> is connected to nodes <5> (weight: 7), <1> (weight: 5).\nNode <6> is connected to nodes <5> (weight: 3), <1> (weight: 8).\nNode <1> is connected to nodes <5> (weight: 8), <2> (weight: 5), <6> (weight: 8).\n\nCalculate the distance of the shortest path from node <5> to node <6>.\nAnswer:\n",
        "answer": "3",
        "type": "shortest_path"
    },
    {
        "index": 107,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2> (weight: 10), <0> (weight: 3), <4> (weight: 6).\nNode <2> is connected to nodes <1> (weight: 10), <5> (weight: 9).\nNode <0> is connected to nodes <1> (weight: 3), <3> (weight: 2).\nNode <4> is connected to nodes <1> (weight: 6), <5> (weight: 3).\nNode <5> is connected to nodes <2> (weight: 9), <4> (weight: 3).\nNode <3> is connected to nodes <0> (weight: 2), <6> (weight: 6).\nNode <6> is connected to node <3> (weight: 6).\n\nCalculate the distance of the shortest path from node <1> to node <3>.\nAnswer:\n",
        "answer": "5",
        "type": "shortest_path"
    },
    {
        "index": 108,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0> (weight: 9), <5> (weight: 9).\nNode <0> is connected to nodes <1> (weight: 9), <4> (weight: 2), <6> (weight: 2).\nNode <5> is connected to node <1> (weight: 9).\nNode <4> is connected to nodes <0> (weight: 2), <3> (weight: 2).\nNode <6> is connected to nodes <0> (weight: 2), <2> (weight: 3).\nNode <3> is connected to nodes <4> (weight: 2), <2> (weight: 1).\nNode <2> is connected to nodes <6> (weight: 3), <3> (weight: 1).\n\nCalculate the distance of the shortest path from node <3> to node <5>.\nAnswer:\n",
        "answer": "22",
        "type": "shortest_path"
    },
    {
        "index": 109,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2> (weight: 7), <1> (weight: 1), <0> (weight: 2).\nNode <1> is connected to nodes <0> (weight: 8), <4> (weight: 7), <2> (weight: 6).\nNode <0> is connected to nodes <3> (weight: 9), <2> (weight: 9), <1> (weight: 1).\nNode <3> is connected to nodes <0> (weight: 6), <4> (weight: 7).\n\nCalculate the distance of the shortest path from node <0> to node <2>.\nAnswer:\n",
        "answer": "7",
        "type": "shortest_path"
    },
    {
        "index": 110,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2> (weight: 9), <5> (weight: 1), <6> (weight: 6), <1> (weight: 3).\nNode <2> is connected to node <3> (weight: 9).\nNode <5> is connected to nodes <3> (weight: 1), <0> (weight: 7).\nNode <6> is connected to node <3> (weight: 6).\nNode <1> is connected to node <3> (weight: 3).\nNode <0> is connected to nodes <5> (weight: 7), <4> (weight: 9).\nNode <4> is connected to node <0> (weight: 9).\n\nCalculate the distance of the shortest path from node <1> to node <3>.\nAnswer:\n",
        "answer": "3",
        "type": "shortest_path"
    },
    {
        "index": 111,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0> (weight: 10), <2> (weight: 2).\nNode <0> is connected to node <5> (weight: 10).\nNode <2> is connected to nodes <5> (weight: 2), <6> (weight: 7), <1> (weight: 7), <3> (weight: 3).\nNode <6> is connected to nodes <2> (weight: 7), <4> (weight: 2).\nNode <1> is connected to node <2> (weight: 7).\nNode <3> is connected to node <2> (weight: 3).\nNode <4> is connected to node <6> (weight: 2).\n\nCalculate the distance of the shortest path from node <3> to node <1>.\nAnswer:\n",
        "answer": "10",
        "type": "shortest_path"
    },
    {
        "index": 112,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4> (weight: 3), <1> (weight: 8), <0> (weight: 8), <3> (weight: 8).\nNode <4> is connected to nodes <5> (weight: 3), <1> (weight: 3), <2> (weight: 6).\nNode <1> is connected to nodes <5> (weight: 8), <4> (weight: 3), <3> (weight: 1), <2> (weight: 2).\nNode <0> is connected to nodes <5> (weight: 8), <6> (weight: 4), <3> (weight: 2), <2> (weight: 5).\nNode <3> is connected to nodes <5> (weight: 8), <1> (weight: 1), <0> (weight: 2), <6> (weight: 9), <2> (weight: 5).\nNode <2> is connected to nodes <4> (weight: 6), <1> (weight: 2), <0> (weight: 5), <3> (weight: 5), <6> (weight: 8).\nNode <6> is connected to nodes <0> (weight: 4), <3> (weight: 9), <2> (weight: 8).\n\nCalculate the distance of the shortest path from node <1> to node <5>.\nAnswer:\n",
        "answer": "6",
        "type": "shortest_path"
    },
    {
        "index": 113,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <0> (weight: 6), <6> (weight: 1).\nNode <0> is connected to nodes <5> (weight: 6), <4> (weight: 9), <2> (weight: 7).\nNode <6> is connected to nodes <5> (weight: 1), <3> (weight: 5).\nNode <4> is connected to nodes <0> (weight: 9), <1> (weight: 8).\nNode <2> is connected to nodes <0> (weight: 7), <3> (weight: 2).\nNode <3> is connected to nodes <6> (weight: 5), <2> (weight: 2).\nNode <1> is connected to node <4> (weight: 8).\n\nCalculate the distance of the shortest path from node <3> to node <5>.\nAnswer:\n",
        "answer": "6",
        "type": "shortest_path"
    },
    {
        "index": 114,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3> (weight: 4), <4> (weight: 1), <2> (weight: 6), <5> (weight: 6).\nNode <3> is connected to nodes <1> (weight: 4), <6> (weight: 9).\nNode <4> is connected to nodes <1> (weight: 1), <2> (weight: 9).\nNode <2> is connected to nodes <1> (weight: 6), <4> (weight: 9), <5> (weight: 5), <6> (weight: 6), <0> (weight: 2).\nNode <5> is connected to nodes <1> (weight: 6), <2> (weight: 5).\nNode <6> is connected to nodes <3> (weight: 9), <2> (weight: 6), <0> (weight: 2).\nNode <0> is connected to nodes <2> (weight: 2), <6> (weight: 2).\n\nCalculate the distance of the shortest path from node <1> to node <0>.\nAnswer:\n",
        "answer": "8",
        "type": "shortest_path"
    },
    {
        "index": 115,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4> (weight: 7), <0> (weight: 2).\nNode <4> is connected to nodes <0> (weight: 1), <2> (weight: 4).\nNode <0> is connected to nodes <2> (weight: 1), <3> (weight: 10), <5> (weight: 9).\nNode <2> is connected to nodes <4> (weight: 1), <5> (weight: 6).\nNode <3> is connected to nodes <5> (weight: 4), <2> (weight: 3).\nNode <5> is connected to node <4> (weight: 4).\n\nCalculate the distance of the shortest path from node <2> to node <5>.\nAnswer:\n",
        "answer": "6",
        "type": "shortest_path"
    },
    {
        "index": 116,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1> (weight: 9), <2> (weight: 6), <4> (weight: 2).\nNode <1> is connected to nodes <3> (weight: 9), <4> (weight: 2).\nNode <2> is connected to nodes <3> (weight: 6), <0> (weight: 3).\nNode <4> is connected to nodes <3> (weight: 2), <1> (weight: 2).\nNode <0> is connected to node <2> (weight: 3).\n\nCalculate the distance of the shortest path from node <0> to node <1>.\nAnswer:\n",
        "answer": "13",
        "type": "shortest_path"
    },
    {
        "index": 117,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0> (weight: 4), <3> (weight: 9).\nNode <0> is connected to nodes <1> (weight: 4), <5> (weight: 4), <2> (weight: 7).\nNode <3> is connected to nodes <1> (weight: 9), <4> (weight: 4).\nNode <5> is connected to node <0> (weight: 4).\nNode <2> is connected to node <0> (weight: 7).\nNode <4> is connected to node <3> (weight: 4).\n\nCalculate the distance of the shortest path from node <2> to node <0>.\nAnswer:\n",
        "answer": "7",
        "type": "shortest_path"
    },
    {
        "index": 118,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5> (weight: 6), <2> (weight: 10), <6> (weight: 5).\nNode <5> is connected to nodes <3> (weight: 6), <1> (weight: 8).\nNode <2> is connected to node <3> (weight: 10).\nNode <6> is connected to nodes <3> (weight: 5), <0> (weight: 9), <1> (weight: 4).\nNode <1> is connected to nodes <5> (weight: 8), <6> (weight: 4).\nNode <0> is connected to nodes <6> (weight: 9), <4> (weight: 9).\nNode <4> is connected to node <0> (weight: 9).\n\nCalculate the distance of the shortest path from node <6> to node <5>.\nAnswer:\n",
        "answer": "11",
        "type": "shortest_path"
    },
    {
        "index": 119,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1> (weight: 8), <4> (weight: 5), <5> (weight: 5).\nNode <1> is connected to nodes <2> (weight: 8), <3> (weight: 7), <0> (weight: 5).\nNode <4> is connected to nodes <2> (weight: 5), <3> (weight: 7), <0> (weight: 3), <5> (weight: 8).\nNode <5> is connected to nodes <2> (weight: 5), <4> (weight: 8), <3> (weight: 3), <0> (weight: 3).\nNode <3> is connected to nodes <1> (weight: 7), <4> (weight: 7), <5> (weight: 3).\nNode <0> is connected to nodes <1> (weight: 5), <4> (weight: 3), <5> (weight: 3).\n\nCalculate the distance of the shortest path from node <5> to node <3>.\nAnswer:\n",
        "answer": "3",
        "type": "shortest_path"
    },
    {
        "index": 120,
        "question": "Given a directed graph:\nNode <2> is connected to node <4> (weight: 2).\nNode <4> is connected to node <2> (weight: 6).\nNode <3> is connected to nodes <1> (weight: 4), <4> (weight: 9).\nNode <1> is connected to nodes <0> (weight: 8), <3> (weight: 1).\nNode <0> is connected to nodes <2> (weight: 9), <4> (weight: 9), <3> (weight: 8), <1> (weight: 8).\n\nCalculate the distance of the shortest path from node <2> to node <4>.\nAnswer:\n",
        "answer": "2",
        "type": "shortest_path"
    },
    {
        "index": 121,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <1> (weight: 7), <3> (weight: 4).\nNode <1> is connected to nodes <6> (weight: 7), <0> (weight: 9).\nNode <3> is connected to node <6> (weight: 4).\nNode <0> is connected to nodes <1> (weight: 9), <5> (weight: 6), <4> (weight: 5).\nNode <5> is connected to nodes <0> (weight: 6), <4> (weight: 7), <2> (weight: 9).\nNode <4> is connected to nodes <0> (weight: 5), <5> (weight: 7).\nNode <2> is connected to node <5> (weight: 9).\n\nCalculate the distance of the shortest path from node <6> to node <3>.\nAnswer:\n",
        "answer": "4",
        "type": "shortest_path"
    },
    {
        "index": 122,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1> (weight: 1), <2> (weight: 3), <3> (weight: 10), <0> (weight: 1), <5> (weight: 2).\nNode <1> is connected to nodes <4> (weight: 1), <3> (weight: 4), <0> (weight: 5).\nNode <2> is connected to nodes <4> (weight: 3), <3> (weight: 3), <0> (weight: 4), <5> (weight: 5).\nNode <3> is connected to nodes <4> (weight: 10), <1> (weight: 4), <2> (weight: 3), <0> (weight: 10), <5> (weight: 7).\nNode <0> is connected to nodes <4> (weight: 1), <1> (weight: 5), <2> (weight: 4), <3> (weight: 10), <5> (weight: 2).\nNode <5> is connected to nodes <4> (weight: 2), <2> (weight: 5), <3> (weight: 7), <0> (weight: 2).\n\nCalculate the distance of the shortest path from node <1> to node <3>.\nAnswer:\n",
        "answer": "4",
        "type": "shortest_path"
    },
    {
        "index": 123,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0> (weight: 2), <4> (weight: 3), <2> (weight: 1).\nNode <0> is connected to node <3> (weight: 2).\nNode <4> is connected to node <3> (weight: 3).\nNode <2> is connected to nodes <3> (weight: 1), <1> (weight: 10).\nNode <1> is connected to node <2> (weight: 10).\n\nCalculate the distance of the shortest path from node <4> to node <0>.\nAnswer:\n",
        "answer": "5",
        "type": "shortest_path"
    },
    {
        "index": 124,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <6> (weight: 8), <5> (weight: 4).\nNode <6> is connected to nodes <1> (weight: 8), <0> (weight: 3).\nNode <5> is connected to nodes <1> (weight: 4), <3> (weight: 4).\nNode <0> is connected to nodes <6> (weight: 3), <4> (weight: 5).\nNode <3> is connected to nodes <5> (weight: 4), <2> (weight: 10).\nNode <4> is connected to nodes <0> (weight: 5), <2> (weight: 4).\nNode <2> is connected to nodes <4> (weight: 4), <3> (weight: 10).\n\nCalculate the distance of the shortest path from node <3> to node <6>.\nAnswer:\n",
        "answer": "16",
        "type": "shortest_path"
    },
    {
        "index": 125,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3> (weight: 6), <0> (weight: 10), <2> (weight: 9).\nNode <3> is connected to node <4> (weight: 6).\nNode <0> is connected to node <4> (weight: 10).\nNode <2> is connected to nodes <4> (weight: 9), <1> (weight: 2).\nNode <1> is connected to node <2> (weight: 2).\n\nCalculate the distance of the shortest path from node <2> to node <3>.\nAnswer:\n",
        "answer": "15",
        "type": "shortest_path"
    },
    {
        "index": 126,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5> (weight: 1), <1> (weight: 6), <4> (weight: 9).\nNode <5> is connected to nodes <0> (weight: 1), <3> (weight: 5).\nNode <1> is connected to nodes <0> (weight: 6), <2> (weight: 10).\nNode <4> is connected to node <0> (weight: 9).\nNode <3> is connected to node <5> (weight: 5).\nNode <2> is connected to node <1> (weight: 10).\n\nCalculate the distance of the shortest path from node <3> to node <4>.\nAnswer:\n",
        "answer": "15",
        "type": "shortest_path"
    },
    {
        "index": 127,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3> (weight: 7), <2> (weight: 7), <4> (weight: 6).\nNode <3> is connected to nodes <1> (weight: 7), <0> (weight: 10).\nNode <2> is connected to nodes <1> (weight: 7), <6> (weight: 9).\nNode <4> is connected to nodes <1> (weight: 6), <5> (weight: 5).\nNode <0> is connected to node <3> (weight: 10).\nNode <6> is connected to nodes <2> (weight: 9), <5> (weight: 4).\nNode <5> is connected to nodes <4> (weight: 5), <6> (weight: 4).\n\nCalculate the distance of the shortest path from node <5> to node <3>.\nAnswer:\n",
        "answer": "18",
        "type": "shortest_path"
    },
    {
        "index": 128,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1> (weight: 6), <4> (weight: 2), <2> (weight: 6).\nNode <1> is connected to nodes <3> (weight: 6), <5> (weight: 7), <0> (weight: 7), <6> (weight: 9), <2> (weight: 3).\nNode <4> is connected to nodes <3> (weight: 2), <6> (weight: 5), <2> (weight: 2).\nNode <2> is connected to nodes <3> (weight: 6), <1> (weight: 3), <4> (weight: 2), <5> (weight: 3), <0> (weight: 4).\nNode <5> is connected to nodes <1> (weight: 7), <2> (weight: 3), <0> (weight: 7), <6> (weight: 2).\nNode <0> is connected to nodes <1> (weight: 7), <2> (weight: 4), <5> (weight: 7), <6> (weight: 5).\nNode <6> is connected to nodes <1> (weight: 9), <4> (weight: 5), <5> (weight: 2), <0> (weight: 5).\n\nCalculate the distance of the shortest path from node <0> to node <6>.\nAnswer:\n",
        "answer": "5",
        "type": "shortest_path"
    },
    {
        "index": 129,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2> (weight: 2), <3> (weight: 8).\nNode <2> is connected to node <0> (weight: 2).\nNode <3> is connected to nodes <0> (weight: 8), <5> (weight: 10).\nNode <5> is connected to nodes <3> (weight: 10), <1> (weight: 10), <4> (weight: 7).\nNode <1> is connected to node <5> (weight: 10).\nNode <4> is connected to node <5> (weight: 7).\n\nCalculate the distance of the shortest path from node <0> to node <5>.\nAnswer:\n",
        "answer": "18",
        "type": "shortest_path"
    },
    {
        "index": 130,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0> (weight: 3), <3> (weight: 1).\nNode <0> is connected to node <3> (weight: 8).\nNode <3> is connected to nodes <2> (weight: 6), <5> (weight: 4).\nNode <2> is connected to nodes <0> (weight: 6), <4> (weight: 6), <3> (weight: 3).\nNode <5> is connected to nodes <4> (weight: 9), <1> (weight: 8), <2> (weight: 4).\nNode <4> is connected to nodes <1> (weight: 3), <0> (weight: 9).\n\nCalculate the distance of the shortest path from node <0> to node <5>.\nAnswer:\n",
        "answer": "12",
        "type": "shortest_path"
    },
    {
        "index": 131,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <6> (weight: 7), <0> (weight: 2), <2> (weight: 7), <4> (weight: 10), <5> (weight: 9).\nNode <6> is connected to nodes <3> (weight: 7), <2> (weight: 4), <1> (weight: 5), <5> (weight: 2).\nNode <0> is connected to node <3> (weight: 2).\nNode <2> is connected to nodes <3> (weight: 7), <6> (weight: 4).\nNode <4> is connected to nodes <3> (weight: 10), <1> (weight: 6), <5> (weight: 8).\nNode <5> is connected to nodes <3> (weight: 9), <6> (weight: 2), <4> (weight: 8).\nNode <1> is connected to nodes <6> (weight: 5), <4> (weight: 6).\n\nCalculate the distance of the shortest path from node <5> to node <0>.\nAnswer:\n",
        "answer": "11",
        "type": "shortest_path"
    },
    {
        "index": 132,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0> (weight: 9), <5> (weight: 9), <1> (weight: 8), <3> (weight: 9).\nNode <0> is connected to nodes <2> (weight: 9), <5> (weight: 2), <4> (weight: 6), <1> (weight: 10), <3> (weight: 2).\nNode <5> is connected to nodes <2> (weight: 9), <0> (weight: 2), <4> (weight: 6), <1> (weight: 9).\nNode <1> is connected to nodes <2> (weight: 8), <0> (weight: 10), <5> (weight: 9), <4> (weight: 3).\nNode <3> is connected to nodes <2> (weight: 9), <0> (weight: 2), <4> (weight: 2).\nNode <4> is connected to nodes <0> (weight: 6), <5> (weight: 6), <1> (weight: 3), <3> (weight: 2).\n\nCalculate the distance of the shortest path from node <0> to node <5>.\nAnswer:\n",
        "answer": "2",
        "type": "shortest_path"
    },
    {
        "index": 133,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <6> (weight: 7), <3> (weight: 3), <4> (weight: 9).\nNode <6> is connected to nodes <0> (weight: 6), <1> (weight: 1), <2> (weight: 1).\nNode <3> is connected to nodes <4> (weight: 5), <1> (weight: 7), <2> (weight: 6), <6> (weight: 4).\nNode <4> is connected to node <0> (weight: 8).\nNode <0> is connected to nodes <5> (weight: 6), <1> (weight: 3), <2> (weight: 9), <4> (weight: 3).\nNode <1> is connected to nodes <2> (weight: 4), <6> (weight: 10), <0> (weight: 9).\nNode <5> is connected to nodes <4> (weight: 10), <0> (weight: 9).\n\nCalculate the distance of the shortest path from node <5> to node <4>.\nAnswer:\n",
        "answer": "10",
        "type": "shortest_path"
    },
    {
        "index": 134,
        "question": "Given an undirected graph:\nNode <1> is connected to node <4> (weight: 2).\nNode <4> is connected to nodes <1> (weight: 2), <5> (weight: 10).\nNode <5> is connected to nodes <4> (weight: 10), <0> (weight: 5).\nNode <0> is connected to nodes <5> (weight: 5), <3> (weight: 1), <2> (weight: 2).\nNode <3> is connected to nodes <2> (weight: 2), <0> (weight: 1), <6> (weight: 10).\nNode <2> is connected to nodes <3> (weight: 2), <0> (weight: 2).\nNode <6> is connected to node <3> (weight: 10).\n\nCalculate the distance of the shortest path from node <2> to node <6>.\nAnswer:\n",
        "answer": "12",
        "type": "shortest_path"
    },
    {
        "index": 135,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3> (weight: 9), <6> (weight: 5), <2> (weight: 10), <1> (weight: 2), <5> (weight: 4).\nNode <3> is connected to nodes <0> (weight: 9), <2> (weight: 9), <4> (weight: 4), <1> (weight: 1).\nNode <6> is connected to nodes <0> (weight: 5), <5> (weight: 5).\nNode <2> is connected to nodes <0> (weight: 10), <3> (weight: 9), <4> (weight: 8).\nNode <1> is connected to nodes <0> (weight: 2), <3> (weight: 1).\nNode <5> is connected to nodes <0> (weight: 4), <6> (weight: 5).\nNode <4> is connected to nodes <3> (weight: 4), <2> (weight: 8).\n\nCalculate the distance of the shortest path from node <0> to node <2>.\nAnswer:\n",
        "answer": "10",
        "type": "shortest_path"
    },
    {
        "index": 136,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <0> (weight: 10), <1> (weight: 7).\nNode <0> is connected to nodes <3> (weight: 10), <4> (weight: 6), <2> (weight: 7).\nNode <1> is connected to nodes <3> (weight: 7), <2> (weight: 10).\nNode <4> is connected to node <0> (weight: 6).\nNode <2> is connected to nodes <0> (weight: 7), <1> (weight: 10).\n\nCalculate the distance of the shortest path from node <1> to node <4>.\nAnswer:\n",
        "answer": "23",
        "type": "shortest_path"
    },
    {
        "index": 137,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2> (weight: 6), <0> (weight: 8), <6> (weight: 7), <4> (weight: 3).\nNode <2> is connected to nodes <0> (weight: 5), <6> (weight: 2), <4> (weight: 5), <3> (weight: 5), <5> (weight: 8).\nNode <0> is connected to node <5> (weight: 8).\nNode <6> is connected to nodes <4> (weight: 6), <3> (weight: 2), <2> (weight: 8), <0> (weight: 4).\nNode <4> is connected to nodes <3> (weight: 10), <5> (weight: 3), <0> (weight: 3).\nNode <3> is connected to nodes <1> (weight: 3), <0> (weight: 10), <6> (weight: 3).\nNode <1> is connected to nodes <2> (weight: 2), <0> (weight: 3), <4> (weight: 10), <3> (weight: 3).\n\nCalculate the distance of the shortest path from node <0> to node <2>.\nAnswer:\n",
        "answer": "14",
        "type": "shortest_path"
    },
    {
        "index": 138,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <6> (weight: 3), <5> (weight: 8), <4> (weight: 8).\nNode <6> is connected to nodes <0> (weight: 3), <1> (weight: 6), <3> (weight: 1).\nNode <5> is connected to nodes <4> (weight: 9), <1> (weight: 4), <3> (weight: 6), <2> (weight: 2), <6> (weight: 5).\nNode <4> is connected to nodes <1> (weight: 2), <0> (weight: 1), <5> (weight: 8).\nNode <0> is connected to nodes <3> (weight: 8), <2> (weight: 7).\nNode <1> is connected to nodes <0> (weight: 9), <5> (weight: 8).\nNode <3> is connected to nodes <2> (weight: 8), <0> (weight: 5), <1> (weight: 5).\n\nCalculate the distance of the shortest path from node <6> to node <2>.\nAnswer:\n",
        "answer": "9",
        "type": "shortest_path"
    },
    {
        "index": 139,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1> (weight: 6), <4> (weight: 5).\nNode <1> is connected to node <5> (weight: 6).\nNode <4> is connected to nodes <5> (weight: 5), <0> (weight: 3), <2> (weight: 7).\nNode <0> is connected to node <4> (weight: 3).\nNode <2> is connected to nodes <4> (weight: 7), <6> (weight: 10).\nNode <6> is connected to nodes <2> (weight: 10), <3> (weight: 1).\nNode <3> is connected to node <6> (weight: 1).\n\nCalculate the distance of the shortest path from node <2> to node <1>.\nAnswer:\n",
        "answer": "18",
        "type": "shortest_path"
    },
    {
        "index": 140,
        "question": "Given an undirected graph:\nNode <6> is connected to node <5> (weight: 6).\nNode <5> is connected to nodes <6> (weight: 6), <1> (weight: 10), <4> (weight: 5).\nNode <1> is connected to nodes <5> (weight: 10), <2> (weight: 2), <0> (weight: 1).\nNode <4> is connected to node <5> (weight: 5).\nNode <2> is connected to nodes <1> (weight: 2), <3> (weight: 1).\nNode <0> is connected to nodes <1> (weight: 1), <3> (weight: 4).\nNode <3> is connected to nodes <2> (weight: 1), <0> (weight: 4).\n\nCalculate the distance of the shortest path from node <3> to node <0>.\nAnswer:\n",
        "answer": "4",
        "type": "shortest_path"
    },
    {
        "index": 141,
        "question": "Given a directed graph:\nNode <2> is connected to node <5> (weight: 7).\nNode <5> is connected to nodes <2> (weight: 6), <4> (weight: 9), <3> (weight: 10).\nNode <4> is connected to node <5> (weight: 2).\nNode <3> is connected to nodes <2> (weight: 4), <4> (weight: 3), <6> (weight: 5).\nNode <1> is connected to nodes <0> (weight: 2), <4> (weight: 10).\nNode <0> is connected to node <5> (weight: 3).\nNode <6> is connected to nodes <3> (weight: 1), <2> (weight: 5), <4> (weight: 9), <1> (weight: 6).\n\nCalculate the distance of the shortest path from node <2> to node <3>.\nAnswer:\n",
        "answer": "17",
        "type": "shortest_path"
    },
    {
        "index": 142,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4> (weight: 2), <0> (weight: 3).\nNode <4> is connected to nodes <5> (weight: 6), <2> (weight: 2).\nNode <0> is connected to nodes <1> (weight: 9), <4> (weight: 4), <3> (weight: 8).\nNode <5> is connected to nodes <3> (weight: 4), <0> (weight: 8), <1> (weight: 4), <4> (weight: 1).\nNode <1> is connected to nodes <2> (weight: 8), <5> (weight: 10), <3> (weight: 7), <0> (weight: 5).\nNode <3> is connected to nodes <1> (weight: 5), <2> (weight: 6), <4> (weight: 3), <5> (weight: 1).\n\nCalculate the distance of the shortest path from node <4> to node <1>.\nAnswer:\n",
        "answer": "10",
        "type": "shortest_path"
    },
    {
        "index": 143,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <6> (weight: 2), <0> (weight: 8), <3> (weight: 5), <4> (weight: 1), <1> (weight: 7), <2> (weight: 8).\nNode <6> is connected to nodes <5> (weight: 2), <1> (weight: 2).\nNode <0> is connected to nodes <5> (weight: 8), <2> (weight: 9).\nNode <3> is connected to nodes <5> (weight: 5), <1> (weight: 3).\nNode <4> is connected to nodes <5> (weight: 1), <1> (weight: 1).\nNode <1> is connected to nodes <5> (weight: 7), <6> (weight: 2), <3> (weight: 3), <4> (weight: 1).\nNode <2> is connected to nodes <5> (weight: 8), <0> (weight: 9).\n\nCalculate the distance of the shortest path from node <0> to node <5>.\nAnswer:\n",
        "answer": "8",
        "type": "shortest_path"
    },
    {
        "index": 144,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5> (weight: 10), <3> (weight: 8), <2> (weight: 8), <1> (weight: 4).\nNode <5> is connected to nodes <0> (weight: 10), <4> (weight: 9), <3> (weight: 2), <2> (weight: 4), <1> (weight: 9).\nNode <3> is connected to nodes <0> (weight: 8), <5> (weight: 2), <4> (weight: 1), <1> (weight: 7).\nNode <2> is connected to nodes <0> (weight: 8), <5> (weight: 4), <1> (weight: 6).\nNode <1> is connected to nodes <0> (weight: 4), <5> (weight: 9), <3> (weight: 7), <2> (weight: 6), <4> (weight: 9).\nNode <4> is connected to nodes <5> (weight: 9), <3> (weight: 1), <1> (weight: 9).\n\nCalculate the distance of the shortest path from node <4> to node <1>.\nAnswer:\n",
        "answer": "8",
        "type": "shortest_path"
    },
    {
        "index": 145,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0> (weight: 4), <5> (weight: 9).\nNode <0> is connected to nodes <6> (weight: 5), <4> (weight: 5), <2> (weight: 7).\nNode <5> is connected to nodes <3> (weight: 1), <6> (weight: 10), <1> (weight: 8).\nNode <6> is connected to nodes <4> (weight: 3), <0> (weight: 9), <3> (weight: 9).\nNode <2> is connected to nodes <1> (weight: 9), <4> (weight: 3).\nNode <3> is connected to nodes <4> (weight: 10), <2> (weight: 10), <0> (weight: 6), <5> (weight: 8).\nNode <1> is connected to nodes <3> (weight: 4), <6> (weight: 6).\n\nCalculate the distance of the shortest path from node <1> to node <5>.\nAnswer:\n",
        "answer": "12",
        "type": "shortest_path"
    },
    {
        "index": 146,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1> (weight: 8), <3> (weight: 7), <2> (weight: 8).\nNode <1> is connected to node <4> (weight: 8).\nNode <3> is connected to nodes <4> (weight: 7), <0> (weight: 4).\nNode <2> is connected to nodes <4> (weight: 8), <0> (weight: 6).\nNode <0> is connected to nodes <3> (weight: 4), <2> (weight: 6).\n\nCalculate the distance of the shortest path from node <2> to node <4>.\nAnswer:\n",
        "answer": "8",
        "type": "shortest_path"
    },
    {
        "index": 147,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3> (weight: 1), <2> (weight: 6).\nNode <3> is connected to nodes <4> (weight: 1), <0> (weight: 6), <2> (weight: 5).\nNode <2> is connected to nodes <4> (weight: 6), <3> (weight: 5), <1> (weight: 1).\nNode <0> is connected to node <3> (weight: 6).\nNode <1> is connected to node <2> (weight: 1).\n\nCalculate the distance of the shortest path from node <3> to node <1>.\nAnswer:\n",
        "answer": "6",
        "type": "shortest_path"
    },
    {
        "index": 148,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4> (weight: 4), <5> (weight: 8), <0> (weight: 3).\nNode <4> is connected to nodes <3> (weight: 4), <2> (weight: 9), <1> (weight: 4).\nNode <5> is connected to node <3> (weight: 8).\nNode <0> is connected to node <3> (weight: 3).\nNode <2> is connected to node <4> (weight: 9).\nNode <1> is connected to node <4> (weight: 4).\n\nCalculate the distance of the shortest path from node <4> to node <2>.\nAnswer:\n",
        "answer": "9",
        "type": "shortest_path"
    },
    {
        "index": 149,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5> (weight: 2), <4> (weight: 4), <2> (weight: 4).\nNode <5> is connected to nodes <1> (weight: 2), <0> (weight: 3), <3> (weight: 7).\nNode <4> is connected to node <1> (weight: 4).\nNode <2> is connected to node <1> (weight: 4).\nNode <0> is connected to node <5> (weight: 3).\nNode <3> is connected to node <5> (weight: 7).\n\nCalculate the distance of the shortest path from node <1> to node <5>.\nAnswer:\n",
        "answer": "2",
        "type": "shortest_path"
    },
    {
        "index": 150,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2> (weight: 3), <4> (weight: 2), <1> (weight: 6).\nNode <2> is connected to nodes <0> (weight: 3), <5> (weight: 10).\nNode <4> is connected to nodes <0> (weight: 2), <3> (weight: 8), <5> (weight: 9).\nNode <1> is connected to node <0> (weight: 6).\nNode <5> is connected to nodes <2> (weight: 10), <4> (weight: 9).\nNode <3> is connected to node <4> (weight: 8).\n\nCalculate the distance of the shortest path from node <2> to node <5>.\nAnswer:\n",
        "answer": "10",
        "type": "shortest_path"
    },
    {
        "index": 151,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3> (weight: 8), <0> (weight: 10).\nNode <3> is connected to nodes <1> (weight: 8), <4> (weight: 8), <2> (weight: 1).\nNode <0> is connected to node <1> (weight: 10).\nNode <4> is connected to nodes <3> (weight: 8), <2> (weight: 10).\nNode <2> is connected to nodes <3> (weight: 1), <4> (weight: 10).\n\nCalculate the distance of the shortest path from node <3> to node <2>.\nAnswer:\n",
        "answer": "1",
        "type": "shortest_path"
    },
    {
        "index": 152,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4> (weight: 10), <1> (weight: 10).\nNode <4> is connected to nodes <0> (weight: 10), <1> (weight: 5), <2> (weight: 8).\nNode <1> is connected to nodes <0> (weight: 10), <4> (weight: 5), <3> (weight: 10).\nNode <2> is connected to node <4> (weight: 8).\nNode <3> is connected to node <1> (weight: 10).\n\nCalculate the distance of the shortest path from node <2> to node <0>.\nAnswer:\n",
        "answer": "18",
        "type": "shortest_path"
    },
    {
        "index": 153,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2> (weight: 5), <6> (weight: 8), <0> (weight: 8).\nNode <2> is connected to nodes <1> (weight: 5), <4> (weight: 1).\nNode <6> is connected to nodes <1> (weight: 8), <0> (weight: 3), <3> (weight: 5).\nNode <0> is connected to nodes <1> (weight: 8), <6> (weight: 3).\nNode <4> is connected to nodes <2> (weight: 1), <5> (weight: 4).\nNode <3> is connected to node <6> (weight: 5).\nNode <5> is connected to node <4> (weight: 4).\n\nCalculate the distance of the shortest path from node <1> to node <5>.\nAnswer:\n",
        "answer": "10",
        "type": "shortest_path"
    },
    {
        "index": 154,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2> (weight: 3), <3> (weight: 9), <4> (weight: 7), <1> (weight: 2).\nNode <2> is connected to nodes <4> (weight: 4), <1> (weight: 7), <0> (weight: 7).\nNode <3> is connected to nodes <1> (weight: 4), <0> (weight: 3).\nNode <4> is connected to nodes <0> (weight: 7), <2> (weight: 5).\nNode <1> is connected to nodes <0> (weight: 9), <2> (weight: 1), <3> (weight: 3).\n\nCalculate the distance of the shortest path from node <1> to node <4>.\nAnswer:\n",
        "answer": "5",
        "type": "shortest_path"
    },
    {
        "index": 155,
        "question": "Given an undirected graph:\nNode <5> is connected to node <0> (weight: 9).\nNode <0> is connected to nodes <5> (weight: 9), <1> (weight: 3), <4> (weight: 5), <2> (weight: 7).\nNode <1> is connected to nodes <0> (weight: 3), <4> (weight: 2).\nNode <4> is connected to nodes <0> (weight: 5), <1> (weight: 2).\nNode <2> is connected to nodes <0> (weight: 7), <3> (weight: 3), <6> (weight: 8).\nNode <3> is connected to node <2> (weight: 3).\nNode <6> is connected to node <2> (weight: 8).\n\nCalculate the distance of the shortest path from node <4> to node <6>.\nAnswer:\n",
        "answer": "20",
        "type": "shortest_path"
    },
    {
        "index": 156,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5> (weight: 5), <0> (weight: 7), <1> (weight: 8).\nNode <5> is connected to nodes <4> (weight: 5), <2> (weight: 2), <3> (weight: 8).\nNode <0> is connected to node <4> (weight: 7).\nNode <1> is connected to node <4> (weight: 8).\nNode <2> is connected to node <5> (weight: 2).\nNode <3> is connected to node <5> (weight: 8).\n\nCalculate the distance of the shortest path from node <1> to node <0>.\nAnswer:\n",
        "answer": "15",
        "type": "shortest_path"
    },
    {
        "index": 157,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2> (weight: 2), <4> (weight: 6), <5> (weight: 10).\nNode <2> is connected to node <5> (weight: 7).\nNode <4> is connected to nodes <5> (weight: 5), <1> (weight: 7), <2> (weight: 5), <6> (weight: 3).\nNode <5> is connected to nodes <1> (weight: 3), <6> (weight: 4).\nNode <0> is connected to nodes <6> (weight: 1), <4> (weight: 8), <5> (weight: 8), <2> (weight: 7).\nNode <3> is connected to nodes <4> (weight: 2), <5> (weight: 5), <6> (weight: 6).\n\nCalculate the distance of the shortest path from node <5> to node <6>.\nAnswer:\n",
        "answer": "4",
        "type": "shortest_path"
    },
    {
        "index": 158,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5> (weight: 9), <4> (weight: 6).\nNode <5> is connected to node <1> (weight: 9).\nNode <4> is connected to nodes <1> (weight: 6), <6> (weight: 2), <2> (weight: 8).\nNode <6> is connected to nodes <4> (weight: 2), <3> (weight: 3).\nNode <2> is connected to nodes <4> (weight: 8), <0> (weight: 1).\nNode <3> is connected to node <6> (weight: 3).\nNode <0> is connected to node <2> (weight: 1).\n\nCalculate the distance of the shortest path from node <5> to node <4>.\nAnswer:\n",
        "answer": "15",
        "type": "shortest_path"
    },
    {
        "index": 159,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3> (weight: 4), <2> (weight: 6), <5> (weight: 2), <4> (weight: 2).\nNode <3> is connected to nodes <0> (weight: 4), <2> (weight: 7), <1> (weight: 7), <5> (weight: 1).\nNode <2> is connected to nodes <0> (weight: 6), <3> (weight: 7), <5> (weight: 7), <4> (weight: 2).\nNode <5> is connected to nodes <0> (weight: 2), <3> (weight: 1), <2> (weight: 7), <1> (weight: 7), <4> (weight: 4).\nNode <4> is connected to nodes <0> (weight: 2), <2> (weight: 2), <5> (weight: 4).\nNode <1> is connected to nodes <3> (weight: 7), <5> (weight: 7).\n\nCalculate the distance of the shortest path from node <2> to node <0>.\nAnswer:\n",
        "answer": "4",
        "type": "shortest_path"
    },
    {
        "index": 160,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0> (weight: 10), <5> (weight: 4), <3> (weight: 2), <1> (weight: 10).\nNode <0> is connected to nodes <2> (weight: 10), <5> (weight: 9), <3> (weight: 9), <1> (weight: 10).\nNode <5> is connected to nodes <2> (weight: 4), <0> (weight: 9), <3> (weight: 4), <1> (weight: 10).\nNode <3> is connected to nodes <2> (weight: 2), <0> (weight: 9), <5> (weight: 4), <1> (weight: 2), <4> (weight: 8).\nNode <1> is connected to nodes <2> (weight: 10), <0> (weight: 10), <5> (weight: 10), <3> (weight: 2), <4> (weight: 5).\nNode <4> is connected to nodes <3> (weight: 8), <1> (weight: 5).\n\nCalculate the distance of the shortest path from node <1> to node <0>.\nAnswer:\n",
        "answer": "10",
        "type": "shortest_path"
    },
    {
        "index": 161,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <2> (weight: 2), <5> (weight: 9), <0> (weight: 8), <4> (weight: 7).\nNode <2> is connected to nodes <1> (weight: 2), <6> (weight: 5).\nNode <5> is connected to node <1> (weight: 9).\nNode <0> is connected to nodes <1> (weight: 8), <3> (weight: 5).\nNode <4> is connected to node <1> (weight: 7).\nNode <6> is connected to node <2> (weight: 5).\nNode <3> is connected to node <0> (weight: 5).\n\nCalculate the distance of the shortest path from node <2> to node <6>.\nAnswer:\n",
        "answer": "5",
        "type": "shortest_path"
    },
    {
        "index": 162,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4> (weight: 3), <2> (weight: 10), <1> (weight: 2), <5> (weight: 7), <0> (weight: 5).\nNode <4> is connected to node <3> (weight: 3).\nNode <2> is connected to node <3> (weight: 10).\nNode <1> is connected to node <3> (weight: 2).\nNode <5> is connected to node <3> (weight: 7).\nNode <0> is connected to node <3> (weight: 5).\n\nCalculate the distance of the shortest path from node <5> to node <3>.\nAnswer:\n",
        "answer": "7",
        "type": "shortest_path"
    },
    {
        "index": 163,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1> (weight: 8), <5> (weight: 9).\nNode <1> is connected to nodes <4> (weight: 8), <6> (weight: 9).\nNode <5> is connected to nodes <4> (weight: 9), <3> (weight: 9).\nNode <6> is connected to nodes <1> (weight: 9), <0> (weight: 9), <2> (weight: 6).\nNode <3> is connected to node <5> (weight: 9).\nNode <0> is connected to nodes <6> (weight: 9), <2> (weight: 1).\nNode <2> is connected to nodes <6> (weight: 6), <0> (weight: 1).\n\nCalculate the distance of the shortest path from node <2> to node <4>.\nAnswer:\n",
        "answer": "23",
        "type": "shortest_path"
    },
    {
        "index": 164,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3> (weight: 2), <5> (weight: 7), <6> (weight: 7).\nNode <3> is connected to nodes <4> (weight: 2), <1> (weight: 8).\nNode <5> is connected to nodes <4> (weight: 7), <0> (weight: 8).\nNode <6> is connected to nodes <4> (weight: 7), <2> (weight: 8).\nNode <1> is connected to nodes <3> (weight: 8), <2> (weight: 5).\nNode <0> is connected to node <5> (weight: 8).\nNode <2> is connected to nodes <6> (weight: 8), <1> (weight: 5).\n\nCalculate the distance of the shortest path from node <2> to node <3>.\nAnswer:\n",
        "answer": "13",
        "type": "shortest_path"
    },
    {
        "index": 165,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2> (weight: 9), <3> (weight: 9).\nNode <2> is connected to nodes <4> (weight: 10), <0> (weight: 2).\nNode <3> is connected to nodes <4> (weight: 8), <0> (weight: 5).\nNode <4> is connected to nodes <0> (weight: 6), <1> (weight: 10), <2> (weight: 4).\nNode <0> is connected to nodes <3> (weight: 5), <4> (weight: 7).\nNode <1> is connected to nodes <2> (weight: 5), <5> (weight: 8), <0> (weight: 1).\n\nCalculate the distance of the shortest path from node <0> to node <5>.\nAnswer:\n",
        "answer": "25",
        "type": "shortest_path"
    },
    {
        "index": 166,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5> (weight: 4), <4> (weight: 8), <2> (weight: 8), <0> (weight: 5).\nNode <5> is connected to nodes <1> (weight: 4), <4> (weight: 5), <2> (weight: 6), <0> (weight: 7).\nNode <4> is connected to nodes <1> (weight: 8), <5> (weight: 5), <3> (weight: 10), <2> (weight: 7), <0> (weight: 5).\nNode <2> is connected to nodes <1> (weight: 8), <5> (weight: 6), <4> (weight: 7), <0> (weight: 8).\nNode <0> is connected to nodes <1> (weight: 5), <5> (weight: 7), <4> (weight: 5), <2> (weight: 8).\nNode <3> is connected to node <4> (weight: 10).\n\nCalculate the distance of the shortest path from node <2> to node <0>.\nAnswer:\n",
        "answer": "8",
        "type": "shortest_path"
    },
    {
        "index": 167,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3> (weight: 5), <1> (weight: 7).\nNode <3> is connected to nodes <4> (weight: 5), <1> (weight: 6).\nNode <1> is connected to nodes <4> (weight: 7), <3> (weight: 6), <0> (weight: 1).\nNode <0> is connected to nodes <1> (weight: 1), <2> (weight: 7).\nNode <2> is connected to node <0> (weight: 7).\n\nCalculate the distance of the shortest path from node <4> to node <0>.\nAnswer:\n",
        "answer": "8",
        "type": "shortest_path"
    },
    {
        "index": 168,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2> (weight: 2), <1> (weight: 4), <0> (weight: 3), <5> (weight: 5).\nNode <2> is connected to node <3> (weight: 2).\nNode <1> is connected to node <3> (weight: 4).\nNode <0> is connected to node <3> (weight: 3).\nNode <5> is connected to nodes <3> (weight: 5), <4> (weight: 2).\nNode <4> is connected to node <5> (weight: 2).\n\nCalculate the distance of the shortest path from node <1> to node <0>.\nAnswer:\n",
        "answer": "7",
        "type": "shortest_path"
    },
    {
        "index": 169,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0> (weight: 5), <1> (weight: 3), <4> (weight: 1).\nNode <0> is connected to nodes <2> (weight: 5), <6> (weight: 1), <4> (weight: 8).\nNode <1> is connected to node <2> (weight: 3).\nNode <4> is connected to nodes <2> (weight: 1), <0> (weight: 8), <5> (weight: 3), <3> (weight: 1).\nNode <6> is connected to node <0> (weight: 1).\nNode <5> is connected to node <4> (weight: 3).\nNode <3> is connected to node <4> (weight: 1).\n\nCalculate the distance of the shortest path from node <5> to node <3>.\nAnswer:\n",
        "answer": "4",
        "type": "shortest_path"
    },
    {
        "index": 170,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4> (weight: 5), <1> (weight: 7), <0> (weight: 9), <2> (weight: 1).\nNode <4> is connected to node <3> (weight: 5).\nNode <1> is connected to node <3> (weight: 7).\nNode <0> is connected to node <3> (weight: 9).\nNode <2> is connected to node <3> (weight: 1).\n\nCalculate the distance of the shortest path from node <2> to node <1>.\nAnswer:\n",
        "answer": "8",
        "type": "shortest_path"
    },
    {
        "index": 171,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4> (weight: 4), <0> (weight: 6).\nNode <4> is connected to node <3> (weight: 4).\nNode <0> is connected to nodes <3> (weight: 6), <2> (weight: 9), <1> (weight: 7).\nNode <2> is connected to node <0> (weight: 9).\nNode <1> is connected to node <0> (weight: 7).\n\nCalculate the distance of the shortest path from node <2> to node <0>.\nAnswer:\n",
        "answer": "9",
        "type": "shortest_path"
    },
    {
        "index": 172,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0> (weight: 7), <1> (weight: 9), <3> (weight: 5).\nNode <0> is connected to nodes <2> (weight: 7), <4> (weight: 3).\nNode <1> is connected to node <2> (weight: 9).\nNode <3> is connected to node <2> (weight: 5).\nNode <4> is connected to node <0> (weight: 3).\n\nCalculate the distance of the shortest path from node <4> to node <0>.\nAnswer:\n",
        "answer": "3",
        "type": "shortest_path"
    },
    {
        "index": 173,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5> (weight: 3), <1> (weight: 9), <2> (weight: 7).\nNode <5> is connected to node <1> (weight: 5).\nNode <1> is connected to nodes <2> (weight: 3), <6> (weight: 10), <3> (weight: 5).\nNode <2> is connected to nodes <0> (weight: 4), <3> (weight: 10), <4> (weight: 7), <1> (weight: 3).\nNode <6> is connected to nodes <3> (weight: 4), <1> (weight: 2), <2> (weight: 5).\nNode <3> is connected to nodes <1> (weight: 6), <5> (weight: 2).\nNode <4> is connected to nodes <2> (weight: 8), <0> (weight: 3), <3> (weight: 8).\n\nCalculate the distance of the shortest path from node <6> to node <1>.\nAnswer:\n",
        "answer": "2",
        "type": "shortest_path"
    },
    {
        "index": 174,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5> (weight: 10), <4> (weight: 1), <2> (weight: 8), <6> (weight: 7), <1> (weight: 6).\nNode <5> is connected to nodes <3> (weight: 10), <6> (weight: 9), <0> (weight: 6).\nNode <4> is connected to node <3> (weight: 1).\nNode <2> is connected to nodes <3> (weight: 8), <6> (weight: 10).\nNode <6> is connected to nodes <3> (weight: 7), <5> (weight: 9), <2> (weight: 10), <1> (weight: 5).\nNode <1> is connected to nodes <3> (weight: 6), <6> (weight: 5), <0> (weight: 6).\nNode <0> is connected to nodes <5> (weight: 6), <1> (weight: 6).\n\nCalculate the distance of the shortest path from node <6> to node <0>.\nAnswer:\n",
        "answer": "11",
        "type": "shortest_path"
    },
    {
        "index": 175,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2> (weight: 4), <4> (weight: 6).\nNode <2> is connected to nodes <0> (weight: 4), <5> (weight: 2), <6> (weight: 7), <1> (weight: 1).\nNode <4> is connected to nodes <0> (weight: 6), <3> (weight: 2).\nNode <5> is connected to node <2> (weight: 2).\nNode <6> is connected to node <2> (weight: 7).\nNode <1> is connected to node <2> (weight: 1).\nNode <3> is connected to node <4> (weight: 2).\n\nCalculate the distance of the shortest path from node <3> to node <1>.\nAnswer:\n",
        "answer": "13",
        "type": "shortest_path"
    },
    {
        "index": 176,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3> (weight: 10), <4> (weight: 5), <0> (weight: 5).\nNode <3> is connected to nodes <2> (weight: 10), <4> (weight: 9), <1> (weight: 4).\nNode <4> is connected to nodes <2> (weight: 5), <3> (weight: 9).\nNode <0> is connected to node <2> (weight: 5).\nNode <1> is connected to node <3> (weight: 4).\n\nCalculate the distance of the shortest path from node <1> to node <0>.\nAnswer:\n",
        "answer": "19",
        "type": "shortest_path"
    },
    {
        "index": 177,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <6> (weight: 9), <1> (weight: 1).\nNode <6> is connected to node <2> (weight: 9).\nNode <1> is connected to nodes <2> (weight: 1), <4> (weight: 3).\nNode <4> is connected to nodes <1> (weight: 3), <3> (weight: 8), <0> (weight: 5), <5> (weight: 2).\nNode <3> is connected to node <4> (weight: 8).\nNode <0> is connected to node <4> (weight: 5).\nNode <5> is connected to node <4> (weight: 2).\n\nCalculate the distance of the shortest path from node <4> to node <0>.\nAnswer:\n",
        "answer": "5",
        "type": "shortest_path"
    },
    {
        "index": 178,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3> (weight: 2), <0> (weight: 8), <1> (weight: 3), <5> (weight: 8), <4> (weight: 9).\nNode <3> is connected to nodes <2> (weight: 2), <0> (weight: 7), <1> (weight: 10), <4> (weight: 10).\nNode <0> is connected to nodes <2> (weight: 8), <3> (weight: 7), <1> (weight: 4), <5> (weight: 1), <4> (weight: 7).\nNode <1> is connected to nodes <2> (weight: 3), <3> (weight: 10), <0> (weight: 4), <4> (weight: 3).\nNode <5> is connected to nodes <2> (weight: 8), <0> (weight: 1).\nNode <4> is connected to nodes <2> (weight: 9), <3> (weight: 10), <0> (weight: 7), <1> (weight: 3).\n\nCalculate the distance of the shortest path from node <3> to node <4>.\nAnswer:\n",
        "answer": "8",
        "type": "shortest_path"
    },
    {
        "index": 179,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <6> (weight: 8), <0> (weight: 8), <2> (weight: 4), <3> (weight: 10).\nNode <6> is connected to nodes <1> (weight: 8), <0> (weight: 8), <2> (weight: 10), <4> (weight: 9), <3> (weight: 1), <5> (weight: 2).\nNode <0> is connected to nodes <1> (weight: 8), <6> (weight: 8), <2> (weight: 8), <4> (weight: 6), <3> (weight: 10).\nNode <2> is connected to nodes <1> (weight: 4), <6> (weight: 10), <0> (weight: 8), <4> (weight: 7), <3> (weight: 2), <5> (weight: 10).\nNode <3> is connected to nodes <1> (weight: 10), <6> (weight: 1), <0> (weight: 10), <2> (weight: 2), <4> (weight: 4).\nNode <4> is connected to nodes <6> (weight: 9), <0> (weight: 6), <2> (weight: 7), <3> (weight: 4).\nNode <5> is connected to nodes <6> (weight: 2), <2> (weight: 10).\n\nCalculate the distance of the shortest path from node <5> to node <3>.\nAnswer:\n",
        "answer": "3",
        "type": "shortest_path"
    },
    {
        "index": 180,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3> (weight: 3), <1> (weight: 2), <2> (weight: 9), <0> (weight: 8).\nNode <3> is connected to nodes <4> (weight: 3), <5> (weight: 1), <1> (weight: 5), <2> (weight: 5).\nNode <1> is connected to nodes <4> (weight: 2), <3> (weight: 5), <5> (weight: 4), <2> (weight: 10), <0> (weight: 5).\nNode <2> is connected to nodes <4> (weight: 9), <3> (weight: 5), <1> (weight: 10), <5> (weight: 2), <0> (weight: 4).\nNode <0> is connected to nodes <4> (weight: 8), <1> (weight: 5), <2> (weight: 4), <5> (weight: 10).\nNode <5> is connected to nodes <3> (weight: 1), <1> (weight: 4), <2> (weight: 2), <0> (weight: 10).\n\nCalculate the distance of the shortest path from node <3> to node <5>.\nAnswer:\n",
        "answer": "1",
        "type": "shortest_path"
    },
    {
        "index": 181,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2> (weight: 1), <4> (weight: 2), <1> (weight: 1).\nNode <2> is connected to nodes <0> (weight: 1), <4> (weight: 3).\nNode <4> is connected to nodes <0> (weight: 2), <2> (weight: 3).\nNode <1> is connected to nodes <0> (weight: 1), <3> (weight: 2).\nNode <3> is connected to nodes <1> (weight: 2), <5> (weight: 3).\nNode <5> is connected to node <3> (weight: 3).\n\nCalculate the distance of the shortest path from node <0> to node <2>.\nAnswer:\n",
        "answer": "1",
        "type": "shortest_path"
    },
    {
        "index": 182,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4> (weight: 7), <2> (weight: 7).\nNode <4> is connected to nodes <3> (weight: 7), <5> (weight: 10), <0> (weight: 2).\nNode <2> is connected to nodes <3> (weight: 7), <5> (weight: 9).\nNode <5> is connected to nodes <4> (weight: 10), <2> (weight: 9).\nNode <0> is connected to nodes <4> (weight: 2), <1> (weight: 10).\nNode <1> is connected to node <0> (weight: 10).\n\nCalculate the distance of the shortest path from node <0> to node <2>.\nAnswer:\n",
        "answer": "16",
        "type": "shortest_path"
    },
    {
        "index": 183,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3> (weight: 10), <5> (weight: 4).\nNode <3> is connected to node <1> (weight: 10).\nNode <5> is connected to nodes <1> (weight: 4), <4> (weight: 4), <2> (weight: 5), <0> (weight: 8).\nNode <4> is connected to node <5> (weight: 4).\nNode <2> is connected to node <5> (weight: 5).\nNode <0> is connected to node <5> (weight: 8).\n\nCalculate the distance of the shortest path from node <0> to node <5>.\nAnswer:\n",
        "answer": "8",
        "type": "shortest_path"
    },
    {
        "index": 184,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <1> (weight: 7), <4> (weight: 7), <6> (weight: 5).\nNode <1> is connected to nodes <5> (weight: 7), <0> (weight: 1), <4> (weight: 2).\nNode <4> is connected to nodes <5> (weight: 7), <1> (weight: 2).\nNode <6> is connected to nodes <5> (weight: 5), <2> (weight: 5).\nNode <0> is connected to node <1> (weight: 1).\nNode <2> is connected to nodes <6> (weight: 5), <3> (weight: 8).\nNode <3> is connected to node <2> (weight: 8).\n\nCalculate the distance of the shortest path from node <2> to node <3>.\nAnswer:\n",
        "answer": "8",
        "type": "shortest_path"
    },
    {
        "index": 185,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4> (weight: 3), <5> (weight: 3), <2> (weight: 7).\nNode <4> is connected to nodes <0> (weight: 3), <1> (weight: 2).\nNode <5> is connected to nodes <0> (weight: 3), <1> (weight: 8), <3> (weight: 5).\nNode <2> is connected to nodes <0> (weight: 7), <6> (weight: 9).\nNode <1> is connected to nodes <4> (weight: 2), <5> (weight: 8).\nNode <3> is connected to node <5> (weight: 5).\nNode <6> is connected to node <2> (weight: 9).\n\nCalculate the distance of the shortest path from node <1> to node <6>.\nAnswer:\n",
        "answer": "21",
        "type": "shortest_path"
    },
    {
        "index": 186,
        "question": "Given an undirected graph:\nNode <0> is connected to node <4> (weight: 3).\nNode <4> is connected to nodes <0> (weight: 3), <3> (weight: 4).\nNode <3> is connected to nodes <4> (weight: 4), <5> (weight: 1).\nNode <5> is connected to nodes <3> (weight: 1), <2> (weight: 9), <1> (weight: 6).\nNode <2> is connected to nodes <5> (weight: 9), <1> (weight: 6).\nNode <1> is connected to nodes <2> (weight: 6), <5> (weight: 6).\n\nCalculate the distance of the shortest path from node <1> to node <2>.\nAnswer:\n",
        "answer": "6",
        "type": "shortest_path"
    },
    {
        "index": 187,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0> (weight: 2), <2> (weight: 3).\nNode <0> is connected to nodes <4> (weight: 2), <3> (weight: 1).\nNode <2> is connected to nodes <4> (weight: 3), <1> (weight: 9), <5> (weight: 7).\nNode <3> is connected to node <0> (weight: 1).\nNode <1> is connected to node <2> (weight: 9).\nNode <5> is connected to node <2> (weight: 7).\n\nCalculate the distance of the shortest path from node <2> to node <0>.\nAnswer:\n",
        "answer": "5",
        "type": "shortest_path"
    },
    {
        "index": 188,
        "question": "Given an undirected graph:\nNode <3> is connected to node <5> (weight: 7).\nNode <5> is connected to nodes <3> (weight: 7), <0> (weight: 2), <4> (weight: 1).\nNode <0> is connected to nodes <5> (weight: 2), <1> (weight: 9).\nNode <4> is connected to nodes <5> (weight: 1), <1> (weight: 1).\nNode <1> is connected to nodes <0> (weight: 9), <4> (weight: 1), <2> (weight: 6).\nNode <2> is connected to node <1> (weight: 6).\n\nCalculate the distance of the shortest path from node <5> to node <0>.\nAnswer:\n",
        "answer": "2",
        "type": "shortest_path"
    },
    {
        "index": 189,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5> (weight: 8), <0> (weight: 4), <1> (weight: 8), <4> (weight: 2), <2> (weight: 3).\nNode <5> is connected to node <3> (weight: 8).\nNode <0> is connected to node <3> (weight: 4).\nNode <1> is connected to node <3> (weight: 8).\nNode <4> is connected to node <3> (weight: 2).\nNode <2> is connected to node <3> (weight: 3).\n\nCalculate the distance of the shortest path from node <5> to node <2>.\nAnswer:\n",
        "answer": "11",
        "type": "shortest_path"
    },
    {
        "index": 190,
        "question": "Given an undirected graph:\nNode <4> is connected to node <3> (weight: 10).\nNode <3> is connected to nodes <4> (weight: 10), <0> (weight: 1), <1> (weight: 9).\nNode <0> is connected to nodes <3> (weight: 1), <2> (weight: 6), <1> (weight: 8).\nNode <1> is connected to nodes <3> (weight: 9), <0> (weight: 8), <5> (weight: 7).\nNode <2> is connected to node <0> (weight: 6).\nNode <5> is connected to node <1> (weight: 7).\n\nCalculate the distance of the shortest path from node <1> to node <5>.\nAnswer:\n",
        "answer": "7",
        "type": "shortest_path"
    },
    {
        "index": 191,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2> (weight: 8), <4> (weight: 8).\nNode <2> is connected to nodes <1> (weight: 4), <5> (weight: 5).\nNode <1> is connected to node <0> (weight: 9).\nNode <0> is connected to nodes <3> (weight: 8), <2> (weight: 7), <1> (weight: 9), <4> (weight: 5).\nNode <3> is connected to nodes <2> (weight: 7), <0> (weight: 6).\n\nCalculate the distance of the shortest path from node <0> to node <5>.\nAnswer:\n",
        "answer": "12",
        "type": "shortest_path"
    },
    {
        "index": 192,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0> (weight: 5), <1> (weight: 8), <3> (weight: 6), <2> (weight: 3).\nNode <0> is connected to nodes <4> (weight: 5), <5> (weight: 4).\nNode <1> is connected to node <4> (weight: 8).\nNode <3> is connected to node <4> (weight: 6).\nNode <2> is connected to node <4> (weight: 3).\nNode <5> is connected to node <0> (weight: 4).\n\nCalculate the distance of the shortest path from node <3> to node <1>.\nAnswer:\n",
        "answer": "14",
        "type": "shortest_path"
    },
    {
        "index": 193,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <3> (weight: 5), <4> (weight: 9).\nNode <3> is connected to nodes <6> (weight: 5), <2> (weight: 1).\nNode <4> is connected to nodes <6> (weight: 9), <2> (weight: 10).\nNode <2> is connected to nodes <3> (weight: 1), <4> (weight: 10).\nNode <1> is connected to nodes <0> (weight: 8), <5> (weight: 8).\nNode <0> is connected to nodes <1> (weight: 8), <5> (weight: 1).\nNode <5> is connected to nodes <1> (weight: 8), <0> (weight: 1).\n\nCalculate the distance of the shortest path from node <4> to node <2>.\nAnswer:\n",
        "answer": "10",
        "type": "shortest_path"
    },
    {
        "index": 194,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5> (weight: 3), <0> (weight: 2).\nNode <5> is connected to node <3> (weight: 3).\nNode <0> is connected to nodes <3> (weight: 2), <2> (weight: 8), <1> (weight: 7), <4> (weight: 10).\nNode <2> is connected to node <0> (weight: 8).\nNode <1> is connected to node <0> (weight: 7).\nNode <4> is connected to node <0> (weight: 10).\n\nCalculate the distance of the shortest path from node <5> to node <1>.\nAnswer:\n",
        "answer": "12",
        "type": "shortest_path"
    },
    {
        "index": 195,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2> (weight: 3), <1> (weight: 8), <5> (weight: 4).\nNode <2> is connected to node <0> (weight: 3).\nNode <1> is connected to node <0> (weight: 8).\nNode <5> is connected to nodes <0> (weight: 4), <3> (weight: 5).\nNode <3> is connected to nodes <5> (weight: 5), <4> (weight: 8).\nNode <4> is connected to node <3> (weight: 8).\n\nCalculate the distance of the shortest path from node <4> to node <2>.\nAnswer:\n",
        "answer": "20",
        "type": "shortest_path"
    },
    {
        "index": 196,
        "question": "Given a directed graph:\nNode <4> is connected to node <2> (weight: 1).\nNode <2> is connected to nodes <1> (weight: 9), <5> (weight: 3).\nNode <1> is connected to nodes <5> (weight: 6), <2> (weight: 5).\nNode <5> is connected to nodes <0> (weight: 6), <2> (weight: 9), <1> (weight: 7).\nNode <0> is connected to nodes <3> (weight: 4), <4> (weight: 8).\nNode <3> is connected to nodes <4> (weight: 10), <5> (weight: 6), <0> (weight: 4), <2> (weight: 7).\n\nCalculate the distance of the shortest path from node <2> to node <5>.\nAnswer:\n",
        "answer": "3",
        "type": "shortest_path"
    },
    {
        "index": 197,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2> (weight: 6), <1> (weight: 2).\nNode <2> is connected to nodes <0> (weight: 6), <1> (weight: 2).\nNode <1> is connected to nodes <0> (weight: 2), <2> (weight: 2), <6> (weight: 7).\nNode <6> is connected to nodes <1> (weight: 7), <4> (weight: 10).\nNode <3> is connected to nodes <5> (weight: 5), <4> (weight: 8).\nNode <5> is connected to node <3> (weight: 5).\nNode <4> is connected to nodes <3> (weight: 8), <6> (weight: 10).\n\nCalculate the distance of the shortest path from node <1> to node <5>.\nAnswer:\n",
        "answer": "30",
        "type": "shortest_path"
    },
    {
        "index": 198,
        "question": "Given an undirected graph:\nNode <3> is connected to node <1> (weight: 4).\nNode <1> is connected to nodes <3> (weight: 4), <2> (weight: 5).\nNode <2> is connected to nodes <1> (weight: 5), <4> (weight: 3), <0> (weight: 8).\nNode <4> is connected to nodes <2> (weight: 3), <0> (weight: 5).\nNode <0> is connected to nodes <2> (weight: 8), <4> (weight: 5).\n\nCalculate the distance of the shortest path from node <4> to node <2>.\nAnswer:\n",
        "answer": "3",
        "type": "shortest_path"
    },
    {
        "index": 199,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3> (weight: 1), <1> (weight: 6), <5> (weight: 4).\nNode <3> is connected to nodes <0> (weight: 1), <2> (weight: 1), <4> (weight: 3).\nNode <1> is connected to node <0> (weight: 6).\nNode <5> is connected to node <0> (weight: 4).\nNode <2> is connected to node <3> (weight: 1).\nNode <4> is connected to node <3> (weight: 3).\n\nCalculate the distance of the shortest path from node <3> to node <4>.\nAnswer:\n",
        "answer": "3",
        "type": "shortest_path"
    },
    {
        "index": 200,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1> (weight: 3), <0> (weight: 2).\nNode <1> is connected to nodes <3> (weight: 3), <2> (weight: 5).\nNode <0> is connected to nodes <3> (weight: 2), <5> (weight: 10).\nNode <2> is connected to nodes <1> (weight: 5), <4> (weight: 1).\nNode <5> is connected to node <0> (weight: 10).\nNode <4> is connected to node <2> (weight: 1).\n\nCalculate the distance of the shortest path from node <2> to node <3>.\nAnswer:\n",
        "answer": "8",
        "type": "shortest_path"
    },
    {
        "index": 201,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2> (weight: 8), <1> (weight: 3).\nNode <2> is connected to nodes <4> (weight: 8), <1> (weight: 4).\nNode <1> is connected to nodes <4> (weight: 3), <2> (weight: 4), <3> (weight: 2).\nNode <3> is connected to nodes <1> (weight: 2), <0> (weight: 4).\nNode <0> is connected to node <3> (weight: 4).\n\nCalculate the distance of the shortest path from node <2> to node <3>.\nAnswer:\n",
        "answer": "6",
        "type": "shortest_path"
    },
    {
        "index": 202,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5> (weight: 9), <1> (weight: 3), <0> (weight: 7), <2> (weight: 8), <4> (weight: 8).\nNode <5> is connected to nodes <3> (weight: 9), <1> (weight: 7), <0> (weight: 10), <2> (weight: 3).\nNode <1> is connected to nodes <3> (weight: 3), <5> (weight: 7), <0> (weight: 9).\nNode <0> is connected to nodes <3> (weight: 7), <5> (weight: 10), <1> (weight: 9), <2> (weight: 10), <4> (weight: 10).\nNode <2> is connected to nodes <3> (weight: 8), <5> (weight: 3), <0> (weight: 10), <4> (weight: 9).\nNode <4> is connected to nodes <3> (weight: 8), <0> (weight: 10), <2> (weight: 9).\n\nCalculate the distance of the shortest path from node <1> to node <3>.\nAnswer:\n",
        "answer": "3",
        "type": "shortest_path"
    },
    {
        "index": 203,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5> (weight: 4), <0> (weight: 10), <3> (weight: 7), <2> (weight: 5), <1> (weight: 4).\nNode <5> is connected to node <4> (weight: 4).\nNode <0> is connected to node <4> (weight: 10).\nNode <3> is connected to nodes <4> (weight: 7), <6> (weight: 9).\nNode <2> is connected to node <4> (weight: 5).\nNode <1> is connected to node <4> (weight: 4).\nNode <6> is connected to node <3> (weight: 9).\n\nCalculate the distance of the shortest path from node <1> to node <2>.\nAnswer:\n",
        "answer": "9",
        "type": "shortest_path"
    },
    {
        "index": 204,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <5> (weight: 8), <1> (weight: 4), <4> (weight: 9).\nNode <5> is connected to nodes <0> (weight: 8), <2> (weight: 9).\nNode <1> is connected to node <0> (weight: 4).\nNode <4> is connected to nodes <0> (weight: 9), <2> (weight: 5).\nNode <2> is connected to nodes <5> (weight: 9), <4> (weight: 5), <3> (weight: 8).\nNode <3> is connected to node <2> (weight: 8).\n\nCalculate the distance of the shortest path from node <1> to node <3>.\nAnswer:\n",
        "answer": "26",
        "type": "shortest_path"
    },
    {
        "index": 205,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2> (weight: 4), <3> (weight: 2), <1> (weight: 2).\nNode <2> is connected to nodes <4> (weight: 4), <5> (weight: 6).\nNode <3> is connected to nodes <4> (weight: 2), <0> (weight: 10).\nNode <1> is connected to node <4> (weight: 2).\nNode <5> is connected to node <2> (weight: 6).\nNode <0> is connected to node <3> (weight: 10).\n\nCalculate the distance of the shortest path from node <5> to node <3>.\nAnswer:\n",
        "answer": "12",
        "type": "shortest_path"
    },
    {
        "index": 206,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1> (weight: 6), <0> (weight: 2), <4> (weight: 6), <2> (weight: 8).\nNode <1> is connected to nodes <3> (weight: 6), <5> (weight: 5), <0> (weight: 1), <2> (weight: 3).\nNode <0> is connected to nodes <3> (weight: 2), <1> (weight: 1), <4> (weight: 6), <2> (weight: 9).\nNode <4> is connected to nodes <3> (weight: 6), <0> (weight: 6), <5> (weight: 4), <2> (weight: 4).\nNode <2> is connected to nodes <3> (weight: 8), <1> (weight: 3), <0> (weight: 9), <4> (weight: 4), <5> (weight: 5).\nNode <5> is connected to nodes <1> (weight: 5), <4> (weight: 4), <2> (weight: 5).\n\nCalculate the distance of the shortest path from node <4> to node <5>.\nAnswer:\n",
        "answer": "4",
        "type": "shortest_path"
    },
    {
        "index": 207,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4> (weight: 6), <0> (weight: 5), <2> (weight: 3), <1> (weight: 6).\nNode <4> is connected to nodes <2> (weight: 8), <1> (weight: 1).\nNode <0> is connected to nodes <2> (weight: 8), <1> (weight: 7), <3> (weight: 1).\nNode <1> is connected to node <3> (weight: 2).\n\nCalculate the distance of the shortest path from node <3> to node <2>.\nAnswer:\n",
        "answer": "3",
        "type": "shortest_path"
    },
    {
        "index": 208,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <5> (weight: 6), <0> (weight: 7).\nNode <5> is connected to nodes <1> (weight: 7), <0> (weight: 4), <4> (weight: 4), <3> (weight: 2).\nNode <0> is connected to nodes <4> (weight: 1), <3> (weight: 1), <5> (weight: 1), <1> (weight: 7).\nNode <1> is connected to nodes <0> (weight: 7), <4> (weight: 1).\nNode <3> is connected to nodes <1> (weight: 6), <2> (weight: 3), <4> (weight: 10).\nNode <2> is connected to node <3> (weight: 1).\n\nCalculate the distance of the shortest path from node <1> to node <0>.\nAnswer:\n",
        "answer": "7",
        "type": "shortest_path"
    },
    {
        "index": 209,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1> (weight: 7), <2> (weight: 1), <0> (weight: 4).\nNode <1> is connected to node <4> (weight: 7).\nNode <2> is connected to nodes <4> (weight: 1), <3> (weight: 9).\nNode <0> is connected to node <4> (weight: 4).\nNode <3> is connected to node <2> (weight: 9).\n\nCalculate the distance of the shortest path from node <1> to node <4>.\nAnswer:\n",
        "answer": "7",
        "type": "shortest_path"
    },
    {
        "index": 210,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2> (weight: 10), <6> (weight: 9).\nNode <2> is connected to nodes <0> (weight: 7), <3> (weight: 9).\nNode <6> is connected to nodes <3> (weight: 8), <5> (weight: 4).\nNode <0> is connected to nodes <3> (weight: 5), <5> (weight: 8), <1> (weight: 8), <6> (weight: 9).\nNode <3> is connected to nodes <2> (weight: 7), <4> (weight: 2), <1> (weight: 5), <6> (weight: 4), <0> (weight: 1).\nNode <1> is connected to nodes <3> (weight: 7), <5> (weight: 10), <2> (weight: 2).\nNode <4> is connected to node <1> (weight: 2).\n\nCalculate the distance of the shortest path from node <1> to node <0>.\nAnswer:\n",
        "answer": "8",
        "type": "shortest_path"
    },
    {
        "index": 211,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1> (weight: 2), <2> (weight: 7), <0> (weight: 5), <4> (weight: 4).\nNode <1> is connected to node <3> (weight: 2).\nNode <2> is connected to node <3> (weight: 7).\nNode <0> is connected to node <3> (weight: 5).\nNode <4> is connected to node <3> (weight: 4).\n\nCalculate the distance of the shortest path from node <0> to node <2>.\nAnswer:\n",
        "answer": "12",
        "type": "shortest_path"
    },
    {
        "index": 212,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1> (weight: 9), <2> (weight: 7).\nNode <1> is connected to nodes <0> (weight: 9), <3> (weight: 5).\nNode <2> is connected to nodes <0> (weight: 7), <4> (weight: 9).\nNode <3> is connected to node <1> (weight: 5).\nNode <4> is connected to node <2> (weight: 9).\n\nCalculate the distance of the shortest path from node <4> to node <0>.\nAnswer:\n",
        "answer": "16",
        "type": "shortest_path"
    },
    {
        "index": 213,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4> (weight: 7), <2> (weight: 5), <3> (weight: 8), <1> (weight: 7).\nNode <4> is connected to nodes <0> (weight: 7), <5> (weight: 2), <3> (weight: 9).\nNode <2> is connected to nodes <0> (weight: 5), <5> (weight: 5), <3> (weight: 10).\nNode <3> is connected to nodes <0> (weight: 8), <4> (weight: 9), <2> (weight: 10), <1> (weight: 6).\nNode <1> is connected to nodes <0> (weight: 7), <3> (weight: 6).\nNode <5> is connected to nodes <4> (weight: 2), <2> (weight: 5).\n\nCalculate the distance of the shortest path from node <0> to node <4>.\nAnswer:\n",
        "answer": "7",
        "type": "shortest_path"
    },
    {
        "index": 214,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3> (weight: 8), <4> (weight: 9).\nNode <3> is connected to nodes <0> (weight: 8), <2> (weight: 10), <1> (weight: 8).\nNode <4> is connected to nodes <0> (weight: 9), <1> (weight: 5).\nNode <2> is connected to node <3> (weight: 10).\nNode <1> is connected to nodes <3> (weight: 8), <4> (weight: 5).\n\nCalculate the distance of the shortest path from node <3> to node <2>.\nAnswer:\n",
        "answer": "10",
        "type": "shortest_path"
    },
    {
        "index": 215,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <6> (weight: 2), <2> (weight: 10), <4> (weight: 2).\nNode <6> is connected to nodes <5> (weight: 2), <3> (weight: 4).\nNode <2> is connected to nodes <5> (weight: 10), <4> (weight: 7).\nNode <4> is connected to nodes <5> (weight: 2), <2> (weight: 7).\nNode <3> is connected to nodes <6> (weight: 4), <1> (weight: 10).\nNode <1> is connected to nodes <3> (weight: 10), <0> (weight: 1).\nNode <0> is connected to node <1> (weight: 1).\n\nCalculate the distance of the shortest path from node <0> to node <6>.\nAnswer:\n",
        "answer": "15",
        "type": "shortest_path"
    },
    {
        "index": 216,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4> (weight: 4), <2> (weight: 5), <3> (weight: 10).\nNode <4> is connected to nodes <0> (weight: 9), <3> (weight: 4).\nNode <2> is connected to nodes <3> (weight: 9), <1> (weight: 8), <4> (weight: 1), <0> (weight: 3).\n\nCalculate the distance of the shortest path from node <4> to node <0>.\nAnswer:\n",
        "answer": "9",
        "type": "shortest_path"
    },
    {
        "index": 217,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <4> (weight: 2), <0> (weight: 1), <3> (weight: 6), <1> (weight: 5), <5> (weight: 1).\nNode <4> is connected to nodes <2> (weight: 2), <3> (weight: 8), <5> (weight: 2).\nNode <0> is connected to nodes <2> (weight: 1), <3> (weight: 3), <1> (weight: 10), <5> (weight: 8).\nNode <3> is connected to nodes <2> (weight: 6), <4> (weight: 8), <0> (weight: 3), <5> (weight: 4).\nNode <1> is connected to nodes <2> (weight: 5), <0> (weight: 10), <5> (weight: 3).\nNode <5> is connected to nodes <2> (weight: 1), <4> (weight: 2), <0> (weight: 8), <3> (weight: 4), <1> (weight: 3).\n\nCalculate the distance of the shortest path from node <3> to node <0>.\nAnswer:\n",
        "answer": "3",
        "type": "shortest_path"
    },
    {
        "index": 218,
        "question": "Given a directed graph:\nNode <2> is connected to node <3> (weight: 9).\nNode <3> is connected to nodes <0> (weight: 4), <2> (weight: 4), <4> (weight: 6), <1> (weight: 4).\nNode <0> is connected to nodes <4> (weight: 8), <3> (weight: 8).\nNode <4> is connected to nodes <1> (weight: 6), <3> (weight: 4), <2> (weight: 1).\nNode <1> is connected to nodes <0> (weight: 7), <2> (weight: 1), <4> (weight: 9).\n\nCalculate the distance of the shortest path from node <4> to node <3>.\nAnswer:\n",
        "answer": "4",
        "type": "shortest_path"
    },
    {
        "index": 219,
        "question": "Given an undirected graph:\nNode <0> is connected to node <4> (weight: 7).\nNode <4> is connected to nodes <0> (weight: 7), <1> (weight: 8), <3> (weight: 5).\nNode <1> is connected to nodes <4> (weight: 8), <2> (weight: 7).\nNode <3> is connected to node <4> (weight: 5).\nNode <2> is connected to node <1> (weight: 7).\n\nCalculate the distance of the shortest path from node <0> to node <1>.\nAnswer:\n",
        "answer": "15",
        "type": "shortest_path"
    },
    {
        "index": 220,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <6> (weight: 1), <4> (weight: 2), <0> (weight: 10).\nNode <6> is connected to nodes <2> (weight: 1), <4> (weight: 4), <5> (weight: 4), <0> (weight: 2).\nNode <4> is connected to nodes <2> (weight: 2), <6> (weight: 4), <1> (weight: 1), <3> (weight: 5), <0> (weight: 7).\nNode <0> is connected to nodes <2> (weight: 10), <6> (weight: 2), <4> (weight: 7), <1> (weight: 1), <5> (weight: 5), <3> (weight: 3).\nNode <5> is connected to nodes <6> (weight: 4), <0> (weight: 5).\nNode <1> is connected to nodes <4> (weight: 1), <0> (weight: 1).\nNode <3> is connected to nodes <4> (weight: 5), <0> (weight: 3).\n\nCalculate the distance of the shortest path from node <1> to node <6>.\nAnswer:\n",
        "answer": "3",
        "type": "shortest_path"
    },
    {
        "index": 221,
        "question": "Given an undirected graph:\nNode <0> is connected to node <1> (weight: 3).\nNode <1> is connected to nodes <0> (weight: 3), <3> (weight: 6), <2> (weight: 7).\nNode <3> is connected to nodes <1> (weight: 6), <4> (weight: 2).\nNode <2> is connected to node <1> (weight: 7).\nNode <4> is connected to node <3> (weight: 2).\n\nCalculate the distance of the shortest path from node <0> to node <3>.\nAnswer:\n",
        "answer": "9",
        "type": "shortest_path"
    },
    {
        "index": 222,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5> (weight: 1), <0> (weight: 4), <1> (weight: 8).\nNode <5> is connected to nodes <4> (weight: 1), <3> (weight: 2).\nNode <0> is connected to node <4> (weight: 4).\nNode <1> is connected to nodes <4> (weight: 8), <2> (weight: 4).\nNode <3> is connected to nodes <5> (weight: 2), <2> (weight: 5).\nNode <2> is connected to nodes <1> (weight: 4), <3> (weight: 5).\n\nCalculate the distance of the shortest path from node <5> to node <4>.\nAnswer:\n",
        "answer": "1",
        "type": "shortest_path"
    },
    {
        "index": 223,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2> (weight: 1), <4> (weight: 4), <6> (weight: 7), <0> (weight: 3).\nNode <2> is connected to nodes <6> (weight: 2), <5> (weight: 9), <3> (weight: 7), <1> (weight: 6).\nNode <4> is connected to nodes <5> (weight: 3), <3> (weight: 6), <0> (weight: 5).\nNode <6> is connected to nodes <5> (weight: 2), <1> (weight: 2), <2> (weight: 10), <4> (weight: 2).\nNode <0> is connected to nodes <2> (weight: 5), <4> (weight: 7), <6> (weight: 2).\nNode <5> is connected to nodes <3> (weight: 5), <2> (weight: 3).\nNode <3> is connected to nodes <2> (weight: 2), <5> (weight: 7).\n\nCalculate the distance of the shortest path from node <1> to node <0>.\nAnswer:\n",
        "answer": "3",
        "type": "shortest_path"
    },
    {
        "index": 224,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5> (weight: 7), <3> (weight: 5), <1> (weight: 9).\nNode <5> is connected to node <4> (weight: 7).\nNode <3> is connected to nodes <4> (weight: 5), <2> (weight: 8), <0> (weight: 8).\nNode <1> is connected to node <4> (weight: 9).\nNode <2> is connected to node <3> (weight: 8).\nNode <0> is connected to node <3> (weight: 8).\n\nCalculate the distance of the shortest path from node <4> to node <2>.\nAnswer:\n",
        "answer": "13",
        "type": "shortest_path"
    },
    {
        "index": 225,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <6> (weight: 7), <1> (weight: 10), <5> (weight: 1).\nNode <6> is connected to nodes <3> (weight: 7), <5> (weight: 9), <4> (weight: 1).\nNode <5> is connected to nodes <0> (weight: 5), <3> (weight: 5).\nNode <3> is connected to nodes <1> (weight: 6), <4> (weight: 6), <2> (weight: 3).\nNode <0> is connected to nodes <2> (weight: 8), <1> (weight: 7).\nNode <2> is connected to node <4> (weight: 6).\n\nCalculate the distance of the shortest path from node <3> to node <2>.\nAnswer:\n",
        "answer": "3",
        "type": "shortest_path"
    },
    {
        "index": 226,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2> (weight: 9), <4> (weight: 3).\nNode <2> is connected to nodes <1> (weight: 9), <0> (weight: 2).\nNode <4> is connected to node <1> (weight: 1).\nNode <1> is connected to nodes <3> (weight: 1), <0> (weight: 7).\nNode <0> is connected to nodes <2> (weight: 3), <1> (weight: 8).\n\nCalculate the distance of the shortest path from node <0> to node <1>.\nAnswer:\n",
        "answer": "8",
        "type": "shortest_path"
    },
    {
        "index": 227,
        "question": "Given an undirected graph:\nNode <1> is connected to node <0> (weight: 2).\nNode <0> is connected to nodes <1> (weight: 2), <3> (weight: 5), <2> (weight: 6).\nNode <3> is connected to node <0> (weight: 5).\nNode <2> is connected to nodes <0> (weight: 6), <4> (weight: 7).\nNode <4> is connected to node <2> (weight: 7).\n\nCalculate the distance of the shortest path from node <4> to node <3>.\nAnswer:\n",
        "answer": "18",
        "type": "shortest_path"
    },
    {
        "index": 228,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2> (weight: 2), <3> (weight: 3), <4> (weight: 6).\nNode <2> is connected to nodes <0> (weight: 2), <1> (weight: 10).\nNode <3> is connected to nodes <0> (weight: 3), <1> (weight: 4).\nNode <4> is connected to node <0> (weight: 6).\nNode <1> is connected to nodes <2> (weight: 10), <3> (weight: 4).\n\nCalculate the distance of the shortest path from node <3> to node <4>.\nAnswer:\n",
        "answer": "9",
        "type": "shortest_path"
    },
    {
        "index": 229,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1> (weight: 7), <6> (weight: 10).\nNode <1> is connected to nodes <2> (weight: 7), <0> (weight: 1).\nNode <6> is connected to nodes <2> (weight: 10), <5> (weight: 6).\nNode <0> is connected to nodes <1> (weight: 1), <3> (weight: 5).\nNode <5> is connected to nodes <6> (weight: 6), <4> (weight: 2).\nNode <3> is connected to nodes <0> (weight: 5), <4> (weight: 10).\nNode <4> is connected to nodes <3> (weight: 10), <5> (weight: 2).\n\nCalculate the distance of the shortest path from node <2> to node <5>.\nAnswer:\n",
        "answer": "16",
        "type": "shortest_path"
    },
    {
        "index": 230,
        "question": "Given a directed graph:\nNode <5> is connected to node <1> (weight: 1).\nNode <1> is connected to nodes <3> (weight: 7), <5> (weight: 4).\nNode <3> is connected to nodes <2> (weight: 10), <5> (weight: 4).\nNode <0> is connected to nodes <3> (weight: 8), <4> (weight: 5), <5> (weight: 2).\nNode <4> is connected to nodes <0> (weight: 9), <2> (weight: 8).\nNode <2> is connected to node <0> (weight: 2).\n\nCalculate the distance of the shortest path from node <2> to node <5>.\nAnswer:\n",
        "answer": "4",
        "type": "shortest_path"
    },
    {
        "index": 231,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <1> (weight: 4), <5> (weight: 5), <0> (weight: 8), <2> (weight: 10).\nNode <1> is connected to nodes <4> (weight: 4), <5> (weight: 6), <2> (weight: 5).\nNode <5> is connected to nodes <4> (weight: 5), <1> (weight: 6), <3> (weight: 6), <0> (weight: 2), <2> (weight: 3).\nNode <0> is connected to nodes <4> (weight: 8), <5> (weight: 2), <3> (weight: 4), <2> (weight: 5).\nNode <2> is connected to nodes <4> (weight: 10), <1> (weight: 5), <5> (weight: 3), <0> (weight: 5).\nNode <3> is connected to nodes <5> (weight: 6), <0> (weight: 4).\n\nCalculate the distance of the shortest path from node <3> to node <0>.\nAnswer:\n",
        "answer": "4",
        "type": "shortest_path"
    },
    {
        "index": 232,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <4> (weight: 6), <5> (weight: 9).\nNode <4> is connected to nodes <6> (weight: 6), <3> (weight: 1).\nNode <5> is connected to node <6> (weight: 9).\nNode <3> is connected to nodes <4> (weight: 1), <0> (weight: 9), <1> (weight: 1), <2> (weight: 2).\nNode <0> is connected to nodes <3> (weight: 9), <1> (weight: 2).\nNode <1> is connected to nodes <3> (weight: 1), <0> (weight: 2).\nNode <2> is connected to node <3> (weight: 2).\n\nCalculate the distance of the shortest path from node <3> to node <0>.\nAnswer:\n",
        "answer": "3",
        "type": "shortest_path"
    },
    {
        "index": 233,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5> (weight: 3), <2> (weight: 10).\nNode <5> is connected to nodes <3> (weight: 3), <1> (weight: 4).\nNode <2> is connected to nodes <3> (weight: 10), <4> (weight: 3).\nNode <1> is connected to nodes <5> (weight: 4), <0> (weight: 9).\nNode <4> is connected to nodes <2> (weight: 3), <0> (weight: 10).\nNode <0> is connected to nodes <1> (weight: 9), <4> (weight: 10).\n\nCalculate the distance of the shortest path from node <2> to node <5>.\nAnswer:\n",
        "answer": "13",
        "type": "shortest_path"
    },
    {
        "index": 234,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2> (weight: 4), <3> (weight: 9).\nNode <2> is connected to node <6> (weight: 3).\nNode <3> is connected to nodes <6> (weight: 8), <5> (weight: 5), <4> (weight: 2).\nNode <6> is connected to nodes <2> (weight: 4), <0> (weight: 5).\nNode <4> is connected to nodes <1> (weight: 9), <2> (weight: 1), <0> (weight: 4).\nNode <0> is connected to nodes <1> (weight: 1), <5> (weight: 3).\nNode <1> is connected to node <3> (weight: 8).\n\nCalculate the distance of the shortest path from node <0> to node <3>.\nAnswer:\n",
        "answer": "9",
        "type": "shortest_path"
    },
    {
        "index": 235,
        "question": "Given a directed graph:\nNode <0> is connected to node <1> (weight: 1).\nNode <1> is connected to nodes <2> (weight: 7), <3> (weight: 4).\nNode <2> is connected to node <1> (weight: 3).\nNode <3> is connected to node <0> (weight: 4).\nNode <5> is connected to node <4> (weight: 7).\nNode <4> is connected to nodes <0> (weight: 4), <1> (weight: 3).\n\nCalculate the distance of the shortest path from node <4> to node <1>.\nAnswer:\n",
        "answer": "3",
        "type": "shortest_path"
    },
    {
        "index": 236,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5> (weight: 3), <0> (weight: 6), <1> (weight: 6), <2> (weight: 10).\nNode <5> is connected to node <3> (weight: 3).\nNode <0> is connected to nodes <3> (weight: 6), <4> (weight: 6).\nNode <1> is connected to node <3> (weight: 6).\nNode <2> is connected to node <3> (weight: 10).\nNode <4> is connected to node <0> (weight: 6).\n\nCalculate the distance of the shortest path from node <4> to node <1>.\nAnswer:\n",
        "answer": "18",
        "type": "shortest_path"
    },
    {
        "index": 237,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <0> (weight: 5), <2> (weight: 4).\nNode <0> is connected to node <4> (weight: 5).\nNode <2> is connected to nodes <4> (weight: 4), <3> (weight: 2), <1> (weight: 1).\nNode <3> is connected to node <2> (weight: 2).\nNode <1> is connected to node <2> (weight: 1).\n\nCalculate the distance of the shortest path from node <1> to node <0>.\nAnswer:\n",
        "answer": "10",
        "type": "shortest_path"
    },
    {
        "index": 238,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1> (weight: 2), <3> (weight: 3).\nNode <1> is connected to nodes <2> (weight: 2), <4> (weight: 10).\nNode <3> is connected to nodes <2> (weight: 3), <0> (weight: 4).\nNode <4> is connected to node <1> (weight: 10).\nNode <0> is connected to node <3> (weight: 4).\n\nCalculate the distance of the shortest path from node <3> to node <0>.\nAnswer:\n",
        "answer": "4",
        "type": "shortest_path"
    },
    {
        "index": 239,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3> (weight: 4), <2> (weight: 1).\nNode <3> is connected to nodes <0> (weight: 4), <2> (weight: 8).\nNode <2> is connected to nodes <0> (weight: 1), <3> (weight: 8), <5> (weight: 10), <1> (weight: 8).\nNode <5> is connected to node <2> (weight: 10).\nNode <1> is connected to nodes <2> (weight: 8), <4> (weight: 7).\nNode <4> is connected to node <1> (weight: 7).\n\nCalculate the distance of the shortest path from node <5> to node <2>.\nAnswer:\n",
        "answer": "10",
        "type": "shortest_path"
    },
    {
        "index": 240,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <1> (weight: 5), <4> (weight: 8).\nNode <1> is connected to nodes <2> (weight: 5), <3> (weight: 9), <4> (weight: 5).\nNode <4> is connected to nodes <2> (weight: 8), <1> (weight: 5).\nNode <3> is connected to nodes <1> (weight: 9), <0> (weight: 9).\nNode <0> is connected to node <3> (weight: 9).\n\nCalculate the distance of the shortest path from node <2> to node <4>.\nAnswer:\n",
        "answer": "8",
        "type": "shortest_path"
    },
    {
        "index": 241,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <6> (weight: 1), <4> (weight: 10), <5> (weight: 9), <0> (weight: 9), <3> (weight: 6).\nNode <6> is connected to nodes <2> (weight: 1), <4> (weight: 3), <5> (weight: 3), <1> (weight: 3), <0> (weight: 10), <3> (weight: 5).\nNode <4> is connected to nodes <2> (weight: 10), <6> (weight: 3), <5> (weight: 1), <0> (weight: 6).\nNode <5> is connected to nodes <2> (weight: 9), <6> (weight: 3), <4> (weight: 1), <1> (weight: 2), <0> (weight: 4), <3> (weight: 6).\nNode <0> is connected to nodes <2> (weight: 9), <6> (weight: 10), <4> (weight: 6), <5> (weight: 4).\nNode <3> is connected to nodes <2> (weight: 6), <6> (weight: 5), <5> (weight: 6).\nNode <1> is connected to nodes <6> (weight: 3), <5> (weight: 2).\n\nCalculate the distance of the shortest path from node <2> to node <4>.\nAnswer:\n",
        "answer": "4",
        "type": "shortest_path"
    },
    {
        "index": 242,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2> (weight: 7), <1> (weight: 5), <6> (weight: 10), <3> (weight: 4), <4> (weight: 4).\nNode <2> is connected to nodes <0> (weight: 7), <6> (weight: 6).\nNode <1> is connected to nodes <0> (weight: 5), <4> (weight: 3).\nNode <6> is connected to nodes <0> (weight: 10), <2> (weight: 6), <4> (weight: 2).\nNode <3> is connected to nodes <0> (weight: 4), <4> (weight: 1).\nNode <4> is connected to nodes <0> (weight: 4), <1> (weight: 3), <6> (weight: 2), <3> (weight: 1), <5> (weight: 9).\nNode <5> is connected to node <4> (weight: 9).\n\nCalculate the distance of the shortest path from node <0> to node <4>.\nAnswer:\n",
        "answer": "4",
        "type": "shortest_path"
    },
    {
        "index": 243,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1> (weight: 1), <0> (weight: 3), <2> (weight: 9).\nNode <1> is connected to node <3> (weight: 1).\nNode <0> is connected to nodes <3> (weight: 3), <5> (weight: 4).\nNode <2> is connected to node <3> (weight: 9).\nNode <5> is connected to nodes <0> (weight: 4), <4> (weight: 2).\nNode <4> is connected to node <5> (weight: 2).\n\nCalculate the distance of the shortest path from node <5> to node <2>.\nAnswer:\n",
        "answer": "16",
        "type": "shortest_path"
    },
    {
        "index": 244,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4> (weight: 2), <1> (weight: 5), <3> (weight: 6).\nNode <4> is connected to nodes <0> (weight: 2), <5> (weight: 7).\nNode <1> is connected to nodes <0> (weight: 5), <3> (weight: 7), <2> (weight: 2).\nNode <3> is connected to nodes <0> (weight: 6), <1> (weight: 7).\nNode <5> is connected to node <4> (weight: 7).\nNode <2> is connected to node <1> (weight: 2).\n\nCalculate the distance of the shortest path from node <1> to node <3>.\nAnswer:\n",
        "answer": "7",
        "type": "shortest_path"
    },
    {
        "index": 245,
        "question": "Given a directed graph:\nNode <4> is connected to node <3> (weight: 7).\nNode <3> is connected to node <0> (weight: 5).\nNode <0> is connected to nodes <4> (weight: 1), <3> (weight: 1), <2> (weight: 8), <5> (weight: 10), <1> (weight: 10).\nNode <2> is connected to nodes <0> (weight: 4), <4> (weight: 1).\nNode <5> is connected to nodes <0> (weight: 1), <3> (weight: 9), <2> (weight: 4).\nNode <1> is connected to nodes <4> (weight: 3), <2> (weight: 9).\n\nCalculate the distance of the shortest path from node <3> to node <0>.\nAnswer:\n",
        "answer": "5",
        "type": "shortest_path"
    },
    {
        "index": 246,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4> (weight: 8), <2> (weight: 7), <1> (weight: 5).\nNode <4> is connected to node <0> (weight: 8).\nNode <2> is connected to node <0> (weight: 7).\nNode <1> is connected to nodes <0> (weight: 5), <3> (weight: 5).\nNode <3> is connected to node <1> (weight: 5).\n\nCalculate the distance of the shortest path from node <3> to node <2>.\nAnswer:\n",
        "answer": "17",
        "type": "shortest_path"
    },
    {
        "index": 247,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3> (weight: 5), <2> (weight: 8).\nNode <3> is connected to nodes <1> (weight: 5), <4> (weight: 2).\nNode <2> is connected to nodes <1> (weight: 8), <0> (weight: 4).\nNode <4> is connected to node <3> (weight: 2).\nNode <0> is connected to node <2> (weight: 4).\n\nCalculate the distance of the shortest path from node <0> to node <2>.\nAnswer:\n",
        "answer": "4",
        "type": "shortest_path"
    },
    {
        "index": 248,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2> (weight: 6), <5> (weight: 3), <6> (weight: 1).\nNode <2> is connected to nodes <0> (weight: 6), <3> (weight: 4), <4> (weight: 9).\nNode <5> is connected to nodes <0> (weight: 3), <1> (weight: 3).\nNode <6> is connected to node <0> (weight: 1).\nNode <3> is connected to node <2> (weight: 4).\nNode <4> is connected to node <2> (weight: 9).\nNode <1> is connected to node <5> (weight: 3).\n\nCalculate the distance of the shortest path from node <4> to node <2>.\nAnswer:\n",
        "answer": "9",
        "type": "shortest_path"
    },
    {
        "index": 249,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3> (weight: 1), <0> (weight: 8).\nNode <3> is connected to nodes <0> (weight: 2), <4> (weight: 2), <1> (weight: 5), <2> (weight: 9).\nNode <0> is connected to nodes <4> (weight: 3), <1> (weight: 8), <3> (weight: 7).\nNode <4> is connected to node <3> (weight: 10).\nNode <2> is connected to nodes <0> (weight: 3), <4> (weight: 8).\n\nCalculate the distance of the shortest path from node <3> to node <4>.\nAnswer:\n",
        "answer": "2",
        "type": "shortest_path"
    },
    {
        "index": 250,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <3> (weight: 8), <2> (weight: 4).\nNode <3> is connected to nodes <4> (weight: 8), <1> (weight: 9), <0> (weight: 8), <5> (weight: 9).\nNode <2> is connected to node <4> (weight: 4).\nNode <1> is connected to nodes <3> (weight: 9), <0> (weight: 2).\nNode <0> is connected to nodes <3> (weight: 8), <1> (weight: 2).\nNode <5> is connected to node <3> (weight: 9).\n\nCalculate the distance of the shortest path from node <4> to node <1>.\nAnswer:\n",
        "answer": "17",
        "type": "shortest_path"
    },
    {
        "index": 251,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4> (weight: 2), <2> (weight: 3).\nNode <4> is connected to nodes <0> (weight: 2), <5> (weight: 2), <3> (weight: 9).\nNode <2> is connected to nodes <0> (weight: 3), <1> (weight: 6).\nNode <5> is connected to nodes <4> (weight: 2), <3> (weight: 6).\nNode <3> is connected to nodes <4> (weight: 9), <5> (weight: 6).\nNode <1> is connected to node <2> (weight: 6).\n\nCalculate the distance of the shortest path from node <2> to node <5>.\nAnswer:\n",
        "answer": "7",
        "type": "shortest_path"
    },
    {
        "index": 252,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3> (weight: 10), <5> (weight: 10).\nNode <3> is connected to nodes <0> (weight: 10), <2> (weight: 5), <4> (weight: 8).\nNode <5> is connected to nodes <0> (weight: 10), <4> (weight: 9).\nNode <2> is connected to nodes <3> (weight: 5), <1> (weight: 1).\nNode <4> is connected to nodes <3> (weight: 8), <5> (weight: 9).\nNode <1> is connected to node <2> (weight: 1).\n\nCalculate the distance of the shortest path from node <1> to node <3>.\nAnswer:\n",
        "answer": "6",
        "type": "shortest_path"
    },
    {
        "index": 253,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <2> (weight: 10), <5> (weight: 3), <1> (weight: 1).\nNode <2> is connected to node <3> (weight: 10).\nNode <5> is connected to node <3> (weight: 3).\nNode <1> is connected to nodes <3> (weight: 1), <0> (weight: 6), <4> (weight: 4).\nNode <0> is connected to node <1> (weight: 6).\nNode <4> is connected to node <1> (weight: 4).\n\nCalculate the distance of the shortest path from node <5> to node <2>.\nAnswer:\n",
        "answer": "13",
        "type": "shortest_path"
    },
    {
        "index": 254,
        "question": "Given an undirected graph:\nNode <5> is connected to node <4> (weight: 5).\nNode <4> is connected to nodes <5> (weight: 5), <0> (weight: 4), <3> (weight: 2).\nNode <0> is connected to node <4> (weight: 4).\nNode <3> is connected to nodes <4> (weight: 2), <2> (weight: 10), <1> (weight: 5).\nNode <2> is connected to node <3> (weight: 10).\nNode <1> is connected to node <3> (weight: 5).\n\nCalculate the distance of the shortest path from node <2> to node <0>.\nAnswer:\n",
        "answer": "16",
        "type": "shortest_path"
    },
    {
        "index": 255,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5> (weight: 10), <1> (weight: 5).\nNode <5> is connected to node <4> (weight: 10).\nNode <1> is connected to nodes <4> (weight: 5), <2> (weight: 7).\nNode <2> is connected to nodes <1> (weight: 7), <3> (weight: 1), <0> (weight: 7), <6> (weight: 8).\nNode <3> is connected to node <2> (weight: 1).\nNode <0> is connected to node <2> (weight: 7).\nNode <6> is connected to node <2> (weight: 8).\n\nCalculate the distance of the shortest path from node <6> to node <3>.\nAnswer:\n",
        "answer": "9",
        "type": "shortest_path"
    },
    {
        "index": 256,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1> (weight: 2), <2> (weight: 3), <0> (weight: 1).\nNode <1> is connected to node <3> (weight: 2).\nNode <2> is connected to node <3> (weight: 3).\nNode <0> is connected to nodes <3> (weight: 1), <5> (weight: 9).\nNode <5> is connected to nodes <0> (weight: 9), <4> (weight: 4).\nNode <4> is connected to node <5> (weight: 4).\n\nCalculate the distance of the shortest path from node <0> to node <3>.\nAnswer:\n",
        "answer": "1",
        "type": "shortest_path"
    },
    {
        "index": 257,
        "question": "Given a directed graph:\nNode <5> is connected to node <2> (weight: 4).\nNode <2> is connected to nodes <3> (weight: 6), <5> (weight: 2).\nNode <3> is connected to node <0> (weight: 10).\nNode <0> is connected to nodes <2> (weight: 8), <1> (weight: 1), <3> (weight: 3).\nNode <1> is connected to nodes <3> (weight: 3), <4> (weight: 1), <5> (weight: 8).\nNode <4> is connected to nodes <2> (weight: 6), <3> (weight: 2).\n\nCalculate the distance of the shortest path from node <3> to node <2>.\nAnswer:\n",
        "answer": "18",
        "type": "shortest_path"
    },
    {
        "index": 258,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <3> (weight: 10), <4> (weight: 8).\nNode <3> is connected to nodes <0> (weight: 10), <2> (weight: 7), <1> (weight: 9).\nNode <4> is connected to node <0> (weight: 8).\nNode <2> is connected to nodes <3> (weight: 7), <1> (weight: 4).\nNode <1> is connected to nodes <3> (weight: 9), <2> (weight: 4).\n\nCalculate the distance of the shortest path from node <3> to node <0>.\nAnswer:\n",
        "answer": "10",
        "type": "shortest_path"
    },
    {
        "index": 259,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0> (weight: 7), <1> (weight: 6), <4> (weight: 1), <3> (weight: 2).\nNode <0> is connected to nodes <1> (weight: 9), <5> (weight: 10), <4> (weight: 8), <3> (weight: 8).\nNode <1> is connected to node <2> (weight: 7).\nNode <4> is connected to nodes <3> (weight: 6), <0> (weight: 10), <5> (weight: 1).\nNode <3> is connected to nodes <0> (weight: 7), <4> (weight: 2).\nNode <5> is connected to nodes <4> (weight: 3), <1> (weight: 6).\n\nCalculate the distance of the shortest path from node <1> to node <0>.\nAnswer:\n",
        "answer": "14",
        "type": "shortest_path"
    },
    {
        "index": 260,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <5> (weight: 7), <4> (weight: 5), <1> (weight: 10), <0> (weight: 2), <2> (weight: 9).\nNode <5> is connected to nodes <3> (weight: 7), <1> (weight: 5), <0> (weight: 2), <2> (weight: 5).\nNode <4> is connected to nodes <3> (weight: 5), <1> (weight: 3), <0> (weight: 10).\nNode <1> is connected to nodes <3> (weight: 10), <5> (weight: 5), <4> (weight: 3).\nNode <0> is connected to nodes <3> (weight: 2), <5> (weight: 2), <4> (weight: 10), <2> (weight: 8).\nNode <2> is connected to nodes <3> (weight: 9), <5> (weight: 5), <0> (weight: 8).\n\nCalculate the distance of the shortest path from node <3> to node <1>.\nAnswer:\n",
        "answer": "8",
        "type": "shortest_path"
    },
    {
        "index": 261,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <2> (weight: 3), <1> (weight: 9), <5> (weight: 9).\nNode <2> is connected to node <4> (weight: 3).\nNode <1> is connected to nodes <4> (weight: 9), <0> (weight: 6), <3> (weight: 5).\nNode <5> is connected to node <4> (weight: 9).\nNode <0> is connected to node <1> (weight: 6).\nNode <3> is connected to node <1> (weight: 5).\n\nCalculate the distance of the shortest path from node <3> to node <4>.\nAnswer:\n",
        "answer": "14",
        "type": "shortest_path"
    },
    {
        "index": 262,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <4> (weight: 2), <0> (weight: 7).\nNode <4> is connected to nodes <6> (weight: 2), <5> (weight: 9).\nNode <0> is connected to nodes <6> (weight: 7), <1> (weight: 2), <3> (weight: 10).\nNode <5> is connected to nodes <4> (weight: 9), <2> (weight: 7).\nNode <1> is connected to node <0> (weight: 2).\nNode <3> is connected to nodes <0> (weight: 10), <2> (weight: 7).\nNode <2> is connected to nodes <5> (weight: 7), <3> (weight: 7).\n\nCalculate the distance of the shortest path from node <6> to node <1>.\nAnswer:\n",
        "answer": "9",
        "type": "shortest_path"
    },
    {
        "index": 263,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1> (weight: 1), <2> (weight: 2).\nNode <1> is connected to node <0> (weight: 1).\nNode <2> is connected to nodes <0> (weight: 2), <3> (weight: 1), <4> (weight: 3).\nNode <3> is connected to nodes <2> (weight: 1), <4> (weight: 5).\nNode <4> is connected to nodes <2> (weight: 3), <3> (weight: 5).\n\nCalculate the distance of the shortest path from node <4> to node <0>.\nAnswer:\n",
        "answer": "5",
        "type": "shortest_path"
    },
    {
        "index": 264,
        "question": "Given an undirected graph:\nNode <2> is connected to node <1> (weight: 6).\nNode <1> is connected to nodes <2> (weight: 6), <4> (weight: 5).\nNode <4> is connected to nodes <1> (weight: 5), <3> (weight: 2), <0> (weight: 5).\nNode <3> is connected to nodes <4> (weight: 2), <0> (weight: 1).\nNode <0> is connected to nodes <4> (weight: 5), <3> (weight: 1).\n\nCalculate the distance of the shortest path from node <3> to node <0>.\nAnswer:\n",
        "answer": "1",
        "type": "shortest_path"
    },
    {
        "index": 265,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3> (weight: 4), <4> (weight: 7), <1> (weight: 5), <5> (weight: 5), <0> (weight: 10).\nNode <3> is connected to nodes <2> (weight: 4), <1> (weight: 10), <5> (weight: 3), <0> (weight: 4).\nNode <4> is connected to nodes <2> (weight: 7), <1> (weight: 5), <5> (weight: 2), <0> (weight: 2).\nNode <1> is connected to nodes <2> (weight: 5), <3> (weight: 10), <4> (weight: 5), <5> (weight: 7).\nNode <5> is connected to nodes <2> (weight: 5), <3> (weight: 3), <4> (weight: 2), <1> (weight: 7), <0> (weight: 4).\nNode <0> is connected to nodes <2> (weight: 10), <3> (weight: 4), <4> (weight: 2), <5> (weight: 4).\n\nCalculate the distance of the shortest path from node <0> to node <4>.\nAnswer:\n",
        "answer": "2",
        "type": "shortest_path"
    },
    {
        "index": 266,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4> (weight: 1), <0> (weight: 5).\nNode <4> is connected to nodes <5> (weight: 1), <2> (weight: 5).\nNode <0> is connected to nodes <5> (weight: 5), <3> (weight: 8).\nNode <2> is connected to nodes <4> (weight: 5), <1> (weight: 3).\nNode <3> is connected to nodes <0> (weight: 8), <1> (weight: 8).\nNode <1> is connected to nodes <2> (weight: 3), <3> (weight: 8).\n\nCalculate the distance of the shortest path from node <5> to node <4>.\nAnswer:\n",
        "answer": "1",
        "type": "shortest_path"
    },
    {
        "index": 267,
        "question": "Given an undirected graph:\nNode <2> is connected to node <1> (weight: 4).\nNode <1> is connected to nodes <2> (weight: 4), <3> (weight: 7), <0> (weight: 5).\nNode <3> is connected to nodes <1> (weight: 7), <0> (weight: 8), <4> (weight: 4).\nNode <0> is connected to nodes <1> (weight: 5), <3> (weight: 8).\nNode <4> is connected to node <3> (weight: 4).\n\nCalculate the distance of the shortest path from node <1> to node <4>.\nAnswer:\n",
        "answer": "11",
        "type": "shortest_path"
    },
    {
        "index": 268,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <4> (weight: 4), <0> (weight: 3), <1> (weight: 9).\nNode <4> is connected to nodes <2> (weight: 10), <0> (weight: 10), <1> (weight: 3).\nNode <0> is connected to nodes <1> (weight: 5), <6> (weight: 6), <3> (weight: 5), <5> (weight: 1), <4> (weight: 9), <2> (weight: 10).\nNode <1> is connected to nodes <6> (weight: 4), <5> (weight: 2), <4> (weight: 10).\nNode <2> is connected to nodes <0> (weight: 9), <1> (weight: 5), <3> (weight: 6), <4> (weight: 6).\nNode <6> is connected to nodes <3> (weight: 6), <5> (weight: 8), <4> (weight: 9), <2> (weight: 6), <0> (weight: 5).\nNode <3> is connected to nodes <5> (weight: 10), <4> (weight: 2), <2> (weight: 2).\n\nCalculate the distance of the shortest path from node <1> to node <4>.\nAnswer:\n",
        "answer": "6",
        "type": "shortest_path"
    },
    {
        "index": 269,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <1> (weight: 4), <2> (weight: 4), <4> (weight: 2), <5> (weight: 7).\nNode <1> is connected to nodes <3> (weight: 4), <2> (weight: 9), <4> (weight: 1).\nNode <2> is connected to nodes <3> (weight: 4), <1> (weight: 9), <0> (weight: 4).\nNode <4> is connected to nodes <3> (weight: 2), <1> (weight: 1), <5> (weight: 5).\nNode <5> is connected to nodes <3> (weight: 7), <4> (weight: 5), <0> (weight: 2).\nNode <0> is connected to nodes <2> (weight: 4), <5> (weight: 2).\n\nCalculate the distance of the shortest path from node <4> to node <5>.\nAnswer:\n",
        "answer": "5",
        "type": "shortest_path"
    },
    {
        "index": 270,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <1> (weight: 8), <2> (weight: 2).\nNode <1> is connected to nodes <0> (weight: 8), <3> (weight: 10).\nNode <2> is connected to node <0> (weight: 2).\nNode <3> is connected to nodes <1> (weight: 10), <5> (weight: 7), <4> (weight: 1).\nNode <5> is connected to nodes <3> (weight: 7), <4> (weight: 5).\nNode <4> is connected to nodes <3> (weight: 1), <5> (weight: 5).\n\nCalculate the distance of the shortest path from node <5> to node <0>.\nAnswer:\n",
        "answer": "24",
        "type": "shortest_path"
    },
    {
        "index": 271,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <4> (weight: 9), <6> (weight: 4), <0> (weight: 8).\nNode <4> is connected to nodes <5> (weight: 9), <1> (weight: 2).\nNode <6> is connected to nodes <5> (weight: 4), <3> (weight: 5).\nNode <0> is connected to nodes <5> (weight: 8), <2> (weight: 6).\nNode <1> is connected to nodes <4> (weight: 2), <2> (weight: 4).\nNode <3> is connected to node <6> (weight: 5).\nNode <2> is connected to nodes <0> (weight: 6), <1> (weight: 4).\n\nCalculate the distance of the shortest path from node <1> to node <2>.\nAnswer:\n",
        "answer": "4",
        "type": "shortest_path"
    },
    {
        "index": 272,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3> (weight: 5), <1> (weight: 4).\nNode <3> is connected to nodes <2> (weight: 5), <0> (weight: 3).\nNode <1> is connected to nodes <2> (weight: 4), <4> (weight: 8).\nNode <0> is connected to nodes <3> (weight: 3), <4> (weight: 8).\nNode <4> is connected to nodes <1> (weight: 8), <0> (weight: 8).\n\nCalculate the distance of the shortest path from node <4> to node <1>.\nAnswer:\n",
        "answer": "8",
        "type": "shortest_path"
    },
    {
        "index": 273,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3> (weight: 9), <0> (weight: 10).\nNode <3> is connected to nodes <1> (weight: 9), <4> (weight: 5), <2> (weight: 8).\nNode <0> is connected to nodes <1> (weight: 10), <4> (weight: 9).\nNode <4> is connected to nodes <3> (weight: 5), <0> (weight: 9).\nNode <2> is connected to node <3> (weight: 8).\n\nCalculate the distance of the shortest path from node <0> to node <4>.\nAnswer:\n",
        "answer": "9",
        "type": "shortest_path"
    },
    {
        "index": 274,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0> (weight: 10), <3> (weight: 6).\nNode <0> is connected to node <1> (weight: 10).\nNode <3> is connected to nodes <1> (weight: 6), <4> (weight: 8), <2> (weight: 3).\nNode <4> is connected to node <3> (weight: 8).\nNode <2> is connected to node <3> (weight: 3).\n\nCalculate the distance of the shortest path from node <1> to node <0>.\nAnswer:\n",
        "answer": "10",
        "type": "shortest_path"
    },
    {
        "index": 275,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <2> (weight: 5), <1> (weight: 3), <3> (weight: 8), <6> (weight: 2), <4> (weight: 6).\nNode <2> is connected to nodes <0> (weight: 5), <5> (weight: 1).\nNode <1> is connected to nodes <0> (weight: 3), <4> (weight: 1).\nNode <3> is connected to nodes <0> (weight: 8), <6> (weight: 8), <5> (weight: 6).\nNode <6> is connected to nodes <0> (weight: 2), <3> (weight: 8).\nNode <4> is connected to nodes <0> (weight: 6), <1> (weight: 1), <5> (weight: 2).\nNode <5> is connected to nodes <2> (weight: 1), <3> (weight: 6), <4> (weight: 2).\n\nCalculate the distance of the shortest path from node <5> to node <4>.\nAnswer:\n",
        "answer": "2",
        "type": "shortest_path"
    },
    {
        "index": 276,
        "question": "Given an undirected graph:\nNode <2> is connected to node <0> (weight: 10).\nNode <0> is connected to nodes <2> (weight: 10), <4> (weight: 1), <3> (weight: 5), <1> (weight: 4), <5> (weight: 9).\nNode <4> is connected to node <0> (weight: 1).\nNode <3> is connected to node <0> (weight: 5).\nNode <1> is connected to node <0> (weight: 4).\nNode <5> is connected to node <0> (weight: 9).\n\nCalculate the distance of the shortest path from node <1> to node <3>.\nAnswer:\n",
        "answer": "9",
        "type": "shortest_path"
    },
    {
        "index": 277,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5> (weight: 2), <0> (weight: 7), <1> (weight: 5).\nNode <5> is connected to nodes <4> (weight: 2), <2> (weight: 9), <3> (weight: 10).\nNode <0> is connected to node <4> (weight: 7).\nNode <1> is connected to node <4> (weight: 5).\nNode <2> is connected to node <5> (weight: 9).\nNode <3> is connected to node <5> (weight: 10).\n\nCalculate the distance of the shortest path from node <4> to node <0>.\nAnswer:\n",
        "answer": "7",
        "type": "shortest_path"
    },
    {
        "index": 278,
        "question": "Given an undirected graph:\nNode <1> is connected to node <4> (weight: 4).\nNode <4> is connected to nodes <1> (weight: 4), <3> (weight: 7), <0> (weight: 9), <2> (weight: 4).\nNode <3> is connected to node <4> (weight: 7).\nNode <0> is connected to node <4> (weight: 9).\nNode <2> is connected to node <4> (weight: 4).\n\nCalculate the distance of the shortest path from node <4> to node <1>.\nAnswer:\n",
        "answer": "4",
        "type": "shortest_path"
    },
    {
        "index": 279,
        "question": "Given an undirected graph:\nNode <3> is connected to nodes <4> (weight: 6), <0> (weight: 9), <5> (weight: 7).\nNode <4> is connected to node <3> (weight: 6).\nNode <0> is connected to node <3> (weight: 9).\nNode <5> is connected to nodes <3> (weight: 7), <2> (weight: 5), <1> (weight: 1).\nNode <2> is connected to node <5> (weight: 5).\nNode <1> is connected to node <5> (weight: 1).\n\nCalculate the distance of the shortest path from node <0> to node <3>.\nAnswer:\n",
        "answer": "9",
        "type": "shortest_path"
    },
    {
        "index": 280,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5> (weight: 5), <4> (weight: 2).\nNode <5> is connected to node <3> (weight: 10).\nNode <4> is connected to nodes <0> (weight: 2), <1> (weight: 5).\nNode <3> is connected to nodes <0> (weight: 9), <1> (weight: 10).\nNode <1> is connected to nodes <5> (weight: 6), <3> (weight: 3), <4> (weight: 10), <0> (weight: 9).\nNode <2> is connected to nodes <5> (weight: 5), <3> (weight: 3), <4> (weight: 1).\n\nCalculate the distance of the shortest path from node <1> to node <4>.\nAnswer:\n",
        "answer": "10",
        "type": "shortest_path"
    },
    {
        "index": 281,
        "question": "Given an undirected graph:\nNode <4> is connected to node <5> (weight: 1).\nNode <5> is connected to nodes <4> (weight: 1), <0> (weight: 6), <3> (weight: 5).\nNode <0> is connected to nodes <5> (weight: 6), <1> (weight: 10), <2> (weight: 8).\nNode <3> is connected to node <5> (weight: 5).\nNode <1> is connected to node <0> (weight: 10).\nNode <2> is connected to node <0> (weight: 8).\n\nCalculate the distance of the shortest path from node <2> to node <5>.\nAnswer:\n",
        "answer": "14",
        "type": "shortest_path"
    },
    {
        "index": 282,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <0> (weight: 8), <4> (weight: 10), <1> (weight: 1).\nNode <0> is connected to nodes <2> (weight: 8), <5> (weight: 1), <3> (weight: 10).\nNode <4> is connected to nodes <2> (weight: 10), <1> (weight: 7), <3> (weight: 1).\nNode <1> is connected to nodes <2> (weight: 1), <4> (weight: 7), <5> (weight: 3), <3> (weight: 10).\nNode <5> is connected to nodes <0> (weight: 1), <1> (weight: 3), <3> (weight: 3).\nNode <3> is connected to nodes <0> (weight: 10), <4> (weight: 1), <1> (weight: 10), <5> (weight: 3).\n\nCalculate the distance of the shortest path from node <2> to node <4>.\nAnswer:\n",
        "answer": "8",
        "type": "shortest_path"
    },
    {
        "index": 283,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0> (weight: 5), <6> (weight: 6).\nNode <0> is connected to nodes <1> (weight: 5), <3> (weight: 1), <4> (weight: 3).\nNode <6> is connected to nodes <1> (weight: 6), <2> (weight: 7).\nNode <3> is connected to node <0> (weight: 1).\nNode <4> is connected to nodes <0> (weight: 3), <5> (weight: 7).\nNode <2> is connected to nodes <6> (weight: 7), <5> (weight: 4).\nNode <5> is connected to nodes <4> (weight: 7), <2> (weight: 4).\n\nCalculate the distance of the shortest path from node <5> to node <0>.\nAnswer:\n",
        "answer": "10",
        "type": "shortest_path"
    },
    {
        "index": 284,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <0> (weight: 7), <5> (weight: 2).\nNode <0> is connected to nodes <1> (weight: 7), <3> (weight: 5).\nNode <5> is connected to nodes <1> (weight: 2), <4> (weight: 9), <3> (weight: 5).\nNode <3> is connected to nodes <0> (weight: 5), <5> (weight: 5).\nNode <4> is connected to nodes <5> (weight: 9), <2> (weight: 3).\nNode <2> is connected to node <4> (weight: 3).\n\nCalculate the distance of the shortest path from node <4> to node <3>.\nAnswer:\n",
        "answer": "14",
        "type": "shortest_path"
    },
    {
        "index": 285,
        "question": "Given an undirected graph:\nNode <2> is connected to nodes <3> (weight: 5), <1> (weight: 3).\nNode <3> is connected to nodes <2> (weight: 5), <1> (weight: 2), <4> (weight: 10).\nNode <1> is connected to nodes <2> (weight: 3), <3> (weight: 2), <0> (weight: 8).\nNode <4> is connected to node <3> (weight: 10).\nNode <0> is connected to node <1> (weight: 8).\n\nCalculate the distance of the shortest path from node <3> to node <4>.\nAnswer:\n",
        "answer": "10",
        "type": "shortest_path"
    },
    {
        "index": 286,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4> (weight: 8), <5> (weight: 8), <0> (weight: 8).\nNode <4> is connected to nodes <5> (weight: 5), <1> (weight: 9), <0> (weight: 3), <3> (weight: 2).\nNode <5> is connected to nodes <2> (weight: 8), <0> (weight: 8), <3> (weight: 10).\nNode <0> is connected to nodes <3> (weight: 9), <5> (weight: 5).\nNode <1> is connected to node <3> (weight: 3).\nNode <2> is connected to nodes <0> (weight: 9), <1> (weight: 8).\n\nCalculate the distance of the shortest path from node <5> to node <2>.\nAnswer:\n",
        "answer": "8",
        "type": "shortest_path"
    },
    {
        "index": 287,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0> (weight: 8), <6> (weight: 8), <4> (weight: 6), <1> (weight: 1).\nNode <0> is connected to node <4> (weight: 10).\nNode <6> is connected to nodes <4> (weight: 7), <1> (weight: 3), <2> (weight: 9), <3> (weight: 7).\nNode <4> is connected to nodes <1> (weight: 6), <6> (weight: 10).\nNode <1> is connected to nodes <2> (weight: 3), <0> (weight: 8), <6> (weight: 7), <4> (weight: 5).\nNode <2> is connected to nodes <3> (weight: 1), <1> (weight: 2).\nNode <3> is connected to nodes <6> (weight: 8), <0> (weight: 9).\n\nCalculate the distance of the shortest path from node <4> to node <2>.\nAnswer:\n",
        "answer": "9",
        "type": "shortest_path"
    },
    {
        "index": 288,
        "question": "Given an undirected graph:\nNode <6> is connected to nodes <1> (weight: 8), <4> (weight: 1).\nNode <1> is connected to nodes <6> (weight: 8), <3> (weight: 6), <2> (weight: 1), <0> (weight: 9).\nNode <4> is connected to nodes <6> (weight: 1), <5> (weight: 9).\nNode <3> is connected to nodes <1> (weight: 6), <2> (weight: 9).\nNode <2> is connected to nodes <1> (weight: 1), <3> (weight: 9).\nNode <0> is connected to node <1> (weight: 9).\nNode <5> is connected to node <4> (weight: 9).\n\nCalculate the distance of the shortest path from node <6> to node <4>.\nAnswer:\n",
        "answer": "1",
        "type": "shortest_path"
    },
    {
        "index": 289,
        "question": "Given a directed graph:\nNode <4> is connected to node <3> (weight: 7).\nNode <3> is connected to node <0> (weight: 8).\nNode <0> is connected to nodes <1> (weight: 9), <2> (weight: 1).\nNode <1> is connected to nodes <4> (weight: 3), <3> (weight: 2).\nNode <2> is connected to node <4> (weight: 7).\n\nCalculate the distance of the shortest path from node <3> to node <1>.\nAnswer:\n",
        "answer": "17",
        "type": "shortest_path"
    },
    {
        "index": 290,
        "question": "Given a directed graph:\nNode <3> is connected to node <0> (weight: 3).\nNode <0> is connected to nodes <3> (weight: 2), <4> (weight: 2), <1> (weight: 4).\nNode <4> is connected to nodes <1> (weight: 2), <2> (weight: 4).\nNode <1> is connected to node <2> (weight: 3).\nNode <2> is connected to node <1> (weight: 7).\n\nCalculate the distance of the shortest path from node <1> to node <2>.\nAnswer:\n",
        "answer": "3",
        "type": "shortest_path"
    },
    {
        "index": 291,
        "question": "Given an undirected graph:\nNode <5> is connected to nodes <6> (weight: 8), <2> (weight: 1).\nNode <6> is connected to nodes <5> (weight: 8), <1> (weight: 5), <3> (weight: 5).\nNode <2> is connected to nodes <5> (weight: 1), <3> (weight: 7), <0> (weight: 1).\nNode <1> is connected to node <6> (weight: 5).\nNode <3> is connected to nodes <6> (weight: 5), <2> (weight: 7), <4> (weight: 4).\nNode <0> is connected to node <2> (weight: 1).\nNode <4> is connected to node <3> (weight: 4).\n\nCalculate the distance of the shortest path from node <2> to node <1>.\nAnswer:\n",
        "answer": "14",
        "type": "shortest_path"
    },
    {
        "index": 292,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <5> (weight: 7), <0> (weight: 2).\nNode <5> is connected to nodes <1> (weight: 7), <3> (weight: 3).\nNode <0> is connected to nodes <1> (weight: 2), <4> (weight: 2), <2> (weight: 2).\nNode <3> is connected to node <5> (weight: 3).\nNode <4> is connected to node <0> (weight: 2).\nNode <2> is connected to node <0> (weight: 2).\n\nCalculate the distance of the shortest path from node <4> to node <2>.\nAnswer:\n",
        "answer": "4",
        "type": "shortest_path"
    },
    {
        "index": 293,
        "question": "Given an undirected graph:\nNode <4> is connected to nodes <5> (weight: 1), <3> (weight: 5), <0> (weight: 3).\nNode <5> is connected to node <4> (weight: 1).\nNode <3> is connected to nodes <4> (weight: 5), <1> (weight: 4), <6> (weight: 5).\nNode <0> is connected to nodes <4> (weight: 3), <2> (weight: 8).\nNode <1> is connected to nodes <3> (weight: 4), <6> (weight: 2).\nNode <6> is connected to nodes <3> (weight: 5), <1> (weight: 2).\nNode <2> is connected to node <0> (weight: 8).\n\nCalculate the distance of the shortest path from node <2> to node <3>.\nAnswer:\n",
        "answer": "16",
        "type": "shortest_path"
    },
    {
        "index": 294,
        "question": "Given an undirected graph:\nNode <1> is connected to nodes <3> (weight: 2), <2> (weight: 7), <5> (weight: 4), <4> (weight: 10), <0> (weight: 3).\nNode <3> is connected to node <1> (weight: 2).\nNode <2> is connected to node <1> (weight: 7).\nNode <5> is connected to node <1> (weight: 4).\nNode <4> is connected to node <1> (weight: 10).\nNode <0> is connected to node <1> (weight: 3).\n\nCalculate the distance of the shortest path from node <4> to node <0>.\nAnswer:\n",
        "answer": "13",
        "type": "shortest_path"
    },
    {
        "index": 295,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <4> (weight: 7), <2> (weight: 3), <5> (weight: 3), <3> (weight: 10).\nNode <4> is connected to nodes <0> (weight: 7), <2> (weight: 7), <5> (weight: 10), <1> (weight: 10), <3> (weight: 4).\nNode <2> is connected to nodes <0> (weight: 3), <4> (weight: 7), <3> (weight: 2).\nNode <5> is connected to nodes <0> (weight: 3), <4> (weight: 10), <1> (weight: 7), <3> (weight: 2).\nNode <3> is connected to nodes <0> (weight: 10), <4> (weight: 4), <2> (weight: 2), <5> (weight: 2).\nNode <1> is connected to nodes <4> (weight: 10), <5> (weight: 7).\n\nCalculate the distance of the shortest path from node <4> to node <0>.\nAnswer:\n",
        "answer": "7",
        "type": "shortest_path"
    },
    {
        "index": 296,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5> (weight: 5), <1> (weight: 9), <4> (weight: 2), <6> (weight: 1), <3> (weight: 4).\nNode <5> is connected to nodes <1> (weight: 10), <2> (weight: 1), <3> (weight: 9).\nNode <1> is connected to nodes <4> (weight: 6), <6> (weight: 5), <0> (weight: 10), <5> (weight: 6).\nNode <4> is connected to nodes <2> (weight: 3), <1> (weight: 9).\nNode <6> is connected to nodes <3> (weight: 7), <5> (weight: 9), <1> (weight: 8).\nNode <3> is connected to nodes <1> (weight: 10), <4> (weight: 1), <2> (weight: 10).\nNode <2> is connected to node <4> (weight: 8).\n\nCalculate the distance of the shortest path from node <3> to node <2>.\nAnswer:\n",
        "answer": "4",
        "type": "shortest_path"
    },
    {
        "index": 297,
        "question": "Given an undirected graph:\nNode <0> is connected to nodes <6> (weight: 8), <1> (weight: 5), <4> (weight: 2).\nNode <6> is connected to node <0> (weight: 8).\nNode <1> is connected to nodes <0> (weight: 5), <3> (weight: 2).\nNode <4> is connected to nodes <0> (weight: 2), <2> (weight: 9).\nNode <3> is connected to nodes <1> (weight: 2), <5> (weight: 4).\nNode <2> is connected to node <4> (weight: 9).\nNode <5> is connected to node <3> (weight: 4).\n\nCalculate the distance of the shortest path from node <1> to node <0>.\nAnswer:\n",
        "answer": "5",
        "type": "shortest_path"
    },
    {
        "index": 298,
        "question": "Given a directed graph:\nNode <3> is connected to node <2> (weight: 2).\nNode <2> is connected to nodes <1> (weight: 8), <0> (weight: 8).\nNode <1> is connected to nodes <0> (weight: 10), <4> (weight: 4).\nNode <0> is connected to nodes <3> (weight: 1), <2> (weight: 1), <4> (weight: 6), <1> (weight: 10).\nNode <4> is connected to nodes <0> (weight: 2), <2> (weight: 5).\n\nCalculate the distance of the shortest path from node <0> to node <1>.\nAnswer:\n",
        "answer": "9",
        "type": "shortest_path"
    },
    {
        "index": 299,
        "question": "Given an undirected graph:\nNode <0> is connected to node <2> (weight: 8).\nNode <2> is connected to nodes <0> (weight: 8), <4> (weight: 3), <3> (weight: 10).\nNode <4> is connected to nodes <2> (weight: 3), <3> (weight: 4).\nNode <3> is connected to nodes <2> (weight: 10), <4> (weight: 4), <1> (weight: 3).\nNode <1> is connected to node <3> (weight: 3).\n\nCalculate the distance of the shortest path from node <4> to node <3>.\nAnswer:\n",
        "answer": "4",
        "type": "shortest_path"
    },
    {
        "index": 0,
        "question": "Given a directed graph:\nNode <4> is connected to node <5>.\nNode <3> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <4>, <0>, <1>.\nNode <1> is connected to nodes <0>, <5>, <4>.\nNode <6> is connected to nodes <3>, <2>, <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<6>, <3>, <2>, <1>, <0>, <4>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 1,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <2>, <0>, <4>.\nNode <0> is connected to node <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <5>, <3>, <0>, <4>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 2,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <0>.\nNode <4> is connected to node <0>.\nNode <0> is connected to nodes <3>, <1>.\nNode <1> is connected to node <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <4>, <0>, <1>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 3,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <4>.\nNode <0> is connected to nodes <4>, <2>, <1>, <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <2>, <3>, <1>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 4,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <0>, <6>.\nNode <6> is connected to nodes <0>, <2>.\nNode <3> is connected to nodes <1>, <5>, <6>, <4>.\nNode <5> is connected to nodes <1>, <6>.\nNode <2> is connected to node <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <5>, <4>, <6>, <0>, <2>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 5,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <6>, <2>.\nNode <2> is connected to node <6>.\nNode <3> is connected to nodes <2>, <5>.\nNode <4> is connected to nodes <6>, <1>, <2>, <0>.\nNode <1> is connected to nodes <3>, <2>, <5>, <0>.\nNode <0> is connected to nodes <5>, <6>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <1>, <3>, <0>, <5>, <2>, <6>]",
        "type": "topological_sort"
    },
    {
        "index": 6,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <5>, <4>.\nNode <3> is connected to node <5>.\nNode <1> is connected to nodes <0>, <4>, <2>.\nNode <2> is connected to nodes <5>, <0>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <2>, <0>, <3>, <4>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 7,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <4>.\nNode <4> is connected to node <0>.\nNode <2> is connected to nodes <1>, <3>, <5>, <0>.\nNode <1> is connected to node <0>.\nNode <5> is connected to node <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <1>, <3>, <5>, <4>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 8,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <6>, <4>, <3>, <0>.\nNode <6> is connected to node <3>.\nNode <4> is connected to nodes <0>, <6>, <3>.\nNode <0> is connected to node <6>.\nNode <1> is connected to nodes <5>, <6>, <0>.\nNode <2> is connected to nodes <4>, <3>, <1>, <5>, <6>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <1>, <5>, <4>, <0>, <6>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 9,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <4>, <2>, <1>.\nNode <4> is connected to nodes <3>, <1>, <2>.\nNode <1> is connected to node <2>.\nNode <0> is connected to nodes <1>, <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<5>, <0>, <4>, <3>, <1>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 10,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <1>.\nNode <0> is connected to node <3>.\nNode <1> is connected to node <5>.\nNode <5> is connected to node <0>.\nNode <4> is connected to nodes <2>, <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <2>, <1>, <5>, <0>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 11,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <6>, <2>.\nNode <6> is connected to node <2>.\nNode <0> is connected to nodes <3>, <4>, <5>.\nNode <5> is connected to nodes <6>, <2>, <3>.\nNode <1> is connected to nodes <2>, <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <0>, <5>, <3>, <4>, <6>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 12,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <3>.\nNode <4> is connected to node <3>.\nNode <5> is connected to nodes <4>, <1>, <0>.\nNode <0> is connected to node <3>.\nNode <2> is connected to nodes <3>, <5>, <0>.\nNode <6> is connected to nodes <3>, <2>, <5>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<6>, <2>, <5>, <1>, <0>, <4>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 13,
        "question": "Given a directed graph:\nNode <3> is connected to node <1>.\nNode <1> is connected to node <4>.\nNode <0> is connected to nodes <2>, <1>, <3>.\nNode <2> is connected to nodes <1>, <3>, <5>.\nNode <5> is connected to node <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <2>, <3>, <5>, <1>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 14,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5>, <3>.\nNode <4> is connected to nodes <5>, <0>, <3>.\nNode <1> is connected to nodes <4>, <2>.\nNode <2> is connected to node <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <4>, <2>, <0>, <5>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 15,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <0>, <4>.\nNode <1> is connected to node <0>.\nNode <4> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <4>, <1>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <2>, <4>, <1>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 16,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <5>, <1>, <0>.\nNode <0> is connected to node <5>.\nNode <2> is connected to nodes <1>, <5>.\nNode <3> is connected to nodes <5>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <3>, <4>, <1>, <0>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 17,
        "question": "Given a directed graph:\nNode <2> is connected to node <3>.\nNode <3> is connected to nodes <1>, <5>.\nNode <1> is connected to node <5>.\nNode <4> is connected to nodes <0>, <3>.\nNode <0> is connected to nodes <5>, <2>, <1>.\nNode <6> is connected to nodes <2>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<6>, <4>, <0>, <2>, <3>, <1>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 18,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <2> is connected to node <5>.\nNode <5> is connected to node <4>.\nNode <3> is connected to node <1>.\nNode <1> is connected to nodes <0>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <1>, <0>, <2>, <5>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 19,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <2>, <1>, <0>.\nNode <2> is connected to node <0>.\nNode <1> is connected to nodes <3>, <2>, <0>.\nNode <0> is connected to node <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <1>, <2>, <0>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 20,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <2>.\nNode <1> is connected to node <5>.\nNode <5> is connected to node <2>.\nNode <0> is connected to nodes <5>, <1>.\nNode <3> is connected to nodes <0>, <5>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <3>, <0>, <1>, <5>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 21,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <6>, <4>, <2>.\nNode <3> is connected to nodes <2>, <6>, <4>.\nNode <6> is connected to node <2>.\nNode <4> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <2>, <6>.\nNode <5> is connected to nodes <0>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <5>, <3>, <4>, <0>, <6>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 22,
        "question": "Given a directed graph:\nNode <3> is connected to node <0>.\nNode <1> is connected to nodes <3>, <0>.\nNode <4> is connected to nodes <5>, <3>, <1>.\nNode <5> is connected to nodes <2>, <0>.\nNode <2> is connected to node <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <5>, <1>, <2>, <3>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 23,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5>, <1>, <4>, <0>.\nNode <5> is connected to nodes <0>, <6>.\nNode <1> is connected to nodes <4>, <0>, <3>.\nNode <4> is connected to node <0>.\nNode <6> is connected to nodes <4>, <0>.\nNode <3> is connected to node <6>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <5>, <1>, <3>, <6>, <4>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 24,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <4>.\nNode <4> is connected to node <2>.\nNode <2> is connected to node <1>.\nNode <0> is connected to nodes <1>, <3>, <2>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <3>, <4>, <2>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 25,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <1>, <3>.\nNode <1> is connected to node <2>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <1>, <0>, <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <0>, <3>, <1>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 26,
        "question": "Given a directed graph:\nNode <3> is connected to node <0>.\nNode <0> is connected to node <1>.\nNode <1> is connected to node <2>.\nNode <4> is connected to node <2>.\nNode <5> is connected to node <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <5>, <3>, <0>, <1>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 27,
        "question": "Given a directed graph:\nNode <0> is connected to node <2>.\nNode <2> is connected to node <4>.\nNode <5> is connected to nodes <3>, <2>, <0>, <4>.\nNode <1> is connected to node <5>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <5>, <3>, <0>, <2>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 28,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <4>, <5>, <0>.\nNode <2> is connected to node <1>.\nNode <4> is connected to nodes <2>, <5>.\nNode <5> is connected to node <1>.\nNode <0> is connected to node <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <0>, <4>, <2>, <5>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 29,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <3>.\nNode <2> is connected to nodes <1>, <0>.\nNode <4> is connected to nodes <3>, <1>.\nNode <5> is connected to node <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <4>, <5>, <1>, <0>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 30,
        "question": "Given a directed graph:\nNode <2> is connected to node <5>.\nNode <1> is connected to nodes <5>, <3>.\nNode <3> is connected to node <4>.\nNode <4> is connected to nodes <6>, <2>.\nNode <6> is connected to node <5>.\nNode <0> is connected to node <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <1>, <3>, <4>, <6>, <2>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 31,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <5>.\nNode <4> is connected to node <5>.\nNode <2> is connected to nodes <4>, <3>, <0>.\nNode <1> is connected to nodes <4>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <2>, <3>, <0>, <4>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 32,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <3>, <4>.\nNode <0> is connected to node <3>.\nNode <3> is connected to nodes <2>, <4>.\nNode <4> is connected to node <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <0>, <3>, <4>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 33,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <5>, <1>.\nNode <2> is connected to node <1>.\nNode <5> is connected to node <2>.\nNode <1> is connected to node <0>.\nNode <4> is connected to nodes <1>, <0>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <4>, <5>, <2>, <1>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 34,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <4>.\nNode <2> is connected to node <3>.\nNode <4> is connected to nodes <3>, <2>.\nNode <1> is connected to nodes <4>, <0>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <0>, <4>, <2>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 35,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <4>, <1>, <2>.\nNode <0> is connected to nodes <2>, <1>, <4>.\nNode <4> is connected to nodes <1>, <2>.\nNode <1> is connected to node <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <0>, <4>, <1>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 36,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <1>, <2>.\nNode <3> is connected to node <0>.\nNode <2> is connected to node <3>.\nNode <0> is connected to node <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <2>, <3>, <0>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 37,
        "question": "Given a directed graph:\nNode <1> is connected to node <0>.\nNode <0> is connected to nodes <4>, <2>, <3>.\nNode <2> is connected to node <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <0>, <4>, <2>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 38,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <4>, <1>, <2>, <0>.\nNode <4> is connected to node <0>.\nNode <1> is connected to node <3>.\nNode <2> is connected to nodes <0>, <5>, <4>.\nNode <0> is connected to nodes <1>, <3>.\nNode <5> is connected to node <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<6>, <2>, <5>, <4>, <0>, <1>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 39,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <3>, <0>.\nNode <4> is connected to node <0>.\nNode <3> is connected to node <4>.\nNode <2> is connected to node <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <2>, <3>, <4>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 40,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <4>, <3>.\nNode <2> is connected to nodes <4>, <3>, <0>.\nNode <3> is connected to node <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <0>, <1>, <3>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 41,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <5>.\nNode <5> is connected to node <2>.\nNode <4> is connected to nodes <3>, <2>, <5>.\nNode <1> is connected to nodes <4>, <3>.\nNode <0> is connected to nodes <1>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <1>, <4>, <3>, <5>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 42,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <4>, <5>.\nNode <4> is connected to node <3>.\nNode <1> is connected to nodes <5>, <2>, <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <2>, <0>, <4>, <5>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 43,
        "question": "Given a directed graph:\nNode <0> is connected to node <4>.\nNode <4> is connected to node <3>.\nNode <5> is connected to node <4>.\nNode <2> is connected to nodes <1>, <0>, <6>, <5>, <4>.\nNode <1> is connected to nodes <5>, <3>.\nNode <6> is connected to nodes <3>, <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <0>, <6>, <1>, <5>, <4>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 44,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <1>, <2>, <3>.\nNode <2> is connected to node <1>.\nNode <1> is connected to node <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <4>, <2>, <1>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 45,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <5>, <4>, <0>.\nNode <5> is connected to nodes <4>, <1>.\nNode <4> is connected to node <1>.\nNode <0> is connected to nodes <2>, <1>.\nNode <2> is connected to node <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <5>, <0>, <2>, <4>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 46,
        "question": "Given a directed graph:\nNode <0> is connected to node <3>.\nNode <4> is connected to nodes <1>, <3>.\nNode <2> is connected to nodes <3>, <1>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <2>, <4>, <1>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 47,
        "question": "Given a directed graph:\nNode <1> is connected to node <6>.\nNode <6> is connected to node <4>.\nNode <4> is connected to nodes <3>, <5>.\nNode <2> is connected to nodes <3>, <1>, <5>.\nNode <5> is connected to node <3>.\nNode <0> is connected to node <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <2>, <1>, <6>, <4>, <5>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 48,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <2>, <4>.\nNode <2> is connected to node <1>.\nNode <4> is connected to nodes <0>, <5>.\nNode <0> is connected to node <2>.\nNode <5> is connected to nodes <0>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <4>, <5>, <0>, <2>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 49,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <5>, <4>.\nNode <5> is connected to node <3>.\nNode <4> is connected to nodes <5>, <3>.\nNode <1> is connected to node <2>.\nNode <2> is connected to nodes <4>, <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <2>, <0>, <4>, <5>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 50,
        "question": "Given a directed graph:\nNode <5> is connected to node <2>.\nNode <2> is connected to nodes <0>, <4>.\nNode <1> is connected to nodes <4>, <3>, <2>.\nNode <3> is connected to node <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<5>, <1>, <3>, <2>, <0>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 51,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <3>, <1>.\nNode <2> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <0>, <1>.\nNode <0> is connected to node <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <2>, <3>, <0>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 52,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <6>, <1>.\nNode <0> is connected to nodes <6>, <5>.\nNode <5> is connected to node <1>.\nNode <4> is connected to nodes <3>, <6>.\nNode <2> is connected to nodes <6>, <1>, <3>, <5>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <2>, <3>, <0>, <6>, <5>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 53,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <3>.\nNode <2> is connected to nodes <4>, <0>, <3>, <1>.\nNode <0> is connected to node <1>.\nNode <5> is connected to nodes <3>, <2>, <1>, <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<5>, <2>, <0>, <1>, <4>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 54,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <2>, <5>.\nNode <5> is connected to nodes <2>, <0>.\nNode <3> is connected to nodes <0>, <4>, <1>, <5>.\nNode <1> is connected to node <5>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <4>, <1>, <5>, <2>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 55,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <0>, <5>.\nNode <0> is connected to node <5>.\nNode <1> is connected to nodes <5>, <4>.\nNode <3> is connected to node <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <3>, <2>, <4>, <0>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 56,
        "question": "Given a directed graph:\nNode <3> is connected to node <0>.\nNode <4> is connected to node <2>.\nNode <2> is connected to nodes <1>, <0>, <3>.\nNode <1> is connected to node <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <2>, <1>, <3>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 57,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <3>.\nNode <0> is connected to node <3>.\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to node <4>.\nNode <5> is connected to nodes <0>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <5>, <2>, <4>, <0>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 58,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5>, <1>, <6>, <3>, <4>.\nNode <5> is connected to nodes <6>, <1>, <3>.\nNode <1> is connected to node <6>.\nNode <3> is connected to node <6>.\nNode <4> is connected to nodes <1>, <6>, <5>.\nNode <0> is connected to node <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <2>, <4>, <5>, <1>, <3>, <6>]",
        "type": "topological_sort"
    },
    {
        "index": 59,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <5>, <4>.\nNode <5> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <4>, <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <5>, <2>, <3>, <4>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 60,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <6>, <0>, <5>, <3>.\nNode <4> is connected to nodes <3>, <6>, <0>, <5>.\nNode <6> is connected to node <0>.\nNode <0> is connected to node <3>.\nNode <5> is connected to nodes <3>, <6>.\nNode <1> is connected to nodes <0>, <5>, <4>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <2>, <4>, <5>, <6>, <0>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 61,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <0>.\nNode <2> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <0>, <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <3>, <1>, <4>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 62,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <4>, <2>.\nNode <2> is connected to nodes <3>, <4>.\nNode <1> is connected to node <3>.\nNode <3> is connected to node <4>.\nNode <0> is connected to nodes <3>, <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<5>, <0>, <2>, <1>, <3>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 63,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <6>, <5>.\nNode <3> is connected to nodes <6>, <0>.\nNode <6> is connected to node <0>.\nNode <5> is connected to nodes <3>, <6>, <0>.\nNode <4> is connected to nodes <6>, <0>, <5>, <2>.\nNode <2> is connected to nodes <0>, <6>, <5>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <4>, <2>, <5>, <3>, <6>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 64,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <2>, <0>.\nNode <2> is connected to node <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to node <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <3>, <1>, <2>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 65,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <3>, <2>.\nNode <2> is connected to node <4>.\nNode <3> is connected to node <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <0>, <3>, <2>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 66,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <1>, <3>.\nNode <4> is connected to nodes <0>, <3>.\nNode <1> is connected to nodes <4>, <0>.\nNode <0> is connected to node <3>.\nNode <6> is connected to nodes <4>, <0>, <5>.\nNode <5> is connected to nodes <1>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <6>, <5>, <1>, <4>, <0>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 67,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <5>, <4>.\nNode <5> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <4>, <1>.\nNode <2> is connected to nodes <0>, <3>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <3>, <5>, <0>, <4>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 68,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <1>, <4>.\nNode <3> is connected to node <4>.\nNode <4> is connected to node <1>.\nNode <2> is connected to nodes <0>, <3>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <0>, <3>, <4>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 69,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <4>.\nNode <0> is connected to node <5>.\nNode <4> is connected to node <5>.\nNode <6> is connected to nodes <2>, <5>, <1>.\nNode <2> is connected to node <5>.\nNode <3> is connected to nodes <4>, <1>, <5>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<6>, <3>, <1>, <2>, <0>, <4>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 70,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <0>, <5>.\nNode <0> is connected to node <5>.\nNode <3> is connected to nodes <2>, <0>, <1>, <6>.\nNode <1> is connected to nodes <0>, <6>.\nNode <4> is connected to nodes <1>, <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <4>, <2>, <1>, <6>, <0>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 71,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2>, <1>, <0>.\nNode <2> is connected to node <1>.\nNode <0> is connected to nodes <4>, <2>.\nNode <4> is connected to node <2>.\nNode <3> is connected to nodes <4>, <5>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <5>, <0>, <4>, <2>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 72,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2>, <0>, <4>, <1>.\nNode <0> is connected to node <1>.\nNode <4> is connected to node <1>.\nNode <1> is connected to nodes <3>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<5>, <0>, <4>, <1>, <3>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 73,
        "question": "Given a directed graph:\nNode <2> is connected to node <3>.\nNode <3> is connected to node <1>.\nNode <0> is connected to nodes <3>, <2>, <1>.\nNode <4> is connected to node <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <4>, <2>, <3>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 74,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <1>.\nNode <1> is connected to nodes <5>, <6>, <3>.\nNode <4> is connected to nodes <2>, <1>.\nNode <5> is connected to node <0>.\nNode <3> is connected to nodes <5>, <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <2>, <1>, <6>, <3>, <5>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 75,
        "question": "Given a directed graph:\nNode <2> is connected to node <0>.\nNode <1> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <4>, <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <3>, <2>, <4>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 76,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <5>, <2>.\nNode <0> is connected to node <2>.\nNode <5> is connected to nodes <1>, <2>, <0>, <3>.\nNode <1> is connected to node <0>.\nNode <3> is connected to node <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <5>, <1>, <3>, <0>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 77,
        "question": "Given a directed graph:\nNode <2> is connected to node <4>.\nNode <0> is connected to nodes <4>, <1>, <3>.\nNode <3> is connected to nodes <6>, <5>.\nNode <6> is connected to nodes <2>, <1>.\nNode <5> is connected to nodes <1>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <3>, <6>, <5>, <1>, <2>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 78,
        "question": "Given a directed graph:\nNode <4> is connected to node <2>.\nNode <0> is connected to nodes <4>, <3>.\nNode <5> is connected to node <0>.\nNode <1> is connected to nodes <5>, <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <5>, <0>, <4>, <3>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 79,
        "question": "Given a directed graph:\nNode <4> is connected to node <1>.\nNode <1> is connected to node <3>.\nNode <0> is connected to nodes <1>, <4>.\nNode <2> is connected to node <1>.\nNode <5> is connected to node <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <5>, <4>, <2>, <1>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 80,
        "question": "Given a directed graph:\nNode <0> is connected to node <1>.\nNode <1> is connected to node <2>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <2>, <0>, <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <0>, <3>, <1>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 81,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <3>, <0>.\nNode <1> is connected to nodes <0>, <3>.\nNode <4> is connected to nodes <3>, <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <4>, <1>, <0>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 82,
        "question": "Given a directed graph:\nNode <2> is connected to node <6>.\nNode <6> is connected to node <4>.\nNode <0> is connected to nodes <4>, <2>, <6>, <3>.\nNode <3> is connected to nodes <2>, <1>.\nNode <5> is connected to nodes <0>, <3>, <4>, <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<5>, <0>, <3>, <2>, <1>, <6>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 83,
        "question": "Given a directed graph:\nNode <2> is connected to node <3>.\nNode <0> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <2>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <1>, <2>, <4>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 84,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <3>, <2>.\nNode <0> is connected to nodes <6>, <2>.\nNode <3> is connected to nodes <2>, <6>.\nNode <4> is connected to nodes <2>, <5>.\nNode <5> is connected to nodes <0>, <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <4>, <5>, <0>, <3>, <2>, <6>]",
        "type": "topological_sort"
    },
    {
        "index": 85,
        "question": "Given a directed graph:\nNode <2> is connected to node <5>.\nNode <5> is connected to node <4>.\nNode <4> is connected to node <3>.\nNode <0> is connected to node <2>.\nNode <3> is connected to node <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <2>, <5>, <4>, <3>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 86,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <3>.\nNode <4> is connected to nodes <1>, <0>.\nNode <0> is connected to node <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <4>, <1>, <0>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 87,
        "question": "Given a directed graph:\nNode <2> is connected to node <1>.\nNode <1> is connected to nodes <4>, <0>, <3>.\nNode <0> is connected to node <3>.\nNode <3> is connected to node <5>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <1>, <4>, <0>, <3>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 88,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <4>.\nNode <3> is connected to node <0>.\nNode <4> is connected to node <3>.\nNode <1> is connected to nodes <0>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <2>, <4>, <3>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 89,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <1>.\nNode <3> is connected to node <4>.\nNode <4> is connected to nodes <1>, <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <4>, <0>, <2>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 90,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <0>.\nNode <0> is connected to nodes <1>, <2>.\nNode <1> is connected to node <2>.\nNode <5> is connected to nodes <2>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <5>, <0>, <4>, <1>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 91,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <3>, <4>, <1>, <0>, <2>.\nNode <3> is connected to nodes <2>, <1>, <0>.\nNode <4> is connected to node <3>.\nNode <0> is connected to node <2>.\nNode <2> is connected to node <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<5>, <4>, <3>, <0>, <2>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 92,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <5>.\nNode <5> is connected to node <4>.\nNode <1> is connected to nodes <2>, <4>.\nNode <3> is connected to nodes <2>, <5>, <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <3>, <5>, <1>, <2>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 93,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <1>.\nNode <4> is connected to node <1>.\nNode <0> is connected to nodes <1>, <3>, <4>.\nNode <2> is connected to node <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <0>, <3>, <4>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 94,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <0>.\nNode <4> is connected to node <0>.\nNode <1> is connected to nodes <4>, <3>.\nNode <3> is connected to nodes <2>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <3>, <2>, <4>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 95,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <1>.\nNode <1> is connected to node <4>.\nNode <3> is connected to nodes <4>, <0>.\nNode <0> is connected to node <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <3>, <0>, <1>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 96,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1>, <6>.\nNode <1> is connected to node <6>.\nNode <4> is connected to nodes <3>, <6>, <0>, <1>, <5>.\nNode <3> is connected to nodes <1>, <6>, <5>.\nNode <5> is connected to nodes <6>, <0>, <2>, <1>.\nNode <2> is connected to nodes <1>, <0>, <6>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <3>, <5>, <2>, <0>, <1>, <6>]",
        "type": "topological_sort"
    },
    {
        "index": 97,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <3>, <2>, <1>.\nNode <4> is connected to node <3>.\nNode <3> is connected to node <1>.\nNode <2> is connected to nodes <3>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <2>, <4>, <3>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 98,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <0>, <6>, <2>, <3>.\nNode <4> is connected to node <5>.\nNode <0> is connected to node <5>.\nNode <6> is connected to nodes <2>, <5>, <3>, <4>.\nNode <2> is connected to node <3>.\nNode <3> is connected to node <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <0>, <6>, <2>, <3>, <4>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 99,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <5>.\nNode <5> is connected to node <4>.\nNode <2> is connected to nodes <0>, <3>, <5>.\nNode <3> is connected to node <4>.\nNode <1> is connected to nodes <3>, <5>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <1>, <0>, <3>, <5>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 100,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <4>.\nNode <0> is connected to node <2>.\nNode <2> is connected to node <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <0>, <4>, <2>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 101,
        "question": "Given a directed graph:\nNode <3> is connected to node <1>.\nNode <1> is connected to node <2>.\nNode <2> is connected to nodes <5>, <0>.\nNode <6> is connected to node <3>.\nNode <4> is connected to node <6>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <6>, <3>, <1>, <2>, <5>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 102,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <5>, <2>.\nNode <3> is connected to nodes <5>, <0>, <2>.\nNode <2> is connected to nodes <0>, <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <3>, <5>, <2>, <0>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 103,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5>, <3>, <1>, <2>.\nNode <5> is connected to node <3>.\nNode <1> is connected to nodes <3>, <5>.\nNode <2> is connected to nodes <1>, <5>.\nNode <4> is connected to nodes <1>, <0>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <0>, <2>, <1>, <5>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 104,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <1>, <3>, <4>, <2>.\nNode <1> is connected to node <2>.\nNode <3> is connected to nodes <2>, <1>, <0>, <6>.\nNode <4> is connected to nodes <1>, <3>, <6>.\nNode <0> is connected to nodes <2>, <1>.\nNode <6> is connected to node <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<5>, <4>, <3>, <6>, <0>, <1>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 105,
        "question": "Given a directed graph:\nNode <1> is connected to node <4>.\nNode <4> is connected to nodes <2>, <0>, <5>, <6>.\nNode <2> is connected to node <0>.\nNode <5> is connected to node <3>.\nNode <6> is connected to nodes <5>, <2>.\nNode <3> is connected to node <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <4>, <6>, <5>, <3>, <2>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 106,
        "question": "Given a directed graph:\nNode <0> is connected to node <2>.\nNode <2> is connected to node <3>.\nNode <1> is connected to nodes <0>, <3>.\nNode <4> is connected to node <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <4>, <0>, <2>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 107,
        "question": "Given a directed graph:\nNode <2> is connected to node <4>.\nNode <4> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <1>, <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <4>, <0>, <1>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 108,
        "question": "Given a directed graph:\nNode <4> is connected to node <6>.\nNode <5> is connected to nodes <4>, <1>.\nNode <3> is connected to nodes <6>, <2>.\nNode <2> is connected to nodes <1>, <6>.\nNode <0> is connected to nodes <2>, <6>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<5>, <3>, <0>, <4>, <2>, <1>, <6>]",
        "type": "topological_sort"
    },
    {
        "index": 109,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <3>.\nNode <0> is connected to nodes <1>, <5>.\nNode <5> is connected to nodes <3>, <4>.\nNode <6> is connected to nodes <4>, <2>, <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <6>, <5>, <1>, <4>, <2>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 110,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <5>, <3>, <4>.\nNode <3> is connected to node <4>.\nNode <0> is connected to nodes <2>, <5>.\nNode <2> is connected to nodes <3>, <5>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <0>, <2>, <3>, <5>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 111,
        "question": "Given a directed graph:\nNode <2> is connected to node <0>.\nNode <4> is connected to node <1>.\nNode <1> is connected to node <2>.\nNode <3> is connected to nodes <1>, <0>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <3>, <1>, <2>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 112,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <1>, <4>.\nNode <2> is connected to node <1>.\nNode <4> is connected to node <2>.\nNode <3> is connected to nodes <4>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <3>, <4>, <2>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 113,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <6>.\nNode <3> is connected to node <4>.\nNode <6> is connected to node <4>.\nNode <2> is connected to nodes <4>, <0>.\nNode <1> is connected to nodes <6>, <5>, <4>, <0>.\nNode <5> is connected to nodes <0>, <2>, <6>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <5>, <2>, <0>, <3>, <6>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 114,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <0>.\nNode <0> is connected to node <1>.\nNode <4> is connected to node <2>.\nNode <5> is connected to node <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <4>, <5>, <0>, <2>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 115,
        "question": "Given a directed graph:\nNode <4> is connected to node <3>.\nNode <0> is connected to nodes <3>, <1>, <2>.\nNode <1> is connected to node <2>.\nNode <2> is connected to nodes <3>, <4>.\nNode <5> is connected to nodes <0>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<5>, <0>, <1>, <2>, <4>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 116,
        "question": "Given a directed graph:\nNode <0> is connected to node <1>.\nNode <1> is connected to nodes <3>, <4>.\nNode <4> is connected to node <5>.\nNode <5> is connected to node <3>.\nNode <2> is connected to node <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <2>, <1>, <4>, <5>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 117,
        "question": "Given a directed graph:\nNode <1> is connected to node <5>.\nNode <5> is connected to node <0>.\nNode <4> is connected to nodes <5>, <2>.\nNode <2> is connected to nodes <1>, <0>, <5>.\nNode <3> is connected to nodes <0>, <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <3>, <2>, <1>, <5>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 118,
        "question": "Given a directed graph:\nNode <1> is connected to node <3>.\nNode <4> is connected to nodes <0>, <6>, <5>.\nNode <0> is connected to nodes <2>, <1>.\nNode <6> is connected to node <3>.\nNode <5> is connected to nodes <0>, <6>, <2>.\nNode <2> is connected to nodes <6>, <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <5>, <0>, <2>, <1>, <6>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 119,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <5>, <2>, <3>, <0>.\nNode <2> is connected to nodes <5>, <4>.\nNode <3> is connected to nodes <5>, <2>.\nNode <0> is connected to node <3>.\nNode <4> is connected to node <5>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <0>, <3>, <2>, <4>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 120,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <6>, <5>.\nNode <2> is connected to node <4>.\nNode <5> is connected to nodes <0>, <6>, <2>.\nNode <4> is connected to node <6>.\nNode <0> is connected to nodes <2>, <6>.\nNode <1> is connected to nodes <3>, <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <3>, <5>, <0>, <2>, <4>, <6>]",
        "type": "topological_sort"
    },
    {
        "index": 121,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <3>.\nNode <4> is connected to node <2>.\nNode <3> is connected to nodes <1>, <2>.\nNode <2> is connected to node <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <4>, <3>, <2>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 122,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <1>, <0>.\nNode <4> is connected to node <1>.\nNode <0> is connected to node <1>.\nNode <3> is connected to nodes <4>, <2>, <1>.\nNode <5> is connected to nodes <1>, <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<5>, <3>, <2>, <4>, <0>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 123,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <2>, <1>.\nNode <3> is connected to node <2>.\nNode <2> is connected to node <5>.\nNode <0> is connected to nodes <1>, <3>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <4>, <3>, <1>, <2>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 124,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2>, <4>.\nNode <2> is connected to nodes <6>, <4>.\nNode <0> is connected to nodes <5>, <3>, <2>.\nNode <3> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <2>, <6>, <5>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <3>, <1>, <5>, <2>, <6>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 125,
        "question": "Given a directed graph:\nNode <4> is connected to node <5>.\nNode <0> is connected to nodes <4>, <2>, <3>, <5>, <1>.\nNode <2> is connected to nodes <4>, <1>, <5>.\nNode <3> is connected to nodes <2>, <5>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <3>, <2>, <4>, <1>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 126,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <0>.\nNode <4> is connected to node <5>.\nNode <0> is connected to nodes <5>, <2>, <1>.\nNode <5> is connected to node <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <4>, <0>, <5>, <1>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 127,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <5>, <0>, <3>, <6>.\nNode <5> is connected to node <4>.\nNode <3> is connected to node <0>.\nNode <6> is connected to node <3>.\nNode <2> is connected to nodes <1>, <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <1>, <5>, <6>, <4>, <3>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 128,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <0>, <3>.\nNode <4> is connected to node <5>.\nNode <3> is connected to node <0>.\nNode <5> is connected to nodes <1>, <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <4>, <5>, <1>, <3>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 129,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <1>, <0>.\nNode <4> is connected to nodes <0>, <2>.\nNode <1> is connected to node <4>.\nNode <0> is connected to node <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <1>, <4>, <0>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 130,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <1>.\nNode <2> is connected to node <0>.\nNode <5> is connected to nodes <4>, <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <5>, <4>, <0>, <3>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 131,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <2>, <4>, <1>.\nNode <2> is connected to node <1>.\nNode <4> is connected to node <0>.\nNode <1> is connected to node <4>.\nNode <5> is connected to nodes <4>, <2>, <0>.\nNode <3> is connected to node <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<6>, <5>, <3>, <2>, <1>, <4>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 132,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <0>, <4>, <2>, <5>, <3>.\nNode <0> is connected to nodes <3>, <5>.\nNode <4> is connected to node <3>.\nNode <5> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <6>, <0>, <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <6>, <0>, <4>, <5>, <2>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 133,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <2>.\nNode <4> is connected to nodes <2>, <1>.\nNode <1> is connected to node <2>.\nNode <5> is connected to nodes <3>, <1>.\nNode <0> is connected to nodes <4>, <1>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<5>, <0>, <3>, <4>, <1>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 134,
        "question": "Given a directed graph:\nNode <3> is connected to node <5>.\nNode <1> is connected to nodes <5>, <0>, <2>.\nNode <0> is connected to nodes <4>, <3>.\nNode <2> is connected to node <3>.\nNode <4> is connected to nodes <3>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <0>, <4>, <2>, <3>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 135,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5>, <4>, <1>.\nNode <4> is connected to nodes <5>, <1>.\nNode <1> is connected to node <5>.\nNode <2> is connected to nodes <3>, <4>, <1>.\nNode <3> is connected to nodes <0>, <5>.\nNode <6> is connected to nodes <5>, <2>, <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<6>, <2>, <3>, <0>, <4>, <1>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 136,
        "question": "Given a directed graph:\nNode <3> is connected to node <5>.\nNode <1> is connected to nodes <3>, <4>, <0>.\nNode <0> is connected to nodes <5>, <3>.\nNode <2> is connected to node <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <1>, <4>, <0>, <3>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 137,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <1>.\nNode <1> is connected to node <3>.\nNode <2> is connected to nodes <3>, <0>, <1>.\nNode <4> is connected to nodes <0>, <3>, <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <4>, <0>, <1>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 138,
        "question": "Given a directed graph:\nNode <3> is connected to node <0>.\nNode <1> is connected to nodes <4>, <0>, <2>.\nNode <4> is connected to nodes <0>, <2>, <3>.\nNode <2> is connected to nodes <0>, <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <4>, <2>, <3>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 139,
        "question": "Given a directed graph:\nNode <0> is connected to node <5>.\nNode <1> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <0>, <5>.\nNode <4> is connected to node <1>.\nNode <2> is connected to nodes <3>, <5>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <2>, <1>, <3>, <0>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 140,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <1>.\nNode <1> is connected to node <0>.\nNode <2> is connected to nodes <0>, <1>.\nNode <6> is connected to nodes <4>, <3>, <0>, <2>.\nNode <4> is connected to nodes <0>, <1>, <2>.\nNode <5> is connected to nodes <6>, <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<5>, <6>, <4>, <3>, <2>, <1>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 141,
        "question": "Given a directed graph:\nNode <4> is connected to node <2>.\nNode <0> is connected to nodes <2>, <4>, <1>.\nNode <1> is connected to nodes <3>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <4>, <1>, <3>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 142,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <2>.\nNode <0> is connected to nodes <4>, <3>.\nNode <1> is connected to node <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <1>, <3>, <4>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 143,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2>, <6>.\nNode <2> is connected to node <6>.\nNode <1> is connected to nodes <3>, <2>, <5>.\nNode <3> is connected to nodes <6>, <5>.\nNode <0> is connected to nodes <5>, <1>, <6>, <2>.\nNode <4> is connected to nodes <3>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <4>, <1>, <3>, <5>, <2>, <6>]",
        "type": "topological_sort"
    },
    {
        "index": 144,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <1>.\nNode <2> is connected to node <0>.\nNode <1> is connected to nodes <0>, <2>, <3>.\nNode <0> is connected to node <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <1>, <2>, <0>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 145,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <1>.\nNode <1> is connected to nodes <2>, <4>.\nNode <2> is connected to node <0>.\nNode <0> is connected to node <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <1>, <2>, <0>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 146,
        "question": "Given a directed graph:\nNode <2> is connected to node <4>.\nNode <4> is connected to node <0>.\nNode <0> is connected to nodes <3>, <1>.\nNode <1> is connected to node <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <4>, <0>, <1>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 147,
        "question": "Given a directed graph:\nNode <3> is connected to node <2>.\nNode <2> is connected to nodes <4>, <0>.\nNode <4> is connected to nodes <0>, <5>.\nNode <1> is connected to nodes <2>, <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <3>, <2>, <4>, <0>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 148,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <0>.\nNode <0> is connected to nodes <1>, <4>.\nNode <2> is connected to nodes <1>, <0>, <4>, <5>.\nNode <5> is connected to nodes <0>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <2>, <5>, <0>, <1>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 149,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <1>, <4>.\nNode <1> is connected to node <5>.\nNode <4> is connected to nodes <1>, <3>.\nNode <0> is connected to nodes <3>, <2>, <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <2>, <4>, <1>, <3>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 150,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <5>, <1>.\nNode <3> is connected to node <5>.\nNode <2> is connected to nodes <3>, <0>.\nNode <4> is connected to node <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <2>, <3>, <0>, <5>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 151,
        "question": "Given a directed graph:\nNode <3> is connected to node <0>.\nNode <1> is connected to nodes <2>, <0>, <4>.\nNode <2> is connected to nodes <0>, <3>.\nNode <4> is connected to nodes <3>, <0>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <4>, <2>, <3>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 152,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <1>.\nNode <4> is connected to nodes <2>, <0>.\nNode <3> is connected to nodes <2>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <4>, <0>, <2>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 153,
        "question": "Given a directed graph:\nNode <4> is connected to node <3>.\nNode <1> is connected to node <4>.\nNode <2> is connected to node <3>.\nNode <0> is connected to node <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <0>, <4>, <2>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 154,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2>, <3>.\nNode <2> is connected to node <3>.\nNode <1> is connected to nodes <5>, <2>.\nNode <0> is connected to node <2>.\nNode <4> is connected to nodes <3>, <0>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <4>, <5>, <0>, <2>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 155,
        "question": "Given a directed graph:\nNode <2> is connected to node <4>.\nNode <4> is connected to node <3>.\nNode <0> is connected to nodes <4>, <2>.\nNode <1> is connected to nodes <4>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <1>, <2>, <4>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 156,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <6>, <5>, <4>.\nNode <0> is connected to node <3>.\nNode <6> is connected to nodes <4>, <5>, <0>.\nNode <5> is connected to nodes <0>, <4>.\nNode <3> is connected to node <4>.\nNode <1> is connected to nodes <0>, <3>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <2>, <6>, <5>, <0>, <3>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 157,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5>, <0>.\nNode <3> is connected to nodes <5>, <1>, <6>, <0>.\nNode <1> is connected to node <2>.\nNode <6> is connected to nodes <2>, <1>.\nNode <4> is connected to nodes <3>, <5>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <3>, <6>, <1>, <2>, <5>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 158,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <0>, <2>.\nNode <3> is connected to node <2>.\nNode <0> is connected to nodes <4>, <3>.\nNode <4> is connected to node <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <0>, <4>, <3>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 159,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2>, <4>.\nNode <2> is connected to node <0>.\nNode <4> is connected to nodes <0>, <2>.\nNode <1> is connected to nodes <5>, <2>, <3>.\nNode <3> is connected to nodes <2>, <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <5>, <3>, <4>, <2>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 160,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <4>, <1>.\nNode <4> is connected to nodes <2>, <0>.\nNode <1> is connected to nodes <2>, <0>, <4>.\nNode <3> is connected to nodes <2>, <1>, <6>, <5>, <4>.\nNode <2> is connected to node <0>.\nNode <6> is connected to nodes <5>, <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <6>, <5>, <1>, <4>, <2>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 161,
        "question": "Given a directed graph:\nNode <5> is connected to node <4>.\nNode <4> is connected to node <0>.\nNode <0> is connected to node <3>.\nNode <1> is connected to nodes <0>, <2>.\nNode <2> is connected to node <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<5>, <1>, <4>, <2>, <0>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 162,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <1>, <3>.\nNode <4> is connected to node <5>.\nNode <1> is connected to node <3>.\nNode <5> is connected to node <3>.\nNode <0> is connected to nodes <4>, <2>, <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <2>, <4>, <1>, <5>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 163,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <0>.\nNode <2> is connected to node <3>.\nNode <0> is connected to node <2>.\nNode <1> is connected to nodes <2>, <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <1>, <0>, <2>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 164,
        "question": "Given a directed graph:\nNode <3> is connected to node <5>.\nNode <1> is connected to nodes <2>, <4>, <3>.\nNode <2> is connected to node <5>.\nNode <4> is connected to nodes <5>, <0>.\nNode <0> is connected to nodes <2>, <5>, <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <4>, <0>, <2>, <3>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 165,
        "question": "Given a directed graph:\nNode <2> is connected to node <4>.\nNode <0> is connected to node <3>.\nNode <3> is connected to nodes <1>, <2>.\nNode <1> is connected to nodes <4>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <3>, <1>, <2>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 166,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <0>.\nNode <0> is connected to node <4>.\nNode <2> is connected to nodes <4>, <0>.\nNode <1> is connected to nodes <2>, <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <1>, <2>, <0>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 167,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <4>, <1>.\nNode <0> is connected to node <3>.\nNode <4> is connected to nodes <3>, <0>.\nNode <1> is connected to node <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <4>, <1>, <0>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 168,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <6>, <2>.\nNode <6> is connected to nodes <2>, <5>, <4>, <0>.\nNode <2> is connected to nodes <4>, <5>.\nNode <0> is connected to nodes <5>, <4>, <2>, <3>.\nNode <3> is connected to nodes <5>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <6>, <0>, <2>, <3>, <5>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 169,
        "question": "Given a directed graph:\nNode <4> is connected to node <2>.\nNode <2> is connected to node <1>.\nNode <0> is connected to nodes <2>, <3>.\nNode <3> is connected to nodes <4>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <3>, <4>, <2>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 170,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <4>, <2>.\nNode <3> is connected to node <2>.\nNode <4> is connected to node <2>.\nNode <2> is connected to node <5>.\nNode <1> is connected to nodes <5>, <3>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <1>, <4>, <3>, <2>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 171,
        "question": "Given a directed graph:\nNode <4> is connected to node <6>.\nNode <0> is connected to nodes <6>, <1>, <2>.\nNode <1> is connected to nodes <4>, <3>, <5>.\nNode <2> is connected to nodes <6>, <1>, <4>, <3>.\nNode <3> is connected to node <5>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <2>, <1>, <4>, <3>, <6>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 172,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1>, <2>.\nNode <5> is connected to nodes <0>, <1>.\nNode <3> is connected to nodes <5>, <0>.\nNode <4> is connected to node <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <4>, <5>, <0>, <1>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 173,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <1>, <2>, <0>.\nNode <0> is connected to node <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <3>, <1>, <0>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 174,
        "question": "Given a directed graph:\nNode <1> is connected to node <0>.\nNode <0> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <2>, <5>, <4>.\nNode <4> is connected to nodes <2>, <5>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <0>, <3>, <4>, <2>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 175,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5>, <6>.\nNode <5> is connected to nodes <0>, <3>.\nNode <6> is connected to nodes <4>, <5>, <3>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <0>, <5>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <6>, <4>, <5>, <0>, <3>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 176,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <5>, <6>, <3>, <0>.\nNode <5> is connected to node <4>.\nNode <6> is connected to nodes <4>, <0>.\nNode <3> is connected to nodes <4>, <5>.\nNode <0> is connected to nodes <5>, <4>.\nNode <2> is connected to nodes <1>, <5>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <1>, <6>, <3>, <0>, <5>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 177,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <2>, <5>.\nNode <1> is connected to nodes <2>, <4>, <0>.\nNode <4> is connected to nodes <2>, <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <4>, <0>, <3>, <2>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 178,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1>, <3>, <4>.\nNode <3> is connected to nodes <4>, <2>.\nNode <4> is connected to node <1>.\nNode <2> is connected to node <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <3>, <4>, <2>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 179,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <3>, <4>, <5>.\nNode <3> is connected to nodes <5>, <1>.\nNode <4> is connected to nodes <1>, <3>.\nNode <5> is connected to node <1>.\nNode <0> is connected to nodes <2>, <3>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <2>, <4>, <3>, <5>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 180,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <0>, <1>, <3>.\nNode <2> is connected to node <3>.\nNode <0> is connected to nodes <2>, <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <0>, <1>, <2>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 181,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <1>.\nNode <1> is connected to node <2>.\nNode <4> is connected to node <3>.\nNode <0> is connected to nodes <4>, <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <4>, <3>, <1>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 182,
        "question": "Given a directed graph:\nNode <4> is connected to node <2>.\nNode <3> is connected to nodes <4>, <2>.\nNode <1> is connected to node <3>.\nNode <0> is connected to nodes <4>, <1>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <1>, <3>, <4>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 183,
        "question": "Given a directed graph:\nNode <0> is connected to node <1>.\nNode <1> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <2>, <6>.\nNode <6> is connected to nodes <2>, <4>.\nNode <5> is connected to nodes <1>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <5>, <1>, <3>, <6>, <2>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 184,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <3>, <2>.\nNode <3> is connected to nodes <2>, <0>.\nNode <2> is connected to node <1>.\nNode <0> is connected to node <2>.\nNode <4> is connected to nodes <3>, <1>, <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<5>, <4>, <3>, <0>, <2>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 185,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2>, <0>, <3>.\nNode <2> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <1>, <4>.\nNode <3> is connected to nodes <0>, <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<5>, <2>, <3>, <0>, <1>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 186,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <5>.\nNode <4> is connected to node <5>.\nNode <2> is connected to nodes <5>, <0>.\nNode <0> is connected to node <1>.\nNode <3> is connected to node <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <2>, <0>, <1>, <4>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 187,
        "question": "Given a directed graph:\nNode <1> is connected to node <2>.\nNode <4> is connected to node <3>.\nNode <3> is connected to node <5>.\nNode <5> is connected to node <1>.\nNode <0> is connected to nodes <3>, <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <0>, <3>, <5>, <1>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 188,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <5>.\nNode <4> is connected to nodes <1>, <2>.\nNode <5> is connected to node <4>.\nNode <3> is connected to nodes <2>, <4>, <0>, <1>, <5>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <0>, <5>, <4>, <1>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 189,
        "question": "Given a directed graph:\nNode <1> is connected to node <0>.\nNode <2> is connected to node <4>.\nNode <4> is connected to node <0>.\nNode <3> is connected to nodes <2>, <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <2>, <1>, <4>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 190,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <2>, <5>, <4>.\nNode <1> is connected to node <5>.\nNode <5> is connected to nodes <4>, <2>.\nNode <0> is connected to nodes <5>, <2>, <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <3>, <1>, <5>, <4>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 191,
        "question": "Given a directed graph:\nNode <0> is connected to node <3>.\nNode <5> is connected to node <0>.\nNode <1> is connected to node <5>.\nNode <2> is connected to nodes <1>, <0>.\nNode <4> is connected to nodes <3>, <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <4>, <1>, <5>, <0>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 192,
        "question": "Given a directed graph:\nNode <3> is connected to node <0>.\nNode <5> is connected to nodes <0>, <3>, <4>.\nNode <1> is connected to nodes <2>, <5>, <0>.\nNode <2> is connected to nodes <3>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <2>, <5>, <3>, <4>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 193,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <4>, <1>.\nNode <0> is connected to node <4>.\nNode <1> is connected to node <4>.\nNode <2> is connected to nodes <0>, <5>.\nNode <3> is connected to node <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <3>, <5>, <0>, <1>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 194,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <5>.\nNode <0> is connected to node <5>.\nNode <5> is connected to node <3>.\nNode <1> is connected to nodes <0>, <5>.\nNode <4> is connected to node <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <4>, <2>, <0>, <5>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 195,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <1>.\nNode <2> is connected to nodes <3>, <4>, <1>.\nNode <3> is connected to node <5>.\nNode <4> is connected to node <5>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <3>, <4>, <5>, <0>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 196,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <4>, <1>.\nNode <0> is connected to nodes <4>, <3>.\nNode <1> is connected to node <4>.\nNode <3> is connected to node <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <0>, <3>, <1>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 197,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <4>, <2>.\nNode <4> is connected to node <0>.\nNode <0> is connected to nodes <2>, <5>.\nNode <3> is connected to nodes <2>, <5>, <6>.\nNode <1> is connected to nodes <6>, <3>, <5>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <3>, <6>, <4>, <0>, <2>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 198,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <5>.\nNode <1> is connected to node <6>.\nNode <6> is connected to nodes <4>, <5>.\nNode <3> is connected to nodes <1>, <2>.\nNode <0> is connected to nodes <5>, <1>, <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <3>, <2>, <1>, <6>, <4>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 199,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <4>, <1>, <3>.\nNode <4> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <0>, <1>.\nNode <0> is connected to node <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <4>, <3>, <0>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 200,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <0>, <4>, <1>.\nNode <3> is connected to node <0>.\nNode <4> is connected to nodes <0>, <3>.\nNode <1> is connected to nodes <3>, <0>.\nNode <5> is connected to nodes <2>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<5>, <2>, <4>, <1>, <3>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 201,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <1>, <4>, <6>.\nNode <4> is connected to node <1>.\nNode <6> is connected to node <4>.\nNode <2> is connected to nodes <6>, <5>, <4>.\nNode <3> is connected to nodes <6>, <2>, <5>.\nNode <0> is connected to nodes <3>, <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <3>, <2>, <5>, <6>, <4>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 202,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <1>.\nNode <0> is connected to nodes <3>, <1>.\nNode <1> is connected to node <3>.\nNode <4> is connected to nodes <3>, <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <4>, <0>, <1>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 203,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <3>, <2>.\nNode <0> is connected to node <3>.\nNode <3> is connected to nodes <4>, <2>.\nNode <4> is connected to node <2>.\nNode <1> is connected to node <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<5>, <1>, <0>, <3>, <4>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 204,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <3>.\nNode <3> is connected to nodes <0>, <1>.\nNode <0> is connected to node <1>.\nNode <5> is connected to nodes <4>, <3>.\nNode <4> is connected to node <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <5>, <4>, <3>, <0>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 205,
        "question": "Given a directed graph:\nNode <6> is connected to node <4>.\nNode <0> is connected to node <5>.\nNode <5> is connected to nodes <1>, <4>.\nNode <1> is connected to node <6>.\nNode <2> is connected to node <4>.\nNode <3> is connected to nodes <0>, <5>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <0>, <2>, <5>, <1>, <6>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 206,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5>, <4>, <0>.\nNode <4> is connected to node <5>.\nNode <0> is connected to node <5>.\nNode <3> is connected to nodes <5>, <2>.\nNode <1> is connected to nodes <2>, <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <1>, <2>, <4>, <0>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 207,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <6>, <3>.\nNode <6> is connected to nodes <5>, <2>.\nNode <3> is connected to node <5>.\nNode <2> is connected to node <1>.\nNode <0> is connected to nodes <1>, <4>, <2>, <5>.\nNode <1> is connected to nodes <5>, <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <4>, <6>, <2>, <1>, <3>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 208,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <3>.\nNode <0> is connected to node <3>.\nNode <4> is connected to nodes <1>, <0>, <3>.\nNode <2> is connected to nodes <3>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <4>, <1>, <0>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 209,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <6>, <2>.\nNode <6> is connected to nodes <2>, <5>.\nNode <2> is connected to node <0>.\nNode <0> is connected to nodes <3>, <1>.\nNode <3> is connected to node <1>.\nNode <1> is connected to node <5>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <6>, <2>, <0>, <3>, <1>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 210,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <2>, <3>.\nNode <0> is connected to nodes <4>, <3>.\nNode <2> is connected to node <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <0>, <2>, <4>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 211,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <3>, <4>.\nNode <1> is connected to nodes <4>, <0>.\nNode <3> is connected to nodes <0>, <4>.\nNode <4> is connected to node <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <1>, <3>, <4>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 212,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <0>.\nNode <3> is connected to nodes <6>, <0>.\nNode <1> is connected to nodes <5>, <3>.\nNode <5> is connected to nodes <0>, <4>.\nNode <4> is connected to node <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <1>, <5>, <4>, <3>, <6>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 213,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <1>, <2>.\nNode <1> is connected to node <0>.\nNode <2> is connected to node <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <3>, <2>, <1>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 214,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <4>.\nNode <1> is connected to node <4>.\nNode <0> is connected to node <4>.\nNode <2> is connected to nodes <4>, <3>, <1>, <5>.\nNode <5> is connected to nodes <4>, <3>, <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <2>, <5>, <3>, <1>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 215,
        "question": "Given a directed graph:\nNode <4> is connected to node <3>.\nNode <3> is connected to nodes <5>, <2>.\nNode <1> is connected to node <4>.\nNode <0> is connected to nodes <1>, <4>, <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <1>, <4>, <3>, <5>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 216,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <5>, <3>, <4>.\nNode <3> is connected to node <5>.\nNode <4> is connected to nodes <3>, <5>.\nNode <0> is connected to node <3>.\nNode <1> is connected to nodes <2>, <3>.\nNode <2> is connected to node <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<6>, <0>, <1>, <2>, <4>, <3>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 217,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <5>, <2>.\nNode <3> is connected to nodes <0>, <5>.\nNode <2> is connected to node <5>.\nNode <4> is connected to node <1>.\nNode <6> is connected to nodes <4>, <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<6>, <4>, <1>, <3>, <2>, <0>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 218,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <4>.\nNode <3> is connected to nodes <4>, <2>, <5>.\nNode <4> is connected to node <5>.\nNode <0> is connected to nodes <2>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <0>, <3>, <4>, <2>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 219,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5>, <3>.\nNode <5> is connected to nodes <4>, <6>.\nNode <3> is connected to nodes <5>, <6>, <0>.\nNode <4> is connected to node <0>.\nNode <6> is connected to node <4>.\nNode <1> is connected to nodes <2>, <3>, <6>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <2>, <3>, <5>, <6>, <4>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 220,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <4>, <2>, <1>.\nNode <4> is connected to nodes <3>, <2>.\nNode <2> is connected to node <0>.\nNode <1> is connected to node <2>.\nNode <3> is connected to node <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<5>, <4>, <1>, <3>, <2>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 221,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <0>, <2>.\nNode <0> is connected to nodes <1>, <2>.\nNode <2> is connected to node <1>.\nNode <3> is connected to nodes <4>, <1>, <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <4>, <0>, <2>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 222,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <2>.\nNode <2> is connected to node <5>.\nNode <3> is connected to node <0>.\nNode <5> is connected to nodes <0>, <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <4>, <2>, <5>, <3>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 223,
        "question": "Given a directed graph:\nNode <2> is connected to node <3>.\nNode <0> is connected to nodes <2>, <3>.\nNode <1> is connected to nodes <2>, <3>, <0>.\nNode <4> is connected to nodes <3>, <2>, <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <4>, <0>, <2>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 224,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <3>, <4>, <2>.\nNode <3> is connected to node <5>.\nNode <5> is connected to nodes <2>, <0>.\nNode <0> is connected to node <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <3>, <4>, <5>, <0>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 225,
        "question": "Given a directed graph:\nNode <1> is connected to node <5>.\nNode <5> is connected to nodes <0>, <3>.\nNode <0> is connected to node <4>.\nNode <3> is connected to node <2>.\nNode <2> is connected to node <4>.\nNode <6> is connected to node <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<6>, <1>, <5>, <0>, <3>, <2>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 226,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <2>.\nNode <3> is connected to node <1>.\nNode <2> is connected to node <3>.\nNode <4> is connected to nodes <3>, <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <0>, <2>, <3>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 227,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <4>, <1>.\nNode <4> is connected to node <1>.\nNode <1> is connected to nodes <0>, <5>.\nNode <2> is connected to nodes <5>, <0>, <1>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <2>, <4>, <1>, <0>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 228,
        "question": "Given a directed graph:\nNode <1> is connected to node <4>.\nNode <0> is connected to nodes <1>, <4>.\nNode <2> is connected to nodes <1>, <0>.\nNode <3> is connected to node <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <3>, <0>, <1>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 229,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <0>, <4>, <1>.\nNode <4> is connected to node <3>.\nNode <1> is connected to node <4>.\nNode <2> is connected to nodes <3>, <1>, <6>.\nNode <6> is connected to nodes <3>, <5>, <1>, <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <6>, <5>, <0>, <1>, <4>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 230,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <1>.\nNode <1> is connected to nodes <3>, <2>.\nNode <0> is connected to nodes <2>, <1>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <4>, <1>, <3>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 231,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <2>, <6>.\nNode <2> is connected to nodes <1>, <4>.\nNode <6> is connected to nodes <5>, <2>, <1>.\nNode <5> is connected to node <2>.\nNode <1> is connected to node <4>.\nNode <3> is connected to nodes <4>, <6>, <2>, <5>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <3>, <6>, <5>, <2>, <1>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 232,
        "question": "Given a directed graph:\nNode <2> is connected to node <0>.\nNode <0> is connected to node <5>.\nNode <4> is connected to nodes <1>, <0>.\nNode <1> is connected to node <3>.\nNode <3> is connected to node <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <4>, <1>, <3>, <0>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 233,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <1>, <0>.\nNode <2> is connected to node <3>.\nNode <1> is connected to node <2>.\nNode <3> is connected to node <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <1>, <2>, <3>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 234,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <4>, <2>, <5>.\nNode <4> is connected to node <2>.\nNode <2> is connected to nodes <0>, <3>.\nNode <3> is connected to nodes <5>, <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <4>, <2>, <3>, <5>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 235,
        "question": "Given a directed graph:\nNode <2> is connected to node <5>.\nNode <1> is connected to node <5>.\nNode <6> is connected to nodes <5>, <1>.\nNode <4> is connected to node <6>.\nNode <3> is connected to nodes <1>, <4>, <2>.\nNode <0> is connected to node <5>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <0>, <4>, <2>, <6>, <1>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 236,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <4>.\nNode <0> is connected to nodes <3>, <4>, <2>.\nNode <4> is connected to node <2>.\nNode <3> is connected to nodes <2>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <0>, <3>, <4>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 237,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2>, <6>, <3>, <0>.\nNode <2> is connected to node <6>.\nNode <6> is connected to nodes <3>, <0>.\nNode <0> is connected to node <3>.\nNode <1> is connected to nodes <5>, <0>, <4>.\nNode <4> is connected to nodes <6>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <5>, <4>, <2>, <6>, <0>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 238,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <5>.\nNode <5> is connected to nodes <1>, <2>.\nNode <3> is connected to nodes <1>, <0>, <2>.\nNode <1> is connected to node <2>.\nNode <4> is connected to nodes <5>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <4>, <0>, <5>, <1>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 239,
        "question": "Given a directed graph:\nNode <4> is connected to node <0>.\nNode <2> is connected to nodes <0>, <3>.\nNode <3> is connected to node <0>.\nNode <1> is connected to nodes <4>, <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <1>, <4>, <3>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 240,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <5>, <2>.\nNode <5> is connected to nodes <2>, <4>, <1>, <3>.\nNode <2> is connected to node <3>.\nNode <4> is connected to nodes <1>, <3>, <2>.\nNode <1> is connected to node <3>.\nNode <0> is connected to nodes <5>, <4>, <3>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<6>, <0>, <5>, <4>, <1>, <2>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 241,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <6>, <2>.\nNode <6> is connected to nodes <2>, <4>.\nNode <3> is connected to nodes <0>, <2>, <1>.\nNode <0> is connected to node <1>.\nNode <5> is connected to nodes <0>, <1>, <3>, <6>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<5>, <3>, <0>, <1>, <6>, <2>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 242,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1>, <3>.\nNode <1> is connected to nodes <3>, <2>, <5>.\nNode <3> is connected to node <4>.\nNode <2> is connected to nodes <5>, <4>.\nNode <5> is connected to node <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <1>, <2>, <5>, <3>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 243,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <1>.\nNode <4> is connected to node <1>.\nNode <1> is connected to node <3>.\nNode <2> is connected to nodes <1>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <2>, <4>, <1>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 244,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <1>.\nNode <4> is connected to nodes <0>, <2>.\nNode <0> is connected to nodes <2>, <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <4>, <0>, <2>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 245,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <6>, <4>, <5>.\nNode <6> is connected to nodes <1>, <4>.\nNode <5> is connected to node <1>.\nNode <1> is connected to nodes <4>, <0>.\nNode <0> is connected to node <4>.\nNode <3> is connected to nodes <6>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <2>, <6>, <5>, <1>, <0>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 246,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <1>.\nNode <1> is connected to node <2>.\nNode <2> is connected to node <4>.\nNode <0> is connected to node <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <0>, <1>, <2>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 247,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <0>, <1>.\nNode <1> is connected to node <3>.\nNode <4> is connected to node <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <4>, <0>, <1>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 248,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <5>.\nNode <1> is connected to node <5>.\nNode <2> is connected to nodes <0>, <5>.\nNode <4> is connected to nodes <1>, <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <2>, <4>, <1>, <0>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 249,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <5>, <3>.\nNode <5> is connected to nodes <0>, <2>.\nNode <3> is connected to node <2>.\nNode <0> is connected to node <4>.\nNode <2> is connected to nodes <4>, <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <5>, <3>, <2>, <0>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 250,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <2>, <5>, <4>.\nNode <2> is connected to nodes <5>, <3>.\nNode <1> is connected to nodes <2>, <5>.\nNode <0> is connected to node <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<6>, <0>, <4>, <1>, <2>, <5>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 251,
        "question": "Given a directed graph:\nNode <6> is connected to node <2>.\nNode <2> is connected to node <3>.\nNode <1> is connected to nodes <4>, <0>, <3>, <2>.\nNode <4> is connected to nodes <6>, <3>.\nNode <0> is connected to nodes <2>, <4>, <3>.\nNode <5> is connected to nodes <3>, <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <5>, <0>, <4>, <6>, <2>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 252,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <1>, <6>.\nNode <4> is connected to nodes <6>, <1>, <0>.\nNode <6> is connected to nodes <0>, <1>.\nNode <0> is connected to node <1>.\nNode <2> is connected to nodes <3>, <6>, <5>, <4>, <1>.\nNode <5> is connected to nodes <6>, <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <3>, <5>, <4>, <6>, <0>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 253,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <3>, <5>.\nNode <0> is connected to node <5>.\nNode <3> is connected to nodes <5>, <0>, <2>, <4>.\nNode <4> is connected to node <5>.\nNode <2> is connected to nodes <0>, <4>, <5>.\nNode <6> is connected to nodes <4>, <3>, <1>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<6>, <1>, <3>, <2>, <0>, <4>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 254,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <5>, <4>.\nNode <3> is connected to nodes <5>, <2>.\nNode <5> is connected to nodes <4>, <2>.\nNode <1> is connected to nodes <4>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <1>, <3>, <5>, <4>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 255,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <5>.\nNode <1> is connected to node <5>.\nNode <3> is connected to nodes <0>, <5>.\nNode <2> is connected to nodes <3>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <3>, <4>, <0>, <1>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 256,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <4>, <0>.\nNode <0> is connected to nodes <2>, <3>.\nNode <2> is connected to node <3>.\nNode <3> is connected to node <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <0>, <2>, <3>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 257,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <3>, <4>.\nNode <0> is connected to nodes <1>, <4>.\nNode <3> is connected to nodes <4>, <0>, <1>.\nNode <4> is connected to node <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <3>, <0>, <4>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 258,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <4>, <5>.\nNode <5> is connected to node <2>.\nNode <1> is connected to nodes <4>, <5>, <0>, <2>, <3>.\nNode <2> is connected to node <6>.\nNode <3> is connected to node <4>.\nNode <6> is connected to node <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <0>, <5>, <2>, <6>, <3>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 259,
        "question": "Given a directed graph:\nNode <1> is connected to node <0>.\nNode <0> is connected to nodes <3>, <2>.\nNode <4> is connected to node <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <1>, <0>, <3>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 260,
        "question": "Given a directed graph:\nNode <0> is connected to node <1>.\nNode <4> is connected to nodes <3>, <1>.\nNode <3> is connected to node <0>.\nNode <2> is connected to nodes <1>, <0>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <4>, <3>, <0>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 261,
        "question": "Given a directed graph:\nNode <0> is connected to node <5>.\nNode <6> is connected to node <5>.\nNode <2> is connected to nodes <5>, <4>, <0>, <6>.\nNode <4> is connected to nodes <6>, <3>, <1>.\nNode <1> is connected to nodes <3>, <5>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <4>, <0>, <6>, <1>, <3>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 262,
        "question": "Given a directed graph:\nNode <0> is connected to node <1>.\nNode <4> is connected to node <2>.\nNode <2> is connected to node <0>.\nNode <3> is connected to nodes <0>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <3>, <2>, <0>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 263,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <1>, <6>, <2>.\nNode <1> is connected to node <5>.\nNode <6> is connected to node <5>.\nNode <2> is connected to node <0>.\nNode <0> is connected to node <4>.\nNode <4> is connected to node <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <6>, <2>, <0>, <4>, <1>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 264,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <1>, <2>, <3>, <4>.\nNode <1> is connected to node <3>.\nNode <2> is connected to nodes <3>, <4>.\nNode <4> is connected to nodes <1>, <0>.\nNode <0> is connected to node <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<5>, <2>, <4>, <1>, <0>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 265,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <2>, <5>.\nNode <2> is connected to node <0>.\nNode <5> is connected to nodes <0>, <2>.\nNode <4> is connected to nodes <2>, <3>, <0>.\nNode <1> is connected to nodes <0>, <6>.\nNode <6> is connected to nodes <4>, <2>, <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <6>, <4>, <3>, <5>, <2>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 266,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <5>.\nNode <1> is connected to node <0>.\nNode <5> is connected to node <0>.\nNode <3> is connected to nodes <1>, <5>, <2>.\nNode <4> is connected to node <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <4>, <2>, <1>, <5>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 267,
        "question": "Given a directed graph:\nNode <1> is connected to nodes <0>, <5>, <4>.\nNode <0> is connected to nodes <5>, <2>.\nNode <4> is connected to node <0>.\nNode <3> is connected to nodes <2>, <1>, <5>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <1>, <4>, <0>, <5>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 268,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <3>, <1>, <0>.\nNode <3> is connected to nodes <4>, <1>, <6>.\nNode <1> is connected to node <0>.\nNode <4> is connected to nodes <1>, <2>.\nNode <2> is connected to node <6>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<5>, <3>, <4>, <1>, <2>, <0>, <6>]",
        "type": "topological_sort"
    },
    {
        "index": 269,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <5>, <6>, <4>.\nNode <5> is connected to node <6>.\nNode <6> is connected to node <1>.\nNode <4> is connected to nodes <6>, <1>.\nNode <0> is connected to node <2>.\nNode <3> is connected to nodes <6>, <0>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <0>, <2>, <5>, <4>, <6>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 270,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <6>, <5>, <1>, <2>.\nNode <6> is connected to nodes <2>, <1>.\nNode <5> is connected to nodes <2>, <0>.\nNode <1> is connected to nodes <5>, <3>.\nNode <3> is connected to node <5>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <6>, <1>, <3>, <5>, <2>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 271,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <3>, <5>.\nNode <3> is connected to nodes <5>, <6>.\nNode <6> is connected to node <5>.\nNode <2> is connected to nodes <3>, <1>, <6>, <0>.\nNode <1> is connected to nodes <3>, <0>.\nNode <4> is connected to nodes <2>, <3>, <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <2>, <1>, <0>, <3>, <6>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 272,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <5>, <0>.\nNode <5> is connected to nodes <0>, <1>, <2>.\nNode <1> is connected to nodes <3>, <2>.\nNode <6> is connected to nodes <1>, <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <6>, <5>, <0>, <1>, <3>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 273,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <1>, <0>, <3>, <5>.\nNode <0> is connected to node <1>.\nNode <3> is connected to nodes <0>, <1>.\nNode <2> is connected to nodes <3>, <5>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <2>, <3>, <5>, <0>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 274,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <2>, <0>, <4>, <3>, <1>.\nNode <4> is connected to nodes <3>, <6>, <0>.\nNode <3> is connected to nodes <2>, <0>.\nNode <1> is connected to nodes <4>, <6>, <3>, <2>, <0>.\nNode <6> is connected to nodes <3>, <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<5>, <1>, <4>, <6>, <3>, <2>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 275,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <0>, <5>, <1>.\nNode <0> is connected to nodes <5>, <3>.\nNode <5> is connected to node <3>.\nNode <1> is connected to node <4>.\nNode <4> is connected to nodes <5>, <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <0>, <1>, <4>, <5>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 276,
        "question": "Given a directed graph:\nNode <3> is connected to node <5>.\nNode <0> is connected to nodes <5>, <6>, <3>, <2>.\nNode <6> is connected to nodes <3>, <2>.\nNode <2> is connected to nodes <5>, <3>.\nNode <1> is connected to nodes <5>, <3>, <0>.\nNode <4> is connected to nodes <6>, <0>, <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <1>, <0>, <6>, <2>, <3>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 277,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <2>, <3>, <4>.\nNode <2> is connected to node <5>.\nNode <3> is connected to node <1>.\nNode <5> is connected to nodes <3>, <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <2>, <4>, <5>, <3>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 278,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <1>, <3>, <4>, <0>.\nNode <1> is connected to node <0>.\nNode <3> is connected to node <1>.\nNode <4> is connected to nodes <1>, <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <3>, <4>, <1>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 279,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <1>, <5>, <0>, <6>.\nNode <2> is connected to nodes <3>, <6>, <1>.\nNode <1> is connected to node <3>.\nNode <5> is connected to nodes <6>, <0>, <2>.\nNode <0> is connected to nodes <6>, <3>.\nNode <3> is connected to node <6>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <5>, <0>, <2>, <1>, <3>, <6>]",
        "type": "topological_sort"
    },
    {
        "index": 280,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <5>, <0>, <3>.\nNode <5> is connected to node <3>.\nNode <0> is connected to node <5>.\nNode <1> is connected to nodes <6>, <3>, <4>.\nNode <6> is connected to nodes <4>, <3>, <0>.\nNode <2> is connected to nodes <5>, <4>, <1>, <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <1>, <6>, <4>, <0>, <5>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 281,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <5>, <6>.\nNode <6> is connected to node <1>.\nNode <2> is connected to nodes <5>, <1>, <3>, <6>.\nNode <1> is connected to node <5>.\nNode <4> is connected to nodes <0>, <1>, <5>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <4>, <3>, <0>, <6>, <1>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 282,
        "question": "Given a directed graph:\nNode <6> is connected to nodes <5>, <4>, <2>, <1>.\nNode <5> is connected to nodes <1>, <2>.\nNode <2> is connected to node <4>.\nNode <3> is connected to nodes <6>, <2>, <5>.\nNode <0> is connected to nodes <3>, <5>, <2>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <3>, <6>, <5>, <1>, <2>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 283,
        "question": "Given a directed graph:\nNode <0> is connected to node <6>.\nNode <6> is connected to node <5>.\nNode <2> is connected to nodes <4>, <0>, <3>.\nNode <4> is connected to node <6>.\nNode <3> is connected to node <4>.\nNode <1> is connected to nodes <4>, <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <1>, <0>, <3>, <4>, <6>, <5>]",
        "type": "topological_sort"
    },
    {
        "index": 284,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <1>, <5>, <0>, <3>, <6>.\nNode <2> is connected to nodes <5>, <0>, <3>.\nNode <1> is connected to nodes <3>, <2>, <0>, <5>.\nNode <5> is connected to node <0>.\nNode <0> is connected to node <3>.\nNode <6> is connected to nodes <2>, <3>, <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <6>, <1>, <2>, <5>, <0>, <3>]",
        "type": "topological_sort"
    },
    {
        "index": 285,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <1>, <2>.\nNode <2> is connected to node <4>.\nNode <3> is connected to node <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <3>, <1>, <2>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 286,
        "question": "Given a directed graph:\nNode <1> is connected to node <4>.\nNode <4> is connected to nodes <2>, <0>.\nNode <2> is connected to nodes <3>, <0>.\nNode <5> is connected to node <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<5>, <1>, <4>, <2>, <3>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 287,
        "question": "Given a directed graph:\nNode <1> is connected to node <3>.\nNode <3> is connected to nodes <0>, <4>.\nNode <4> is connected to node <0>.\nNode <2> is connected to node <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <1>, <3>, <4>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 288,
        "question": "Given a directed graph:\nNode <5> is connected to nodes <3>, <6>.\nNode <4> is connected to nodes <1>, <6>, <5>.\nNode <1> is connected to node <6>.\nNode <0> is connected to node <5>.\nNode <2> is connected to nodes <0>, <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <2>, <0>, <1>, <5>, <3>, <6>]",
        "type": "topological_sort"
    },
    {
        "index": 289,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <5>, <1>, <6>, <2>, <0>.\nNode <5> is connected to node <4>.\nNode <1> is connected to node <5>.\nNode <2> is connected to nodes <6>, <5>.\nNode <0> is connected to nodes <1>, <4>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <0>, <1>, <2>, <6>, <5>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 290,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <5>, <1>, <4>.\nNode <5> is connected to nodes <1>, <0>, <4>.\nNode <0> is connected to node <3>.\nNode <3> is connected to node <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <5>, <1>, <0>, <3>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 291,
        "question": "Given a directed graph:\nNode <0> is connected to nodes <6>, <1>, <3>.\nNode <1> is connected to node <6>.\nNode <3> is connected to node <1>.\nNode <5> is connected to nodes <3>, <6>.\nNode <4> is connected to nodes <3>, <2>, <6>, <1>.\nNode <2> is connected to nodes <6>, <5>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <4>, <2>, <5>, <3>, <1>, <6>]",
        "type": "topological_sort"
    },
    {
        "index": 292,
        "question": "Given a directed graph:\nNode <5> is connected to node <1>.\nNode <2> is connected to nodes <1>, <5>.\nNode <3> is connected to nodes <2>, <4>, <1>.\nNode <4> is connected to node <5>.\nNode <0> is connected to nodes <2>, <5>, <3>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<0>, <3>, <2>, <4>, <5>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 293,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <4>, <5>, <2>.\nNode <5> is connected to nodes <4>, <0>.\nNode <2> is connected to node <4>.\nNode <1> is connected to nodes <0>, <3>, <2>.\nNode <0> is connected to node <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <3>, <5>, <0>, <2>, <4>]",
        "type": "topological_sort"
    },
    {
        "index": 294,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <2>, <0>, <3>.\nNode <0> is connected to nodes <3>, <2>.\nNode <3> is connected to node <2>.\nNode <1> is connected to nodes <0>, <4>, <2>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<1>, <4>, <0>, <3>, <2>]",
        "type": "topological_sort"
    },
    {
        "index": 295,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <1>, <5>.\nNode <1> is connected to nodes <0>, <5>, <4>.\nNode <4> is connected to node <0>.\nNode <2> is connected to nodes <4>, <3>, <1>, <0>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <3>, <1>, <5>, <4>, <0>]",
        "type": "topological_sort"
    },
    {
        "index": 296,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <0>, <4>.\nNode <4> is connected to node <1>.\nNode <2> is connected to nodes <0>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <2>, <0>, <4>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 297,
        "question": "Given a directed graph:\nNode <3> is connected to nodes <5>, <1>, <2>.\nNode <5> is connected to nodes <4>, <0>.\nNode <2> is connected to node <5>.\nNode <4> is connected to nodes <0>, <1>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<3>, <2>, <5>, <4>, <0>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 298,
        "question": "Given a directed graph:\nNode <4> is connected to nodes <0>, <3>.\nNode <0> is connected to node <1>.\nNode <3> is connected to node <0>.\nNode <2> is connected to nodes <0>, <3>, <4>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<2>, <4>, <3>, <0>, <1>]",
        "type": "topological_sort"
    },
    {
        "index": 299,
        "question": "Given a directed graph:\nNode <2> is connected to nodes <3>, <6>, <5>.\nNode <3> is connected to node <6>.\nNode <0> is connected to nodes <5>, <3>, <6>, <2>.\nNode <1> is connected to nodes <2>, <0>, <6>.\nNode <4> is connected to nodes <0>, <6>, <1>, <2>, <3>, <5>.\nOutput the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.\nAnswer:\n",
        "answer": "[<4>, <1>, <0>, <2>, <3>, <5>, <6>]",
        "type": "topological_sort"
    }
]